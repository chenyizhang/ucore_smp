!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
ALT	kern/driver/console.c	262;"	d	file:
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
ARRAYSIZE	user/testbss.c	4;"	d	file:
ASSERT	kern/smp/lapic.h	24;"	d
AWK	Makefile	/^AWK		:= awk$/;"	m
BCAST	kern/smp/lapic.h	27;"	d
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
BIG_STRIDE	kern/schedule/default_sched.c	11;"	d	file:
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
BS_OCMD	kern/driver/kbdreg.h	23;"	d
BUFSIZE	kern/libs/readline.c	3;"	d	file:
BUFSIZE	obj/user/ls.asm	/^#define BUFSIZE                         4096$/;"	d
BUFSIZE	user/ls.c	11;"	d	file:
BUFSIZE	user/sh.c	12;"	d	file:
BUSY	kern/smp/lapic.h	28;"	d
C	kern/driver/console.c	325;"	d	file:
CAPSLOCK	kern/driver/console.c	264;"	d	file:
CC	Makefile	/^CC		?= $(GCCPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
CGA_BASE	kern/driver/console.c	46;"	d	file:
CGA_BUF	kern/driver/console.c	47;"	d	file:
CHAR_BIT	libs/defs.h	12;"	d
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
CLONE_FS	libs/unistd.h	38;"	d
CLONE_THREAD	libs/unistd.h	37;"	d
CLONE_VM	libs/unistd.h	36;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
CMOS_PORT	kern/smp/lapic.c	158;"	d	file:
CMOS_RETURN	kern/smp/lapic.c	159;"	d	file:
CMOS_STATA	kern/smp/lapic.c	199;"	d	file:
CMOS_STATB	kern/smp/lapic.c	200;"	d	file:
CMOS_UIP	kern/smp/lapic.c	201;"	d	file:
COM1	kern/driver/console.c	22;"	d	file:
COM_DLL	kern/driver/console.c	26;"	d	file:
COM_DLM	kern/driver/console.c	27;"	d	file:
COM_FCR	kern/driver/console.c	31;"	d	file:
COM_IER	kern/driver/console.c	28;"	d	file:
COM_IER_RDI	kern/driver/console.c	29;"	d	file:
COM_IIR	kern/driver/console.c	30;"	d	file:
COM_LCR	kern/driver/console.c	32;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	33;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	34;"	d	file:
COM_LSR	kern/driver/console.c	39;"	d	file:
COM_LSR_DATA	kern/driver/console.c	40;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	42;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	41;"	d	file:
COM_MCR	kern/driver/console.c	35;"	d	file:
COM_MCR_DTR	kern/driver/console.c	37;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	38;"	d	file:
COM_MCR_RTS	kern/driver/console.c	36;"	d	file:
COM_RX	kern/driver/console.c	24;"	d	file:
COM_TX	kern/driver/console.c	25;"	d	file:
CONSBUFSIZE	kern/driver/console.c	210;"	d	file:
CONV	kern/smp/lapic.c	250;"	d	file:
CONV	kern/smp/lapic.c	257;"	d	file:
CONV	obj/kernel.asm	/^#define    CONV(x)     (t1.x = ((t1.x >> 4) * 10) + (t1.x & 0xf))$/;"	d
COPY	Makefile	/^COPY	:= cp$/;"	m
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
CRT_COLS	kern/driver/console.c	49;"	d	file:
CRT_ROWS	kern/driver/console.c	48;"	d	file:
CRT_SIZE	kern/driver/console.c	50;"	d	file:
CTL	kern/driver/console.c	261;"	d	file:
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
ClearPageProperty	kern/mm/memlayout.h	174;"	d
ClearPageReserved	kern/mm/memlayout.h	171;"	d
DAY	kern/smp/lapic.c	206;"	d	file:
DAY	obj/kernel.asm	/^#define DAY     0x07$/;"	d
DEASSERT	kern/smp/lapic.h	25;"	d
DELIVS	kern/smp/lapic.h	23;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DEPTH	user/forktree.c	5;"	d	file:
DEVSPACE	kern/mm/memlayout.h	85;"	d
DEVSPACE	obj/kernel.asm	/^#define DEVSPACE 0xFE000000         \/\/ Other devices are at high addresses$/;"	d
DIR	obj/user/badarg.asm	/^DIR *$/;"	l
DIR	obj/user/badarg.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/badsegment.asm	/^DIR *$/;"	l
DIR	obj/user/badsegment.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/divzero.asm	/^DIR *$/;"	l
DIR	obj/user/divzero.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/exit.asm	/^DIR *$/;"	l
DIR	obj/user/exit.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/faultread.asm	/^DIR *$/;"	l
DIR	obj/user/faultread.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR *$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/forktest.asm	/^DIR *$/;"	l
DIR	obj/user/forktest.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/forktree.asm	/^DIR *$/;"	l
DIR	obj/user/forktree.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/hello.asm	/^DIR *$/;"	l
DIR	obj/user/hello.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/ls.asm	/^DIR *$/;"	l
DIR	obj/user/ls.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/matrix.asm	/^DIR *$/;"	l
DIR	obj/user/matrix.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/pgdir.asm	/^DIR *$/;"	l
DIR	obj/user/pgdir.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/priority.asm	/^DIR *$/;"	l
DIR	obj/user/priority.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/sh.asm	/^DIR *$/;"	l
DIR	obj/user/sh.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/sleep.asm	/^DIR *$/;"	l
DIR	obj/user/sleep.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR *$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/softint.asm	/^DIR *$/;"	l
DIR	obj/user/softint.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/spin.asm	/^DIR *$/;"	l
DIR	obj/user/spin.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/testbss.asm	/^DIR *$/;"	l
DIR	obj/user/testbss.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/waitkill.asm	/^DIR *$/;"	l
DIR	obj/user/waitkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	obj/user/yield.asm	/^DIR *$/;"	l
DIR	obj/user/yield.asm	/^DIR dir, *dirp=&dir;$/;"	l
DIR	user/libs/dir.h	/^} DIR;$/;"	t	typeref:struct:__anon16
DISK0_BLKSIZE	kern/fs/devs/dev_disk0.c	13;"	d	file:
DISK0_BLK_NSECT	kern/fs/devs/dev_disk0.c	15;"	d	file:
DISK0_BUFSIZE	kern/fs/devs/dev_disk0.c	14;"	d	file:
DISK0_DEV_NO	kern/fs/fs.h	13;"	d
DISK1_DEV_NO	kern/fs/fs.h	14;"	d
DPL_KERNEL	kern/mm/memlayout.h	24;"	d
DPL_USER	kern/mm/memlayout.h	25;"	d
Disassembly	entryother.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sleep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sleepkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/driver/console.c	268;"	d	file:
E820MAX	kern/mm/memlayout.h	138;"	d
E820_ARM	kern/mm/memlayout.h	139;"	d
E820_ARR	kern/mm/memlayout.h	140;"	d
EATING	kern/sync/check_sync.c	12;"	d	file:
ELFHDR	boot/bootmain.c	34;"	d	file:
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
EMPTY	Makefile	/^EMPTY	:=$/;"	m
ENABLE	kern/smp/lapic.h	18;"	d
EOI	kern/smp/lapic.h	16;"	d
ERROR	kern/smp/lapic.h	37;"	d
ESR	kern/smp/lapic.h	19;"	d
EXEC_MAX_ARG_LEN	libs/unistd.h	65;"	d
EXEC_MAX_ARG_NUM	libs/unistd.h	64;"	d
EXTMEM	kern/mm/memlayout.h	78;"	d
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
FD_CLOSED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon4
FD_INIT	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon4
FD_NONE	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon4
FD_OPENED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon4
FILES_STRUCT_BUFSIZE	kern/fs/fs.h	32;"	d
FILES_STRUCT_NENTRY	kern/fs/fs.h	33;"	d
FIXED	kern/smp/lapic.h	29;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
FS_MAX_DNAME_LEN	libs/unistd.h	60;"	d
FS_MAX_FNAME_LEN	libs/unistd.h	61;"	d
FS_MAX_FPATH_LEN	libs/unistd.h	62;"	d
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GD_KCPU	kern/mm/memlayout.h	21;"	d
GD_KDATA	kern/mm/memlayout.h	17;"	d
GD_KTEXT	kern/mm/memlayout.h	16;"	d
GD_TSS	kern/mm/memlayout.h	20;"	d
GD_UDATA	kern/mm/memlayout.h	19;"	d
GD_UTEXT	kern/mm/memlayout.h	18;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
GOLDEN_RATIO_PRIME_32	tools/mksfs.c	37;"	d	file:
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HASH_LIST_SIZE	kern/process/proc.c	69;"	d	file:
HASH_LIST_SIZE	tools/mksfs.c	40;"	d	file:
HASH_SHIFT	kern/process/proc.c	68;"	d	file:
HASH_SHIFT	tools/mksfs.c	39;"	d	file:
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2 -D_FILE_OFFSET_BITS=64$/;"	m
HOURS	kern/smp/lapic.c	205;"	d	file:
HUNGRY	kern/sync/check_sync.c	11;"	d	file:
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
ICRHI	kern/smp/lapic.h	30;"	d
ICRLO	kern/smp/lapic.h	20;"	d
ID	kern/smp/lapic.h	13;"	d
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
INIT	kern/smp/lapic.h	21;"	d
INIT_LOCK	user/libs/lock.h	8;"	d
INT_ACTIVELOW	kern/smp/ioapic.h	20;"	d
INT_DISABLED	kern/smp/ioapic.h	18;"	d
INT_LEVEL	kern/smp/ioapic.h	19;"	d
INT_LOGICAL	kern/smp/ioapic.h	21;"	d
IOAPIC	kern/smp/ioapic.h	7;"	d
IOBUF_SIZE	kern/fs/sysfile.c	16;"	d	file:
IOBUF_SIZE	obj/kernel.asm	/^#define IOBUF_SIZE                          4096$/;"	d
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
KADDR	kern/mm/pmm.h	69;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KERNBASE	kern/mm/memlayout.h	74;"	d
KERNEL_CS	kern/mm/memlayout.h	27;"	d
KERNEL_DS	kern/mm/memlayout.h	28;"	d
KERNEL_EXECVE	kern/process/proc.c	977;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	979;"	d	file:
KERNEL_EXECVE3	kern/process/proc.c	983;"	d	file:
KERNEL_EXECVE3	obj/kernel.asm	/^#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)$/;"	d
KERNLINK	kern/mm/memlayout.h	80;"	d
KERNTOP	kern/mm/memlayout.h	76;"	d
KERN_ACCESS	kern/mm/memlayout.h	124;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
KMEMSIZE	kern/mm/memlayout.h	75;"	d
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
KSTACKPAGE	kern/mm/memlayout.h	109;"	d
KSTACKSIZE	kern/mm/memlayout.h	110;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
LEFT	kern/sync/check_sync.c	8;"	d	file:
LEVEL	kern/smp/lapic.h	26;"	d
LINT0	kern/smp/lapic.h	35;"	d
LINT1	kern/smp/lapic.h	36;"	d
LOGSIZE	libs/param.h	11;"	d
LPTPORT	kern/driver/console.c	52;"	d	file:
LSEEK_CUR	libs/unistd.h	57;"	d
LSEEK_END	libs/unistd.h	58;"	d
LSEEK_SET	libs/unistd.h	56;"	d
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MASKED	kern/smp/lapic.h	38;"	d
MATSIZE	user/matrix.c	6;"	d	file:
MAXARG	libs/param.h	9;"	d
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
MAXERROR	libs/error.h	30;"	d
MAXOPBLOCKS	libs/param.h	10;"	d
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/ls.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sh.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sleep.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sleepkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	user/libs/syscall.c	9;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_INODE_COUNT	kern/fs/vfs/inode.h	64;"	d
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
MAX_PID	kern/process/proc.h	77;"	d
MAX_PROCESS	kern/process/proc.h	76;"	d
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
MAX_TIME	user/priority.c	8;"	d	file:
MINS	kern/smp/lapic.c	204;"	d	file:
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MONO_BASE	kern/driver/console.c	44;"	d	file:
MONO_BUF	kern/driver/console.c	45;"	d	file:
MONTH	kern/smp/lapic.c	207;"	d	file:
MONTH	obj/kernel.asm	/^#define MONTH   0x08$/;"	d
MPBOOT	kern/smp/mp.h	53;"	d
MPBUS	kern/smp/mp.h	71;"	d
MPIOAPIC	kern/smp/mp.h	72;"	d
MPIOINTR	kern/smp/mp.h	73;"	d
MPLINTR	kern/smp/mp.h	74;"	d
MPPROC	kern/smp/mp.h	70;"	d
MV	Makefile	/^MV		:= mv$/;"	m
N	kern/sync/check_sync.c	7;"	d	file:
NBUF	libs/param.h	12;"	d
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
NCPU	libs/param.h	3;"	d
NDEV	libs/param.h	7;"	d
NELEM	kern/mm/pmm.c	16;"	d	file:
NFILE	libs/param.h	5;"	d
NINODE	libs/param.h	6;"	d
NO	kern/driver/console.c	258;"	d	file:
NOFILE	libs/param.h	4;"	d
NO_FD	libs/unistd.h	53;"	d
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPROC	libs/param.h	1;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
NSEGS	kern/process/proc.h	13;"	d
NULL	libs/defs.h	5;"	d
NUMLOCK	kern/driver/console.c	265;"	d	file:
NUM_SYSCALLS	kern/syscall/syscall.c	185;"	d	file:
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
O_ACCMODE	libs/unistd.h	51;"	d
O_APPEND	libs/unistd.h	49;"	d
O_CREAT	libs/unistd.h	46;"	d
O_EXCL	libs/unistd.h	47;"	d
O_RDONLY	libs/unistd.h	42;"	d
O_RDWR	libs/unistd.h	44;"	d
O_TRUNC	libs/unistd.h	48;"	d
O_WRONLY	libs/unistd.h	43;"	d
P2V	kern/mm/memlayout.h	95;"	d
P2V_WO	kern/mm/memlayout.h	98;"	d
PADDR	kern/mm/pmm.h	57;"	d
PAGE_NSECT	kern/fs/fs.h	10;"	d
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
PCINT	kern/smp/lapic.h	34;"	d
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PERIODIC	kern/smp/lapic.h	33;"	d
PF_EXITING	kern/process/proc.h	111;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PG_property	kern/mm/memlayout.h	168;"	d
PG_reserved	kern/mm/memlayout.h	167;"	d
PHYSTOP	kern/mm/memlayout.h	79;"	d
PPN	kern/mm/mmu.h	210;"	d
PROC_NAME_LEN	kern/process/proc.h	75;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
PROJ	Makefile	/^PROJ	:= 5$/;"	m
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	175;"	d
PageReserved	kern/mm/memlayout.h	172;"	d
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -smp 4 -drive file=$(SWAPIMG),media=disk,cache=writeback -drive file=$(SFSIMG),media=disk,cache=writeback >\/tmp\/qemu-log.txt $/;"	m
RAND_MAX	libs/stdlib.h	7;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
REG_ID	kern/smp/ioapic.h	9;"	d
REG_TABLE	kern/smp/ioapic.h	11;"	d
REG_VER	kern/smp/ioapic.h	10;"	d
RIGHT	kern/sync/check_sync.c	9;"	d	file:
RM	Makefile	/^RM		:= rm -f$/;"	m
ROOTDEV	libs/param.h	8;"	d
ROUNDDOWN	libs/defs.h	67;"	d
ROUNDUP	libs/defs.h	73;"	d
ROUNDUP_DIV	libs/defs.h	79;"	d
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SCROLLLOCK	kern/driver/console.c	266;"	d	file:
SECS	kern/smp/lapic.c	203;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
SECTSIZE	kern/fs/fs.h	9;"	d
SED	Makefile	/^SED		:= sed$/;"	m
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	boot/asm.h	11;"	d
SEG_ASM	kern/init/asm.h	11;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_KCPU	kern/mm/memlayout.h	12;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SEG_NULLASM	boot/asm.h	7;"	d
SEG_NULLASM	kern/init/asm.h	5;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
SFSBINS	Makefile	/^SFSBINS		:=$/;"	m
SFSIMG	Makefile	/^SFSIMG		:= $(call totarget,sfs.img)$/;"	m
SFSROOT	Makefile	/^SFSROOT		:= disk0$/;"	m
SFS_BLKBITS	kern/fs/sfs/sfs.h	26;"	d
SFS_BLKBITS	tools/mksfs.c	118;"	d	file:
SFS_BLKN_FREEMAP	kern/fs/sfs/sfs.h	23;"	d
SFS_BLKN_FREEMAP	tools/mksfs.c	125;"	d	file:
SFS_BLKN_ROOT	kern/fs/sfs/sfs.h	22;"	d
SFS_BLKN_ROOT	tools/mksfs.c	124;"	d	file:
SFS_BLKN_SUPER	kern/fs/sfs/sfs.h	21;"	d
SFS_BLKN_SUPER	tools/mksfs.c	123;"	d	file:
SFS_BLKSIZE	kern/fs/sfs/sfs.h	16;"	d
SFS_BLKSIZE	tools/mksfs.c	112;"	d	file:
SFS_BLK_NENTRY	kern/fs/sfs/sfs.h	29;"	d
SFS_BLK_NENTRY	tools/mksfs.c	376;"	d	file:
SFS_HLIST_SHIFT	kern/fs/sfs/sfs.h	97;"	d
SFS_HLIST_SIZE	kern/fs/sfs/sfs.h	98;"	d
SFS_L0_NBLKS	tools/mksfs.c	377;"	d	file:
SFS_L1_NBLKS	tools/mksfs.c	378;"	d	file:
SFS_L2_NBLKS	tools/mksfs.c	379;"	d	file:
SFS_LN_NBLKS	tools/mksfs.c	380;"	d	file:
SFS_MAGIC	kern/fs/sfs/sfs.h	15;"	d
SFS_MAGIC	tools/mksfs.c	110;"	d	file:
SFS_MAX_FILE_SIZE	kern/fs/sfs/sfs.h	20;"	d
SFS_MAX_FILE_SIZE	tools/mksfs.c	116;"	d	file:
SFS_MAX_FNAME_LEN	kern/fs/sfs/sfs.h	19;"	d
SFS_MAX_FNAME_LEN	tools/mksfs.c	115;"	d	file:
SFS_MAX_INFO_LEN	kern/fs/sfs/sfs.h	18;"	d
SFS_MAX_INFO_LEN	tools/mksfs.c	114;"	d	file:
SFS_MAX_NBLKS	tools/mksfs.c	113;"	d	file:
SFS_NDIRECT	kern/fs/sfs/sfs.h	17;"	d
SFS_NDIRECT	tools/mksfs.c	111;"	d	file:
SFS_TYPE_DIR	kern/fs/sfs/sfs.h	34;"	d
SFS_TYPE_DIR	tools/mksfs.c	120;"	d	file:
SFS_TYPE_FILE	kern/fs/sfs/sfs.h	33;"	d
SFS_TYPE_FILE	tools/mksfs.c	119;"	d	file:
SFS_TYPE_INVAL	kern/fs/sfs/sfs.h	32;"	d
SFS_TYPE_LINK	kern/fs/sfs/sfs.h	35;"	d
SFS_TYPE_LINK	tools/mksfs.c	121;"	d	file:
SH	Makefile	/^SH		:= sh$/;"	m
SHIFT	kern/driver/console.c	260;"	d	file:
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SLEEP_TIME	kern/sync/check_sync.c	14;"	d	file:
SLEEP_TIME	obj/user/forktree.asm	/^#define SLEEP_TIME 400$/;"	d
SLEEP_TIME	user/forktree.c	6;"	d	file:
SLEEP_TIME	user/priority.c	9;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
STARTUP	kern/smp/lapic.h	22;"	d
STA_A	boot/asm.h	23;"	d
STA_A	kern/init/asm.h	21;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	boot/asm.h	20;"	d
STA_C	kern/init/asm.h	18;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	boot/asm.h	19;"	d
STA_E	kern/init/asm.h	17;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	boot/asm.h	22;"	d
STA_R	kern/init/asm.h	20;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	boot/asm.h	21;"	d
STA_W	kern/init/asm.h	19;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	boot/asm.h	18;"	d
STA_X	kern/init/asm.h	16;"	d
STA_X	kern/mm/mmu.h	28;"	d
STDIN_BUFSIZE	kern/fs/devs/dev_stdin.c	15;"	d	file:
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
SVR	kern/smp/lapic.h	17;"	d
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
SWAP_DEV_NO	kern/fs/fs.h	12;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS                         "<|>&;"$/;"	d
SYMBOLS	user/sh.c	14;"	d	file:
SYSTEM_READ_TIMER	kern/driver/clock.c	/^long SYSTEM_READ_TIMER( void ){$/;"	f
SYS_clone	libs/unistd.h	11;"	d
SYS_close	libs/unistd.h	23;"	d
SYS_dup	libs/unistd.h	31;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_fstat	libs/unistd.h	27;"	d
SYS_fsync	libs/unistd.h	28;"	d
SYS_getcwd	libs/unistd.h	29;"	d
SYS_getdirentry	libs/unistd.h	30;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	33;"	d
SYS_mmap	libs/unistd.h	17;"	d
SYS_munmap	libs/unistd.h	18;"	d
SYS_open	libs/unistd.h	22;"	d
SYS_pgdir	libs/unistd.h	21;"	d
SYS_putc	libs/unistd.h	20;"	d
SYS_read	libs/unistd.h	24;"	d
SYS_seek	libs/unistd.h	26;"	d
SYS_shmem	libs/unistd.h	19;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_write	libs/unistd.h	25;"	d
SYS_yield	libs/unistd.h	12;"	d
S_IFBLK	libs/stat.h	18;"	d
S_IFCHR	libs/stat.h	17;"	d
S_IFDIR	libs/stat.h	15;"	d
S_IFLNK	libs/stat.h	16;"	d
S_IFMT	libs/stat.h	13;"	d
S_IFREG	libs/stat.h	14;"	d
S_ISBLK	libs/stat.h	24;"	d
S_ISCHR	libs/stat.h	23;"	d
S_ISDIR	libs/stat.h	21;"	d
S_ISLNK	libs/stat.h	22;"	d
S_ISREG	libs/stat.h	20;"	d
SetPageProperty	kern/mm/memlayout.h	173;"	d
SetPageReserved	kern/mm/memlayout.h	170;"	d
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TCCR	kern/smp/lapic.h	40;"	d
TDCR	kern/smp/lapic.h	41;"	d
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
THINKING	kern/sync/check_sync.c	10;"	d	file:
TICK_NUM	kern/trap/trap.c	22;"	d	file:
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TICR	kern/smp/lapic.h	39;"	d
TIMER	kern/smp/lapic.h	31;"	d
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_16BIT	obj/kernel.asm	/^#define TIMER_16BIT     0x30                    \/\/ r\/w counter 16 bits, LSB first$/;"	d
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_RATEGEN	obj/kernel.asm	/^#define TIMER_RATEGEN   0x04                    \/\/ mode 2, rate generator$/;"	d
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
TIMES	kern/sync/check_sync.c	13;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TPR	kern/smp/lapic.h	15;"	d
TR	Makefile	/^TR		:= tr$/;"	m
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_SYSCALL	libs/unistd.h	4;"	d
T_TSS	kern/trap/trap.h	19;"	d
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USERBASE	kern/mm/memlayout.h	117;"	d
USERTOP	kern/mm/memlayout.h	112;"	d
USER_ACCESS	kern/mm/memlayout.h	121;"	d
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_CS	kern/mm/memlayout.h	29;"	d
USER_DS	kern/mm/memlayout.h	30;"	d
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
USE_SKEW_HEAP	kern/schedule/default_sched.c	7;"	d	file:
USTAB	kern/mm/memlayout.h	119;"	d
USTACKPAGE	kern/mm/memlayout.h	114;"	d
USTACKSIZE	kern/mm/memlayout.h	115;"	d
USTACKTOP	kern/mm/memlayout.h	113;"	d
UTEXT	kern/mm/memlayout.h	118;"	d
V	Makefile	/^V       := @$/;"	m
V2P	kern/mm/memlayout.h	94;"	d
V2P_WO	kern/mm/memlayout.h	97;"	d
VALID_IDE	kern/driver/ide.c	47;"	d	file:
VER	kern/smp/lapic.h	14;"	d
VM_EXEC	kern/mm/vmm.h	28;"	d
VM_READ	kern/mm/vmm.h	26;"	d
VM_STACK	kern/mm/vmm.h	29;"	d
VM_WRITE	kern/mm/vmm.h	27;"	d
VOP_MAGIC	kern/fs/vfs/inode.h	74;"	d
VPT	kern/mm/memlayout.h	107;"	d
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
WHITESPACE	user/sh.c	13;"	d	file:
WORD_BITS	kern/fs/sfs/bitmap.c	9;"	d	file:
WORD_TYPE	kern/fs/sfs/bitmap.c	8;"	d	file:
WT_CHILD	kern/process/proc.h	114;"	d
WT_INTERRUPTED	kern/process/proc.h	113;"	d
WT_KBD	kern/process/proc.h	117;"	d
WT_KSEM	kern/process/proc.h	115;"	d
WT_TIMER	kern/process/proc.h	116;"	d
X1	kern/smp/lapic.h	32;"	d
YEAR	kern/smp/lapic.c	208;"	d	file:
YEAR	obj/kernel.asm	/^#define YEAR    0x09$/;"	d
_GNU_SOURCE	tools/mksfs.c	1;"	d	file:
__BOOT_ASM_H__	boot/asm.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	327;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	308;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	294;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	254;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	278;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__KERNEL_EXECVE	kern/process/proc.c	970;"	d	file:
__KERNEL_EXECVE3	kern/process/proc.c	981;"	d	file:
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
__KERN_FS_DEVS_DEV_H__	kern/fs/devs/dev.h	2;"	d
__KERN_FS_FILE_H__	kern/fs/file.h	2;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
__KERN_FS_IOBUF_H__	kern/fs/iobuf.h	2;"	d
__KERN_FS_SFS_BITMAP_H__	kern/fs/sfs/bitmap.h	2;"	d
__KERN_FS_SFS_SFS_H__	kern/fs/sfs/sfs.h	2;"	d
__KERN_FS_SWAP_SWAPFS_H__	kern/fs/swap/swapfs.h	2;"	d
__KERN_FS_SYSFILE_H__	kern/fs/sysfile.h	2;"	d
__KERN_FS_VFS_INODE_H__	kern/fs/vfs/inode.h	2;"	d
__KERN_FS_VFS_VFS_H__	kern/fs/vfs/vfs.h	2;"	d
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
__KERN_MM_SLAB_H__	kern/mm/kmalloc.h	2;"	d
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched.h	2;"	d
__KERN_SMP_IOAPIC_H__	kern/smp/ioapic.h	2;"	d
__KERN_SMP_LAPIC_H__	kern/smp/lapic.h	2;"	d
__KERN_SMP_MP_H__	kern/smp/mp.h	2;"	d
__KERN_SYNC_MOINTOR_CONDVAR_H__	kern/sync/monitor.h	2;"	d
__KERN_SYNC_SEM_H__	kern/sync/sem.h	2;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__KERN_SYNC_WAIT_H__	kern/sync/wait.h	2;"	d
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__LIBS_DIRENT_H__	libs/dirent.h	2;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
__LIBS_LIST_H__	libs/list.h	2;"	d
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
__LIBS_STAT_H__	libs/stat.h	2;"	d
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
__LIBS_STRING_H__	libs/string.h	2;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__USER_LIBS_DIR_H__	user/libs/dir.h	2;"	d
__USER_LIBS_FILE_H__	user/libs/file.h	2;"	d
__USER_LIBS_LOCK_H__	user/libs/lock.h	2;"	d
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__alloc_fs	kern/fs/vfs/vfs.c	/^__alloc_fs(int type) {$/;"	f
__alloc_inode	kern/fs/vfs/inode.c	/^__alloc_inode(int type) {$/;"	f
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__always_inline	libs/defs.h	8;"	d
__device_info	kern/fs/vfs/inode.h	/^        struct device __device_info;$/;"	m	union:inode::__anon8	typeref:struct:inode::__anon8::device
__down	kern/sync/sem.c	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__error	tools/mksfs.c	17;"	d	file:
__exec	user/libs/ulib.c	/^__exec(const char *name, const char **argv) {$/;"	f
__exec0	user/libs/ulib.h	40;"	d
__fs_type	kern/fs/vfs/vfs.h	48;"	d
__fsop_info	kern/fs/vfs/vfs.h	52;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
__hash32	tools/mksfs.c	/^__hash32(uint32_t val, unsigned int bits) {$/;"	f	file:
__in_type	kern/fs/vfs/inode.h	44;"	d
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
__sfs_info	kern/fs/vfs/vfs.h	/^        struct sfs_fs __sfs_info;                   $/;"	m	union:fs::__anon5	typeref:struct:fs::__anon5::sfs_fs
__sfs_inode_info	kern/fs/vfs/inode.h	/^        struct sfs_inode __sfs_inode_info;$/;"	m	union:inode::__anon8	typeref:struct:inode::__anon8::sfs_inode
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
__sp_nil	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
__up	kern/sync/sem.c	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
__vop_info	kern/fs/vfs/inode.h	48;"	d
__vop_op	kern/fs/vfs/inode.h	193;"	d
__wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
_start	obj/user/badarg.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/exit.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/forktest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/ls.asm	/^_start:$/;"	l
_start	obj/user/matrix.asm	/^_start:$/;"	l
_start	obj/user/pgdir.asm	/^_start:$/;"	l
_start	obj/user/priority.asm	/^_start:$/;"	l
_start	obj/user/sh.asm	/^_start:$/;"	l
_start	obj/user/sleep.asm	/^_start:$/;"	l
_start	obj/user/sleepkill.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/waitkill.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_start	user/libs/initcode.S	/^_start:$/;"	l
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_dir	tools/mksfs.c	/^add_dir(struct sfs_fs *sfs, struct cache_inode *parent, const char *dirname, int curfd, int fd, ino_t real) {$/;"	f	file:
add_entry	tools/mksfs.c	/^add_entry(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *file, const char *name) {$/;"	f	file:
add_file	tools/mksfs.c	/^add_file(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, int fd, ino_t real) {$/;"	f	file:
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
add_link	tools/mksfs.c	/^add_link(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, ino_t real) {$/;"	f	file:
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon10
addr	kern/smp/mp.h	/^	uint *addr;                  \/\/ I\/O APIC address$/;"	m	struct:mpioapic
addr	obj/kernel.asm	/^	addr = p2v(a);$/;"	d
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
again	obj/user/sh.asm	/^again:$/;"	l
alen	obj/kernel.asm	/^                alen = resid;$/;"	d
alen	obj/kernel.asm	/^            alen = len;$/;"	d
alen	obj/kernel.asm	/^        alen = len;$/;"	d
alen	obj/kernel.asm	/^    alen = iob->io_resid - resid - 2;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
alloc_cache_block	tools/mksfs.c	/^alloc_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
alloc_cache_inode	tools/mksfs.c	/^alloc_cache_inode(struct sfs_fs *sfs, ino_t real, uint32_t ino, uint16_t type) {$/;"	f	file:
alloc_fs	kern/fs/vfs/vfs.h	65;"	d
alloc_inode	kern/fs/vfs/inode.h	62;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/ls.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sh.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sleep.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sleepkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
apicid	kern/smp/mp.h	/^	uchar apicid;                 \/\/ local APIC id$/;"	m	struct:mpproc
apicno	kern/smp/mp.h	/^	uchar apicno;                 \/\/ I\/O APIC id$/;"	m	struct:mpioapic
append_block	tools/mksfs.c	/^append_block(struct sfs_fs *sfs, struct cache_inode *file, size_t size, uint32_t ino, const char *filename) {$/;"	f	file:
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
argc	obj/user/sh.asm	/^    argc = 0;$/;"	d
argv_size	obj/kernel.asm	/^    argv_size = 0;$/;"	d
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
assert	kern/debug/assert.h	15;"	d
assert	user/libs/ulib.h	15;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_fs	obj/kernel.asm	/^bad_dup_cleanup_fs:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_files_struct	obj/kernel.asm	/^bad_files_struct:$/;"	l
bad_fork_cleanup_fs	obj/kernel.asm	/^bad_fork_cleanup_fs:  \/\/for LAB8$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
barrier	libs/x86.h	21;"	d
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon14	file:
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 16;$/;"	d
base	obj/user/ls.asm	/^            base = 8;$/;"	d
base	obj/user/ls.asm	/^        base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 16;$/;"	d
base	obj/user/sh.asm	/^            base = 8;$/;"	d
base	obj/user/sh.asm	/^        base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 16;$/;"	d
base	obj/user/sleep.asm	/^            base = 8;$/;"	d
base	obj/user/sleep.asm	/^        base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 16;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 8;$/;"	d
base	obj/user/sleepkill.asm	/^        base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
bcd	obj/kernel.asm	/^  bcd = (sb & (1 << 2)) == 0;$/;"	d
bcpu	kern/smp/mp.c	/^static struct cpu *bcpu;$/;"	v	typeref:struct:cpu	file:
bcpu	obj/kernel.asm	/^					bcpu = &cpus[ncpu];$/;"	d
bcpu	obj/kernel.asm	/^	bcpu = &cpus[0];$/;"	d
bda	obj/kernel.asm	/^	bda = (uchar *) P2V(0x400);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bitmap	kern/fs/sfs/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap_alloc	kern/fs/sfs/bitmap.c	/^bitmap_alloc(struct bitmap *bitmap, uint32_t *index_store) {$/;"	f
bitmap_create	kern/fs/sfs/bitmap.c	/^bitmap_create(uint32_t nbits) {$/;"	f
bitmap_destroy	kern/fs/sfs/bitmap.c	/^bitmap_destroy(struct bitmap *bitmap) {$/;"	f
bitmap_free	kern/fs/sfs/bitmap.c	/^bitmap_free(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_getdata	kern/fs/sfs/bitmap.c	/^bitmap_getdata(struct bitmap *bitmap, size_t *len_store) {$/;"	f
bitmap_test	kern/fs/sfs/bitmap.c	/^bitmap_test(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_translate	kern/fs/sfs/bitmap.c	/^bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE **word, WORD_TYPE *mask) {$/;"	f	file:
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks *\/$/;"	m	struct:sfs_disk_inode
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks in fs *\/$/;"	m	struct:sfs_super
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:cache_inode::inode	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:sfs_fs::__anon15	file:
blocks	tools/mksfs.c	/^    struct cache_block *blocks[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_block	file:
bool	libs/defs.h	/^typedef int bool;$/;"	t
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
bool	tools/mksfs.c	/^typedef int bool;$/;"	t	file:
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^extern pde_t *boot_pgdir = NULL;$/;"	v
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
bootfs_node	kern/fs/vfs/vfs.c	/^static struct inode *bootfs_node = NULL;$/;"	v	typeref:struct:inode	file:
bootfs_sem	kern/fs/vfs/vfs.c	/^static semaphore_t bootfs_sem;$/;"	v	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon13	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
bug	tools/mksfs.c	31;"	d	file:
build_run	tools/grade.sh	/^build_run() {$/;"	f
c	obj/kernel.asm	/^	c = &cpus[cpunum()];$/;"	d
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = &cpus[cpunum()];$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 40 15 00 	lgdtl  0x154018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 40 15 c0       	mov    $0xc0154000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 36 00 00 00       	call   c010005e <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <v2p>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	5d                   	pop    %ebp$/;"	l
c0100036	obj/kernel.asm	/^c0100036:	c3                   	ret    $/;"	l
c0100037	obj/kernel.asm	/^c0100037 <p2v>:$/;"	l
c0100037	obj/kernel.asm	/^c0100037:	55                   	push   %ebp$/;"	l
c0100038	obj/kernel.asm	/^c0100038:	89 e5                	mov    %esp,%ebp$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010003d	obj/kernel.asm	/^c010003d:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	5d                   	pop    %ebp$/;"	l
c0100043	obj/kernel.asm	/^c0100043:	c3                   	ret    $/;"	l
c0100044	obj/kernel.asm	/^c0100044 <xchg>:$/;"	l
c0100044	obj/kernel.asm	/^c0100044:	55                   	push   %ebp$/;"	l
c0100045	obj/kernel.asm	/^c0100045:	89 e5                	mov    %esp,%ebp$/;"	l
c0100047	obj/kernel.asm	/^c0100047:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010004a	obj/kernel.asm	/^c010004a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010004d	obj/kernel.asm	/^c010004d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100050	obj/kernel.asm	/^c0100050:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c0100053	obj/kernel.asm	/^c0100053:	f0 87 02             	lock xchg %eax,(%edx)$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100059	obj/kernel.asm	/^c0100059:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010005c	obj/kernel.asm	/^c010005c:	c9                   	leave  $/;"	l
c010005d	obj/kernel.asm	/^c010005d:	c3                   	ret    $/;"	l
c010005e	obj/kernel.asm	/^c010005e <kern_init>:$/;"	l
c010005e	obj/kernel.asm	/^c010005e:	55                   	push   %ebp$/;"	l
c010005f	obj/kernel.asm	/^c010005f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100061	obj/kernel.asm	/^c0100061:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100064	obj/kernel.asm	/^c0100064:	ba 64 b8 15 c0       	mov    $0xc015b864,%edx$/;"	l
c0100069	obj/kernel.asm	/^c0100069:	b8 3a 6f 15 c0       	mov    $0xc0156f3a,%eax$/;"	l
c010006e	obj/kernel.asm	/^c010006e:	29 c2                	sub    %eax,%edx$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	89 d0                	mov    %edx,%eax$/;"	l
c0100072	obj/kernel.asm	/^c0100072:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100076	obj/kernel.asm	/^c0100076:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010007d	obj/kernel.asm	/^c010007d:	00 $/;"	l
c010007e	obj/kernel.asm	/^c010007e:	c7 04 24 3a 6f 15 c0 	movl   $0xc0156f3a,(%esp)$/;"	l
c0100085	obj/kernel.asm	/^c0100085:	e8 06 66 01 00       	call   c0116690 <memset>$/;"	l
c010008a	obj/kernel.asm	/^c010008a:	e8 5e 27 00 00       	call   c01027ed <cons_init>$/;"	l
c010008f	obj/kernel.asm	/^c010008f:	c7 45 f4 20 70 11 c0 	movl   $0xc0117020,-0xc(%ebp)$/;"	l
c0100096	obj/kernel.asm	/^c0100096:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100099	obj/kernel.asm	/^c0100099:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	c7 04 24 3c 70 11 c0 	movl   $0xc011703c,(%esp)$/;"	l
c01000a4	obj/kernel.asm	/^c01000a4:	e8 37 0a 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01000a9	obj/kernel.asm	/^c01000a9:	e8 d0 11 00 00       	call   c010127e <print_kerninfo>$/;"	l
c01000ae	obj/kernel.asm	/^c01000ae:	e8 c3 07 00 00       	call   c0100876 <grade_backtrace>$/;"	l
c01000b3	obj/kernel.asm	/^c01000b3:	e8 1a 4c 00 00       	call   c0104cd2 <pmm_init>$/;"	l
c01000b8	obj/kernel.asm	/^c01000b8:	e8 ad 60 01 00       	call   c011616a <mpinit>$/;"	l
c01000bd	obj/kernel.asm	/^c01000bd:	e8 20 59 01 00       	call   c01159e2 <lapicinit>$/;"	l
c01000c2	obj/kernel.asm	/^c01000c2:	e8 e9 29 00 00       	call   c0102ab0 <idt_init>$/;"	l
c01000c7	obj/kernel.asm	/^c01000c7:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax$/;"	l
c01000cd	obj/kernel.asm	/^c01000cd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01000d0	obj/kernel.asm	/^c01000d0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01000d3	obj/kernel.asm	/^c01000d3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01000d7	obj/kernel.asm	/^c01000d7:	c7 04 24 41 70 11 c0 	movl   $0xc0117041,(%esp)$/;"	l
c01000de	obj/kernel.asm	/^c01000de:	e8 fd 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01000e3	obj/kernel.asm	/^c01000e3:	e8 65 28 00 00       	call   c010294d <pic_init>$/;"	l
c01000e8	obj/kernel.asm	/^c01000e8:	e8 ba 57 01 00       	call   c01158a7 <ioapicinit>$/;"	l
c01000ed	obj/kernel.asm	/^c01000ed:	e8 74 00 00 00       	call   c0100166 <consoleinit>$/;"	l
c01000f2	obj/kernel.asm	/^c01000f2:	e8 18 27 00 00       	call   c010280f <uartinit>$/;"	l
c01000f7	obj/kernel.asm	/^c01000f7:	e8 5f 6f 00 00       	call   c010705b <vmm_init>$/;"	l
c01000fc	obj/kernel.asm	/^c01000fc:	e8 89 ef 00 00       	call   c010f08a <sched_init>$/;"	l
c0100101	obj/kernel.asm	/^c0100101:	e8 d3 eb 00 00       	call   c010ecd9 <proc_init>$/;"	l
c0100106	obj/kernel.asm	/^c0100106:	e8 23 16 00 00       	call   c010172e <ide_init>$/;"	l
c010010b	obj/kernel.asm	/^c010010b:	e8 bc 82 00 00       	call   c01083cc <swap_init>$/;"	l
c0100110	obj/kernel.asm	/^c0100110:	e8 85 c7 00 00       	call   c010c89a <fs_init>$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	c7 04 24 5a 70 11 c0 	movl   $0xc011705a,(%esp)$/;"	l
c010011c	obj/kernel.asm	/^c010011c:	e8 bf 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100121	obj/kernel.asm	/^c0100121:	e8 e5 05 00 00       	call   c010070b <startothers>$/;"	l
c0100126	obj/kernel.asm	/^c0100126:	c7 04 24 6c 70 11 c0 	movl   $0xc011706c,(%esp)$/;"	l
c010012d	obj/kernel.asm	/^c010012d:	e8 ae 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100132	obj/kernel.asm	/^c0100132:	e8 b0 ed 00 00       	call   c010eee7 <cpu_idle>$/;"	l
c0100137	obj/kernel.asm	/^c0100137 <switchkvm>:$/;"	l
c0100137	obj/kernel.asm	/^c0100137:	55                   	push   %ebp$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	89 e5                	mov    %esp,%ebp$/;"	l
c010013a	obj/kernel.asm	/^c010013a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010013d	obj/kernel.asm	/^c010013d:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0100142	obj/kernel.asm	/^c0100142:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100145	obj/kernel.asm	/^c0100145:	e8 e0 fe ff ff       	call   c010002a <v2p>$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010014d	obj/kernel.asm	/^c010014d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100150	obj/kernel.asm	/^c0100150:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0100153	obj/kernel.asm	/^c0100153:	c7 04 24 7e 70 11 c0 	movl   $0xc011707e,(%esp)$/;"	l
c010015a	obj/kernel.asm	/^c010015a:	e8 81 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c010015f	obj/kernel.asm	/^c010015f:	e8 fa 00 00 00       	call   c010025e <seginit>$/;"	l
c0100164	obj/kernel.asm	/^c0100164:	c9                   	leave  $/;"	l
c0100165	obj/kernel.asm	/^c0100165:	c3                   	ret    $/;"	l
c0100166	obj/kernel.asm	/^c0100166 <consoleinit>:$/;"	l
c0100166	obj/kernel.asm	/^c0100166:	55                   	push   %ebp$/;"	l
c0100167	obj/kernel.asm	/^c0100167:	89 e5                	mov    %esp,%ebp$/;"	l
c0100169	obj/kernel.asm	/^c0100169:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010016c	obj/kernel.asm	/^c010016c:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0100173	obj/kernel.asm	/^c0100173:	e8 a7 27 00 00       	call   c010291f <pic_enable>$/;"	l
c0100178	obj/kernel.asm	/^c0100178:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010017f	obj/kernel.asm	/^c010017f:	00 $/;"	l
c0100180	obj/kernel.asm	/^c0100180:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0100187	obj/kernel.asm	/^c0100187:	e8 ce 57 01 00       	call   c011595a <ioapicenable>$/;"	l
c010018c	obj/kernel.asm	/^c010018c:	c9                   	leave  $/;"	l
c010018d	obj/kernel.asm	/^c010018d:	c3                   	ret    $/;"	l
c010018e	obj/kernel.asm	/^c010018e <mpenter>:$/;"	l
c010018e	obj/kernel.asm	/^c010018e:	55                   	push   %ebp$/;"	l
c010018f	obj/kernel.asm	/^c010018f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100191	obj/kernel.asm	/^c0100191:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100194	obj/kernel.asm	/^c0100194:	c7 04 24 88 70 11 c0 	movl   $0xc0117088,(%esp)$/;"	l
c010019b	obj/kernel.asm	/^c010019b:	e8 40 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01001a0	obj/kernel.asm	/^c01001a0:	e8 0b 29 00 00       	call   c0102ab0 <idt_init>$/;"	l
c01001a5	obj/kernel.asm	/^c01001a5:	e8 8d ff ff ff       	call   c0100137 <switchkvm>$/;"	l
c01001aa	obj/kernel.asm	/^c01001aa:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax$/;"	l
c01001b0	obj/kernel.asm	/^c01001b0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01001b3	obj/kernel.asm	/^c01001b3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01001b6	obj/kernel.asm	/^c01001b6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001ba	obj/kernel.asm	/^c01001ba:	c7 04 24 90 70 11 c0 	movl   $0xc0117090,(%esp)$/;"	l
c01001c1	obj/kernel.asm	/^c01001c1:	e8 1a 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01001c6	obj/kernel.asm	/^c01001c6:	e8 17 58 01 00       	call   c01159e2 <lapicinit>$/;"	l
c01001cb	obj/kernel.asm	/^c01001cb:	c7 04 24 a0 70 11 c0 	movl   $0xc01170a0,(%esp)$/;"	l
c01001d2	obj/kernel.asm	/^c01001d2:	e8 09 09 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01001d7	obj/kernel.asm	/^c01001d7:	e8 00 00 00 00       	call   c01001dc <mpmain>$/;"	l
c01001dc	obj/kernel.asm	/^c01001dc <mpmain>:$/;"	l
c01001dc	obj/kernel.asm	/^c01001dc:	55                   	push   %ebp$/;"	l
c01001dd	obj/kernel.asm	/^c01001dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01001df	obj/kernel.asm	/^c01001df:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01001e2	obj/kernel.asm	/^c01001e2:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01001eb	obj/kernel.asm	/^c01001eb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01001f2	obj/kernel.asm	/^c01001f2:	c7 04 24 b3 70 11 c0 	movl   $0xc01170b3,(%esp)$/;"	l
c01001f9	obj/kernel.asm	/^c01001f9:	e8 e2 08 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01001fe	obj/kernel.asm	/^c01001fe:	e8 ad 28 00 00       	call   c0102ab0 <idt_init>$/;"	l
c0100203	obj/kernel.asm	/^c0100203:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax$/;"	l
c0100209	obj/kernel.asm	/^c0100209:	05 a8 00 00 00       	add    $0xa8,%eax$/;"	l
c010020e	obj/kernel.asm	/^c010020e:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	00 $/;"	l
c0100216	obj/kernel.asm	/^c0100216:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100219	obj/kernel.asm	/^c0100219:	e8 26 fe ff ff       	call   c0100044 <xchg>$/;"	l
c010021e	obj/kernel.asm	/^c010021e:	eb fe                	jmp    c010021e <mpmain+0x42>$/;"	l
c0100220	obj/kernel.asm	/^c0100220 <lgdt_xv6>:$/;"	l
c0100220	obj/kernel.asm	/^c0100220:	55                   	push   %ebp$/;"	l
c0100221	obj/kernel.asm	/^c0100221:	89 e5                	mov    %esp,%ebp$/;"	l
c0100223	obj/kernel.asm	/^c0100223:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100226	obj/kernel.asm	/^c0100226:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100229	obj/kernel.asm	/^c0100229:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010022c	obj/kernel.asm	/^c010022c:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100230	obj/kernel.asm	/^c0100230:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100233	obj/kernel.asm	/^c0100233:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0100237	obj/kernel.asm	/^c0100237:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010023a	obj/kernel.asm	/^c010023a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010023d	obj/kernel.asm	/^c010023d:	66 89 45 fe          	mov    %ax,-0x2(%ebp)$/;"	l
c0100241	obj/kernel.asm	/^c0100241:	8d 45 fa             	lea    -0x6(%ebp),%eax$/;"	l
c0100244	obj/kernel.asm	/^c0100244:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0100247	obj/kernel.asm	/^c0100247:	c9                   	leave  $/;"	l
c0100248	obj/kernel.asm	/^c0100248:	c3                   	ret    $/;"	l
c0100249	obj/kernel.asm	/^c0100249 <loadgs_xv6>:$/;"	l
c0100249	obj/kernel.asm	/^c0100249:	55                   	push   %ebp$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	89 e5                	mov    %esp,%ebp$/;"	l
c010024c	obj/kernel.asm	/^c010024c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010024f	obj/kernel.asm	/^c010024f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0100256	obj/kernel.asm	/^c0100256:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c010025a	obj/kernel.asm	/^c010025a:	8e e8                	mov    %eax,%gs$/;"	l
c010025c	obj/kernel.asm	/^c010025c:	c9                   	leave  $/;"	l
c010025d	obj/kernel.asm	/^c010025d:	c3                   	ret    $/;"	l
c010025e	obj/kernel.asm	/^c010025e <seginit>:$/;"	l
c010025e	obj/kernel.asm	/^c010025e:	55                   	push   %ebp$/;"	l
c010025f	obj/kernel.asm	/^c010025f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100261	obj/kernel.asm	/^c0100261:	53                   	push   %ebx$/;"	l
c0100262	obj/kernel.asm	/^c0100262:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0100265	obj/kernel.asm	/^c0100265:	e8 bd 58 01 00       	call   c0115b27 <cpunum>$/;"	l
c010026a	obj/kernel.asm	/^c010026a:	69 c0 bc 00 00 00    	imul   $0xbc,%eax,%eax$/;"	l
c0100270	obj/kernel.asm	/^c0100270:	05 80 b0 15 c0       	add    $0xc015b080,%eax$/;"	l
c0100275	obj/kernel.asm	/^c0100275:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100278	obj/kernel.asm	/^c0100278:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010027b	obj/kernel.asm	/^c010027b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010027f	obj/kernel.asm	/^c010027f:	c7 04 24 c4 70 11 c0 	movl   $0xc01170c4,(%esp)$/;"	l
c0100286	obj/kernel.asm	/^c0100286:	e8 55 08 00 00       	call   c0100ae0 <cprintf>$/;"	l
c010028b	obj/kernel.asm	/^c010028b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010028e	obj/kernel.asm	/^c010028e:	66 c7 40 78 ff ff    	movw   $0xffff,0x78(%eax)$/;"	l
c0100294	obj/kernel.asm	/^c0100294:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100297	obj/kernel.asm	/^c0100297:	66 c7 40 7a 00 00    	movw   $0x0,0x7a(%eax)$/;"	l
c010029d	obj/kernel.asm	/^c010029d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002a0	obj/kernel.asm	/^c01002a0:	c6 40 7c 00          	movb   $0x0,0x7c(%eax)$/;"	l
c01002a4	obj/kernel.asm	/^c01002a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002a7	obj/kernel.asm	/^c01002a7:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c01002ab	obj/kernel.asm	/^c01002ab:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01002ae	obj/kernel.asm	/^c01002ae:	83 ca 0a             	or     $0xa,%edx$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c01002b4	obj/kernel.asm	/^c01002b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c01002bb	obj/kernel.asm	/^c01002bb:	83 ca 10             	or     $0x10,%edx$/;"	l
c01002be	obj/kernel.asm	/^c01002be:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c01002c1	obj/kernel.asm	/^c01002c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002c4	obj/kernel.asm	/^c01002c4:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c01002c8	obj/kernel.asm	/^c01002c8:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01002cb	obj/kernel.asm	/^c01002cb:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c01002ce	obj/kernel.asm	/^c01002ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002d1	obj/kernel.asm	/^c01002d1:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c01002d5	obj/kernel.asm	/^c01002d5:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01002d8	obj/kernel.asm	/^c01002d8:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c01002db	obj/kernel.asm	/^c01002db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002de	obj/kernel.asm	/^c01002de:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01002e2	obj/kernel.asm	/^c01002e2:	83 ca 0f             	or     $0xf,%edx$/;"	l
c01002e5	obj/kernel.asm	/^c01002e5:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01002e8	obj/kernel.asm	/^c01002e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002eb	obj/kernel.asm	/^c01002eb:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01002ef	obj/kernel.asm	/^c01002ef:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01002f2	obj/kernel.asm	/^c01002f2:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01002f5	obj/kernel.asm	/^c01002f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002f8	obj/kernel.asm	/^c01002f8:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01002fc	obj/kernel.asm	/^c01002fc:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c01002ff	obj/kernel.asm	/^c01002ff:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c0100302	obj/kernel.asm	/^c0100302:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c0100309	obj/kernel.asm	/^c0100309:	83 ca 40             	or     $0x40,%edx$/;"	l
c010030c	obj/kernel.asm	/^c010030c:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c010030f	obj/kernel.asm	/^c010030f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100312	obj/kernel.asm	/^c0100312:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0100319	obj/kernel.asm	/^c0100319:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c010031c	obj/kernel.asm	/^c010031c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010031f	obj/kernel.asm	/^c010031f:	c6 40 7f 00          	movb   $0x0,0x7f(%eax)$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100326	obj/kernel.asm	/^c0100326:	66 c7 80 80 00 00 00 	movw   $0xffff,0x80(%eax)$/;"	l
c010032d	obj/kernel.asm	/^c010032d:	ff ff $/;"	l
c010032f	obj/kernel.asm	/^c010032f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100332	obj/kernel.asm	/^c0100332:	66 c7 80 82 00 00 00 	movw   $0x0,0x82(%eax)$/;"	l
c0100339	obj/kernel.asm	/^c0100339:	00 00 $/;"	l
c010033b	obj/kernel.asm	/^c010033b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010033e	obj/kernel.asm	/^c010033e:	c6 80 84 00 00 00 00 	movb   $0x0,0x84(%eax)$/;"	l
c0100345	obj/kernel.asm	/^c0100345:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100348	obj/kernel.asm	/^c0100348:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c010034f	obj/kernel.asm	/^c010034f:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c0100352	obj/kernel.asm	/^c0100352:	83 ca 02             	or     $0x2,%edx$/;"	l
c0100355	obj/kernel.asm	/^c0100355:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c010035b	obj/kernel.asm	/^c010035b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010035e	obj/kernel.asm	/^c010035e:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c0100365	obj/kernel.asm	/^c0100365:	83 ca 10             	or     $0x10,%edx$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c010036e	obj/kernel.asm	/^c010036e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100371	obj/kernel.asm	/^c0100371:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c0100378	obj/kernel.asm	/^c0100378:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c010037b	obj/kernel.asm	/^c010037b:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c0100381	obj/kernel.asm	/^c0100381:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100384	obj/kernel.asm	/^c0100384:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c010038b	obj/kernel.asm	/^c010038b:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010038e	obj/kernel.asm	/^c010038e:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c0100394	obj/kernel.asm	/^c0100394:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100397	obj/kernel.asm	/^c0100397:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	83 ca 0f             	or     $0xf,%edx$/;"	l
c01003a1	obj/kernel.asm	/^c01003a1:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c01003a7	obj/kernel.asm	/^c01003a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003aa	obj/kernel.asm	/^c01003aa:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c01003b1	obj/kernel.asm	/^c01003b1:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01003b4	obj/kernel.asm	/^c01003b4:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c01003ba	obj/kernel.asm	/^c01003ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003bd	obj/kernel.asm	/^c01003bd:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c01003c4	obj/kernel.asm	/^c01003c4:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c01003c7	obj/kernel.asm	/^c01003c7:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c01003cd	obj/kernel.asm	/^c01003cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003d0	obj/kernel.asm	/^c01003d0:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c01003d7	obj/kernel.asm	/^c01003d7:	83 ca 40             	or     $0x40,%edx$/;"	l
c01003da	obj/kernel.asm	/^c01003da:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c01003e0	obj/kernel.asm	/^c01003e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003e3	obj/kernel.asm	/^c01003e3:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c01003ea	obj/kernel.asm	/^c01003ea:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01003ed	obj/kernel.asm	/^c01003ed:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c01003f3	obj/kernel.asm	/^c01003f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003f6	obj/kernel.asm	/^c01003f6:	c6 80 87 00 00 00 00 	movb   $0x0,0x87(%eax)$/;"	l
c01003fd	obj/kernel.asm	/^c01003fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100400	obj/kernel.asm	/^c0100400:	66 c7 80 88 00 00 00 	movw   $0xffff,0x88(%eax)$/;"	l
c0100407	obj/kernel.asm	/^c0100407:	ff ff $/;"	l
c0100409	obj/kernel.asm	/^c0100409:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010040c	obj/kernel.asm	/^c010040c:	66 c7 80 8a 00 00 00 	movw   $0x0,0x8a(%eax)$/;"	l
c0100413	obj/kernel.asm	/^c0100413:	00 00 $/;"	l
c0100415	obj/kernel.asm	/^c0100415:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100418	obj/kernel.asm	/^c0100418:	c6 80 8c 00 00 00 00 	movb   $0x0,0x8c(%eax)$/;"	l
c010041f	obj/kernel.asm	/^c010041f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100422	obj/kernel.asm	/^c0100422:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c0100429	obj/kernel.asm	/^c0100429:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010042c	obj/kernel.asm	/^c010042c:	83 ca 0a             	or     $0xa,%edx$/;"	l
c010042f	obj/kernel.asm	/^c010042f:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c0100435	obj/kernel.asm	/^c0100435:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c010043f	obj/kernel.asm	/^c010043f:	83 ca 10             	or     $0x10,%edx$/;"	l
c0100442	obj/kernel.asm	/^c0100442:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c0100448	obj/kernel.asm	/^c0100448:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010044b	obj/kernel.asm	/^c010044b:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c0100452	obj/kernel.asm	/^c0100452:	83 ca 60             	or     $0x60,%edx$/;"	l
c0100455	obj/kernel.asm	/^c0100455:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c010045b	obj/kernel.asm	/^c010045b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010045e	obj/kernel.asm	/^c010045e:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c0100465	obj/kernel.asm	/^c0100465:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0100468	obj/kernel.asm	/^c0100468:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c0100478	obj/kernel.asm	/^c0100478:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010047b	obj/kernel.asm	/^c010047b:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c0100481	obj/kernel.asm	/^c0100481:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100484	obj/kernel.asm	/^c0100484:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c010048b	obj/kernel.asm	/^c010048b:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010048e	obj/kernel.asm	/^c010048e:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c0100494	obj/kernel.asm	/^c0100494:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100497	obj/kernel.asm	/^c0100497:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c010049e	obj/kernel.asm	/^c010049e:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c01004a1	obj/kernel.asm	/^c01004a1:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c01004a7	obj/kernel.asm	/^c01004a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004aa	obj/kernel.asm	/^c01004aa:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c01004b1	obj/kernel.asm	/^c01004b1:	83 ca 40             	or     $0x40,%edx$/;"	l
c01004b4	obj/kernel.asm	/^c01004b4:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c01004ba	obj/kernel.asm	/^c01004ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004bd	obj/kernel.asm	/^c01004bd:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c01004c4	obj/kernel.asm	/^c01004c4:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01004c7	obj/kernel.asm	/^c01004c7:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c01004cd	obj/kernel.asm	/^c01004cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004d0	obj/kernel.asm	/^c01004d0:	c6 80 8f 00 00 00 00 	movb   $0x0,0x8f(%eax)$/;"	l
c01004d7	obj/kernel.asm	/^c01004d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004da	obj/kernel.asm	/^c01004da:	66 c7 80 90 00 00 00 	movw   $0xffff,0x90(%eax)$/;"	l
c01004e1	obj/kernel.asm	/^c01004e1:	ff ff $/;"	l
c01004e3	obj/kernel.asm	/^c01004e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	66 c7 80 92 00 00 00 	movw   $0x0,0x92(%eax)$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	00 00 $/;"	l
c01004ef	obj/kernel.asm	/^c01004ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004f2	obj/kernel.asm	/^c01004f2:	c6 80 94 00 00 00 00 	movb   $0x0,0x94(%eax)$/;"	l
c01004f9	obj/kernel.asm	/^c01004f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004fc	obj/kernel.asm	/^c01004fc:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c0100503	obj/kernel.asm	/^c0100503:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c0100506	obj/kernel.asm	/^c0100506:	83 ca 02             	or     $0x2,%edx$/;"	l
c0100509	obj/kernel.asm	/^c0100509:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c010050f	obj/kernel.asm	/^c010050f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100512	obj/kernel.asm	/^c0100512:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c0100519	obj/kernel.asm	/^c0100519:	83 ca 10             	or     $0x10,%edx$/;"	l
c010051c	obj/kernel.asm	/^c010051c:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c0100522	obj/kernel.asm	/^c0100522:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100525	obj/kernel.asm	/^c0100525:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c010052c	obj/kernel.asm	/^c010052c:	83 ca 60             	or     $0x60,%edx$/;"	l
c010052f	obj/kernel.asm	/^c010052f:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c0100535	obj/kernel.asm	/^c0100535:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c010053f	obj/kernel.asm	/^c010053f:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c0100552	obj/kernel.asm	/^c0100552:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0100555	obj/kernel.asm	/^c0100555:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c0100565	obj/kernel.asm	/^c0100565:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0100568	obj/kernel.asm	/^c0100568:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c010056e	obj/kernel.asm	/^c010056e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100571	obj/kernel.asm	/^c0100571:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c0100578	obj/kernel.asm	/^c0100578:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c010057b	obj/kernel.asm	/^c010057b:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c0100581	obj/kernel.asm	/^c0100581:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100584	obj/kernel.asm	/^c0100584:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c010058b	obj/kernel.asm	/^c010058b:	83 ca 40             	or     $0x40,%edx$/;"	l
c010058e	obj/kernel.asm	/^c010058e:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c0100594	obj/kernel.asm	/^c0100594:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100597	obj/kernel.asm	/^c0100597:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c010059e	obj/kernel.asm	/^c010059e:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01005a1	obj/kernel.asm	/^c01005a1:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c01005a7	obj/kernel.asm	/^c01005a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005aa	obj/kernel.asm	/^c01005aa:	c6 80 97 00 00 00 00 	movb   $0x0,0x97(%eax)$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c01005b9	obj/kernel.asm	/^c01005b9:	89 c3                	mov    %eax,%ebx$/;"	l
c01005bb	obj/kernel.asm	/^c01005bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005be	obj/kernel.asm	/^c01005be:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c01005c3	obj/kernel.asm	/^c01005c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01005c6	obj/kernel.asm	/^c01005c6:	89 c1                	mov    %eax,%ecx$/;"	l
c01005c8	obj/kernel.asm	/^c01005c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005cb	obj/kernel.asm	/^c01005cb:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c01005d0	obj/kernel.asm	/^c01005d0:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01005d3	obj/kernel.asm	/^c01005d3:	89 c2                	mov    %eax,%edx$/;"	l
c01005d5	obj/kernel.asm	/^c01005d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005d8	obj/kernel.asm	/^c01005d8:	66 c7 80 a0 00 00 00 	movw   $0x0,0xa0(%eax)$/;"	l
c01005df	obj/kernel.asm	/^c01005df:	00 00 $/;"	l
c01005e1	obj/kernel.asm	/^c01005e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005e4	obj/kernel.asm	/^c01005e4:	66 89 98 a2 00 00 00 	mov    %bx,0xa2(%eax)$/;"	l
c01005eb	obj/kernel.asm	/^c01005eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005ee	obj/kernel.asm	/^c01005ee:	88 88 a4 00 00 00    	mov    %cl,0xa4(%eax)$/;"	l
c01005f4	obj/kernel.asm	/^c01005f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01005f7	obj/kernel.asm	/^c01005f7:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c01005fe	obj/kernel.asm	/^c01005fe:	83 e1 f0             	and    $0xfffffff0,%ecx$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	83 c9 02             	or     $0x2,%ecx$/;"	l
c0100604	obj/kernel.asm	/^c0100604:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c010060a	obj/kernel.asm	/^c010060a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010060d	obj/kernel.asm	/^c010060d:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	83 c9 10             	or     $0x10,%ecx$/;"	l
c0100617	obj/kernel.asm	/^c0100617:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c0100627	obj/kernel.asm	/^c0100627:	83 e1 9f             	and    $0xffffff9f,%ecx$/;"	l
c010062a	obj/kernel.asm	/^c010062a:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c0100630	obj/kernel.asm	/^c0100630:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100633	obj/kernel.asm	/^c0100633:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c010063a	obj/kernel.asm	/^c010063a:	83 c9 80             	or     $0xffffff80,%ecx$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c0100643	obj/kernel.asm	/^c0100643:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100646	obj/kernel.asm	/^c0100646:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c010064d	obj/kernel.asm	/^c010064d:	83 e1 f0             	and    $0xfffffff0,%ecx$/;"	l
c0100650	obj/kernel.asm	/^c0100650:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c0100656	obj/kernel.asm	/^c0100656:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100659	obj/kernel.asm	/^c0100659:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0100660	obj/kernel.asm	/^c0100660:	83 e1 ef             	and    $0xffffffef,%ecx$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c0100669	obj/kernel.asm	/^c0100669:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0100673	obj/kernel.asm	/^c0100673:	83 e1 df             	and    $0xffffffdf,%ecx$/;"	l
c0100676	obj/kernel.asm	/^c0100676:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c010067c	obj/kernel.asm	/^c010067c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010067f	obj/kernel.asm	/^c010067f:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0100686	obj/kernel.asm	/^c0100686:	83 c9 40             	or     $0x40,%ecx$/;"	l
c0100689	obj/kernel.asm	/^c0100689:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c010068f	obj/kernel.asm	/^c010068f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0100699	obj/kernel.asm	/^c0100699:	83 c9 80             	or     $0xffffff80,%ecx$/;"	l
c010069c	obj/kernel.asm	/^c010069c:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c01006a2	obj/kernel.asm	/^c01006a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006a5	obj/kernel.asm	/^c01006a5:	88 90 a7 00 00 00    	mov    %dl,0xa7(%eax)$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006ae	obj/kernel.asm	/^c01006ae:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c01006b3	obj/kernel.asm	/^c01006b3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01006b7	obj/kernel.asm	/^c01006b7:	c7 04 24 d4 70 11 c0 	movl   $0xc01170d4,(%esp)$/;"	l
c01006be	obj/kernel.asm	/^c01006be:	e8 1d 04 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01006c3	obj/kernel.asm	/^c01006c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006c6	obj/kernel.asm	/^c01006c6:	83 c0 70             	add    $0x70,%eax$/;"	l
c01006c9	obj/kernel.asm	/^c01006c9:	c7 44 24 04 38 00 00 	movl   $0x38,0x4(%esp)$/;"	l
c01006d0	obj/kernel.asm	/^c01006d0:	00 $/;"	l
c01006d1	obj/kernel.asm	/^c01006d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01006d4	obj/kernel.asm	/^c01006d4:	e8 47 fb ff ff       	call   c0100220 <lgdt_xv6>$/;"	l
c01006d9	obj/kernel.asm	/^c01006d9:	c7 04 24 e2 70 11 c0 	movl   $0xc01170e2,(%esp)$/;"	l
c01006e0	obj/kernel.asm	/^c01006e0:	e8 fb 03 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c01006ec	obj/kernel.asm	/^c01006ec:	e8 58 fb ff ff       	call   c0100249 <loadgs_xv6>$/;"	l
c01006f1	obj/kernel.asm	/^c01006f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	65 a3 00 00 00 00    	mov    %eax,%gs:0x0$/;"	l
c01006fa	obj/kernel.asm	/^c01006fa:	65 c7 05 04 00 00 00 	movl   $0x0,%gs:0x4$/;"	l
c0100701	obj/kernel.asm	/^c0100701:	00 00 00 00 $/;"	l
c0100705	obj/kernel.asm	/^c0100705:	83 c4 24             	add    $0x24,%esp$/;"	l
c0100708	obj/kernel.asm	/^c0100708:	5b                   	pop    %ebx$/;"	l
c0100709	obj/kernel.asm	/^c0100709:	5d                   	pop    %ebp$/;"	l
c010070a	obj/kernel.asm	/^c010070a:	c3                   	ret    $/;"	l
c010070b	obj/kernel.asm	/^c010070b <startothers>:$/;"	l
c010070b	obj/kernel.asm	/^c010070b:	55                   	push   %ebp$/;"	l
c010070c	obj/kernel.asm	/^c010070c:	89 e5                	mov    %esp,%ebp$/;"	l
c010070e	obj/kernel.asm	/^c010070e:	53                   	push   %ebx$/;"	l
c010070f	obj/kernel.asm	/^c010070f:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0100712	obj/kernel.asm	/^c0100712:	c7 04 24 00 70 00 00 	movl   $0x7000,(%esp)$/;"	l
c0100719	obj/kernel.asm	/^c0100719:	e8 19 f9 ff ff       	call   c0100037 <p2v>$/;"	l
c010071e	obj/kernel.asm	/^c010071e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100721	obj/kernel.asm	/^c0100721:	b8 8a 00 00 00       	mov    $0x8a,%eax$/;"	l
c0100726	obj/kernel.asm	/^c0100726:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010072a	obj/kernel.asm	/^c010072a:	c7 44 24 04 b0 6e 15 	movl   $0xc0156eb0,0x4(%esp)$/;"	l
c0100731	obj/kernel.asm	/^c0100731:	c0 $/;"	l
c0100732	obj/kernel.asm	/^c0100732:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100735	obj/kernel.asm	/^c0100735:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100738	obj/kernel.asm	/^c0100738:	e8 92 5f 01 00       	call   c01166cf <memmove>$/;"	l
c010073d	obj/kernel.asm	/^c010073d:	c7 45 f4 80 b0 15 c0 	movl   $0xc015b080,-0xc(%ebp)$/;"	l
c0100744	obj/kernel.asm	/^c0100744:	e9 a3 00 00 00       	jmp    c01007ec <startothers+0xe1>$/;"	l
c0100749	obj/kernel.asm	/^c0100749:	e8 d9 53 01 00       	call   c0115b27 <cpunum>$/;"	l
c010074e	obj/kernel.asm	/^c010074e:	69 c0 bc 00 00 00    	imul   $0xbc,%eax,%eax$/;"	l
c0100754	obj/kernel.asm	/^c0100754:	05 80 b0 15 c0       	add    $0xc015b080,%eax$/;"	l
c0100759	obj/kernel.asm	/^c0100759:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	75 05                	jne    c0100763 <startothers+0x58>$/;"	l
c010075e	obj/kernel.asm	/^c010075e:	e9 82 00 00 00       	jmp    c01007e5 <startothers+0xda>$/;"	l
c0100763	obj/kernel.asm	/^c0100763:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010076a	obj/kernel.asm	/^c010076a:	e8 20 3f 00 00       	call   c010468f <alloc_pages>$/;"	l
c010076f	obj/kernel.asm	/^c010076f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100772	obj/kernel.asm	/^c0100772:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100775	obj/kernel.asm	/^c0100775:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0100778	obj/kernel.asm	/^c0100778:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010077b	obj/kernel.asm	/^c010077b:	81 c2 00 20 00 00    	add    $0x2000,%edx$/;"	l
c0100781	obj/kernel.asm	/^c0100781:	89 10                	mov    %edx,(%eax)$/;"	l
c0100783	obj/kernel.asm	/^c0100783:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100786	obj/kernel.asm	/^c0100786:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0100789	obj/kernel.asm	/^c0100789:	c7 00 8e 01 10 c0    	movl   $0xc010018e,(%eax)$/;"	l
c010078f	obj/kernel.asm	/^c010078f:	c7 44 24 04 8e 01 10 	movl   $0xc010018e,0x4(%esp)$/;"	l
c0100796	obj/kernel.asm	/^c0100796:	c0 $/;"	l
c0100797	obj/kernel.asm	/^c0100797:	c7 04 24 eb 70 11 c0 	movl   $0xc01170eb,(%esp)$/;"	l
c010079e	obj/kernel.asm	/^c010079e:	e8 3d 03 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01007a3	obj/kernel.asm	/^c01007a3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	8d 58 f4             	lea    -0xc(%eax),%ebx$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	c7 04 24 00 50 15 c0 	movl   $0xc0155000,(%esp)$/;"	l
c01007b0	obj/kernel.asm	/^c01007b0:	e8 75 f8 ff ff       	call   c010002a <v2p>$/;"	l
c01007b5	obj/kernel.asm	/^c01007b5:	89 03                	mov    %eax,(%ebx)$/;"	l
c01007b7	obj/kernel.asm	/^c01007b7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01007ba	obj/kernel.asm	/^c01007ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01007bd	obj/kernel.asm	/^c01007bd:	e8 68 f8 ff ff       	call   c010002a <v2p>$/;"	l
c01007c2	obj/kernel.asm	/^c01007c2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01007c5	obj/kernel.asm	/^c01007c5:	0f b6 12             	movzbl (%edx),%edx$/;"	l
c01007c8	obj/kernel.asm	/^c01007c8:	0f b6 d2             	movzbl %dl,%edx$/;"	l
c01007cb	obj/kernel.asm	/^c01007cb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01007cf	obj/kernel.asm	/^c01007cf:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01007d2	obj/kernel.asm	/^c01007d2:	e8 38 54 01 00       	call   c0115c0f <lapicstartap>$/;"	l
c01007d7	obj/kernel.asm	/^c01007d7:	90                   	nop$/;"	l
c01007d8	obj/kernel.asm	/^c01007d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007db	obj/kernel.asm	/^c01007db:	8b 80 a8 00 00 00    	mov    0xa8(%eax),%eax$/;"	l
c01007e1	obj/kernel.asm	/^c01007e1:	85 c0                	test   %eax,%eax$/;"	l
c01007e3	obj/kernel.asm	/^c01007e3:	74 f3                	je     c01007d8 <startothers+0xcd>$/;"	l
c01007e5	obj/kernel.asm	/^c01007e5:	81 45 f4 bc 00 00 00 	addl   $0xbc,-0xc(%ebp)$/;"	l
c01007ec	obj/kernel.asm	/^c01007ec:	a1 64 b6 15 c0       	mov    0xc015b664,%eax$/;"	l
c01007f1	obj/kernel.asm	/^c01007f1:	69 c0 bc 00 00 00    	imul   $0xbc,%eax,%eax$/;"	l
c01007f7	obj/kernel.asm	/^c01007f7:	05 80 b0 15 c0       	add    $0xc015b080,%eax$/;"	l
c01007fc	obj/kernel.asm	/^c01007fc:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01007ff	obj/kernel.asm	/^c01007ff:	0f 87 44 ff ff ff    	ja     c0100749 <startothers+0x3e>$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	83 c4 24             	add    $0x24,%esp$/;"	l
c0100808	obj/kernel.asm	/^c0100808:	5b                   	pop    %ebx$/;"	l
c0100809	obj/kernel.asm	/^c0100809:	5d                   	pop    %ebp$/;"	l
c010080a	obj/kernel.asm	/^c010080a:	c3                   	ret    $/;"	l
c010080b	obj/kernel.asm	/^c010080b <grade_backtrace2>:$/;"	l
c010080b	obj/kernel.asm	/^c010080b:	55                   	push   %ebp$/;"	l
c010080c	obj/kernel.asm	/^c010080c:	89 e5                	mov    %esp,%ebp$/;"	l
c010080e	obj/kernel.asm	/^c010080e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100811	obj/kernel.asm	/^c0100811:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0100818	obj/kernel.asm	/^c0100818:	00 $/;"	l
c0100819	obj/kernel.asm	/^c0100819:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0100820	obj/kernel.asm	/^c0100820:	00 $/;"	l
c0100821	obj/kernel.asm	/^c0100821:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100828	obj/kernel.asm	/^c0100828:	e8 95 0e 00 00       	call   c01016c2 <mon_backtrace>$/;"	l
c010082d	obj/kernel.asm	/^c010082d:	c9                   	leave  $/;"	l
c010082e	obj/kernel.asm	/^c010082e:	c3                   	ret    $/;"	l
c010082f	obj/kernel.asm	/^c010082f <grade_backtrace1>:$/;"	l
c010082f	obj/kernel.asm	/^c010082f:	55                   	push   %ebp$/;"	l
c0100830	obj/kernel.asm	/^c0100830:	89 e5                	mov    %esp,%ebp$/;"	l
c0100832	obj/kernel.asm	/^c0100832:	53                   	push   %ebx$/;"	l
c0100833	obj/kernel.asm	/^c0100833:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100836	obj/kernel.asm	/^c0100836:	8d 5d 0c             	lea    0xc(%ebp),%ebx$/;"	l
c0100839	obj/kernel.asm	/^c0100839:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010083c	obj/kernel.asm	/^c010083c:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c010083f	obj/kernel.asm	/^c010083f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100842	obj/kernel.asm	/^c0100842:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0100846	obj/kernel.asm	/^c0100846:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010084a	obj/kernel.asm	/^c010084a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010084e	obj/kernel.asm	/^c010084e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100851	obj/kernel.asm	/^c0100851:	e8 b5 ff ff ff       	call   c010080b <grade_backtrace2>$/;"	l
c0100856	obj/kernel.asm	/^c0100856:	83 c4 14             	add    $0x14,%esp$/;"	l
c0100859	obj/kernel.asm	/^c0100859:	5b                   	pop    %ebx$/;"	l
c010085a	obj/kernel.asm	/^c010085a:	5d                   	pop    %ebp$/;"	l
c010085b	obj/kernel.asm	/^c010085b:	c3                   	ret    $/;"	l
c010085c	obj/kernel.asm	/^c010085c <grade_backtrace0>:$/;"	l
c010085c	obj/kernel.asm	/^c010085c:	55                   	push   %ebp$/;"	l
c010085d	obj/kernel.asm	/^c010085d:	89 e5                	mov    %esp,%ebp$/;"	l
c010085f	obj/kernel.asm	/^c010085f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100862	obj/kernel.asm	/^c0100862:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100865	obj/kernel.asm	/^c0100865:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100869	obj/kernel.asm	/^c0100869:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010086c	obj/kernel.asm	/^c010086c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010086f	obj/kernel.asm	/^c010086f:	e8 bb ff ff ff       	call   c010082f <grade_backtrace1>$/;"	l
c0100874	obj/kernel.asm	/^c0100874:	c9                   	leave  $/;"	l
c0100875	obj/kernel.asm	/^c0100875:	c3                   	ret    $/;"	l
c0100876	obj/kernel.asm	/^c0100876 <grade_backtrace>:$/;"	l
c0100876	obj/kernel.asm	/^c0100876:	55                   	push   %ebp$/;"	l
c0100877	obj/kernel.asm	/^c0100877:	89 e5                	mov    %esp,%ebp$/;"	l
c0100879	obj/kernel.asm	/^c0100879:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	b8 5e 00 10 c0       	mov    $0xc010005e,%eax$/;"	l
c0100881	obj/kernel.asm	/^c0100881:	c7 44 24 08 00 00 ff 	movl   $0xffff0000,0x8(%esp)$/;"	l
c0100888	obj/kernel.asm	/^c0100888:	ff $/;"	l
c0100889	obj/kernel.asm	/^c0100889:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010088d	obj/kernel.asm	/^c010088d:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100894	obj/kernel.asm	/^c0100894:	e8 c3 ff ff ff       	call   c010085c <grade_backtrace0>$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	c9                   	leave  $/;"	l
c010089a	obj/kernel.asm	/^c010089a:	c3                   	ret    $/;"	l
c010089b	obj/kernel.asm	/^c010089b <lab1_print_cur_status>:$/;"	l
c010089b	obj/kernel.asm	/^c010089b:	55                   	push   %ebp$/;"	l
c010089c	obj/kernel.asm	/^c010089c:	89 e5                	mov    %esp,%ebp$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01008a1	obj/kernel.asm	/^c01008a1:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c01008a4	obj/kernel.asm	/^c01008a4:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c01008a7	obj/kernel.asm	/^c01008a7:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c01008aa	obj/kernel.asm	/^c01008aa:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c01008ad	obj/kernel.asm	/^c01008ad:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01008b1	obj/kernel.asm	/^c01008b1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	83 e0 03             	and    $0x3,%eax$/;"	l
c01008b7	obj/kernel.asm	/^c01008b7:	89 c2                	mov    %eax,%edx$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	a1 40 6f 15 c0       	mov    0xc0156f40,%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01008c2	obj/kernel.asm	/^c01008c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	c7 04 24 fd 70 11 c0 	movl   $0xc01170fd,(%esp)$/;"	l
c01008cd	obj/kernel.asm	/^c01008cd:	e8 0e 02 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01008d6	obj/kernel.asm	/^c01008d6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01008d9	obj/kernel.asm	/^c01008d9:	a1 40 6f 15 c0       	mov    0xc0156f40,%eax$/;"	l
c01008de	obj/kernel.asm	/^c01008de:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01008e2	obj/kernel.asm	/^c01008e2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	c7 04 24 0b 71 11 c0 	movl   $0xc011710b,(%esp)$/;"	l
c01008ed	obj/kernel.asm	/^c01008ed:	e8 ee 01 00 00       	call   c0100ae0 <cprintf>$/;"	l
c01008f2	obj/kernel.asm	/^c01008f2:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01008f6	obj/kernel.asm	/^c01008f6:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01008f9	obj/kernel.asm	/^c01008f9:	a1 40 6f 15 c0       	mov    0xc0156f40,%eax$/;"	l
c01008fe	obj/kernel.asm	/^c01008fe:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100902	obj/kernel.asm	/^c0100902:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100906	obj/kernel.asm	/^c0100906:	c7 04 24 19 71 11 c0 	movl   $0xc0117119,(%esp)$/;"	l
c010090d	obj/kernel.asm	/^c010090d:	e8 ce 01 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100912	obj/kernel.asm	/^c0100912:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0100916	obj/kernel.asm	/^c0100916:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100919	obj/kernel.asm	/^c0100919:	a1 40 6f 15 c0       	mov    0xc0156f40,%eax$/;"	l
c010091e	obj/kernel.asm	/^c010091e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100922	obj/kernel.asm	/^c0100922:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100926	obj/kernel.asm	/^c0100926:	c7 04 24 27 71 11 c0 	movl   $0xc0117127,(%esp)$/;"	l
c010092d	obj/kernel.asm	/^c010092d:	e8 ae 01 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100932	obj/kernel.asm	/^c0100932:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	a1 40 6f 15 c0       	mov    0xc0156f40,%eax$/;"	l
c010093e	obj/kernel.asm	/^c010093e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100942	obj/kernel.asm	/^c0100942:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100946	obj/kernel.asm	/^c0100946:	c7 04 24 35 71 11 c0 	movl   $0xc0117135,(%esp)$/;"	l
c010094d	obj/kernel.asm	/^c010094d:	e8 8e 01 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100952	obj/kernel.asm	/^c0100952:	a1 40 6f 15 c0       	mov    0xc0156f40,%eax$/;"	l
c0100957	obj/kernel.asm	/^c0100957:	83 c0 01             	add    $0x1,%eax$/;"	l
c010095a	obj/kernel.asm	/^c010095a:	a3 40 6f 15 c0       	mov    %eax,0xc0156f40$/;"	l
c010095f	obj/kernel.asm	/^c010095f:	c9                   	leave  $/;"	l
c0100960	obj/kernel.asm	/^c0100960:	c3                   	ret    $/;"	l
c0100961	obj/kernel.asm	/^c0100961 <lab1_switch_to_user>:$/;"	l
c0100961	obj/kernel.asm	/^c0100961:	55                   	push   %ebp$/;"	l
c0100962	obj/kernel.asm	/^c0100962:	89 e5                	mov    %esp,%ebp$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	5d                   	pop    %ebp$/;"	l
c0100965	obj/kernel.asm	/^c0100965:	c3                   	ret    $/;"	l
c0100966	obj/kernel.asm	/^c0100966 <lab1_switch_to_kernel>:$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	55                   	push   %ebp$/;"	l
c0100967	obj/kernel.asm	/^c0100967:	89 e5                	mov    %esp,%ebp$/;"	l
c0100969	obj/kernel.asm	/^c0100969:	5d                   	pop    %ebp$/;"	l
c010096a	obj/kernel.asm	/^c010096a:	c3                   	ret    $/;"	l
c010096b	obj/kernel.asm	/^c010096b <lab1_switch_test>:$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	55                   	push   %ebp$/;"	l
c010096c	obj/kernel.asm	/^c010096c:	89 e5                	mov    %esp,%ebp$/;"	l
c010096e	obj/kernel.asm	/^c010096e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100971	obj/kernel.asm	/^c0100971:	e8 25 ff ff ff       	call   c010089b <lab1_print_cur_status>$/;"	l
c0100976	obj/kernel.asm	/^c0100976:	c7 04 24 44 71 11 c0 	movl   $0xc0117144,(%esp)$/;"	l
c010097d	obj/kernel.asm	/^c010097d:	e8 5e 01 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100982	obj/kernel.asm	/^c0100982:	e8 da ff ff ff       	call   c0100961 <lab1_switch_to_user>$/;"	l
c0100987	obj/kernel.asm	/^c0100987:	e8 0f ff ff ff       	call   c010089b <lab1_print_cur_status>$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	c7 04 24 64 71 11 c0 	movl   $0xc0117164,(%esp)$/;"	l
c0100993	obj/kernel.asm	/^c0100993:	e8 48 01 00 00       	call   c0100ae0 <cprintf>$/;"	l
c0100998	obj/kernel.asm	/^c0100998:	e8 c9 ff ff ff       	call   c0100966 <lab1_switch_to_kernel>$/;"	l
c010099d	obj/kernel.asm	/^c010099d:	e8 f9 fe ff ff       	call   c010089b <lab1_print_cur_status>$/;"	l
c01009a2	obj/kernel.asm	/^c01009a2:	c9                   	leave  $/;"	l
c01009a3	obj/kernel.asm	/^c01009a3:	c3                   	ret    $/;"	l
c01009a4	obj/kernel.asm	/^c01009a4 <strdup>:$/;"	l
c01009a4	obj/kernel.asm	/^c01009a4:	55                   	push   %ebp$/;"	l
c01009a5	obj/kernel.asm	/^c01009a5:	89 e5                	mov    %esp,%ebp$/;"	l
c01009a7	obj/kernel.asm	/^c01009a7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01009aa	obj/kernel.asm	/^c01009aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01009ad	obj/kernel.asm	/^c01009ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01009b0	obj/kernel.asm	/^c01009b0:	e8 85 59 01 00       	call   c011633a <strlen>$/;"	l
c01009b5	obj/kernel.asm	/^c01009b5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01009b8	obj/kernel.asm	/^c01009b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009bb	obj/kernel.asm	/^c01009bb:	83 c0 01             	add    $0x1,%eax$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01009c1	obj/kernel.asm	/^c01009c1:	e8 22 78 00 00       	call   c01081e8 <kmalloc>$/;"	l
c01009c6	obj/kernel.asm	/^c01009c6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01009c9	obj/kernel.asm	/^c01009c9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	74 24                	je     c01009f3 <strdup+0x4f>$/;"	l
c01009cf	obj/kernel.asm	/^c01009cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009d2	obj/kernel.asm	/^c01009d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01009d9	obj/kernel.asm	/^c01009d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01009dd	obj/kernel.asm	/^c01009dd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01009e0	obj/kernel.asm	/^c01009e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01009e3	obj/kernel.asm	/^c01009e3:	e8 8a 5d 01 00       	call   c0116772 <memcpy>$/;"	l
c01009e8	obj/kernel.asm	/^c01009e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009eb	obj/kernel.asm	/^c01009eb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01009ee	obj/kernel.asm	/^c01009ee:	01 d0                	add    %edx,%eax$/;"	l
c01009f0	obj/kernel.asm	/^c01009f0:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01009f3	obj/kernel.asm	/^c01009f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01009f6	obj/kernel.asm	/^c01009f6:	c9                   	leave  $/;"	l
c01009f7	obj/kernel.asm	/^c01009f7:	c3                   	ret    $/;"	l
c01009f8	obj/kernel.asm	/^c01009f8 <stradd>:$/;"	l
c01009f8	obj/kernel.asm	/^c01009f8:	55                   	push   %ebp$/;"	l
c01009f9	obj/kernel.asm	/^c01009f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01009fb	obj/kernel.asm	/^c01009fb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01009fe	obj/kernel.asm	/^c01009fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a01	obj/kernel.asm	/^c0100a01:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a04	obj/kernel.asm	/^c0100a04:	e8 31 59 01 00       	call   c011633a <strlen>$/;"	l
c0100a09	obj/kernel.asm	/^c0100a09:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100a0c	obj/kernel.asm	/^c0100a0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a0f	obj/kernel.asm	/^c0100a0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a12	obj/kernel.asm	/^c0100a12:	e8 23 59 01 00       	call   c011633a <strlen>$/;"	l
c0100a17	obj/kernel.asm	/^c0100a17:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100a1d	obj/kernel.asm	/^c0100a1d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100a20	obj/kernel.asm	/^c0100a20:	01 d0                	add    %edx,%eax$/;"	l
c0100a22	obj/kernel.asm	/^c0100a22:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a25	obj/kernel.asm	/^c0100a25:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a28	obj/kernel.asm	/^c0100a28:	e8 bb 77 00 00       	call   c01081e8 <kmalloc>$/;"	l
c0100a2d	obj/kernel.asm	/^c0100a2d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100a30	obj/kernel.asm	/^c0100a30:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a33	obj/kernel.asm	/^c0100a33:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100a36	obj/kernel.asm	/^c0100a36:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0100a3a	obj/kernel.asm	/^c0100a3a:	74 44                	je     c0100a80 <stradd+0x88>$/;"	l
c0100a3c	obj/kernel.asm	/^c0100a3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a3f	obj/kernel.asm	/^c0100a3f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100a43	obj/kernel.asm	/^c0100a43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a46	obj/kernel.asm	/^c0100a46:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a4a	obj/kernel.asm	/^c0100a4a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a4d	obj/kernel.asm	/^c0100a4d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a50	obj/kernel.asm	/^c0100a50:	e8 1d 5d 01 00       	call   c0116772 <memcpy>$/;"	l
c0100a55	obj/kernel.asm	/^c0100a55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a58	obj/kernel.asm	/^c0100a58:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0100a5b	obj/kernel.asm	/^c0100a5b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100a5e	obj/kernel.asm	/^c0100a5e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100a62	obj/kernel.asm	/^c0100a62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a65	obj/kernel.asm	/^c0100a65:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100a69	obj/kernel.asm	/^c0100a69:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a6c	obj/kernel.asm	/^c0100a6c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a6f	obj/kernel.asm	/^c0100a6f:	e8 fe 5c 01 00       	call   c0116772 <memcpy>$/;"	l
c0100a74	obj/kernel.asm	/^c0100a74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100a77	obj/kernel.asm	/^c0100a77:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0100a7a	obj/kernel.asm	/^c0100a7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a7d	obj/kernel.asm	/^c0100a7d:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100a80	obj/kernel.asm	/^c0100a80:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100a83	obj/kernel.asm	/^c0100a83:	c9                   	leave  $/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	c3                   	ret    $/;"	l
c0100a85	obj/kernel.asm	/^c0100a85 <cputch>:$/;"	l
c0100a85	obj/kernel.asm	/^c0100a85:	55                   	push   %ebp$/;"	l
c0100a86	obj/kernel.asm	/^c0100a86:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a88	obj/kernel.asm	/^c0100a88:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100a8b	obj/kernel.asm	/^c0100a8b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100a8e	obj/kernel.asm	/^c0100a8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100a91	obj/kernel.asm	/^c0100a91:	e8 86 1d 00 00       	call   c010281c <cons_putc>$/;"	l
c0100a96	obj/kernel.asm	/^c0100a96:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a99	obj/kernel.asm	/^c0100a99:	8b 00                	mov    (%eax),%eax$/;"	l
c0100a9b	obj/kernel.asm	/^c0100a9b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100a9e	obj/kernel.asm	/^c0100a9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100aa1	obj/kernel.asm	/^c0100aa1:	89 10                	mov    %edx,(%eax)$/;"	l
c0100aa3	obj/kernel.asm	/^c0100aa3:	c9                   	leave  $/;"	l
c0100aa4	obj/kernel.asm	/^c0100aa4:	c3                   	ret    $/;"	l
c0100aa5	obj/kernel.asm	/^c0100aa5 <vcprintf>:$/;"	l
c0100aa5	obj/kernel.asm	/^c0100aa5:	55                   	push   %ebp$/;"	l
c0100aa6	obj/kernel.asm	/^c0100aa6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100aa8	obj/kernel.asm	/^c0100aa8:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0100aab	obj/kernel.asm	/^c0100aab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100ab2	obj/kernel.asm	/^c0100ab2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100ab5	obj/kernel.asm	/^c0100ab5:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100ab9	obj/kernel.asm	/^c0100ab9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100abc	obj/kernel.asm	/^c0100abc:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0100ac0	obj/kernel.asm	/^c0100ac0:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100ac3	obj/kernel.asm	/^c0100ac3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	c7 44 24 04 d9 6a ff 	movl   $0xffff6ad9,0x4(%esp)$/;"	l
c0100ace	obj/kernel.asm	/^c0100ace:	ff $/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	c7 04 24 85 0a 10 c0 	movl   $0xc0100a85,(%esp)$/;"	l
c0100ad6	obj/kernel.asm	/^c0100ad6:	e8 23 5f 01 00       	call   c01169fe <vprintfmt>$/;"	l
c0100adb	obj/kernel.asm	/^c0100adb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ade	obj/kernel.asm	/^c0100ade:	c9                   	leave  $/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	c3                   	ret    $/;"	l
c0100ae0	obj/kernel.asm	/^c0100ae0 <cprintf>:$/;"	l
c0100ae0	obj/kernel.asm	/^c0100ae0:	55                   	push   %ebp$/;"	l
c0100ae1	obj/kernel.asm	/^c0100ae1:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ae3	obj/kernel.asm	/^c0100ae3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ae6	obj/kernel.asm	/^c0100ae6:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100ae9	obj/kernel.asm	/^c0100ae9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100aec	obj/kernel.asm	/^c0100aec:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100aef	obj/kernel.asm	/^c0100aef:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100af3	obj/kernel.asm	/^c0100af3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100af6	obj/kernel.asm	/^c0100af6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100af9	obj/kernel.asm	/^c0100af9:	e8 a7 ff ff ff       	call   c0100aa5 <vcprintf>$/;"	l
c0100afe	obj/kernel.asm	/^c0100afe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100b01	obj/kernel.asm	/^c0100b01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b04	obj/kernel.asm	/^c0100b04:	c9                   	leave  $/;"	l
c0100b05	obj/kernel.asm	/^c0100b05:	c3                   	ret    $/;"	l
c0100b06	obj/kernel.asm	/^c0100b06 <cputchar>:$/;"	l
c0100b06	obj/kernel.asm	/^c0100b06:	55                   	push   %ebp$/;"	l
c0100b07	obj/kernel.asm	/^c0100b07:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b09	obj/kernel.asm	/^c0100b09:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100b0c	obj/kernel.asm	/^c0100b0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b0f	obj/kernel.asm	/^c0100b0f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100b12	obj/kernel.asm	/^c0100b12:	e8 05 1d 00 00       	call   c010281c <cons_putc>$/;"	l
c0100b17	obj/kernel.asm	/^c0100b17:	c9                   	leave  $/;"	l
c0100b18	obj/kernel.asm	/^c0100b18:	c3                   	ret    $/;"	l
c0100b19	obj/kernel.asm	/^c0100b19 <cputs>:$/;"	l
c0100b19	obj/kernel.asm	/^c0100b19:	55                   	push   %ebp$/;"	l
c0100b1a	obj/kernel.asm	/^c0100b1a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b1c	obj/kernel.asm	/^c0100b1c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0100b26	obj/kernel.asm	/^c0100b26:	eb 13                	jmp    c0100b3b <cputs+0x22>$/;"	l
c0100b28	obj/kernel.asm	/^c0100b28:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c0100b2c	obj/kernel.asm	/^c0100b2c:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c0100b2f	obj/kernel.asm	/^c0100b2f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0100b33	obj/kernel.asm	/^c0100b33:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100b36	obj/kernel.asm	/^c0100b36:	e8 4a ff ff ff       	call   c0100a85 <cputch>$/;"	l
c0100b3b	obj/kernel.asm	/^c0100b3b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b3e	obj/kernel.asm	/^c0100b3e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b41	obj/kernel.asm	/^c0100b41:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100b44	obj/kernel.asm	/^c0100b44:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b47	obj/kernel.asm	/^c0100b47:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c0100b4a	obj/kernel.asm	/^c0100b4a:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c0100b4e	obj/kernel.asm	/^c0100b4e:	75 d8                	jne    c0100b28 <cputs+0xf>$/;"	l
c0100b50	obj/kernel.asm	/^c0100b50:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0100b53	obj/kernel.asm	/^c0100b53:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b57	obj/kernel.asm	/^c0100b57:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c0100b5e	obj/kernel.asm	/^c0100b5e:	e8 22 ff ff ff       	call   c0100a85 <cputch>$/;"	l
c0100b63	obj/kernel.asm	/^c0100b63:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100b66	obj/kernel.asm	/^c0100b66:	c9                   	leave  $/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	c3                   	ret    $/;"	l
c0100b68	obj/kernel.asm	/^c0100b68 <getchar>:$/;"	l
c0100b68	obj/kernel.asm	/^c0100b68:	55                   	push   %ebp$/;"	l
c0100b69	obj/kernel.asm	/^c0100b69:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b6b	obj/kernel.asm	/^c0100b6b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100b6e	obj/kernel.asm	/^c0100b6e:	e8 e5 1c 00 00       	call   c0102858 <cons_getc>$/;"	l
c0100b73	obj/kernel.asm	/^c0100b73:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100b76	obj/kernel.asm	/^c0100b76:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100b7a	obj/kernel.asm	/^c0100b7a:	74 f2                	je     c0100b6e <getchar+0x6>$/;"	l
c0100b7c	obj/kernel.asm	/^c0100b7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b7f	obj/kernel.asm	/^c0100b7f:	c9                   	leave  $/;"	l
c0100b80	obj/kernel.asm	/^c0100b80:	c3                   	ret    $/;"	l
c0100b81	obj/kernel.asm	/^c0100b81 <readline>:$/;"	l
c0100b81	obj/kernel.asm	/^c0100b81:	55                   	push   %ebp$/;"	l
c0100b82	obj/kernel.asm	/^c0100b82:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b84	obj/kernel.asm	/^c0100b84:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100b87	obj/kernel.asm	/^c0100b87:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	74 13                	je     c0100ba0 <readline+0x1f>$/;"	l
c0100b8d	obj/kernel.asm	/^c0100b8d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b90	obj/kernel.asm	/^c0100b90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100b94	obj/kernel.asm	/^c0100b94:	c7 04 24 83 71 11 c0 	movl   $0xc0117183,(%esp)$/;"	l
c0100b9b	obj/kernel.asm	/^c0100b9b:	e8 40 ff ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100ba7	obj/kernel.asm	/^c0100ba7:	e8 bc ff ff ff       	call   c0100b68 <getchar>$/;"	l
c0100bac	obj/kernel.asm	/^c0100bac:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100baf	obj/kernel.asm	/^c0100baf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100bb3	obj/kernel.asm	/^c0100bb3:	79 07                	jns    c0100bbc <readline+0x3b>$/;"	l
c0100bb5	obj/kernel.asm	/^c0100bb5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100bba	obj/kernel.asm	/^c0100bba:	eb 79                	jmp    c0100c35 <readline+0xb4>$/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0100bc0	obj/kernel.asm	/^c0100bc0:	7e 28                	jle    c0100bea <readline+0x69>$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100bc9	obj/kernel.asm	/^c0100bc9:	7f 1f                	jg     c0100bea <readline+0x69>$/;"	l
c0100bcb	obj/kernel.asm	/^c0100bcb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100bce	obj/kernel.asm	/^c0100bce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100bd1	obj/kernel.asm	/^c0100bd1:	e8 30 ff ff ff       	call   c0100b06 <cputchar>$/;"	l
c0100bd6	obj/kernel.asm	/^c0100bd6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bd9	obj/kernel.asm	/^c0100bd9:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100bdf	obj/kernel.asm	/^c0100bdf:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100be2	obj/kernel.asm	/^c0100be2:	88 90 60 6f 15 c0    	mov    %dl,-0x3fea90a0(%eax)$/;"	l
c0100be8	obj/kernel.asm	/^c0100be8:	eb 46                	jmp    c0100c30 <readline+0xaf>$/;"	l
c0100bea	obj/kernel.asm	/^c0100bea:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c0100bee	obj/kernel.asm	/^c0100bee:	75 17                	jne    c0100c07 <readline+0x86>$/;"	l
c0100bf0	obj/kernel.asm	/^c0100bf0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100bf4	obj/kernel.asm	/^c0100bf4:	7e 11                	jle    c0100c07 <readline+0x86>$/;"	l
c0100bf6	obj/kernel.asm	/^c0100bf6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100bf9	obj/kernel.asm	/^c0100bf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100bfc	obj/kernel.asm	/^c0100bfc:	e8 05 ff ff ff       	call   c0100b06 <cputchar>$/;"	l
c0100c01	obj/kernel.asm	/^c0100c01:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0100c05	obj/kernel.asm	/^c0100c05:	eb 29                	jmp    c0100c30 <readline+0xaf>$/;"	l
c0100c07	obj/kernel.asm	/^c0100c07:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c0100c0b	obj/kernel.asm	/^c0100c0b:	74 06                	je     c0100c13 <readline+0x92>$/;"	l
c0100c0d	obj/kernel.asm	/^c0100c0d:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c0100c11	obj/kernel.asm	/^c0100c11:	75 1d                	jne    c0100c30 <readline+0xaf>$/;"	l
c0100c13	obj/kernel.asm	/^c0100c13:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100c16	obj/kernel.asm	/^c0100c16:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c19	obj/kernel.asm	/^c0100c19:	e8 e8 fe ff ff       	call   c0100b06 <cputchar>$/;"	l
c0100c1e	obj/kernel.asm	/^c0100c1e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c21	obj/kernel.asm	/^c0100c21:	05 60 6f 15 c0       	add    $0xc0156f60,%eax$/;"	l
c0100c26	obj/kernel.asm	/^c0100c26:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100c29	obj/kernel.asm	/^c0100c29:	b8 60 6f 15 c0       	mov    $0xc0156f60,%eax$/;"	l
c0100c2e	obj/kernel.asm	/^c0100c2e:	eb 05                	jmp    c0100c35 <readline+0xb4>$/;"	l
c0100c30	obj/kernel.asm	/^c0100c30:	e9 72 ff ff ff       	jmp    c0100ba7 <readline+0x26>$/;"	l
c0100c35	obj/kernel.asm	/^c0100c35:	c9                   	leave  $/;"	l
c0100c36	obj/kernel.asm	/^c0100c36:	c3                   	ret    $/;"	l
c0100c37	obj/kernel.asm	/^c0100c37 <__panic>:$/;"	l
c0100c37	obj/kernel.asm	/^c0100c37:	55                   	push   %ebp$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c3a	obj/kernel.asm	/^c0100c3a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100c3d	obj/kernel.asm	/^c0100c3d:	a1 60 73 15 c0       	mov    0xc0157360,%eax$/;"	l
c0100c42	obj/kernel.asm	/^c0100c42:	85 c0                	test   %eax,%eax$/;"	l
c0100c44	obj/kernel.asm	/^c0100c44:	74 02                	je     c0100c48 <__panic+0x11>$/;"	l
c0100c46	obj/kernel.asm	/^c0100c46:	eb 48                	jmp    c0100c90 <__panic+0x59>$/;"	l
c0100c48	obj/kernel.asm	/^c0100c48:	c7 05 60 73 15 c0 01 	movl   $0x1,0xc0157360$/;"	l
c0100c4f	obj/kernel.asm	/^c0100c4f:	00 00 00 $/;"	l
c0100c52	obj/kernel.asm	/^c0100c52:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c58	obj/kernel.asm	/^c0100c58:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100c5b	obj/kernel.asm	/^c0100c5b:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100c5f	obj/kernel.asm	/^c0100c5f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c66	obj/kernel.asm	/^c0100c66:	c7 04 24 86 71 11 c0 	movl   $0xc0117186,(%esp)$/;"	l
c0100c6d	obj/kernel.asm	/^c0100c6d:	e8 6e fe ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0100c72	obj/kernel.asm	/^c0100c72:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c75	obj/kernel.asm	/^c0100c75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100c7c	obj/kernel.asm	/^c0100c7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100c7f	obj/kernel.asm	/^c0100c7f:	e8 21 fe ff ff       	call   c0100aa5 <vcprintf>$/;"	l
c0100c84	obj/kernel.asm	/^c0100c84:	c7 04 24 a2 71 11 c0 	movl   $0xc01171a2,(%esp)$/;"	l
c0100c8b	obj/kernel.asm	/^c0100c8b:	e8 50 fe ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0100c90	obj/kernel.asm	/^c0100c90:	e8 f9 1d 00 00       	call   c0102a8e <intr_disable>$/;"	l
c0100c95	obj/kernel.asm	/^c0100c95:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	e8 52 09 00 00       	call   c01015f3 <kmonitor>$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	eb f2                	jmp    c0100c95 <__panic+0x5e>$/;"	l
c0100ca3	obj/kernel.asm	/^c0100ca3 <__warn>:$/;"	l
c0100ca3	obj/kernel.asm	/^c0100ca3:	55                   	push   %ebp$/;"	l
c0100ca4	obj/kernel.asm	/^c0100ca4:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ca6	obj/kernel.asm	/^c0100ca6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100ca9	obj/kernel.asm	/^c0100ca9:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100cac	obj/kernel.asm	/^c0100cac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100caf	obj/kernel.asm	/^c0100caf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100cb2	obj/kernel.asm	/^c0100cb2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100cb6	obj/kernel.asm	/^c0100cb6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cb9	obj/kernel.asm	/^c0100cb9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	c7 04 24 a4 71 11 c0 	movl   $0xc01171a4,(%esp)$/;"	l
c0100cc4	obj/kernel.asm	/^c0100cc4:	e8 17 fe ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0100cc9	obj/kernel.asm	/^c0100cc9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ccc	obj/kernel.asm	/^c0100ccc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100cd0	obj/kernel.asm	/^c0100cd0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100cd3	obj/kernel.asm	/^c0100cd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100cd6	obj/kernel.asm	/^c0100cd6:	e8 ca fd ff ff       	call   c0100aa5 <vcprintf>$/;"	l
c0100cdb	obj/kernel.asm	/^c0100cdb:	c7 04 24 a2 71 11 c0 	movl   $0xc01171a2,(%esp)$/;"	l
c0100ce2	obj/kernel.asm	/^c0100ce2:	e8 f9 fd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0100ce7	obj/kernel.asm	/^c0100ce7:	c9                   	leave  $/;"	l
c0100ce8	obj/kernel.asm	/^c0100ce8:	c3                   	ret    $/;"	l
c0100ce9	obj/kernel.asm	/^c0100ce9 <is_kernel_panic>:$/;"	l
c0100ce9	obj/kernel.asm	/^c0100ce9:	55                   	push   %ebp$/;"	l
c0100cea	obj/kernel.asm	/^c0100cea:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cec	obj/kernel.asm	/^c0100cec:	a1 60 73 15 c0       	mov    0xc0157360,%eax$/;"	l
c0100cf1	obj/kernel.asm	/^c0100cf1:	5d                   	pop    %ebp$/;"	l
c0100cf2	obj/kernel.asm	/^c0100cf2:	c3                   	ret    $/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3 <stab_binsearch>:$/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3:	55                   	push   %ebp$/;"	l
c0100cf4	obj/kernel.asm	/^c0100cf4:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100cf9	obj/kernel.asm	/^c0100cf9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100cfc	obj/kernel.asm	/^c0100cfc:	8b 00                	mov    (%eax),%eax$/;"	l
c0100cfe	obj/kernel.asm	/^c0100cfe:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100d01	obj/kernel.asm	/^c0100d01:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100d04	obj/kernel.asm	/^c0100d04:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d06	obj/kernel.asm	/^c0100d06:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d10	obj/kernel.asm	/^c0100d10:	e9 d2 00 00 00       	jmp    c0100de7 <stab_binsearch+0xf4>$/;"	l
c0100d15	obj/kernel.asm	/^c0100d15:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0100d18	obj/kernel.asm	/^c0100d18:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100d1b	obj/kernel.asm	/^c0100d1b:	01 d0                	add    %edx,%eax$/;"	l
c0100d1d	obj/kernel.asm	/^c0100d1d:	89 c2                	mov    %eax,%edx$/;"	l
c0100d1f	obj/kernel.asm	/^c0100d1f:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c0100d22	obj/kernel.asm	/^c0100d22:	01 d0                	add    %edx,%eax$/;"	l
c0100d24	obj/kernel.asm	/^c0100d24:	d1 f8                	sar    %eax$/;"	d
c0100d26	obj/kernel.asm	/^c0100d26:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100d29	obj/kernel.asm	/^c0100d29:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100d2c	obj/kernel.asm	/^c0100d2c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100d2f	obj/kernel.asm	/^c0100d2f:	eb 04                	jmp    c0100d35 <stab_binsearch+0x42>$/;"	l
c0100d31	obj/kernel.asm	/^c0100d31:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c0100d35	obj/kernel.asm	/^c0100d35:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100d38	obj/kernel.asm	/^c0100d38:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100d3b	obj/kernel.asm	/^c0100d3b:	7c 1f                	jl     c0100d5c <stab_binsearch+0x69>$/;"	l
c0100d3d	obj/kernel.asm	/^c0100d3d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100d40	obj/kernel.asm	/^c0100d40:	89 d0                	mov    %edx,%eax$/;"	l
c0100d42	obj/kernel.asm	/^c0100d42:	01 c0                	add    %eax,%eax$/;"	l
c0100d44	obj/kernel.asm	/^c0100d44:	01 d0                	add    %edx,%eax$/;"	l
c0100d46	obj/kernel.asm	/^c0100d46:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d49	obj/kernel.asm	/^c0100d49:	89 c2                	mov    %eax,%edx$/;"	l
c0100d4b	obj/kernel.asm	/^c0100d4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d4e	obj/kernel.asm	/^c0100d4e:	01 d0                	add    %edx,%eax$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100d54	obj/kernel.asm	/^c0100d54:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100d57	obj/kernel.asm	/^c0100d57:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100d5a	obj/kernel.asm	/^c0100d5a:	75 d5                	jne    c0100d31 <stab_binsearch+0x3e>$/;"	l
c0100d5c	obj/kernel.asm	/^c0100d5c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100d5f	obj/kernel.asm	/^c0100d5f:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100d62	obj/kernel.asm	/^c0100d62:	7d 0b                	jge    c0100d6f <stab_binsearch+0x7c>$/;"	l
c0100d64	obj/kernel.asm	/^c0100d64:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100d6d	obj/kernel.asm	/^c0100d6d:	eb 78                	jmp    c0100de7 <stab_binsearch+0xf4>$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0100d76	obj/kernel.asm	/^c0100d76:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100d79	obj/kernel.asm	/^c0100d79:	89 d0                	mov    %edx,%eax$/;"	l
c0100d7b	obj/kernel.asm	/^c0100d7b:	01 c0                	add    %eax,%eax$/;"	l
c0100d7d	obj/kernel.asm	/^c0100d7d:	01 d0                	add    %edx,%eax$/;"	l
c0100d7f	obj/kernel.asm	/^c0100d7f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d82	obj/kernel.asm	/^c0100d82:	89 c2                	mov    %eax,%edx$/;"	l
c0100d84	obj/kernel.asm	/^c0100d84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d87	obj/kernel.asm	/^c0100d87:	01 d0                	add    %edx,%eax$/;"	l
c0100d89	obj/kernel.asm	/^c0100d89:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100d8c	obj/kernel.asm	/^c0100d8c:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100d8f	obj/kernel.asm	/^c0100d8f:	73 13                	jae    c0100da4 <stab_binsearch+0xb1>$/;"	l
c0100d91	obj/kernel.asm	/^c0100d91:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100d94	obj/kernel.asm	/^c0100d94:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100d97	obj/kernel.asm	/^c0100d97:	89 10                	mov    %edx,(%eax)$/;"	l
c0100d99	obj/kernel.asm	/^c0100d99:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100d9c	obj/kernel.asm	/^c0100d9c:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100d9f	obj/kernel.asm	/^c0100d9f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100da2	obj/kernel.asm	/^c0100da2:	eb 43                	jmp    c0100de7 <stab_binsearch+0xf4>$/;"	l
c0100da4	obj/kernel.asm	/^c0100da4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100da7	obj/kernel.asm	/^c0100da7:	89 d0                	mov    %edx,%eax$/;"	l
c0100da9	obj/kernel.asm	/^c0100da9:	01 c0                	add    %eax,%eax$/;"	l
c0100dab	obj/kernel.asm	/^c0100dab:	01 d0                	add    %edx,%eax$/;"	l
c0100dad	obj/kernel.asm	/^c0100dad:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100db0	obj/kernel.asm	/^c0100db0:	89 c2                	mov    %eax,%edx$/;"	l
c0100db2	obj/kernel.asm	/^c0100db2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100db5	obj/kernel.asm	/^c0100db5:	01 d0                	add    %edx,%eax$/;"	l
c0100db7	obj/kernel.asm	/^c0100db7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100dba	obj/kernel.asm	/^c0100dba:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100dbd	obj/kernel.asm	/^c0100dbd:	76 16                	jbe    c0100dd5 <stab_binsearch+0xe2>$/;"	l
c0100dbf	obj/kernel.asm	/^c0100dbf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100dc2	obj/kernel.asm	/^c0100dc2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0100dc5	obj/kernel.asm	/^c0100dc5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8:	89 10                	mov    %edx,(%eax)$/;"	l
c0100dca	obj/kernel.asm	/^c0100dca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100dcd	obj/kernel.asm	/^c0100dcd:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100dd0	obj/kernel.asm	/^c0100dd0:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0100dd3	obj/kernel.asm	/^c0100dd3:	eb 12                	jmp    c0100de7 <stab_binsearch+0xf4>$/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100dd8	obj/kernel.asm	/^c0100dd8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	89 10                	mov    %edx,(%eax)$/;"	l
c0100ddd	obj/kernel.asm	/^c0100ddd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100de3	obj/kernel.asm	/^c0100de3:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c0100de7	obj/kernel.asm	/^c0100de7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100dea	obj/kernel.asm	/^c0100dea:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0100ded	obj/kernel.asm	/^c0100ded:	0f 8e 22 ff ff ff    	jle    c0100d15 <stab_binsearch+0x22>$/;"	l
c0100df3	obj/kernel.asm	/^c0100df3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100df7	obj/kernel.asm	/^c0100df7:	75 0f                	jne    c0100e08 <stab_binsearch+0x115>$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100dfc	obj/kernel.asm	/^c0100dfc:	8b 00                	mov    (%eax),%eax$/;"	l
c0100dfe	obj/kernel.asm	/^c0100dfe:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0100e01	obj/kernel.asm	/^c0100e01:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100e04	obj/kernel.asm	/^c0100e04:	89 10                	mov    %edx,(%eax)$/;"	l
c0100e06	obj/kernel.asm	/^c0100e06:	eb 3f                	jmp    c0100e47 <stab_binsearch+0x154>$/;"	l
c0100e08	obj/kernel.asm	/^c0100e08:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100e0b	obj/kernel.asm	/^c0100e0b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100e0d	obj/kernel.asm	/^c0100e0d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100e10	obj/kernel.asm	/^c0100e10:	eb 04                	jmp    c0100e16 <stab_binsearch+0x123>$/;"	l
c0100e12	obj/kernel.asm	/^c0100e12:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e19	obj/kernel.asm	/^c0100e19:	8b 00                	mov    (%eax),%eax$/;"	l
c0100e1b	obj/kernel.asm	/^c0100e1b:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100e1e	obj/kernel.asm	/^c0100e1e:	7d 1f                	jge    c0100e3f <stab_binsearch+0x14c>$/;"	l
c0100e20	obj/kernel.asm	/^c0100e20:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100e23	obj/kernel.asm	/^c0100e23:	89 d0                	mov    %edx,%eax$/;"	l
c0100e25	obj/kernel.asm	/^c0100e25:	01 c0                	add    %eax,%eax$/;"	l
c0100e27	obj/kernel.asm	/^c0100e27:	01 d0                	add    %edx,%eax$/;"	l
c0100e29	obj/kernel.asm	/^c0100e29:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e2c	obj/kernel.asm	/^c0100e2c:	89 c2                	mov    %eax,%edx$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e31	obj/kernel.asm	/^c0100e31:	01 d0                	add    %edx,%eax$/;"	l
c0100e33	obj/kernel.asm	/^c0100e33:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100e37	obj/kernel.asm	/^c0100e37:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e3a	obj/kernel.asm	/^c0100e3a:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100e3d	obj/kernel.asm	/^c0100e3d:	75 d3                	jne    c0100e12 <stab_binsearch+0x11f>$/;"	l
c0100e3f	obj/kernel.asm	/^c0100e3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e42	obj/kernel.asm	/^c0100e42:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0100e45	obj/kernel.asm	/^c0100e45:	89 10                	mov    %edx,(%eax)$/;"	l
c0100e47	obj/kernel.asm	/^c0100e47:	c9                   	leave  $/;"	l
c0100e48	obj/kernel.asm	/^c0100e48:	c3                   	ret    $/;"	l
c0100e49	obj/kernel.asm	/^c0100e49 <debuginfo_eip>:$/;"	l
c0100e49	obj/kernel.asm	/^c0100e49:	55                   	push   %ebp$/;"	l
c0100e4a	obj/kernel.asm	/^c0100e4a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e4c	obj/kernel.asm	/^c0100e4c:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100e4f	obj/kernel.asm	/^c0100e4f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e52	obj/kernel.asm	/^c0100e52:	c7 00 c4 71 11 c0    	movl   $0xc01171c4,(%eax)$/;"	l
c0100e58	obj/kernel.asm	/^c0100e58:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100e62	obj/kernel.asm	/^c0100e62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e65	obj/kernel.asm	/^c0100e65:	c7 40 08 c4 71 11 c0 	movl   $0xc01171c4,0x8(%eax)$/;"	l
c0100e6c	obj/kernel.asm	/^c0100e6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e6f	obj/kernel.asm	/^c0100e6f:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c0100e76	obj/kernel.asm	/^c0100e76:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100e7c	obj/kernel.asm	/^c0100e7c:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100e7f	obj/kernel.asm	/^c0100e7f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100e82	obj/kernel.asm	/^c0100e82:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0100e89	obj/kernel.asm	/^c0100e89:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100e90	obj/kernel.asm	/^c0100e90:	76 21                	jbe    c0100eb3 <debuginfo_eip+0x6a>$/;"	l
c0100e92	obj/kernel.asm	/^c0100e92:	c7 45 f4 00 b9 11 c0 	movl   $0xc011b900,-0xc(%ebp)$/;"	l
c0100e99	obj/kernel.asm	/^c0100e99:	c7 45 f0 58 31 14 c0 	movl   $0xc0143158,-0x10(%ebp)$/;"	l
c0100ea0	obj/kernel.asm	/^c0100ea0:	c7 45 ec 59 31 14 c0 	movl   $0xc0143159,-0x14(%ebp)$/;"	l
c0100ea7	obj/kernel.asm	/^c0100ea7:	c7 45 e8 91 14 15 c0 	movl   $0xc0151491,-0x18(%ebp)$/;"	l
c0100eae	obj/kernel.asm	/^c0100eae:	e9 ea 00 00 00       	jmp    c0100f9d <debuginfo_eip+0x154>$/;"	l
c0100eb3	obj/kernel.asm	/^c0100eb3:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c0100eba	obj/kernel.asm	/^c0100eba:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0100ebf	obj/kernel.asm	/^c0100ebf:	85 c0                	test   %eax,%eax$/;"	l
c0100ec1	obj/kernel.asm	/^c0100ec1:	74 11                	je     c0100ed4 <debuginfo_eip+0x8b>$/;"	l
c0100ec3	obj/kernel.asm	/^c0100ec3:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0100ecb	obj/kernel.asm	/^c0100ecb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100ece	obj/kernel.asm	/^c0100ece:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0100ed2	obj/kernel.asm	/^c0100ed2:	75 0a                	jne    c0100ede <debuginfo_eip+0x95>$/;"	l
c0100ed4	obj/kernel.asm	/^c0100ed4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100ed9	obj/kernel.asm	/^c0100ed9:	e9 9e 03 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c0100ede	obj/kernel.asm	/^c0100ede:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100ee1	obj/kernel.asm	/^c0100ee1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100ee8	obj/kernel.asm	/^c0100ee8:	00 $/;"	l
c0100ee9	obj/kernel.asm	/^c0100ee9:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c0100ef0	obj/kernel.asm	/^c0100ef0:	00 $/;"	l
c0100ef1	obj/kernel.asm	/^c0100ef1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ef5	obj/kernel.asm	/^c0100ef5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100ef8	obj/kernel.asm	/^c0100ef8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100efb	obj/kernel.asm	/^c0100efb:	e8 ba 6a 00 00       	call   c01079ba <user_mem_check>$/;"	l
c0100f00	obj/kernel.asm	/^c0100f00:	85 c0                	test   %eax,%eax$/;"	l
c0100f02	obj/kernel.asm	/^c0100f02:	75 0a                	jne    c0100f0e <debuginfo_eip+0xc5>$/;"	l
c0100f04	obj/kernel.asm	/^c0100f04:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100f09	obj/kernel.asm	/^c0100f09:	e9 6e 03 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c0100f0e	obj/kernel.asm	/^c0100f0e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f11	obj/kernel.asm	/^c0100f11:	8b 00                	mov    (%eax),%eax$/;"	l
c0100f13	obj/kernel.asm	/^c0100f13:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100f16	obj/kernel.asm	/^c0100f16:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f19	obj/kernel.asm	/^c0100f19:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0100f1c	obj/kernel.asm	/^c0100f1c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f1f	obj/kernel.asm	/^c0100f1f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f22	obj/kernel.asm	/^c0100f22:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100f25	obj/kernel.asm	/^c0100f25:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0100f28	obj/kernel.asm	/^c0100f28:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f2b	obj/kernel.asm	/^c0100f2b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0100f2e	obj/kernel.asm	/^c0100f2e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0100f31	obj/kernel.asm	/^c0100f31:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f37	obj/kernel.asm	/^c0100f37:	29 c2                	sub    %eax,%edx$/;"	l
c0100f39	obj/kernel.asm	/^c0100f39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100f3c	obj/kernel.asm	/^c0100f3c:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100f43	obj/kernel.asm	/^c0100f43:	00 $/;"	l
c0100f44	obj/kernel.asm	/^c0100f44:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100f48	obj/kernel.asm	/^c0100f48:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f4c	obj/kernel.asm	/^c0100f4c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f4f	obj/kernel.asm	/^c0100f4f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f52	obj/kernel.asm	/^c0100f52:	e8 63 6a 00 00       	call   c01079ba <user_mem_check>$/;"	l
c0100f57	obj/kernel.asm	/^c0100f57:	85 c0                	test   %eax,%eax$/;"	l
c0100f59	obj/kernel.asm	/^c0100f59:	75 0a                	jne    c0100f65 <debuginfo_eip+0x11c>$/;"	l
c0100f5b	obj/kernel.asm	/^c0100f5b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100f60	obj/kernel.asm	/^c0100f60:	e9 17 03 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c0100f65	obj/kernel.asm	/^c0100f65:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0100f68	obj/kernel.asm	/^c0100f68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100f6b	obj/kernel.asm	/^c0100f6b:	29 c2                	sub    %eax,%edx$/;"	l
c0100f6d	obj/kernel.asm	/^c0100f6d:	89 d0                	mov    %edx,%eax$/;"	l
c0100f6f	obj/kernel.asm	/^c0100f6f:	89 c2                	mov    %eax,%edx$/;"	l
c0100f71	obj/kernel.asm	/^c0100f71:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100f74	obj/kernel.asm	/^c0100f74:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0100f7b	obj/kernel.asm	/^c0100f7b:	00 $/;"	l
c0100f7c	obj/kernel.asm	/^c0100f7c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0100f80	obj/kernel.asm	/^c0100f80:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f87	obj/kernel.asm	/^c0100f87:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100f8a	obj/kernel.asm	/^c0100f8a:	e8 2b 6a 00 00       	call   c01079ba <user_mem_check>$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	85 c0                	test   %eax,%eax$/;"	l
c0100f91	obj/kernel.asm	/^c0100f91:	75 0a                	jne    c0100f9d <debuginfo_eip+0x154>$/;"	l
c0100f93	obj/kernel.asm	/^c0100f93:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100f98	obj/kernel.asm	/^c0100f98:	e9 df 02 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c0100f9d	obj/kernel.asm	/^c0100f9d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100fa0	obj/kernel.asm	/^c0100fa0:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100fa3	obj/kernel.asm	/^c0100fa3:	76 0d                	jbe    c0100fb2 <debuginfo_eip+0x169>$/;"	l
c0100fa5	obj/kernel.asm	/^c0100fa5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100fa8	obj/kernel.asm	/^c0100fa8:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100fab	obj/kernel.asm	/^c0100fab:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100fae	obj/kernel.asm	/^c0100fae:	84 c0                	test   %al,%al$/;"	l
c0100fb0	obj/kernel.asm	/^c0100fb0:	74 0a                	je     c0100fbc <debuginfo_eip+0x173>$/;"	l
c0100fb2	obj/kernel.asm	/^c0100fb2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100fb7	obj/kernel.asm	/^c0100fb7:	e9 c0 02 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c0100fbc	obj/kernel.asm	/^c0100fbc:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0100fc3	obj/kernel.asm	/^c0100fc3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100fc6	obj/kernel.asm	/^c0100fc6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100fc9	obj/kernel.asm	/^c0100fc9:	29 c2                	sub    %eax,%edx$/;"	l
c0100fcb	obj/kernel.asm	/^c0100fcb:	89 d0                	mov    %edx,%eax$/;"	l
c0100fcd	obj/kernel.asm	/^c0100fcd:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0100fd0	obj/kernel.asm	/^c0100fd0:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c0100fd6	obj/kernel.asm	/^c0100fd6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100fd9	obj/kernel.asm	/^c0100fd9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100fdc	obj/kernel.asm	/^c0100fdc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100fdf	obj/kernel.asm	/^c0100fdf:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0100fe3	obj/kernel.asm	/^c0100fe3:	c7 44 24 0c 64 00 00 	movl   $0x64,0xc(%esp)$/;"	l
c0100fea	obj/kernel.asm	/^c0100fea:	00 $/;"	l
c0100feb	obj/kernel.asm	/^c0100feb:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0100fee	obj/kernel.asm	/^c0100fee:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0100ff2	obj/kernel.asm	/^c0100ff2:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100ff5	obj/kernel.asm	/^c0100ff5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0100ff9	obj/kernel.asm	/^c0100ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ffc	obj/kernel.asm	/^c0100ffc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0100fff	obj/kernel.asm	/^c0100fff:	e8 ef fc ff ff       	call   c0100cf3 <stab_binsearch>$/;"	l
c0101004	obj/kernel.asm	/^c0101004:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101007	obj/kernel.asm	/^c0101007:	85 c0                	test   %eax,%eax$/;"	l
c0101009	obj/kernel.asm	/^c0101009:	75 0a                	jne    c0101015 <debuginfo_eip+0x1cc>$/;"	l
c010100b	obj/kernel.asm	/^c010100b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101010	obj/kernel.asm	/^c0101010:	e9 67 02 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c0101015	obj/kernel.asm	/^c0101015:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101018	obj/kernel.asm	/^c0101018:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010101e	obj/kernel.asm	/^c010101e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101021	obj/kernel.asm	/^c0101021:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101024	obj/kernel.asm	/^c0101024:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0101028	obj/kernel.asm	/^c0101028:	c7 44 24 0c 24 00 00 	movl   $0x24,0xc(%esp)$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	00 $/;"	l
c0101030	obj/kernel.asm	/^c0101030:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0101033	obj/kernel.asm	/^c0101033:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0101037	obj/kernel.asm	/^c0101037:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010103a	obj/kernel.asm	/^c010103a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010103e	obj/kernel.asm	/^c010103e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101041	obj/kernel.asm	/^c0101041:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	e8 aa fc ff ff       	call   c0100cf3 <stab_binsearch>$/;"	l
c0101049	obj/kernel.asm	/^c0101049:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010104c	obj/kernel.asm	/^c010104c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010104f	obj/kernel.asm	/^c010104f:	39 c2                	cmp    %eax,%edx$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	7f 7c                	jg     c01010cf <debuginfo_eip+0x286>$/;"	l
c0101053	obj/kernel.asm	/^c0101053:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0101056	obj/kernel.asm	/^c0101056:	89 c2                	mov    %eax,%edx$/;"	l
c0101058	obj/kernel.asm	/^c0101058:	89 d0                	mov    %edx,%eax$/;"	l
c010105a	obj/kernel.asm	/^c010105a:	01 c0                	add    %eax,%eax$/;"	l
c010105c	obj/kernel.asm	/^c010105c:	01 d0                	add    %edx,%eax$/;"	l
c010105e	obj/kernel.asm	/^c010105e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101061	obj/kernel.asm	/^c0101061:	89 c2                	mov    %eax,%edx$/;"	l
c0101063	obj/kernel.asm	/^c0101063:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101066	obj/kernel.asm	/^c0101066:	01 d0                	add    %edx,%eax$/;"	l
c0101068	obj/kernel.asm	/^c0101068:	8b 10                	mov    (%eax),%edx$/;"	l
c010106a	obj/kernel.asm	/^c010106a:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010106d	obj/kernel.asm	/^c010106d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101070	obj/kernel.asm	/^c0101070:	29 c1                	sub    %eax,%ecx$/;"	l
c0101072	obj/kernel.asm	/^c0101072:	89 c8                	mov    %ecx,%eax$/;"	l
c0101074	obj/kernel.asm	/^c0101074:	39 c2                	cmp    %eax,%edx$/;"	l
c0101076	obj/kernel.asm	/^c0101076:	73 22                	jae    c010109a <debuginfo_eip+0x251>$/;"	l
c0101078	obj/kernel.asm	/^c0101078:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010107b	obj/kernel.asm	/^c010107b:	89 c2                	mov    %eax,%edx$/;"	l
c010107d	obj/kernel.asm	/^c010107d:	89 d0                	mov    %edx,%eax$/;"	l
c010107f	obj/kernel.asm	/^c010107f:	01 c0                	add    %eax,%eax$/;"	l
c0101081	obj/kernel.asm	/^c0101081:	01 d0                	add    %edx,%eax$/;"	l
c0101083	obj/kernel.asm	/^c0101083:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101086	obj/kernel.asm	/^c0101086:	89 c2                	mov    %eax,%edx$/;"	l
c0101088	obj/kernel.asm	/^c0101088:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010108b	obj/kernel.asm	/^c010108b:	01 d0                	add    %edx,%eax$/;"	l
c010108d	obj/kernel.asm	/^c010108d:	8b 10                	mov    (%eax),%edx$/;"	l
c010108f	obj/kernel.asm	/^c010108f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101092	obj/kernel.asm	/^c0101092:	01 c2                	add    %eax,%edx$/;"	l
c0101094	obj/kernel.asm	/^c0101094:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101097	obj/kernel.asm	/^c0101097:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010109a	obj/kernel.asm	/^c010109a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010109d	obj/kernel.asm	/^c010109d:	89 c2                	mov    %eax,%edx$/;"	l
c010109f	obj/kernel.asm	/^c010109f:	89 d0                	mov    %edx,%eax$/;"	l
c01010a1	obj/kernel.asm	/^c01010a1:	01 c0                	add    %eax,%eax$/;"	l
c01010a3	obj/kernel.asm	/^c01010a3:	01 d0                	add    %edx,%eax$/;"	l
c01010a5	obj/kernel.asm	/^c01010a5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	89 c2                	mov    %eax,%edx$/;"	l
c01010aa	obj/kernel.asm	/^c01010aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01010ad	obj/kernel.asm	/^c01010ad:	01 d0                	add    %edx,%eax$/;"	l
c01010af	obj/kernel.asm	/^c01010af:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01010b2	obj/kernel.asm	/^c01010b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01010b5	obj/kernel.asm	/^c01010b5:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01010b8	obj/kernel.asm	/^c01010b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01010bb	obj/kernel.asm	/^c01010bb:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01010be	obj/kernel.asm	/^c01010be:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c01010c1	obj/kernel.asm	/^c01010c1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01010c7	obj/kernel.asm	/^c01010c7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01010ca	obj/kernel.asm	/^c01010ca:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01010cd	obj/kernel.asm	/^c01010cd:	eb 15                	jmp    c01010e4 <debuginfo_eip+0x29b>$/;"	l
c01010cf	obj/kernel.asm	/^c01010cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01010d2	obj/kernel.asm	/^c01010d2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01010d5	obj/kernel.asm	/^c01010d5:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01010d8	obj/kernel.asm	/^c01010d8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01010db	obj/kernel.asm	/^c01010db:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01010de	obj/kernel.asm	/^c01010de:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01010e4	obj/kernel.asm	/^c01010e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01010e7	obj/kernel.asm	/^c01010e7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01010ea	obj/kernel.asm	/^c01010ea:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c01010f1	obj/kernel.asm	/^c01010f1:	00 $/;"	l
c01010f2	obj/kernel.asm	/^c01010f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01010f5	obj/kernel.asm	/^c01010f5:	e8 0a 54 01 00       	call   c0116504 <strfind>$/;"	l
c01010fa	obj/kernel.asm	/^c01010fa:	89 c2                	mov    %eax,%edx$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01010ff	obj/kernel.asm	/^c01010ff:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101102	obj/kernel.asm	/^c0101102:	29 c2                	sub    %eax,%edx$/;"	l
c0101104	obj/kernel.asm	/^c0101104:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101107	obj/kernel.asm	/^c0101107:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010110a	obj/kernel.asm	/^c010110a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010110d	obj/kernel.asm	/^c010110d:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0101111	obj/kernel.asm	/^c0101111:	c7 44 24 0c 44 00 00 	movl   $0x44,0xc(%esp)$/;"	l
c0101118	obj/kernel.asm	/^c0101118:	00 $/;"	l
c0101119	obj/kernel.asm	/^c0101119:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c010111c	obj/kernel.asm	/^c010111c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0101120	obj/kernel.asm	/^c0101120:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0101123	obj/kernel.asm	/^c0101123:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101127	obj/kernel.asm	/^c0101127:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010112d	obj/kernel.asm	/^c010112d:	e8 c1 fb ff ff       	call   c0100cf3 <stab_binsearch>$/;"	l
c0101132	obj/kernel.asm	/^c0101132:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0101135	obj/kernel.asm	/^c0101135:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101138	obj/kernel.asm	/^c0101138:	39 c2                	cmp    %eax,%edx$/;"	l
c010113a	obj/kernel.asm	/^c010113a:	7f 24                	jg     c0101160 <debuginfo_eip+0x317>$/;"	l
c010113c	obj/kernel.asm	/^c010113c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010113f	obj/kernel.asm	/^c010113f:	89 c2                	mov    %eax,%edx$/;"	l
c0101141	obj/kernel.asm	/^c0101141:	89 d0                	mov    %edx,%eax$/;"	l
c0101143	obj/kernel.asm	/^c0101143:	01 c0                	add    %eax,%eax$/;"	l
c0101145	obj/kernel.asm	/^c0101145:	01 d0                	add    %edx,%eax$/;"	l
c0101147	obj/kernel.asm	/^c0101147:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010114a	obj/kernel.asm	/^c010114a:	89 c2                	mov    %eax,%edx$/;"	l
c010114c	obj/kernel.asm	/^c010114c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010114f	obj/kernel.asm	/^c010114f:	01 d0                	add    %edx,%eax$/;"	l
c0101151	obj/kernel.asm	/^c0101151:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0101155	obj/kernel.asm	/^c0101155:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0101158	obj/kernel.asm	/^c0101158:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010115b	obj/kernel.asm	/^c010115b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010115e	obj/kernel.asm	/^c010115e:	eb 13                	jmp    c0101173 <debuginfo_eip+0x32a>$/;"	l
c0101160	obj/kernel.asm	/^c0101160:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101165	obj/kernel.asm	/^c0101165:	e9 12 01 00 00       	jmp    c010127c <debuginfo_eip+0x433>$/;"	l
c010116a	obj/kernel.asm	/^c010116a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010116d	obj/kernel.asm	/^c010116d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101170	obj/kernel.asm	/^c0101170:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101173	obj/kernel.asm	/^c0101173:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0101176	obj/kernel.asm	/^c0101176:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101179	obj/kernel.asm	/^c0101179:	39 c2                	cmp    %eax,%edx$/;"	l
c010117b	obj/kernel.asm	/^c010117b:	7c 56                	jl     c01011d3 <debuginfo_eip+0x38a>$/;"	l
c010117d	obj/kernel.asm	/^c010117d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0101180	obj/kernel.asm	/^c0101180:	89 c2                	mov    %eax,%edx$/;"	l
c0101182	obj/kernel.asm	/^c0101182:	89 d0                	mov    %edx,%eax$/;"	l
c0101184	obj/kernel.asm	/^c0101184:	01 c0                	add    %eax,%eax$/;"	l
c0101186	obj/kernel.asm	/^c0101186:	01 d0                	add    %edx,%eax$/;"	l
c0101188	obj/kernel.asm	/^c0101188:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010118b	obj/kernel.asm	/^c010118b:	89 c2                	mov    %eax,%edx$/;"	l
c010118d	obj/kernel.asm	/^c010118d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101190	obj/kernel.asm	/^c0101190:	01 d0                	add    %edx,%eax$/;"	l
c0101192	obj/kernel.asm	/^c0101192:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	3c 84                	cmp    $0x84,%al$/;"	l
c0101198	obj/kernel.asm	/^c0101198:	74 39                	je     c01011d3 <debuginfo_eip+0x38a>$/;"	l
c010119a	obj/kernel.asm	/^c010119a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010119d	obj/kernel.asm	/^c010119d:	89 c2                	mov    %eax,%edx$/;"	l
c010119f	obj/kernel.asm	/^c010119f:	89 d0                	mov    %edx,%eax$/;"	l
c01011a1	obj/kernel.asm	/^c01011a1:	01 c0                	add    %eax,%eax$/;"	l
c01011a3	obj/kernel.asm	/^c01011a3:	01 d0                	add    %edx,%eax$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01011a8	obj/kernel.asm	/^c01011a8:	89 c2                	mov    %eax,%edx$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01011ad	obj/kernel.asm	/^c01011ad:	01 d0                	add    %edx,%eax$/;"	l
c01011af	obj/kernel.asm	/^c01011af:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01011b3	obj/kernel.asm	/^c01011b3:	3c 64                	cmp    $0x64,%al$/;"	l
c01011b5	obj/kernel.asm	/^c01011b5:	75 b3                	jne    c010116a <debuginfo_eip+0x321>$/;"	l
c01011b7	obj/kernel.asm	/^c01011b7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01011ba	obj/kernel.asm	/^c01011ba:	89 c2                	mov    %eax,%edx$/;"	l
c01011bc	obj/kernel.asm	/^c01011bc:	89 d0                	mov    %edx,%eax$/;"	l
c01011be	obj/kernel.asm	/^c01011be:	01 c0                	add    %eax,%eax$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	01 d0                	add    %edx,%eax$/;"	l
c01011c2	obj/kernel.asm	/^c01011c2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01011c5	obj/kernel.asm	/^c01011c5:	89 c2                	mov    %eax,%edx$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01011ca	obj/kernel.asm	/^c01011ca:	01 d0                	add    %edx,%eax$/;"	l
c01011cc	obj/kernel.asm	/^c01011cc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01011cf	obj/kernel.asm	/^c01011cf:	85 c0                	test   %eax,%eax$/;"	l
c01011d1	obj/kernel.asm	/^c01011d1:	74 97                	je     c010116a <debuginfo_eip+0x321>$/;"	l
c01011d3	obj/kernel.asm	/^c01011d3:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01011d6	obj/kernel.asm	/^c01011d6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01011d9	obj/kernel.asm	/^c01011d9:	39 c2                	cmp    %eax,%edx$/;"	l
c01011db	obj/kernel.asm	/^c01011db:	7c 46                	jl     c0101223 <debuginfo_eip+0x3da>$/;"	l
c01011dd	obj/kernel.asm	/^c01011dd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01011e0	obj/kernel.asm	/^c01011e0:	89 c2                	mov    %eax,%edx$/;"	l
c01011e2	obj/kernel.asm	/^c01011e2:	89 d0                	mov    %edx,%eax$/;"	l
c01011e4	obj/kernel.asm	/^c01011e4:	01 c0                	add    %eax,%eax$/;"	l
c01011e6	obj/kernel.asm	/^c01011e6:	01 d0                	add    %edx,%eax$/;"	l
c01011e8	obj/kernel.asm	/^c01011e8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01011eb	obj/kernel.asm	/^c01011eb:	89 c2                	mov    %eax,%edx$/;"	l
c01011ed	obj/kernel.asm	/^c01011ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01011f0	obj/kernel.asm	/^c01011f0:	01 d0                	add    %edx,%eax$/;"	l
c01011f2	obj/kernel.asm	/^c01011f2:	8b 10                	mov    (%eax),%edx$/;"	l
c01011f4	obj/kernel.asm	/^c01011f4:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01011f7	obj/kernel.asm	/^c01011f7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011fa	obj/kernel.asm	/^c01011fa:	29 c1                	sub    %eax,%ecx$/;"	l
c01011fc	obj/kernel.asm	/^c01011fc:	89 c8                	mov    %ecx,%eax$/;"	l
c01011fe	obj/kernel.asm	/^c01011fe:	39 c2                	cmp    %eax,%edx$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	73 21                	jae    c0101223 <debuginfo_eip+0x3da>$/;"	l
c0101202	obj/kernel.asm	/^c0101202:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0101205	obj/kernel.asm	/^c0101205:	89 c2                	mov    %eax,%edx$/;"	l
c0101207	obj/kernel.asm	/^c0101207:	89 d0                	mov    %edx,%eax$/;"	l
c0101209	obj/kernel.asm	/^c0101209:	01 c0                	add    %eax,%eax$/;"	l
c010120b	obj/kernel.asm	/^c010120b:	01 d0                	add    %edx,%eax$/;"	l
c010120d	obj/kernel.asm	/^c010120d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101210	obj/kernel.asm	/^c0101210:	89 c2                	mov    %eax,%edx$/;"	l
c0101212	obj/kernel.asm	/^c0101212:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101215	obj/kernel.asm	/^c0101215:	01 d0                	add    %edx,%eax$/;"	l
c0101217	obj/kernel.asm	/^c0101217:	8b 10                	mov    (%eax),%edx$/;"	l
c0101219	obj/kernel.asm	/^c0101219:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010121c	obj/kernel.asm	/^c010121c:	01 c2                	add    %eax,%edx$/;"	l
c010121e	obj/kernel.asm	/^c010121e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101221	obj/kernel.asm	/^c0101221:	89 10                	mov    %edx,(%eax)$/;"	l
c0101223	obj/kernel.asm	/^c0101223:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0101226	obj/kernel.asm	/^c0101226:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0101229	obj/kernel.asm	/^c0101229:	39 c2                	cmp    %eax,%edx$/;"	l
c010122b	obj/kernel.asm	/^c010122b:	7d 4a                	jge    c0101277 <debuginfo_eip+0x42e>$/;"	l
c010122d	obj/kernel.asm	/^c010122d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0101230	obj/kernel.asm	/^c0101230:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101233	obj/kernel.asm	/^c0101233:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101236	obj/kernel.asm	/^c0101236:	eb 18                	jmp    c0101250 <debuginfo_eip+0x407>$/;"	l
c0101238	obj/kernel.asm	/^c0101238:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010123b	obj/kernel.asm	/^c010123b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010123e	obj/kernel.asm	/^c010123e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101241	obj/kernel.asm	/^c0101241:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101244	obj/kernel.asm	/^c0101244:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0101247	obj/kernel.asm	/^c0101247:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010124a	obj/kernel.asm	/^c010124a:	83 c0 01             	add    $0x1,%eax$/;"	l
c010124d	obj/kernel.asm	/^c010124d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101250	obj/kernel.asm	/^c0101250:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0101253	obj/kernel.asm	/^c0101253:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0101256	obj/kernel.asm	/^c0101256:	39 c2                	cmp    %eax,%edx$/;"	l
c0101258	obj/kernel.asm	/^c0101258:	7d 1d                	jge    c0101277 <debuginfo_eip+0x42e>$/;"	l
c010125a	obj/kernel.asm	/^c010125a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010125d	obj/kernel.asm	/^c010125d:	89 c2                	mov    %eax,%edx$/;"	l
c010125f	obj/kernel.asm	/^c010125f:	89 d0                	mov    %edx,%eax$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	01 c0                	add    %eax,%eax$/;"	l
c0101263	obj/kernel.asm	/^c0101263:	01 d0                	add    %edx,%eax$/;"	l
c0101265	obj/kernel.asm	/^c0101265:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101268	obj/kernel.asm	/^c0101268:	89 c2                	mov    %eax,%edx$/;"	l
c010126a	obj/kernel.asm	/^c010126a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010126d	obj/kernel.asm	/^c010126d:	01 d0                	add    %edx,%eax$/;"	l
c010126f	obj/kernel.asm	/^c010126f:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0101273	obj/kernel.asm	/^c0101273:	3c a0                	cmp    $0xa0,%al$/;"	l
c0101275	obj/kernel.asm	/^c0101275:	74 c1                	je     c0101238 <debuginfo_eip+0x3ef>$/;"	l
c0101277	obj/kernel.asm	/^c0101277:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010127c	obj/kernel.asm	/^c010127c:	c9                   	leave  $/;"	l
c010127d	obj/kernel.asm	/^c010127d:	c3                   	ret    $/;"	l
c010127e	obj/kernel.asm	/^c010127e <print_kerninfo>:$/;"	l
c010127e	obj/kernel.asm	/^c010127e:	55                   	push   %ebp$/;"	l
c010127f	obj/kernel.asm	/^c010127f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101281	obj/kernel.asm	/^c0101281:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	c7 04 24 ce 71 11 c0 	movl   $0xc01171ce,(%esp)$/;"	l
c010128b	obj/kernel.asm	/^c010128b:	e8 50 f8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	c7 44 24 04 5e 00 10 	movl   $0xc010005e,0x4(%esp)$/;"	l
c0101297	obj/kernel.asm	/^c0101297:	c0 $/;"	l
c0101298	obj/kernel.asm	/^c0101298:	c7 04 24 e7 71 11 c0 	movl   $0xc01171e7,(%esp)$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	e8 3c f8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01012a4	obj/kernel.asm	/^c01012a4:	c7 44 24 04 1d 70 11 	movl   $0xc011701d,0x4(%esp)$/;"	l
c01012ab	obj/kernel.asm	/^c01012ab:	c0 $/;"	l
c01012ac	obj/kernel.asm	/^c01012ac:	c7 04 24 ff 71 11 c0 	movl   $0xc01171ff,(%esp)$/;"	l
c01012b3	obj/kernel.asm	/^c01012b3:	e8 28 f8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01012b8	obj/kernel.asm	/^c01012b8:	c7 44 24 04 3a 6f 15 	movl   $0xc0156f3a,0x4(%esp)$/;"	l
c01012bf	obj/kernel.asm	/^c01012bf:	c0 $/;"	l
c01012c0	obj/kernel.asm	/^c01012c0:	c7 04 24 17 72 11 c0 	movl   $0xc0117217,(%esp)$/;"	l
c01012c7	obj/kernel.asm	/^c01012c7:	e8 14 f8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01012cc	obj/kernel.asm	/^c01012cc:	c7 44 24 04 64 b8 15 	movl   $0xc015b864,0x4(%esp)$/;"	l
c01012d3	obj/kernel.asm	/^c01012d3:	c0 $/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	c7 04 24 2f 72 11 c0 	movl   $0xc011722f,(%esp)$/;"	l
c01012db	obj/kernel.asm	/^c01012db:	e8 00 f8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01012e0	obj/kernel.asm	/^c01012e0:	b8 64 b8 15 c0       	mov    $0xc015b864,%eax$/;"	l
c01012e5	obj/kernel.asm	/^c01012e5:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c01012eb	obj/kernel.asm	/^c01012eb:	b8 5e 00 10 c0       	mov    $0xc010005e,%eax$/;"	l
c01012f0	obj/kernel.asm	/^c01012f0:	29 c2                	sub    %eax,%edx$/;"	l
c01012f2	obj/kernel.asm	/^c01012f2:	89 d0                	mov    %edx,%eax$/;"	l
c01012f4	obj/kernel.asm	/^c01012f4:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c01012fa	obj/kernel.asm	/^c01012fa:	85 c0                	test   %eax,%eax$/;"	l
c01012fc	obj/kernel.asm	/^c01012fc:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c01012ff	obj/kernel.asm	/^c01012ff:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0101302	obj/kernel.asm	/^c0101302:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101306	obj/kernel.asm	/^c0101306:	c7 04 24 48 72 11 c0 	movl   $0xc0117248,(%esp)$/;"	l
c010130d	obj/kernel.asm	/^c010130d:	e8 ce f7 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101312	obj/kernel.asm	/^c0101312:	c9                   	leave  $/;"	l
c0101313	obj/kernel.asm	/^c0101313:	c3                   	ret    $/;"	l
c0101314	obj/kernel.asm	/^c0101314 <print_debuginfo>:$/;"	l
c0101314	obj/kernel.asm	/^c0101314:	55                   	push   %ebp$/;"	l
c0101315	obj/kernel.asm	/^c0101315:	89 e5                	mov    %esp,%ebp$/;"	l
c0101317	obj/kernel.asm	/^c0101317:	81 ec 48 01 00 00    	sub    $0x148,%esp$/;"	l
c010131d	obj/kernel.asm	/^c010131d:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0101320	obj/kernel.asm	/^c0101320:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101324	obj/kernel.asm	/^c0101324:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101327	obj/kernel.asm	/^c0101327:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010132a	obj/kernel.asm	/^c010132a:	e8 1a fb ff ff       	call   c0100e49 <debuginfo_eip>$/;"	l
c010132f	obj/kernel.asm	/^c010132f:	85 c0                	test   %eax,%eax$/;"	l
c0101331	obj/kernel.asm	/^c0101331:	74 15                	je     c0101348 <print_debuginfo+0x34>$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101336	obj/kernel.asm	/^c0101336:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010133a	obj/kernel.asm	/^c010133a:	c7 04 24 72 72 11 c0 	movl   $0xc0117272,(%esp)$/;"	l
c0101341	obj/kernel.asm	/^c0101341:	e8 9a f7 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101346	obj/kernel.asm	/^c0101346:	eb 6d                	jmp    c01013b5 <print_debuginfo+0xa1>$/;"	l
c0101348	obj/kernel.asm	/^c0101348:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	eb 1c                	jmp    c010136d <print_debuginfo+0x59>$/;"	l
c0101351	obj/kernel.asm	/^c0101351:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0101354	obj/kernel.asm	/^c0101354:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101357	obj/kernel.asm	/^c0101357:	01 d0                	add    %edx,%eax$/;"	l
c0101359	obj/kernel.asm	/^c0101359:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010135c	obj/kernel.asm	/^c010135c:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0101362	obj/kernel.asm	/^c0101362:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101365	obj/kernel.asm	/^c0101365:	01 ca                	add    %ecx,%edx$/;"	l
c0101367	obj/kernel.asm	/^c0101367:	88 02                	mov    %al,(%edx)$/;"	l
c0101369	obj/kernel.asm	/^c0101369:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010136d	obj/kernel.asm	/^c010136d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0101370	obj/kernel.asm	/^c0101370:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0101373	obj/kernel.asm	/^c0101373:	7f dc                	jg     c0101351 <print_debuginfo+0x3d>$/;"	l
c0101375	obj/kernel.asm	/^c0101375:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c010137b	obj/kernel.asm	/^c010137b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010137e	obj/kernel.asm	/^c010137e:	01 d0                	add    %edx,%eax$/;"	l
c0101380	obj/kernel.asm	/^c0101380:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101383	obj/kernel.asm	/^c0101383:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101389	obj/kernel.asm	/^c0101389:	89 d1                	mov    %edx,%ecx$/;"	l
c010138b	obj/kernel.asm	/^c010138b:	29 c1                	sub    %eax,%ecx$/;"	l
c010138d	obj/kernel.asm	/^c010138d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0101390	obj/kernel.asm	/^c0101390:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101393	obj/kernel.asm	/^c0101393:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0101397	obj/kernel.asm	/^c0101397:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c010139d	obj/kernel.asm	/^c010139d:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01013a9	obj/kernel.asm	/^c01013a9:	c7 04 24 8e 72 11 c0 	movl   $0xc011728e,(%esp)$/;"	l
c01013b0	obj/kernel.asm	/^c01013b0:	e8 2b f7 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01013b5	obj/kernel.asm	/^c01013b5:	c9                   	leave  $/;"	l
c01013b6	obj/kernel.asm	/^c01013b6:	c3                   	ret    $/;"	l
c01013b7	obj/kernel.asm	/^c01013b7 <read_eip>:$/;"	l
c01013b7	obj/kernel.asm	/^c01013b7:	55                   	push   %ebp$/;"	l
c01013b8	obj/kernel.asm	/^c01013b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01013ba	obj/kernel.asm	/^c01013ba:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01013bd	obj/kernel.asm	/^c01013bd:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c01013c0	obj/kernel.asm	/^c01013c0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01013c3	obj/kernel.asm	/^c01013c3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01013c6	obj/kernel.asm	/^c01013c6:	c9                   	leave  $/;"	l
c01013c7	obj/kernel.asm	/^c01013c7:	c3                   	ret    $/;"	l
c01013c8	obj/kernel.asm	/^c01013c8 <print_stackframe>:$/;"	l
c01013c8	obj/kernel.asm	/^c01013c8:	55                   	push   %ebp$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	89 e5                	mov    %esp,%ebp$/;"	l
c01013cb	obj/kernel.asm	/^c01013cb:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	89 e8                	mov    %ebp,%eax$/;"	l
c01013d0	obj/kernel.asm	/^c01013d0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01013d3	obj/kernel.asm	/^c01013d3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01013d6	obj/kernel.asm	/^c01013d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01013d9	obj/kernel.asm	/^c01013d9:	e8 d9 ff ff ff       	call   c01013b7 <read_eip>$/;"	l
c01013de	obj/kernel.asm	/^c01013de:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01013e1	obj/kernel.asm	/^c01013e1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01013e8	obj/kernel.asm	/^c01013e8:	e9 88 00 00 00       	jmp    c0101475 <print_stackframe+0xad>$/;"	l
c01013ed	obj/kernel.asm	/^c01013ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01013f0	obj/kernel.asm	/^c01013f0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01013f4	obj/kernel.asm	/^c01013f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01013f7	obj/kernel.asm	/^c01013f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01013fb	obj/kernel.asm	/^c01013fb:	c7 04 24 a0 72 11 c0 	movl   $0xc01172a0,(%esp)$/;"	l
c0101402	obj/kernel.asm	/^c0101402:	e8 d9 f6 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101407	obj/kernel.asm	/^c0101407:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010140a	obj/kernel.asm	/^c010140a:	83 c0 08             	add    $0x8,%eax$/;"	l
c010140d	obj/kernel.asm	/^c010140d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0101410	obj/kernel.asm	/^c0101410:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0101417	obj/kernel.asm	/^c0101417:	eb 25                	jmp    c010143e <print_stackframe+0x76>$/;"	l
c0101419	obj/kernel.asm	/^c0101419:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010141c	obj/kernel.asm	/^c010141c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0101423	obj/kernel.asm	/^c0101423:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101426	obj/kernel.asm	/^c0101426:	01 d0                	add    %edx,%eax$/;"	l
c0101428	obj/kernel.asm	/^c0101428:	8b 00                	mov    (%eax),%eax$/;"	l
c010142a	obj/kernel.asm	/^c010142a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010142e	obj/kernel.asm	/^c010142e:	c7 04 24 bc 72 11 c0 	movl   $0xc01172bc,(%esp)$/;"	l
c0101435	obj/kernel.asm	/^c0101435:	e8 a6 f6 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010143a	obj/kernel.asm	/^c010143a:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c010143e	obj/kernel.asm	/^c010143e:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)$/;"	l
c0101442	obj/kernel.asm	/^c0101442:	7e d5                	jle    c0101419 <print_stackframe+0x51>$/;"	l
c0101444	obj/kernel.asm	/^c0101444:	c7 04 24 c4 72 11 c0 	movl   $0xc01172c4,(%esp)$/;"	l
c010144b	obj/kernel.asm	/^c010144b:	e8 90 f6 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101450	obj/kernel.asm	/^c0101450:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101453	obj/kernel.asm	/^c0101453:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101456	obj/kernel.asm	/^c0101456:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101459	obj/kernel.asm	/^c0101459:	e8 b6 fe ff ff       	call   c0101314 <print_debuginfo>$/;"	l
c010145e	obj/kernel.asm	/^c010145e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101461	obj/kernel.asm	/^c0101461:	83 c0 04             	add    $0x4,%eax$/;"	l
c0101464	obj/kernel.asm	/^c0101464:	8b 00                	mov    (%eax),%eax$/;"	l
c0101466	obj/kernel.asm	/^c0101466:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101469	obj/kernel.asm	/^c0101469:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010146c	obj/kernel.asm	/^c010146c:	8b 00                	mov    (%eax),%eax$/;"	l
c010146e	obj/kernel.asm	/^c010146e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101471	obj/kernel.asm	/^c0101471:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0101475	obj/kernel.asm	/^c0101475:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101479	obj/kernel.asm	/^c0101479:	74 0a                	je     c0101485 <print_stackframe+0xbd>$/;"	l
c010147b	obj/kernel.asm	/^c010147b:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)$/;"	l
c010147f	obj/kernel.asm	/^c010147f:	0f 8e 68 ff ff ff    	jle    c01013ed <print_stackframe+0x25>$/;"	l
c0101485	obj/kernel.asm	/^c0101485:	c9                   	leave  $/;"	l
c0101486	obj/kernel.asm	/^c0101486:	c3                   	ret    $/;"	l
c0101487	obj/kernel.asm	/^c0101487 <parse>:$/;"	l
c0101487	obj/kernel.asm	/^c0101487:	55                   	push   %ebp$/;"	l
c0101488	obj/kernel.asm	/^c0101488:	89 e5                	mov    %esp,%ebp$/;"	l
c010148a	obj/kernel.asm	/^c010148a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010148d	obj/kernel.asm	/^c010148d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101494	obj/kernel.asm	/^c0101494:	eb 0c                	jmp    c01014a2 <parse+0x1b>$/;"	l
c0101496	obj/kernel.asm	/^c0101496:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101499	obj/kernel.asm	/^c0101499:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010149c	obj/kernel.asm	/^c010149c:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010149f	obj/kernel.asm	/^c010149f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01014a2	obj/kernel.asm	/^c01014a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01014a5	obj/kernel.asm	/^c01014a5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01014a8	obj/kernel.asm	/^c01014a8:	84 c0                	test   %al,%al$/;"	l
c01014aa	obj/kernel.asm	/^c01014aa:	74 1d                	je     c01014c9 <parse+0x42>$/;"	l
c01014ac	obj/kernel.asm	/^c01014ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	0f be c0             	movsbl %al,%eax$/;"	l
c01014b5	obj/kernel.asm	/^c01014b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	c7 04 24 48 73 11 c0 	movl   $0xc0117348,(%esp)$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	e8 0c 50 01 00       	call   c01164d1 <strchr>$/;"	l
c01014c5	obj/kernel.asm	/^c01014c5:	85 c0                	test   %eax,%eax$/;"	l
c01014c7	obj/kernel.asm	/^c01014c7:	75 cd                	jne    c0101496 <parse+0xf>$/;"	l
c01014c9	obj/kernel.asm	/^c01014c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01014cc	obj/kernel.asm	/^c01014cc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01014cf	obj/kernel.asm	/^c01014cf:	84 c0                	test   %al,%al$/;"	l
c01014d1	obj/kernel.asm	/^c01014d1:	75 02                	jne    c01014d5 <parse+0x4e>$/;"	l
c01014d3	obj/kernel.asm	/^c01014d3:	eb 67                	jmp    c010153c <parse+0xb5>$/;"	l
c01014d5	obj/kernel.asm	/^c01014d5:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c01014d9	obj/kernel.asm	/^c01014d9:	75 14                	jne    c01014ef <parse+0x68>$/;"	l
c01014db	obj/kernel.asm	/^c01014db:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c01014e2	obj/kernel.asm	/^c01014e2:	00 $/;"	l
c01014e3	obj/kernel.asm	/^c01014e3:	c7 04 24 4d 73 11 c0 	movl   $0xc011734d,(%esp)$/;"	l
c01014ea	obj/kernel.asm	/^c01014ea:	e8 f1 f5 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01014f2	obj/kernel.asm	/^c01014f2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01014f5	obj/kernel.asm	/^c01014f5:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01014f8	obj/kernel.asm	/^c01014f8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01014ff	obj/kernel.asm	/^c01014ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101502	obj/kernel.asm	/^c0101502:	01 c2                	add    %eax,%edx$/;"	l
c0101504	obj/kernel.asm	/^c0101504:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101507	obj/kernel.asm	/^c0101507:	89 02                	mov    %eax,(%edx)$/;"	l
c0101509	obj/kernel.asm	/^c0101509:	eb 04                	jmp    c010150f <parse+0x88>$/;"	l
c010150b	obj/kernel.asm	/^c010150b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010150f	obj/kernel.asm	/^c010150f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101512	obj/kernel.asm	/^c0101512:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101515	obj/kernel.asm	/^c0101515:	84 c0                	test   %al,%al$/;"	l
c0101517	obj/kernel.asm	/^c0101517:	74 1d                	je     c0101536 <parse+0xaf>$/;"	l
c0101519	obj/kernel.asm	/^c0101519:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010151c	obj/kernel.asm	/^c010151c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010151f	obj/kernel.asm	/^c010151f:	0f be c0             	movsbl %al,%eax$/;"	l
c0101522	obj/kernel.asm	/^c0101522:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101526	obj/kernel.asm	/^c0101526:	c7 04 24 48 73 11 c0 	movl   $0xc0117348,(%esp)$/;"	l
c010152d	obj/kernel.asm	/^c010152d:	e8 9f 4f 01 00       	call   c01164d1 <strchr>$/;"	l
c0101532	obj/kernel.asm	/^c0101532:	85 c0                	test   %eax,%eax$/;"	l
c0101534	obj/kernel.asm	/^c0101534:	74 d5                	je     c010150b <parse+0x84>$/;"	l
c0101536	obj/kernel.asm	/^c0101536:	90                   	nop$/;"	l
c0101537	obj/kernel.asm	/^c0101537:	e9 66 ff ff ff       	jmp    c01014a2 <parse+0x1b>$/;"	l
c010153c	obj/kernel.asm	/^c010153c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010153f	obj/kernel.asm	/^c010153f:	c9                   	leave  $/;"	l
c0101540	obj/kernel.asm	/^c0101540:	c3                   	ret    $/;"	l
c0101541	obj/kernel.asm	/^c0101541 <runcmd>:$/;"	l
c0101541	obj/kernel.asm	/^c0101541:	55                   	push   %ebp$/;"	l
c0101542	obj/kernel.asm	/^c0101542:	89 e5                	mov    %esp,%ebp$/;"	l
c0101544	obj/kernel.asm	/^c0101544:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c010154a	obj/kernel.asm	/^c010154a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010154e	obj/kernel.asm	/^c010154e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101551	obj/kernel.asm	/^c0101551:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101554	obj/kernel.asm	/^c0101554:	e8 2e ff ff ff       	call   c0101487 <parse>$/;"	l
c0101559	obj/kernel.asm	/^c0101559:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010155c	obj/kernel.asm	/^c010155c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0101560	obj/kernel.asm	/^c0101560:	75 0a                	jne    c010156c <runcmd+0x2b>$/;"	l
c0101562	obj/kernel.asm	/^c0101562:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101567	obj/kernel.asm	/^c0101567:	e9 85 00 00 00       	jmp    c01015f1 <runcmd+0xb0>$/;"	l
c010156c	obj/kernel.asm	/^c010156c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101573	obj/kernel.asm	/^c0101573:	eb 5c                	jmp    c01015d1 <runcmd+0x90>$/;"	l
c0101575	obj/kernel.asm	/^c0101575:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0101578	obj/kernel.asm	/^c0101578:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010157b	obj/kernel.asm	/^c010157b:	89 d0                	mov    %edx,%eax$/;"	l
c010157d	obj/kernel.asm	/^c010157d:	01 c0                	add    %eax,%eax$/;"	l
c010157f	obj/kernel.asm	/^c010157f:	01 d0                	add    %edx,%eax$/;"	l
c0101581	obj/kernel.asm	/^c0101581:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101584	obj/kernel.asm	/^c0101584:	05 00 60 15 c0       	add    $0xc0156000,%eax$/;"	l
c0101589	obj/kernel.asm	/^c0101589:	8b 00                	mov    (%eax),%eax$/;"	l
c010158b	obj/kernel.asm	/^c010158b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010158f	obj/kernel.asm	/^c010158f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101592	obj/kernel.asm	/^c0101592:	e8 9b 4e 01 00       	call   c0116432 <strcmp>$/;"	l
c0101597	obj/kernel.asm	/^c0101597:	85 c0                	test   %eax,%eax$/;"	l
c0101599	obj/kernel.asm	/^c0101599:	75 32                	jne    c01015cd <runcmd+0x8c>$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010159e	obj/kernel.asm	/^c010159e:	89 d0                	mov    %edx,%eax$/;"	l
c01015a0	obj/kernel.asm	/^c01015a0:	01 c0                	add    %eax,%eax$/;"	l
c01015a2	obj/kernel.asm	/^c01015a2:	01 d0                	add    %edx,%eax$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01015a7	obj/kernel.asm	/^c01015a7:	05 00 60 15 c0       	add    $0xc0156000,%eax$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01015af	obj/kernel.asm	/^c01015af:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01015b2	obj/kernel.asm	/^c01015b2:	8d 4a ff             	lea    -0x1(%edx),%ecx$/;"	l
c01015b5	obj/kernel.asm	/^c01015b5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01015b8	obj/kernel.asm	/^c01015b8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01015bc	obj/kernel.asm	/^c01015bc:	8d 55 b0             	lea    -0x50(%ebp),%edx$/;"	l
c01015bf	obj/kernel.asm	/^c01015bf:	83 c2 04             	add    $0x4,%edx$/;"	l
c01015c2	obj/kernel.asm	/^c01015c2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01015c6	obj/kernel.asm	/^c01015c6:	89 0c 24             	mov    %ecx,(%esp)$/;"	l
c01015c9	obj/kernel.asm	/^c01015c9:	ff d0                	call   *%eax$/;"	l
c01015cb	obj/kernel.asm	/^c01015cb:	eb 24                	jmp    c01015f1 <runcmd+0xb0>$/;"	l
c01015cd	obj/kernel.asm	/^c01015cd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01015d1	obj/kernel.asm	/^c01015d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01015d4	obj/kernel.asm	/^c01015d4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01015d7	obj/kernel.asm	/^c01015d7:	76 9c                	jbe    c0101575 <runcmd+0x34>$/;"	l
c01015d9	obj/kernel.asm	/^c01015d9:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01015dc	obj/kernel.asm	/^c01015dc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01015e0	obj/kernel.asm	/^c01015e0:	c7 04 24 6b 73 11 c0 	movl   $0xc011736b,(%esp)$/;"	l
c01015e7	obj/kernel.asm	/^c01015e7:	e8 f4 f4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01015ec	obj/kernel.asm	/^c01015ec:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01015f1	obj/kernel.asm	/^c01015f1:	c9                   	leave  $/;"	l
c01015f2	obj/kernel.asm	/^c01015f2:	c3                   	ret    $/;"	l
c01015f3	obj/kernel.asm	/^c01015f3 <kmonitor>:$/;"	l
c01015f3	obj/kernel.asm	/^c01015f3:	55                   	push   %ebp$/;"	l
c01015f4	obj/kernel.asm	/^c01015f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01015f6	obj/kernel.asm	/^c01015f6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01015f9	obj/kernel.asm	/^c01015f9:	c7 04 24 84 73 11 c0 	movl   $0xc0117384,(%esp)$/;"	l
c0101600	obj/kernel.asm	/^c0101600:	e8 db f4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101605	obj/kernel.asm	/^c0101605:	c7 04 24 ac 73 11 c0 	movl   $0xc01173ac,(%esp)$/;"	l
c010160c	obj/kernel.asm	/^c010160c:	e8 cf f4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101611	obj/kernel.asm	/^c0101611:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101615	obj/kernel.asm	/^c0101615:	74 0b                	je     c0101622 <kmonitor+0x2f>$/;"	l
c0101617	obj/kernel.asm	/^c0101617:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010161a	obj/kernel.asm	/^c010161a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010161d	obj/kernel.asm	/^c010161d:	e8 57 16 00 00       	call   c0102c79 <print_trapframe>$/;"	l
c0101622	obj/kernel.asm	/^c0101622:	c7 04 24 d1 73 11 c0 	movl   $0xc01173d1,(%esp)$/;"	l
c0101629	obj/kernel.asm	/^c0101629:	e8 53 f5 ff ff       	call   c0100b81 <readline>$/;"	l
c010162e	obj/kernel.asm	/^c010162e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101631	obj/kernel.asm	/^c0101631:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101635	obj/kernel.asm	/^c0101635:	74 18                	je     c010164f <kmonitor+0x5c>$/;"	l
c0101637	obj/kernel.asm	/^c0101637:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010163a	obj/kernel.asm	/^c010163a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010163e	obj/kernel.asm	/^c010163e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101641	obj/kernel.asm	/^c0101641:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101644	obj/kernel.asm	/^c0101644:	e8 f8 fe ff ff       	call   c0101541 <runcmd>$/;"	l
c0101649	obj/kernel.asm	/^c0101649:	85 c0                	test   %eax,%eax$/;"	l
c010164b	obj/kernel.asm	/^c010164b:	79 02                	jns    c010164f <kmonitor+0x5c>$/;"	l
c010164d	obj/kernel.asm	/^c010164d:	eb 02                	jmp    c0101651 <kmonitor+0x5e>$/;"	l
c010164f	obj/kernel.asm	/^c010164f:	eb d1                	jmp    c0101622 <kmonitor+0x2f>$/;"	l
c0101651	obj/kernel.asm	/^c0101651:	c9                   	leave  $/;"	l
c0101652	obj/kernel.asm	/^c0101652:	c3                   	ret    $/;"	l
c0101653	obj/kernel.asm	/^c0101653 <mon_help>:$/;"	l
c0101653	obj/kernel.asm	/^c0101653:	55                   	push   %ebp$/;"	l
c0101654	obj/kernel.asm	/^c0101654:	89 e5                	mov    %esp,%ebp$/;"	l
c0101656	obj/kernel.asm	/^c0101656:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101659	obj/kernel.asm	/^c0101659:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101660	obj/kernel.asm	/^c0101660:	eb 3f                	jmp    c01016a1 <mon_help+0x4e>$/;"	l
c0101662	obj/kernel.asm	/^c0101662:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101665	obj/kernel.asm	/^c0101665:	89 d0                	mov    %edx,%eax$/;"	l
c0101667	obj/kernel.asm	/^c0101667:	01 c0                	add    %eax,%eax$/;"	l
c0101669	obj/kernel.asm	/^c0101669:	01 d0                	add    %edx,%eax$/;"	l
c010166b	obj/kernel.asm	/^c010166b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010166e	obj/kernel.asm	/^c010166e:	05 00 60 15 c0       	add    $0xc0156000,%eax$/;"	l
c0101673	obj/kernel.asm	/^c0101673:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0101676	obj/kernel.asm	/^c0101676:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101679	obj/kernel.asm	/^c0101679:	89 d0                	mov    %edx,%eax$/;"	l
c010167b	obj/kernel.asm	/^c010167b:	01 c0                	add    %eax,%eax$/;"	l
c010167d	obj/kernel.asm	/^c010167d:	01 d0                	add    %edx,%eax$/;"	l
c010167f	obj/kernel.asm	/^c010167f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101682	obj/kernel.asm	/^c0101682:	05 00 60 15 c0       	add    $0xc0156000,%eax$/;"	l
c0101687	obj/kernel.asm	/^c0101687:	8b 00                	mov    (%eax),%eax$/;"	l
c0101689	obj/kernel.asm	/^c0101689:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010168d	obj/kernel.asm	/^c010168d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101691	obj/kernel.asm	/^c0101691:	c7 04 24 d5 73 11 c0 	movl   $0xc01173d5,(%esp)$/;"	l
c0101698	obj/kernel.asm	/^c0101698:	e8 43 f4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010169d	obj/kernel.asm	/^c010169d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01016a1	obj/kernel.asm	/^c01016a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01016a4	obj/kernel.asm	/^c01016a4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01016a7	obj/kernel.asm	/^c01016a7:	76 b9                	jbe    c0101662 <mon_help+0xf>$/;"	l
c01016a9	obj/kernel.asm	/^c01016a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01016ae	obj/kernel.asm	/^c01016ae:	c9                   	leave  $/;"	l
c01016af	obj/kernel.asm	/^c01016af:	c3                   	ret    $/;"	l
c01016b0	obj/kernel.asm	/^c01016b0 <mon_kerninfo>:$/;"	l
c01016b0	obj/kernel.asm	/^c01016b0:	55                   	push   %ebp$/;"	l
c01016b1	obj/kernel.asm	/^c01016b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01016b3	obj/kernel.asm	/^c01016b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01016b6	obj/kernel.asm	/^c01016b6:	e8 c3 fb ff ff       	call   c010127e <print_kerninfo>$/;"	l
c01016bb	obj/kernel.asm	/^c01016bb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01016c0	obj/kernel.asm	/^c01016c0:	c9                   	leave  $/;"	l
c01016c1	obj/kernel.asm	/^c01016c1:	c3                   	ret    $/;"	l
c01016c2	obj/kernel.asm	/^c01016c2 <mon_backtrace>:$/;"	l
c01016c2	obj/kernel.asm	/^c01016c2:	55                   	push   %ebp$/;"	l
c01016c3	obj/kernel.asm	/^c01016c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01016c5	obj/kernel.asm	/^c01016c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01016c8	obj/kernel.asm	/^c01016c8:	e8 fb fc ff ff       	call   c01013c8 <print_stackframe>$/;"	l
c01016cd	obj/kernel.asm	/^c01016cd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01016d2	obj/kernel.asm	/^c01016d2:	c9                   	leave  $/;"	l
c01016d3	obj/kernel.asm	/^c01016d3:	c3                   	ret    $/;"	l
c01016d4	obj/kernel.asm	/^c01016d4 <ide_wait_ready>:$/;"	l
c01016d4	obj/kernel.asm	/^c01016d4:	55                   	push   %ebp$/;"	l
c01016d5	obj/kernel.asm	/^c01016d5:	89 e5                	mov    %esp,%ebp$/;"	l
c01016d7	obj/kernel.asm	/^c01016d7:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01016da	obj/kernel.asm	/^c01016da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01016dd	obj/kernel.asm	/^c01016dd:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01016e1	obj/kernel.asm	/^c01016e1:	90                   	nop$/;"	l
c01016e2	obj/kernel.asm	/^c01016e2:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01016e6	obj/kernel.asm	/^c01016e6:	83 c0 07             	add    $0x7,%eax$/;"	l
c01016e9	obj/kernel.asm	/^c01016e9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01016ec	obj/kernel.asm	/^c01016ec:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01016f0	obj/kernel.asm	/^c01016f0:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01016f4	obj/kernel.asm	/^c01016f4:	89 c2                	mov    %eax,%edx$/;"	l
c01016f6	obj/kernel.asm	/^c01016f6:	ec                   	in     (%dx),%al$/;"	l
c01016f7	obj/kernel.asm	/^c01016f7:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01016fa	obj/kernel.asm	/^c01016fa:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101701	obj/kernel.asm	/^c0101701:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101704	obj/kernel.asm	/^c0101704:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101707	obj/kernel.asm	/^c0101707:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c010170c	obj/kernel.asm	/^c010170c:	85 c0                	test   %eax,%eax$/;"	l
c010170e	obj/kernel.asm	/^c010170e:	75 d2                	jne    c01016e2 <ide_wait_ready+0xe>$/;"	l
c0101710	obj/kernel.asm	/^c0101710:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0101714	obj/kernel.asm	/^c0101714:	74 11                	je     c0101727 <ide_wait_ready+0x53>$/;"	l
c0101716	obj/kernel.asm	/^c0101716:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101719	obj/kernel.asm	/^c0101719:	83 e0 21             	and    $0x21,%eax$/;"	l
c010171c	obj/kernel.asm	/^c010171c:	85 c0                	test   %eax,%eax$/;"	l
c010171e	obj/kernel.asm	/^c010171e:	74 07                	je     c0101727 <ide_wait_ready+0x53>$/;"	l
c0101720	obj/kernel.asm	/^c0101720:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101725	obj/kernel.asm	/^c0101725:	eb 05                	jmp    c010172c <ide_wait_ready+0x58>$/;"	l
c0101727	obj/kernel.asm	/^c0101727:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010172c	obj/kernel.asm	/^c010172c:	c9                   	leave  $/;"	l
c010172d	obj/kernel.asm	/^c010172d:	c3                   	ret    $/;"	l
c010172e	obj/kernel.asm	/^c010172e <ide_init>:$/;"	l
c010172e	obj/kernel.asm	/^c010172e:	55                   	push   %ebp$/;"	l
c010172f	obj/kernel.asm	/^c010172f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101731	obj/kernel.asm	/^c0101731:	57                   	push   %edi$/;"	l
c0101732	obj/kernel.asm	/^c0101732:	53                   	push   %ebx$/;"	l
c0101733	obj/kernel.asm	/^c0101733:	81 ec 50 02 00 00    	sub    $0x250,%esp$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c010173f	obj/kernel.asm	/^c010173f:	e9 d6 02 00 00       	jmp    c0101a1a <ide_init+0x2ec>$/;"	l
c0101744	obj/kernel.asm	/^c0101744:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101748	obj/kernel.asm	/^c0101748:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010174b	obj/kernel.asm	/^c010174b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101752	obj/kernel.asm	/^c0101752:	29 c2                	sub    %eax,%edx$/;"	l
c0101754	obj/kernel.asm	/^c0101754:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c010175a	obj/kernel.asm	/^c010175a:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101761	obj/kernel.asm	/^c0101761:	66 d1 e8             	shr    %ax$/;"	l
c0101764	obj/kernel.asm	/^c0101764:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101767	obj/kernel.asm	/^c0101767:	0f b7 04 85 e0 73 11 	movzwl -0x3fee8c20(,%eax,4),%eax$/;"	l
c010176e	obj/kernel.asm	/^c010176e:	c0 $/;"	l
c010176f	obj/kernel.asm	/^c010176f:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101773	obj/kernel.asm	/^c0101773:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101777	obj/kernel.asm	/^c0101777:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010177e	obj/kernel.asm	/^c010177e:	00 $/;"	l
c010177f	obj/kernel.asm	/^c010177f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101782	obj/kernel.asm	/^c0101782:	e8 4d ff ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c0101787	obj/kernel.asm	/^c0101787:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010178b	obj/kernel.asm	/^c010178b:	83 e0 01             	and    $0x1,%eax$/;"	l
c010178e	obj/kernel.asm	/^c010178e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101791	obj/kernel.asm	/^c0101791:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101794	obj/kernel.asm	/^c0101794:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101797	obj/kernel.asm	/^c0101797:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010179b	obj/kernel.asm	/^c010179b:	83 c2 06             	add    $0x6,%edx$/;"	l
c010179e	obj/kernel.asm	/^c010179e:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01017a1	obj/kernel.asm	/^c01017a1:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c01017a8	obj/kernel.asm	/^c01017a8:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c01017ac	obj/kernel.asm	/^c01017ac:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c01017b0	obj/kernel.asm	/^c01017b0:	ee                   	out    %al,(%dx)$/;"	l
c01017b1	obj/kernel.asm	/^c01017b1:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01017b5	obj/kernel.asm	/^c01017b5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01017bc	obj/kernel.asm	/^c01017bc:	00 $/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01017c0	obj/kernel.asm	/^c01017c0:	e8 0f ff ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c01017c5	obj/kernel.asm	/^c01017c5:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01017c9	obj/kernel.asm	/^c01017c9:	83 c0 07             	add    $0x7,%eax$/;"	l
c01017cc	obj/kernel.asm	/^c01017cc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01017cf	obj/kernel.asm	/^c01017cf:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c01017d3	obj/kernel.asm	/^c01017d3:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c01017d7	obj/kernel.asm	/^c01017d7:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c01017db	obj/kernel.asm	/^c01017db:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c01017df	obj/kernel.asm	/^c01017df:	ee                   	out    %al,(%dx)$/;"	l
c01017e0	obj/kernel.asm	/^c01017e0:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01017e4	obj/kernel.asm	/^c01017e4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01017eb	obj/kernel.asm	/^c01017eb:	00 $/;"	l
c01017ec	obj/kernel.asm	/^c01017ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01017ef	obj/kernel.asm	/^c01017ef:	e8 e0 fe ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c01017f4	obj/kernel.asm	/^c01017f4:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c01017f8	obj/kernel.asm	/^c01017f8:	83 c0 07             	add    $0x7,%eax$/;"	l
c01017fb	obj/kernel.asm	/^c01017fb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01017fe	obj/kernel.asm	/^c01017fe:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c0101802	obj/kernel.asm	/^c0101802:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c0101806	obj/kernel.asm	/^c0101806:	89 c2                	mov    %eax,%edx$/;"	l
c0101808	obj/kernel.asm	/^c0101808:	ec                   	in     (%dx),%al$/;"	l
c0101809	obj/kernel.asm	/^c0101809:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c010180c	obj/kernel.asm	/^c010180c:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0101810	obj/kernel.asm	/^c0101810:	84 c0                	test   %al,%al$/;"	l
c0101812	obj/kernel.asm	/^c0101812:	0f 84 f7 01 00 00    	je     c0101a0f <ide_init+0x2e1>$/;"	l
c0101818	obj/kernel.asm	/^c0101818:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c010181c	obj/kernel.asm	/^c010181c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101823	obj/kernel.asm	/^c0101823:	00 $/;"	l
c0101824	obj/kernel.asm	/^c0101824:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101827	obj/kernel.asm	/^c0101827:	e8 a8 fe ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c010182c	obj/kernel.asm	/^c010182c:	85 c0                	test   %eax,%eax$/;"	l
c010182e	obj/kernel.asm	/^c010182e:	0f 85 db 01 00 00    	jne    c0101a0f <ide_init+0x2e1>$/;"	l
c0101834	obj/kernel.asm	/^c0101834:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101838	obj/kernel.asm	/^c0101838:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010183b	obj/kernel.asm	/^c010183b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101842	obj/kernel.asm	/^c0101842:	29 c2                	sub    %eax,%edx$/;"	l
c0101844	obj/kernel.asm	/^c0101844:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c010184a	obj/kernel.asm	/^c010184a:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c010184d	obj/kernel.asm	/^c010184d:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0101854	obj/kernel.asm	/^c0101854:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c010185a	obj/kernel.asm	/^c010185a:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010185d	obj/kernel.asm	/^c010185d:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0101864	obj/kernel.asm	/^c0101864:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0101867	obj/kernel.asm	/^c0101867:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c010186a	obj/kernel.asm	/^c010186a:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010186d	obj/kernel.asm	/^c010186d:	89 cb                	mov    %ecx,%ebx$/;"	l
c010186f	obj/kernel.asm	/^c010186f:	89 df                	mov    %ebx,%edi$/;"	l
c0101871	obj/kernel.asm	/^c0101871:	89 c1                	mov    %eax,%ecx$/;"	l
c0101873	obj/kernel.asm	/^c0101873:	fc                   	cld    $/;"	l
c0101874	obj/kernel.asm	/^c0101874:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	89 c8                	mov    %ecx,%eax$/;"	l
c0101878	obj/kernel.asm	/^c0101878:	89 fb                	mov    %edi,%ebx$/;"	l
c010187a	obj/kernel.asm	/^c010187a:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c010187d	obj/kernel.asm	/^c010187d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0101880	obj/kernel.asm	/^c0101880:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0101886	obj/kernel.asm	/^c0101886:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0101889	obj/kernel.asm	/^c0101889:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010188c	obj/kernel.asm	/^c010188c:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0101892	obj/kernel.asm	/^c0101892:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0101895	obj/kernel.asm	/^c0101895:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101898	obj/kernel.asm	/^c0101898:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c010189d	obj/kernel.asm	/^c010189d:	85 c0                	test   %eax,%eax$/;"	l
c010189f	obj/kernel.asm	/^c010189f:	74 0e                	je     c01018af <ide_init+0x181>$/;"	l
c01018a1	obj/kernel.asm	/^c01018a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01018a4	obj/kernel.asm	/^c01018a4:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01018ad	obj/kernel.asm	/^c01018ad:	eb 09                	jmp    c01018b8 <ide_init+0x18a>$/;"	l
c01018af	obj/kernel.asm	/^c01018af:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c01018b5	obj/kernel.asm	/^c01018b5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01018b8	obj/kernel.asm	/^c01018b8:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01018bc	obj/kernel.asm	/^c01018bc:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01018bf	obj/kernel.asm	/^c01018bf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01018c6	obj/kernel.asm	/^c01018c6:	29 c2                	sub    %eax,%edx$/;"	l
c01018c8	obj/kernel.asm	/^c01018c8:	81 c2 80 73 15 c0    	add    $0xc0157380,%edx$/;"	l
c01018ce	obj/kernel.asm	/^c01018ce:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01018d1	obj/kernel.asm	/^c01018d1:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c01018d4	obj/kernel.asm	/^c01018d4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01018d8	obj/kernel.asm	/^c01018d8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01018db	obj/kernel.asm	/^c01018db:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01018e2	obj/kernel.asm	/^c01018e2:	29 c2                	sub    %eax,%edx$/;"	l
c01018e4	obj/kernel.asm	/^c01018e4:	81 c2 80 73 15 c0    	add    $0xc0157380,%edx$/;"	l
c01018ea	obj/kernel.asm	/^c01018ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01018ed	obj/kernel.asm	/^c01018ed:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01018f0	obj/kernel.asm	/^c01018f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01018f3	obj/kernel.asm	/^c01018f3:	83 c0 62             	add    $0x62,%eax$/;"	l
c01018f6	obj/kernel.asm	/^c01018f6:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01018f9	obj/kernel.asm	/^c01018f9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018fc	obj/kernel.asm	/^c01018fc:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101901	obj/kernel.asm	/^c0101901:	85 c0                	test   %eax,%eax$/;"	l
c0101903	obj/kernel.asm	/^c0101903:	75 24                	jne    c0101929 <ide_init+0x1fb>$/;"	l
c0101905	obj/kernel.asm	/^c0101905:	c7 44 24 0c e8 73 11 	movl   $0xc01173e8,0xc(%esp)$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	c0 $/;"	l
c010190d	obj/kernel.asm	/^c010190d:	c7 44 24 08 2b 74 11 	movl   $0xc011742b,0x8(%esp)$/;"	l
c0101914	obj/kernel.asm	/^c0101914:	c0 $/;"	l
c0101915	obj/kernel.asm	/^c0101915:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c010191c	obj/kernel.asm	/^c010191c:	00 $/;"	l
c010191d	obj/kernel.asm	/^c010191d:	c7 04 24 40 74 11 c0 	movl   $0xc0117440,(%esp)$/;"	l
c0101924	obj/kernel.asm	/^c0101924:	e8 0e f3 ff ff       	call   c0100c37 <__panic>$/;"	l
c0101929	obj/kernel.asm	/^c0101929:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010192d	obj/kernel.asm	/^c010192d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101930	obj/kernel.asm	/^c0101930:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101937	obj/kernel.asm	/^c0101937:	29 c2                	sub    %eax,%edx$/;"	l
c0101939	obj/kernel.asm	/^c0101939:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c010193f	obj/kernel.asm	/^c010193f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0101942	obj/kernel.asm	/^c0101942:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101945	obj/kernel.asm	/^c0101945:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101948	obj/kernel.asm	/^c0101948:	83 c0 36             	add    $0x36,%eax$/;"	l
c010194b	obj/kernel.asm	/^c010194b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010194e	obj/kernel.asm	/^c010194e:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0101955	obj/kernel.asm	/^c0101955:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010195c	obj/kernel.asm	/^c010195c:	eb 34                	jmp    c0101992 <ide_init+0x264>$/;"	l
c010195e	obj/kernel.asm	/^c010195e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101961	obj/kernel.asm	/^c0101961:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101964	obj/kernel.asm	/^c0101964:	01 c2                	add    %eax,%edx$/;"	l
c0101966	obj/kernel.asm	/^c0101966:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010196c	obj/kernel.asm	/^c010196c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010196f	obj/kernel.asm	/^c010196f:	01 c8                	add    %ecx,%eax$/;"	l
c0101971	obj/kernel.asm	/^c0101971:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101974	obj/kernel.asm	/^c0101974:	88 02                	mov    %al,(%edx)$/;"	l
c0101976	obj/kernel.asm	/^c0101976:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101979	obj/kernel.asm	/^c0101979:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010197c	obj/kernel.asm	/^c010197c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010197f	obj/kernel.asm	/^c010197f:	01 c2                	add    %eax,%edx$/;"	l
c0101981	obj/kernel.asm	/^c0101981:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101984	obj/kernel.asm	/^c0101984:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101987	obj/kernel.asm	/^c0101987:	01 c8                	add    %ecx,%eax$/;"	l
c0101989	obj/kernel.asm	/^c0101989:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010198c	obj/kernel.asm	/^c010198c:	88 02                	mov    %al,(%edx)$/;"	l
c010198e	obj/kernel.asm	/^c010198e:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101992	obj/kernel.asm	/^c0101992:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101995	obj/kernel.asm	/^c0101995:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0101998	obj/kernel.asm	/^c0101998:	72 c4                	jb     c010195e <ide_init+0x230>$/;"	l
c010199a	obj/kernel.asm	/^c010199a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010199d	obj/kernel.asm	/^c010199d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01019a0	obj/kernel.asm	/^c01019a0:	01 d0                	add    %edx,%eax$/;"	l
c01019a2	obj/kernel.asm	/^c01019a2:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01019a5	obj/kernel.asm	/^c01019a5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01019a8	obj/kernel.asm	/^c01019a8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01019ab	obj/kernel.asm	/^c01019ab:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01019ae	obj/kernel.asm	/^c01019ae:	85 c0                	test   %eax,%eax$/;"	l
c01019b0	obj/kernel.asm	/^c01019b0:	74 0f                	je     c01019c1 <ide_init+0x293>$/;"	l
c01019b2	obj/kernel.asm	/^c01019b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01019b5	obj/kernel.asm	/^c01019b5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01019b8	obj/kernel.asm	/^c01019b8:	01 d0                	add    %edx,%eax$/;"	l
c01019ba	obj/kernel.asm	/^c01019ba:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01019bd	obj/kernel.asm	/^c01019bd:	3c 20                	cmp    $0x20,%al$/;"	l
c01019bf	obj/kernel.asm	/^c01019bf:	74 d9                	je     c010199a <ide_init+0x26c>$/;"	l
c01019c1	obj/kernel.asm	/^c01019c1:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01019c5	obj/kernel.asm	/^c01019c5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01019c8	obj/kernel.asm	/^c01019c8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01019cf	obj/kernel.asm	/^c01019cf:	29 c2                	sub    %eax,%edx$/;"	l
c01019d1	obj/kernel.asm	/^c01019d1:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c01019d7	obj/kernel.asm	/^c01019d7:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c01019da	obj/kernel.asm	/^c01019da:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01019de	obj/kernel.asm	/^c01019de:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01019e1	obj/kernel.asm	/^c01019e1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01019e8	obj/kernel.asm	/^c01019e8:	29 c2                	sub    %eax,%edx$/;"	l
c01019ea	obj/kernel.asm	/^c01019ea:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c01019f0	obj/kernel.asm	/^c01019f0:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01019f3	obj/kernel.asm	/^c01019f3:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01019f7	obj/kernel.asm	/^c01019f7:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c01019fb	obj/kernel.asm	/^c01019fb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01019ff	obj/kernel.asm	/^c01019ff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0101a03	obj/kernel.asm	/^c0101a03:	c7 04 24 52 74 11 c0 	movl   $0xc0117452,(%esp)$/;"	l
c0101a0a	obj/kernel.asm	/^c0101a0a:	e8 d1 f0 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101a0f	obj/kernel.asm	/^c0101a0f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101a13	obj/kernel.asm	/^c0101a13:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101a16	obj/kernel.asm	/^c0101a16:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c0101a1a	obj/kernel.asm	/^c0101a1a:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c0101a1f	obj/kernel.asm	/^c0101a1f:	0f 86 1f fd ff ff    	jbe    c0101744 <ide_init+0x16>$/;"	l
c0101a25	obj/kernel.asm	/^c0101a25:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)$/;"	l
c0101a2c	obj/kernel.asm	/^c0101a2c:	e8 ee 0e 00 00       	call   c010291f <pic_enable>$/;"	l
c0101a31	obj/kernel.asm	/^c0101a31:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)$/;"	l
c0101a38	obj/kernel.asm	/^c0101a38:	e8 e2 0e 00 00       	call   c010291f <pic_enable>$/;"	l
c0101a3d	obj/kernel.asm	/^c0101a3d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101a44	obj/kernel.asm	/^c0101a44:	00 $/;"	l
c0101a45	obj/kernel.asm	/^c0101a45:	c7 04 24 0e 00 00 00 	movl   $0xe,(%esp)$/;"	l
c0101a4c	obj/kernel.asm	/^c0101a4c:	e8 09 3f 01 00       	call   c011595a <ioapicenable>$/;"	l
c0101a51	obj/kernel.asm	/^c0101a51:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101a58	obj/kernel.asm	/^c0101a58:	00 $/;"	l
c0101a59	obj/kernel.asm	/^c0101a59:	c7 04 24 0f 00 00 00 	movl   $0xf,(%esp)$/;"	l
c0101a60	obj/kernel.asm	/^c0101a60:	e8 f5 3e 01 00       	call   c011595a <ioapicenable>$/;"	l
c0101a65	obj/kernel.asm	/^c0101a65:	81 c4 50 02 00 00    	add    $0x250,%esp$/;"	l
c0101a6b	obj/kernel.asm	/^c0101a6b:	5b                   	pop    %ebx$/;"	l
c0101a6c	obj/kernel.asm	/^c0101a6c:	5f                   	pop    %edi$/;"	l
c0101a6d	obj/kernel.asm	/^c0101a6d:	5d                   	pop    %ebp$/;"	l
c0101a6e	obj/kernel.asm	/^c0101a6e:	c3                   	ret    $/;"	l
c0101a6f	obj/kernel.asm	/^c0101a6f <ide_device_valid>:$/;"	l
c0101a6f	obj/kernel.asm	/^c0101a6f:	55                   	push   %ebp$/;"	l
c0101a70	obj/kernel.asm	/^c0101a70:	89 e5                	mov    %esp,%ebp$/;"	l
c0101a72	obj/kernel.asm	/^c0101a72:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101a75	obj/kernel.asm	/^c0101a75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101a78	obj/kernel.asm	/^c0101a78:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101a7c	obj/kernel.asm	/^c0101a7c:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c0101a81	obj/kernel.asm	/^c0101a81:	77 24                	ja     c0101aa7 <ide_device_valid+0x38>$/;"	l
c0101a83	obj/kernel.asm	/^c0101a83:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101a87	obj/kernel.asm	/^c0101a87:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101a8a	obj/kernel.asm	/^c0101a8a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101a91	obj/kernel.asm	/^c0101a91:	29 c2                	sub    %eax,%edx$/;"	l
c0101a93	obj/kernel.asm	/^c0101a93:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c0101a99	obj/kernel.asm	/^c0101a99:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101a9c	obj/kernel.asm	/^c0101a9c:	84 c0                	test   %al,%al$/;"	l
c0101a9e	obj/kernel.asm	/^c0101a9e:	74 07                	je     c0101aa7 <ide_device_valid+0x38>$/;"	l
c0101aa0	obj/kernel.asm	/^c0101aa0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101aa5	obj/kernel.asm	/^c0101aa5:	eb 05                	jmp    c0101aac <ide_device_valid+0x3d>$/;"	l
c0101aa7	obj/kernel.asm	/^c0101aa7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101aac	obj/kernel.asm	/^c0101aac:	c9                   	leave  $/;"	l
c0101aad	obj/kernel.asm	/^c0101aad:	c3                   	ret    $/;"	l
c0101aae	obj/kernel.asm	/^c0101aae <ide_device_size>:$/;"	l
c0101aae	obj/kernel.asm	/^c0101aae:	55                   	push   %ebp$/;"	l
c0101aaf	obj/kernel.asm	/^c0101aaf:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ab1	obj/kernel.asm	/^c0101ab1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101ab4	obj/kernel.asm	/^c0101ab4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ab7	obj/kernel.asm	/^c0101ab7:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101abb	obj/kernel.asm	/^c0101abb:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101abf	obj/kernel.asm	/^c0101abf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101ac2	obj/kernel.asm	/^c0101ac2:	e8 a8 ff ff ff       	call   c0101a6f <ide_device_valid>$/;"	l
c0101ac7	obj/kernel.asm	/^c0101ac7:	85 c0                	test   %eax,%eax$/;"	l
c0101ac9	obj/kernel.asm	/^c0101ac9:	74 1b                	je     c0101ae6 <ide_device_size+0x38>$/;"	l
c0101acb	obj/kernel.asm	/^c0101acb:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101acf	obj/kernel.asm	/^c0101acf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101ad2	obj/kernel.asm	/^c0101ad2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101ad9	obj/kernel.asm	/^c0101ad9:	29 c2                	sub    %eax,%edx$/;"	l
c0101adb	obj/kernel.asm	/^c0101adb:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101ae4	obj/kernel.asm	/^c0101ae4:	eb 05                	jmp    c0101aeb <ide_device_size+0x3d>$/;"	l
c0101ae6	obj/kernel.asm	/^c0101ae6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101aeb	obj/kernel.asm	/^c0101aeb:	c9                   	leave  $/;"	l
c0101aec	obj/kernel.asm	/^c0101aec:	c3                   	ret    $/;"	l
c0101aed	obj/kernel.asm	/^c0101aed <ide_read_secs>:$/;"	l
c0101aed	obj/kernel.asm	/^c0101aed:	55                   	push   %ebp$/;"	l
c0101aee	obj/kernel.asm	/^c0101aee:	89 e5                	mov    %esp,%ebp$/;"	l
c0101af0	obj/kernel.asm	/^c0101af0:	57                   	push   %edi$/;"	l
c0101af1	obj/kernel.asm	/^c0101af1:	53                   	push   %ebx$/;"	l
c0101af2	obj/kernel.asm	/^c0101af2:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101af5	obj/kernel.asm	/^c0101af5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101af8	obj/kernel.asm	/^c0101af8:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101afc	obj/kernel.asm	/^c0101afc:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101b03	obj/kernel.asm	/^c0101b03:	77 24                	ja     c0101b29 <ide_read_secs+0x3c>$/;"	l
c0101b05	obj/kernel.asm	/^c0101b05:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101b0a	obj/kernel.asm	/^c0101b0a:	77 1d                	ja     c0101b29 <ide_read_secs+0x3c>$/;"	l
c0101b0c	obj/kernel.asm	/^c0101b0c:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101b10	obj/kernel.asm	/^c0101b10:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101b13	obj/kernel.asm	/^c0101b13:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101b1a	obj/kernel.asm	/^c0101b1a:	29 c2                	sub    %eax,%edx$/;"	l
c0101b1c	obj/kernel.asm	/^c0101b1c:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c0101b22	obj/kernel.asm	/^c0101b22:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101b25	obj/kernel.asm	/^c0101b25:	84 c0                	test   %al,%al$/;"	l
c0101b27	obj/kernel.asm	/^c0101b27:	75 24                	jne    c0101b4d <ide_read_secs+0x60>$/;"	l
c0101b29	obj/kernel.asm	/^c0101b29:	c7 44 24 0c 70 74 11 	movl   $0xc0117470,0xc(%esp)$/;"	l
c0101b30	obj/kernel.asm	/^c0101b30:	c0 $/;"	l
c0101b31	obj/kernel.asm	/^c0101b31:	c7 44 24 08 2b 74 11 	movl   $0xc011742b,0x8(%esp)$/;"	l
c0101b38	obj/kernel.asm	/^c0101b38:	c0 $/;"	l
c0101b39	obj/kernel.asm	/^c0101b39:	c7 44 24 04 a3 00 00 	movl   $0xa3,0x4(%esp)$/;"	l
c0101b40	obj/kernel.asm	/^c0101b40:	00 $/;"	l
c0101b41	obj/kernel.asm	/^c0101b41:	c7 04 24 40 74 11 c0 	movl   $0xc0117440,(%esp)$/;"	l
c0101b48	obj/kernel.asm	/^c0101b48:	e8 ea f0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0101b4d	obj/kernel.asm	/^c0101b4d:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101b54	obj/kernel.asm	/^c0101b54:	77 0f                	ja     c0101b65 <ide_read_secs+0x78>$/;"	l
c0101b56	obj/kernel.asm	/^c0101b56:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101b59	obj/kernel.asm	/^c0101b59:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	01 d0                	add    %edx,%eax$/;"	l
c0101b5e	obj/kernel.asm	/^c0101b5e:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101b63	obj/kernel.asm	/^c0101b63:	76 24                	jbe    c0101b89 <ide_read_secs+0x9c>$/;"	l
c0101b65	obj/kernel.asm	/^c0101b65:	c7 44 24 0c 98 74 11 	movl   $0xc0117498,0xc(%esp)$/;"	l
c0101b6c	obj/kernel.asm	/^c0101b6c:	c0 $/;"	l
c0101b6d	obj/kernel.asm	/^c0101b6d:	c7 44 24 08 2b 74 11 	movl   $0xc011742b,0x8(%esp)$/;"	l
c0101b74	obj/kernel.asm	/^c0101b74:	c0 $/;"	l
c0101b75	obj/kernel.asm	/^c0101b75:	c7 44 24 04 a4 00 00 	movl   $0xa4,0x4(%esp)$/;"	l
c0101b7c	obj/kernel.asm	/^c0101b7c:	00 $/;"	l
c0101b7d	obj/kernel.asm	/^c0101b7d:	c7 04 24 40 74 11 c0 	movl   $0xc0117440,(%esp)$/;"	l
c0101b84	obj/kernel.asm	/^c0101b84:	e8 ae f0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0101b89	obj/kernel.asm	/^c0101b89:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101b8d	obj/kernel.asm	/^c0101b8d:	66 d1 e8             	shr    %ax$/;"	l
c0101b90	obj/kernel.asm	/^c0101b90:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101b93	obj/kernel.asm	/^c0101b93:	0f b7 04 85 e0 73 11 	movzwl -0x3fee8c20(,%eax,4),%eax$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	c0 $/;"	l
c0101b9b	obj/kernel.asm	/^c0101b9b:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101b9f	obj/kernel.asm	/^c0101b9f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3:	66 d1 e8             	shr    %ax$/;"	l
c0101ba6	obj/kernel.asm	/^c0101ba6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101ba9	obj/kernel.asm	/^c0101ba9:	0f b7 04 85 e2 73 11 	movzwl -0x3fee8c1e(,%eax,4),%eax$/;"	l
c0101bb0	obj/kernel.asm	/^c0101bb0:	c0 $/;"	l
c0101bb1	obj/kernel.asm	/^c0101bb1:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101bb5	obj/kernel.asm	/^c0101bb5:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101bc0	obj/kernel.asm	/^c0101bc0:	00 $/;"	l
c0101bc1	obj/kernel.asm	/^c0101bc1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101bc4	obj/kernel.asm	/^c0101bc4:	e8 0b fb ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c0101bc9	obj/kernel.asm	/^c0101bc9:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101bcd	obj/kernel.asm	/^c0101bcd:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101bd0	obj/kernel.asm	/^c0101bd0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101bd3	obj/kernel.asm	/^c0101bd3:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101bd7	obj/kernel.asm	/^c0101bd7:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101bdb	obj/kernel.asm	/^c0101bdb:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101bdf	obj/kernel.asm	/^c0101bdf:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101be3	obj/kernel.asm	/^c0101be3:	ee                   	out    %al,(%dx)$/;"	l
c0101be4	obj/kernel.asm	/^c0101be4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101be7	obj/kernel.asm	/^c0101be7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bea	obj/kernel.asm	/^c0101bea:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101bee	obj/kernel.asm	/^c0101bee:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101bf1	obj/kernel.asm	/^c0101bf1:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101bf4	obj/kernel.asm	/^c0101bf4:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101bf8	obj/kernel.asm	/^c0101bf8:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101bfb	obj/kernel.asm	/^c0101bfb:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101bff	obj/kernel.asm	/^c0101bff:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101c03	obj/kernel.asm	/^c0101c03:	ee                   	out    %al,(%dx)$/;"	l
c0101c04	obj/kernel.asm	/^c0101c04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101c07	obj/kernel.asm	/^c0101c07:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c0a	obj/kernel.asm	/^c0101c0a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101c0e	obj/kernel.asm	/^c0101c0e:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101c11	obj/kernel.asm	/^c0101c11:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101c14	obj/kernel.asm	/^c0101c14:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101c1b	obj/kernel.asm	/^c0101c1b:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101c23	obj/kernel.asm	/^c0101c23:	ee                   	out    %al,(%dx)$/;"	l
c0101c24	obj/kernel.asm	/^c0101c24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101c27	obj/kernel.asm	/^c0101c27:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101c2a	obj/kernel.asm	/^c0101c2a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c2d	obj/kernel.asm	/^c0101c2d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101c31	obj/kernel.asm	/^c0101c31:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101c37	obj/kernel.asm	/^c0101c37:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101c3b	obj/kernel.asm	/^c0101c3b:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101c3e	obj/kernel.asm	/^c0101c3e:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101c42	obj/kernel.asm	/^c0101c42:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101c46	obj/kernel.asm	/^c0101c46:	ee                   	out    %al,(%dx)$/;"	l
c0101c47	obj/kernel.asm	/^c0101c47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101c4a	obj/kernel.asm	/^c0101c4a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101c4d	obj/kernel.asm	/^c0101c4d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c50	obj/kernel.asm	/^c0101c50:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101c54	obj/kernel.asm	/^c0101c54:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101c57	obj/kernel.asm	/^c0101c57:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101c5a	obj/kernel.asm	/^c0101c5a:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101c5e	obj/kernel.asm	/^c0101c5e:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101c65	obj/kernel.asm	/^c0101c65:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101c69	obj/kernel.asm	/^c0101c69:	ee                   	out    %al,(%dx)$/;"	l
c0101c6a	obj/kernel.asm	/^c0101c6a:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101c6e	obj/kernel.asm	/^c0101c6e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101c71	obj/kernel.asm	/^c0101c71:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101c74	obj/kernel.asm	/^c0101c74:	89 c2                	mov    %eax,%edx$/;"	l
c0101c76	obj/kernel.asm	/^c0101c76:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101c79	obj/kernel.asm	/^c0101c79:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101c7c	obj/kernel.asm	/^c0101c7c:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101c7f	obj/kernel.asm	/^c0101c7f:	09 d0                	or     %edx,%eax$/;"	l
c0101c81	obj/kernel.asm	/^c0101c81:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101c84	obj/kernel.asm	/^c0101c84:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c87	obj/kernel.asm	/^c0101c87:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101c8b	obj/kernel.asm	/^c0101c8b:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101c8e	obj/kernel.asm	/^c0101c8e:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101c91	obj/kernel.asm	/^c0101c91:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101c95	obj/kernel.asm	/^c0101c95:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101c98	obj/kernel.asm	/^c0101c98:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101c9c	obj/kernel.asm	/^c0101c9c:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0:	ee                   	out    %al,(%dx)$/;"	l
c0101ca1	obj/kernel.asm	/^c0101ca1:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101ca8	obj/kernel.asm	/^c0101ca8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101cab	obj/kernel.asm	/^c0101cab:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101caf	obj/kernel.asm	/^c0101caf:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101cb3	obj/kernel.asm	/^c0101cb3:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101cb7	obj/kernel.asm	/^c0101cb7:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101cbb	obj/kernel.asm	/^c0101cbb:	ee                   	out    %al,(%dx)$/;"	l
c0101cbc	obj/kernel.asm	/^c0101cbc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101cc3	obj/kernel.asm	/^c0101cc3:	eb 5a                	jmp    c0101d1f <ide_read_secs+0x232>$/;"	l
c0101cc5	obj/kernel.asm	/^c0101cc5:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101cc9	obj/kernel.asm	/^c0101cc9:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101cd0	obj/kernel.asm	/^c0101cd0:	00 $/;"	l
c0101cd1	obj/kernel.asm	/^c0101cd1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101cd4	obj/kernel.asm	/^c0101cd4:	e8 fb f9 ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c0101cd9	obj/kernel.asm	/^c0101cd9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101cdc	obj/kernel.asm	/^c0101cdc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101ce0	obj/kernel.asm	/^c0101ce0:	74 02                	je     c0101ce4 <ide_read_secs+0x1f7>$/;"	l
c0101ce2	obj/kernel.asm	/^c0101ce2:	eb 41                	jmp    c0101d25 <ide_read_secs+0x238>$/;"	l
c0101ce4	obj/kernel.asm	/^c0101ce4:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101ce8	obj/kernel.asm	/^c0101ce8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101ceb	obj/kernel.asm	/^c0101ceb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101cee	obj/kernel.asm	/^c0101cee:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101cf1	obj/kernel.asm	/^c0101cf1:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101cf8	obj/kernel.asm	/^c0101cf8:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101cfb	obj/kernel.asm	/^c0101cfb:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101cfe	obj/kernel.asm	/^c0101cfe:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101d01	obj/kernel.asm	/^c0101d01:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101d03	obj/kernel.asm	/^c0101d03:	89 df                	mov    %ebx,%edi$/;"	l
c0101d05	obj/kernel.asm	/^c0101d05:	89 c1                	mov    %eax,%ecx$/;"	l
c0101d07	obj/kernel.asm	/^c0101d07:	fc                   	cld    $/;"	l
c0101d08	obj/kernel.asm	/^c0101d08:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101d0a	obj/kernel.asm	/^c0101d0a:	89 c8                	mov    %ecx,%eax$/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c:	89 fb                	mov    %edi,%ebx$/;"	l
c0101d0e	obj/kernel.asm	/^c0101d0e:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101d11	obj/kernel.asm	/^c0101d11:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101d14	obj/kernel.asm	/^c0101d14:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101d18	obj/kernel.asm	/^c0101d18:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101d23	obj/kernel.asm	/^c0101d23:	75 a0                	jne    c0101cc5 <ide_read_secs+0x1d8>$/;"	l
c0101d25	obj/kernel.asm	/^c0101d25:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101d28	obj/kernel.asm	/^c0101d28:	83 c4 50             	add    $0x50,%esp$/;"	l
c0101d2b	obj/kernel.asm	/^c0101d2b:	5b                   	pop    %ebx$/;"	l
c0101d2c	obj/kernel.asm	/^c0101d2c:	5f                   	pop    %edi$/;"	l
c0101d2d	obj/kernel.asm	/^c0101d2d:	5d                   	pop    %ebp$/;"	l
c0101d2e	obj/kernel.asm	/^c0101d2e:	c3                   	ret    $/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f <ide_write_secs>:$/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f:	55                   	push   %ebp$/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d32	obj/kernel.asm	/^c0101d32:	56                   	push   %esi$/;"	l
c0101d33	obj/kernel.asm	/^c0101d33:	53                   	push   %ebx$/;"	l
c0101d34	obj/kernel.asm	/^c0101d34:	83 ec 50             	sub    $0x50,%esp$/;"	l
c0101d37	obj/kernel.asm	/^c0101d37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101d3a	obj/kernel.asm	/^c0101d3a:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101d3e	obj/kernel.asm	/^c0101d3e:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101d45	obj/kernel.asm	/^c0101d45:	77 24                	ja     c0101d6b <ide_write_secs+0x3c>$/;"	l
c0101d47	obj/kernel.asm	/^c0101d47:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101d4c	obj/kernel.asm	/^c0101d4c:	77 1d                	ja     c0101d6b <ide_write_secs+0x3c>$/;"	l
c0101d4e	obj/kernel.asm	/^c0101d4e:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101d52	obj/kernel.asm	/^c0101d52:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101d55	obj/kernel.asm	/^c0101d55:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101d5c	obj/kernel.asm	/^c0101d5c:	29 c2                	sub    %eax,%edx$/;"	l
c0101d5e	obj/kernel.asm	/^c0101d5e:	8d 82 80 73 15 c0    	lea    -0x3fea8c80(%edx),%eax$/;"	l
c0101d64	obj/kernel.asm	/^c0101d64:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d67	obj/kernel.asm	/^c0101d67:	84 c0                	test   %al,%al$/;"	l
c0101d69	obj/kernel.asm	/^c0101d69:	75 24                	jne    c0101d8f <ide_write_secs+0x60>$/;"	l
c0101d6b	obj/kernel.asm	/^c0101d6b:	c7 44 24 0c 70 74 11 	movl   $0xc0117470,0xc(%esp)$/;"	l
c0101d72	obj/kernel.asm	/^c0101d72:	c0 $/;"	l
c0101d73	obj/kernel.asm	/^c0101d73:	c7 44 24 08 2b 74 11 	movl   $0xc011742b,0x8(%esp)$/;"	l
c0101d7a	obj/kernel.asm	/^c0101d7a:	c0 $/;"	l
c0101d7b	obj/kernel.asm	/^c0101d7b:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c0101d82	obj/kernel.asm	/^c0101d82:	00 $/;"	l
c0101d83	obj/kernel.asm	/^c0101d83:	c7 04 24 40 74 11 c0 	movl   $0xc0117440,(%esp)$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	e8 a8 ee ff ff       	call   c0100c37 <__panic>$/;"	l
c0101d8f	obj/kernel.asm	/^c0101d8f:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	77 0f                	ja     c0101da7 <ide_write_secs+0x78>$/;"	l
c0101d98	obj/kernel.asm	/^c0101d98:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101d9b	obj/kernel.asm	/^c0101d9b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101d9e	obj/kernel.asm	/^c0101d9e:	01 d0                	add    %edx,%eax$/;"	l
c0101da0	obj/kernel.asm	/^c0101da0:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101da5	obj/kernel.asm	/^c0101da5:	76 24                	jbe    c0101dcb <ide_write_secs+0x9c>$/;"	l
c0101da7	obj/kernel.asm	/^c0101da7:	c7 44 24 0c 98 74 11 	movl   $0xc0117498,0xc(%esp)$/;"	l
c0101dae	obj/kernel.asm	/^c0101dae:	c0 $/;"	l
c0101daf	obj/kernel.asm	/^c0101daf:	c7 44 24 08 2b 74 11 	movl   $0xc011742b,0x8(%esp)$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	c0 $/;"	l
c0101db7	obj/kernel.asm	/^c0101db7:	c7 44 24 04 c1 00 00 	movl   $0xc1,0x4(%esp)$/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	00 $/;"	l
c0101dbf	obj/kernel.asm	/^c0101dbf:	c7 04 24 40 74 11 c0 	movl   $0xc0117440,(%esp)$/;"	l
c0101dc6	obj/kernel.asm	/^c0101dc6:	e8 6c ee ff ff       	call   c0100c37 <__panic>$/;"	l
c0101dcb	obj/kernel.asm	/^c0101dcb:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101dcf	obj/kernel.asm	/^c0101dcf:	66 d1 e8             	shr    %ax$/;"	l
c0101dd2	obj/kernel.asm	/^c0101dd2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101dd5	obj/kernel.asm	/^c0101dd5:	0f b7 04 85 e0 73 11 	movzwl -0x3fee8c20(,%eax,4),%eax$/;"	l
c0101ddc	obj/kernel.asm	/^c0101ddc:	c0 $/;"	l
c0101ddd	obj/kernel.asm	/^c0101ddd:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101de1	obj/kernel.asm	/^c0101de1:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101de5	obj/kernel.asm	/^c0101de5:	66 d1 e8             	shr    %ax$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101deb	obj/kernel.asm	/^c0101deb:	0f b7 04 85 e2 73 11 	movzwl -0x3fee8c1e(,%eax,4),%eax$/;"	l
c0101df2	obj/kernel.asm	/^c0101df2:	c0 $/;"	l
c0101df3	obj/kernel.asm	/^c0101df3:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101df7	obj/kernel.asm	/^c0101df7:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101dfb	obj/kernel.asm	/^c0101dfb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	00 $/;"	l
c0101e03	obj/kernel.asm	/^c0101e03:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101e06	obj/kernel.asm	/^c0101e06:	e8 c9 f8 ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c0101e0b	obj/kernel.asm	/^c0101e0b:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101e0f	obj/kernel.asm	/^c0101e0f:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101e12	obj/kernel.asm	/^c0101e12:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101e15	obj/kernel.asm	/^c0101e15:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101e19	obj/kernel.asm	/^c0101e19:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101e21	obj/kernel.asm	/^c0101e21:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101e25	obj/kernel.asm	/^c0101e25:	ee                   	out    %al,(%dx)$/;"	l
c0101e26	obj/kernel.asm	/^c0101e26:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101e29	obj/kernel.asm	/^c0101e29:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e2c	obj/kernel.asm	/^c0101e2c:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e30	obj/kernel.asm	/^c0101e30:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101e33	obj/kernel.asm	/^c0101e33:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e36	obj/kernel.asm	/^c0101e36:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101e3a	obj/kernel.asm	/^c0101e3a:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101e3d	obj/kernel.asm	/^c0101e3d:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101e41	obj/kernel.asm	/^c0101e41:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101e45	obj/kernel.asm	/^c0101e45:	ee                   	out    %al,(%dx)$/;"	l
c0101e46	obj/kernel.asm	/^c0101e46:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e49	obj/kernel.asm	/^c0101e49:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e4c	obj/kernel.asm	/^c0101e4c:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e50	obj/kernel.asm	/^c0101e50:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101e53	obj/kernel.asm	/^c0101e53:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e56	obj/kernel.asm	/^c0101e56:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101e5a	obj/kernel.asm	/^c0101e5a:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101e5d	obj/kernel.asm	/^c0101e5d:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101e61	obj/kernel.asm	/^c0101e61:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101e65	obj/kernel.asm	/^c0101e65:	ee                   	out    %al,(%dx)$/;"	l
c0101e66	obj/kernel.asm	/^c0101e66:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e69	obj/kernel.asm	/^c0101e69:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101e6c	obj/kernel.asm	/^c0101e6c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e6f	obj/kernel.asm	/^c0101e6f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e73	obj/kernel.asm	/^c0101e73:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101e76	obj/kernel.asm	/^c0101e76:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e79	obj/kernel.asm	/^c0101e79:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101e7d	obj/kernel.asm	/^c0101e7d:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101e80	obj/kernel.asm	/^c0101e80:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101e84	obj/kernel.asm	/^c0101e84:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101e88	obj/kernel.asm	/^c0101e88:	ee                   	out    %al,(%dx)$/;"	l
c0101e89	obj/kernel.asm	/^c0101e89:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101e8c	obj/kernel.asm	/^c0101e8c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101e8f	obj/kernel.asm	/^c0101e8f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e92	obj/kernel.asm	/^c0101e92:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101e96	obj/kernel.asm	/^c0101e96:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101e99	obj/kernel.asm	/^c0101e99:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101e9c	obj/kernel.asm	/^c0101e9c:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101ea0	obj/kernel.asm	/^c0101ea0:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101ea3	obj/kernel.asm	/^c0101ea3:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101ea7	obj/kernel.asm	/^c0101ea7:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101eab	obj/kernel.asm	/^c0101eab:	ee                   	out    %al,(%dx)$/;"	l
c0101eac	obj/kernel.asm	/^c0101eac:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101eb0	obj/kernel.asm	/^c0101eb0:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101eb3	obj/kernel.asm	/^c0101eb3:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101eb6	obj/kernel.asm	/^c0101eb6:	89 c2                	mov    %eax,%edx$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101ebb	obj/kernel.asm	/^c0101ebb:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101ebe	obj/kernel.asm	/^c0101ebe:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101ec1	obj/kernel.asm	/^c0101ec1:	09 d0                	or     %edx,%eax$/;"	l
c0101ec3	obj/kernel.asm	/^c0101ec3:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101ec6	obj/kernel.asm	/^c0101ec6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ec9	obj/kernel.asm	/^c0101ec9:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101ecd	obj/kernel.asm	/^c0101ecd:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101ed0	obj/kernel.asm	/^c0101ed0:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101ed3	obj/kernel.asm	/^c0101ed3:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101ed7	obj/kernel.asm	/^c0101ed7:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101eda	obj/kernel.asm	/^c0101eda:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101ede	obj/kernel.asm	/^c0101ede:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	ee                   	out    %al,(%dx)$/;"	l
c0101ee3	obj/kernel.asm	/^c0101ee3:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101ee7	obj/kernel.asm	/^c0101ee7:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101eea	obj/kernel.asm	/^c0101eea:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101eed	obj/kernel.asm	/^c0101eed:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101ef1	obj/kernel.asm	/^c0101ef1:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c0101ef5	obj/kernel.asm	/^c0101ef5:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101ef9	obj/kernel.asm	/^c0101ef9:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101efd	obj/kernel.asm	/^c0101efd:	ee                   	out    %al,(%dx)$/;"	l
c0101efe	obj/kernel.asm	/^c0101efe:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101f05	obj/kernel.asm	/^c0101f05:	eb 5a                	jmp    c0101f61 <ide_write_secs+0x232>$/;"	l
c0101f07	obj/kernel.asm	/^c0101f07:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101f0b	obj/kernel.asm	/^c0101f0b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0101f12	obj/kernel.asm	/^c0101f12:	00 $/;"	l
c0101f13	obj/kernel.asm	/^c0101f13:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0101f16	obj/kernel.asm	/^c0101f16:	e8 b9 f7 ff ff       	call   c01016d4 <ide_wait_ready>$/;"	l
c0101f1b	obj/kernel.asm	/^c0101f1b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101f1e	obj/kernel.asm	/^c0101f1e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101f22	obj/kernel.asm	/^c0101f22:	74 02                	je     c0101f26 <ide_write_secs+0x1f7>$/;"	l
c0101f24	obj/kernel.asm	/^c0101f24:	eb 41                	jmp    c0101f67 <ide_write_secs+0x238>$/;"	l
c0101f26	obj/kernel.asm	/^c0101f26:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101f2a	obj/kernel.asm	/^c0101f2a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101f30	obj/kernel.asm	/^c0101f30:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101f33	obj/kernel.asm	/^c0101f33:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101f3a	obj/kernel.asm	/^c0101f3a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101f3d	obj/kernel.asm	/^c0101f3d:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101f40	obj/kernel.asm	/^c0101f40:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101f43	obj/kernel.asm	/^c0101f43:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101f45	obj/kernel.asm	/^c0101f45:	89 de                	mov    %ebx,%esi$/;"	l
c0101f47	obj/kernel.asm	/^c0101f47:	89 c1                	mov    %eax,%ecx$/;"	l
c0101f49	obj/kernel.asm	/^c0101f49:	fc                   	cld    $/;"	l
c0101f4a	obj/kernel.asm	/^c0101f4a:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0101f4c	obj/kernel.asm	/^c0101f4c:	89 c8                	mov    %ecx,%eax$/;"	l
c0101f4e	obj/kernel.asm	/^c0101f4e:	89 f3                	mov    %esi,%ebx$/;"	l
c0101f50	obj/kernel.asm	/^c0101f50:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101f53	obj/kernel.asm	/^c0101f53:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101f56	obj/kernel.asm	/^c0101f56:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101f5a	obj/kernel.asm	/^c0101f5a:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101f65	obj/kernel.asm	/^c0101f65:	75 a0                	jne    c0101f07 <ide_write_secs+0x1d8>$/;"	l
c0101f67	obj/kernel.asm	/^c0101f67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101f6a	obj/kernel.asm	/^c0101f6a:	83 c4 50             	add    $0x50,%esp$/;"	l
c0101f6d	obj/kernel.asm	/^c0101f6d:	5b                   	pop    %ebx$/;"	l
c0101f6e	obj/kernel.asm	/^c0101f6e:	5e                   	pop    %esi$/;"	l
c0101f6f	obj/kernel.asm	/^c0101f6f:	5d                   	pop    %ebp$/;"	l
c0101f70	obj/kernel.asm	/^c0101f70:	c3                   	ret    $/;"	l
c0101f71	obj/kernel.asm	/^c0101f71 <SYSTEM_READ_TIMER>:$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	55                   	push   %ebp$/;"	l
c0101f72	obj/kernel.asm	/^c0101f72:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f74	obj/kernel.asm	/^c0101f74:	a1 68 b6 15 c0       	mov    0xc015b668,%eax$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	5d                   	pop    %ebp$/;"	l
c0101f7a	obj/kernel.asm	/^c0101f7a:	c3                   	ret    $/;"	l
c0101f7b	obj/kernel.asm	/^c0101f7b <clock_init>:$/;"	l
c0101f7b	obj/kernel.asm	/^c0101f7b:	55                   	push   %ebp$/;"	l
c0101f7c	obj/kernel.asm	/^c0101f7c:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101f81	obj/kernel.asm	/^c0101f81:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c0101f87	obj/kernel.asm	/^c0101f87:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c0101f8b	obj/kernel.asm	/^c0101f8b:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101f8f	obj/kernel.asm	/^c0101f8f:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101f93	obj/kernel.asm	/^c0101f93:	ee                   	out    %al,(%dx)$/;"	l
c0101f94	obj/kernel.asm	/^c0101f94:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c0101f9a	obj/kernel.asm	/^c0101f9a:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c0101f9e	obj/kernel.asm	/^c0101f9e:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101fa2	obj/kernel.asm	/^c0101fa2:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101fa6	obj/kernel.asm	/^c0101fa6:	ee                   	out    %al,(%dx)$/;"	l
c0101fa7	obj/kernel.asm	/^c0101fa7:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c0101fad	obj/kernel.asm	/^c0101fad:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c0101fb1	obj/kernel.asm	/^c0101fb1:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101fb5	obj/kernel.asm	/^c0101fb5:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101fb9	obj/kernel.asm	/^c0101fb9:	ee                   	out    %al,(%dx)$/;"	l
c0101fba	obj/kernel.asm	/^c0101fba:	c7 05 68 b6 15 c0 00 	movl   $0x0,0xc015b668$/;"	l
c0101fc1	obj/kernel.asm	/^c0101fc1:	00 00 00 $/;"	l
c0101fc4	obj/kernel.asm	/^c0101fc4:	c7 04 24 d2 74 11 c0 	movl   $0xc01174d2,(%esp)$/;"	l
c0101fcb	obj/kernel.asm	/^c0101fcb:	e8 10 eb ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0101fd0	obj/kernel.asm	/^c0101fd0:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0101fd7	obj/kernel.asm	/^c0101fd7:	e8 43 09 00 00       	call   c010291f <pic_enable>$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0101fe3	obj/kernel.asm	/^c0101fe3:	00 $/;"	l
c0101fe4	obj/kernel.asm	/^c0101fe4:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0101feb	obj/kernel.asm	/^c0101feb:	e8 6a 39 01 00       	call   c011595a <ioapicenable>$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	c9                   	leave  $/;"	l
c0101ff1	obj/kernel.asm	/^c0101ff1:	c3                   	ret    $/;"	l
c0101ff2	obj/kernel.asm	/^c0101ff2 <__intr_save>:$/;"	l
c0101ff2	obj/kernel.asm	/^c0101ff2:	55                   	push   %ebp$/;"	l
c0101ff3	obj/kernel.asm	/^c0101ff3:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ff5	obj/kernel.asm	/^c0101ff5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101ff8	obj/kernel.asm	/^c0101ff8:	9c                   	pushf  $/;"	l
c0101ff9	obj/kernel.asm	/^c0101ff9:	58                   	pop    %eax$/;"	l
c0101ffa	obj/kernel.asm	/^c0101ffa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101ffd	obj/kernel.asm	/^c0101ffd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102000	obj/kernel.asm	/^c0102000:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0102005	obj/kernel.asm	/^c0102005:	85 c0                	test   %eax,%eax$/;"	l
c0102007	obj/kernel.asm	/^c0102007:	74 0c                	je     c0102015 <__intr_save+0x23>$/;"	l
c0102009	obj/kernel.asm	/^c0102009:	e8 80 0a 00 00       	call   c0102a8e <intr_disable>$/;"	l
c010200e	obj/kernel.asm	/^c010200e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0102013	obj/kernel.asm	/^c0102013:	eb 05                	jmp    c010201a <__intr_save+0x28>$/;"	l
c0102015	obj/kernel.asm	/^c0102015:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010201a	obj/kernel.asm	/^c010201a:	c9                   	leave  $/;"	l
c010201b	obj/kernel.asm	/^c010201b:	c3                   	ret    $/;"	l
c010201c	obj/kernel.asm	/^c010201c <__intr_restore>:$/;"	l
c010201c	obj/kernel.asm	/^c010201c:	55                   	push   %ebp$/;"	l
c010201d	obj/kernel.asm	/^c010201d:	89 e5                	mov    %esp,%ebp$/;"	l
c010201f	obj/kernel.asm	/^c010201f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102022	obj/kernel.asm	/^c0102022:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0102026	obj/kernel.asm	/^c0102026:	74 05                	je     c010202d <__intr_restore+0x11>$/;"	l
c0102028	obj/kernel.asm	/^c0102028:	e8 5b 0a 00 00       	call   c0102a88 <intr_enable>$/;"	l
c010202d	obj/kernel.asm	/^c010202d:	c9                   	leave  $/;"	l
c010202e	obj/kernel.asm	/^c010202e:	c3                   	ret    $/;"	l
c010202f	obj/kernel.asm	/^c010202f <delay>:$/;"	l
c010202f	obj/kernel.asm	/^c010202f:	55                   	push   %ebp$/;"	l
c0102030	obj/kernel.asm	/^c0102030:	89 e5                	mov    %esp,%ebp$/;"	l
c0102032	obj/kernel.asm	/^c0102032:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102035	obj/kernel.asm	/^c0102035:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c010203b	obj/kernel.asm	/^c010203b:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010203f	obj/kernel.asm	/^c010203f:	89 c2                	mov    %eax,%edx$/;"	l
c0102041	obj/kernel.asm	/^c0102041:	ec                   	in     (%dx),%al$/;"	l
c0102042	obj/kernel.asm	/^c0102042:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0102045	obj/kernel.asm	/^c0102045:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c010204b	obj/kernel.asm	/^c010204b:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	89 c2                	mov    %eax,%edx$/;"	l
c0102051	obj/kernel.asm	/^c0102051:	ec                   	in     (%dx),%al$/;"	l
c0102052	obj/kernel.asm	/^c0102052:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0102055	obj/kernel.asm	/^c0102055:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c010205b	obj/kernel.asm	/^c010205b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010205f	obj/kernel.asm	/^c010205f:	89 c2                	mov    %eax,%edx$/;"	l
c0102061	obj/kernel.asm	/^c0102061:	ec                   	in     (%dx),%al$/;"	l
c0102062	obj/kernel.asm	/^c0102062:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0102065	obj/kernel.asm	/^c0102065:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c010206b	obj/kernel.asm	/^c010206b:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010206f	obj/kernel.asm	/^c010206f:	89 c2                	mov    %eax,%edx$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	ec                   	in     (%dx),%al$/;"	l
c0102072	obj/kernel.asm	/^c0102072:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0102075	obj/kernel.asm	/^c0102075:	c9                   	leave  $/;"	l
c0102076	obj/kernel.asm	/^c0102076:	c3                   	ret    $/;"	l
c0102077	obj/kernel.asm	/^c0102077 <cga_init>:$/;"	l
c0102077	obj/kernel.asm	/^c0102077:	55                   	push   %ebp$/;"	l
c0102078	obj/kernel.asm	/^c0102078:	89 e5                	mov    %esp,%ebp$/;"	l
c010207a	obj/kernel.asm	/^c010207a:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010207d	obj/kernel.asm	/^c010207d:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c0102084	obj/kernel.asm	/^c0102084:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102087	obj/kernel.asm	/^c0102087:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c010208a	obj/kernel.asm	/^c010208a:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c010208e	obj/kernel.asm	/^c010208e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c0102096	obj/kernel.asm	/^c0102096:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102099	obj/kernel.asm	/^c0102099:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c010209c	obj/kernel.asm	/^c010209c:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	74 12                	je     c01020b4 <cga_init+0x3d>$/;"	l
c01020a2	obj/kernel.asm	/^c01020a2:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01020a9	obj/kernel.asm	/^c01020a9:	66 c7 05 66 74 15 c0 	movw   $0x3b4,0xc0157466$/;"	l
c01020b0	obj/kernel.asm	/^c01020b0:	b4 03 $/;"	l
c01020b2	obj/kernel.asm	/^c01020b2:	eb 13                	jmp    c01020c7 <cga_init+0x50>$/;"	l
c01020b4	obj/kernel.asm	/^c01020b4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01020b7	obj/kernel.asm	/^c01020b7:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01020bb	obj/kernel.asm	/^c01020bb:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01020be	obj/kernel.asm	/^c01020be:	66 c7 05 66 74 15 c0 	movw   $0x3d4,0xc0157466$/;"	l
c01020c5	obj/kernel.asm	/^c01020c5:	d4 03 $/;"	d
c01020c7	obj/kernel.asm	/^c01020c7:	0f b7 05 66 74 15 c0 	movzwl 0xc0157466,%eax$/;"	l
c01020ce	obj/kernel.asm	/^c01020ce:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01020d1	obj/kernel.asm	/^c01020d1:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01020d5	obj/kernel.asm	/^c01020d5:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01020d9	obj/kernel.asm	/^c01020d9:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01020dd	obj/kernel.asm	/^c01020dd:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01020e1	obj/kernel.asm	/^c01020e1:	ee                   	out    %al,(%dx)$/;"	l
c01020e2	obj/kernel.asm	/^c01020e2:	0f b7 05 66 74 15 c0 	movzwl 0xc0157466,%eax$/;"	l
c01020e9	obj/kernel.asm	/^c01020e9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01020ec	obj/kernel.asm	/^c01020ec:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01020ef	obj/kernel.asm	/^c01020ef:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c01020f3	obj/kernel.asm	/^c01020f3:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c01020f7	obj/kernel.asm	/^c01020f7:	89 c2                	mov    %eax,%edx$/;"	l
c01020f9	obj/kernel.asm	/^c01020f9:	ec                   	in     (%dx),%al$/;"	l
c01020fa	obj/kernel.asm	/^c01020fa:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c01020fd	obj/kernel.asm	/^c01020fd:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102101	obj/kernel.asm	/^c0102101:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102104	obj/kernel.asm	/^c0102104:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0102107	obj/kernel.asm	/^c0102107:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010210a	obj/kernel.asm	/^c010210a:	0f b7 05 66 74 15 c0 	movzwl 0xc0157466,%eax$/;"	l
c0102111	obj/kernel.asm	/^c0102111:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0102118	obj/kernel.asm	/^c0102118:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010211c	obj/kernel.asm	/^c010211c:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0102120	obj/kernel.asm	/^c0102120:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0102124	obj/kernel.asm	/^c0102124:	ee                   	out    %al,(%dx)$/;"	l
c0102125	obj/kernel.asm	/^c0102125:	0f b7 05 66 74 15 c0 	movzwl 0xc0157466,%eax$/;"	l
c010212c	obj/kernel.asm	/^c010212c:	83 c0 01             	add    $0x1,%eax$/;"	l
c010212f	obj/kernel.asm	/^c010212f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102132	obj/kernel.asm	/^c0102132:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0102136	obj/kernel.asm	/^c0102136:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c010213a	obj/kernel.asm	/^c010213a:	89 c2                	mov    %eax,%edx$/;"	l
c010213c	obj/kernel.asm	/^c010213c:	ec                   	in     (%dx),%al$/;"	l
c010213d	obj/kernel.asm	/^c010213d:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0102140	obj/kernel.asm	/^c0102140:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0102144	obj/kernel.asm	/^c0102144:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102147	obj/kernel.asm	/^c0102147:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c010214a	obj/kernel.asm	/^c010214a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010214d	obj/kernel.asm	/^c010214d:	a3 60 74 15 c0       	mov    %eax,0xc0157460$/;"	l
c0102152	obj/kernel.asm	/^c0102152:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102155	obj/kernel.asm	/^c0102155:	66 a3 64 74 15 c0    	mov    %ax,0xc0157464$/;"	l
c010215b	obj/kernel.asm	/^c010215b:	c9                   	leave  $/;"	l
c010215c	obj/kernel.asm	/^c010215c:	c3                   	ret    $/;"	l
c010215d	obj/kernel.asm	/^c010215d <serial_init>:$/;"	l
c010215d	obj/kernel.asm	/^c010215d:	55                   	push   %ebp$/;"	l
c010215e	obj/kernel.asm	/^c010215e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102160	obj/kernel.asm	/^c0102160:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0102163	obj/kernel.asm	/^c0102163:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0102169	obj/kernel.asm	/^c0102169:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c010216d	obj/kernel.asm	/^c010216d:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0102171	obj/kernel.asm	/^c0102171:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0102175	obj/kernel.asm	/^c0102175:	ee                   	out    %al,(%dx)$/;"	l
c0102176	obj/kernel.asm	/^c0102176:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c010217c	obj/kernel.asm	/^c010217c:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c0102180	obj/kernel.asm	/^c0102180:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0102184	obj/kernel.asm	/^c0102184:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102188	obj/kernel.asm	/^c0102188:	ee                   	out    %al,(%dx)$/;"	l
c0102189	obj/kernel.asm	/^c0102189:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c010218f	obj/kernel.asm	/^c010218f:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c0102193	obj/kernel.asm	/^c0102193:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102197	obj/kernel.asm	/^c0102197:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010219b	obj/kernel.asm	/^c010219b:	ee                   	out    %al,(%dx)$/;"	l
c010219c	obj/kernel.asm	/^c010219c:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01021a2	obj/kernel.asm	/^c01021a2:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01021a6	obj/kernel.asm	/^c01021a6:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01021aa	obj/kernel.asm	/^c01021aa:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01021ae	obj/kernel.asm	/^c01021ae:	ee                   	out    %al,(%dx)$/;"	l
c01021af	obj/kernel.asm	/^c01021af:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01021b5	obj/kernel.asm	/^c01021b5:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01021b9	obj/kernel.asm	/^c01021b9:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01021bd	obj/kernel.asm	/^c01021bd:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01021c1	obj/kernel.asm	/^c01021c1:	ee                   	out    %al,(%dx)$/;"	l
c01021c2	obj/kernel.asm	/^c01021c2:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01021c8	obj/kernel.asm	/^c01021c8:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01021cc	obj/kernel.asm	/^c01021cc:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01021d0	obj/kernel.asm	/^c01021d0:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01021d4	obj/kernel.asm	/^c01021d4:	ee                   	out    %al,(%dx)$/;"	l
c01021d5	obj/kernel.asm	/^c01021d5:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01021db	obj/kernel.asm	/^c01021db:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01021df	obj/kernel.asm	/^c01021df:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01021e3	obj/kernel.asm	/^c01021e3:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01021e7	obj/kernel.asm	/^c01021e7:	ee                   	out    %al,(%dx)$/;"	l
c01021e8	obj/kernel.asm	/^c01021e8:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c01021ee	obj/kernel.asm	/^c01021ee:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	89 c2                	mov    %eax,%edx$/;"	l
c01021f4	obj/kernel.asm	/^c01021f4:	ec                   	in     (%dx),%al$/;"	l
c01021f5	obj/kernel.asm	/^c01021f5:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01021f8	obj/kernel.asm	/^c01021f8:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01021fc	obj/kernel.asm	/^c01021fc:	3c ff                	cmp    $0xff,%al$/;"	l
c01021fe	obj/kernel.asm	/^c01021fe:	0f 95 c0             	setne  %al$/;"	l
c0102201	obj/kernel.asm	/^c0102201:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102204	obj/kernel.asm	/^c0102204:	a3 68 74 15 c0       	mov    %eax,0xc0157468$/;"	l
c0102209	obj/kernel.asm	/^c0102209:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c010220f	obj/kernel.asm	/^c010220f:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c0102213	obj/kernel.asm	/^c0102213:	89 c2                	mov    %eax,%edx$/;"	l
c0102215	obj/kernel.asm	/^c0102215:	ec                   	in     (%dx),%al$/;"	l
c0102216	obj/kernel.asm	/^c0102216:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c0102219	obj/kernel.asm	/^c0102219:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c010221f	obj/kernel.asm	/^c010221f:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c0102223	obj/kernel.asm	/^c0102223:	89 c2                	mov    %eax,%edx$/;"	l
c0102225	obj/kernel.asm	/^c0102225:	ec                   	in     (%dx),%al$/;"	l
c0102226	obj/kernel.asm	/^c0102226:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0102229	obj/kernel.asm	/^c0102229:	a1 68 74 15 c0       	mov    0xc0157468,%eax$/;"	l
c010222e	obj/kernel.asm	/^c010222e:	85 c0                	test   %eax,%eax$/;"	l
c0102230	obj/kernel.asm	/^c0102230:	74 20                	je     c0102252 <serial_init+0xf5>$/;"	l
c0102232	obj/kernel.asm	/^c0102232:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0102239	obj/kernel.asm	/^c0102239:	e8 e1 06 00 00       	call   c010291f <pic_enable>$/;"	l
c010223e	obj/kernel.asm	/^c010223e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0102245	obj/kernel.asm	/^c0102245:	00 $/;"	l
c0102246	obj/kernel.asm	/^c0102246:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c010224d	obj/kernel.asm	/^c010224d:	e8 08 37 01 00       	call   c011595a <ioapicenable>$/;"	l
c0102252	obj/kernel.asm	/^c0102252:	c9                   	leave  $/;"	l
c0102253	obj/kernel.asm	/^c0102253:	c3                   	ret    $/;"	l
c0102254	obj/kernel.asm	/^c0102254 <lpt_putc_sub>:$/;"	l
c0102254	obj/kernel.asm	/^c0102254:	55                   	push   %ebp$/;"	l
c0102255	obj/kernel.asm	/^c0102255:	89 e5                	mov    %esp,%ebp$/;"	l
c0102257	obj/kernel.asm	/^c0102257:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010225a	obj/kernel.asm	/^c010225a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0102261	obj/kernel.asm	/^c0102261:	eb 09                	jmp    c010226c <lpt_putc_sub+0x18>$/;"	l
c0102263	obj/kernel.asm	/^c0102263:	e8 c7 fd ff ff       	call   c010202f <delay>$/;"	l
c0102268	obj/kernel.asm	/^c0102268:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010226c	obj/kernel.asm	/^c010226c:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c0102272	obj/kernel.asm	/^c0102272:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0102276	obj/kernel.asm	/^c0102276:	89 c2                	mov    %eax,%edx$/;"	l
c0102278	obj/kernel.asm	/^c0102278:	ec                   	in     (%dx),%al$/;"	l
c0102279	obj/kernel.asm	/^c0102279:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010227c	obj/kernel.asm	/^c010227c:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102280	obj/kernel.asm	/^c0102280:	84 c0                	test   %al,%al$/;"	l
c0102282	obj/kernel.asm	/^c0102282:	78 09                	js     c010228d <lpt_putc_sub+0x39>$/;"	l
c0102284	obj/kernel.asm	/^c0102284:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c010228b	obj/kernel.asm	/^c010228b:	7e d6                	jle    c0102263 <lpt_putc_sub+0xf>$/;"	l
c010228d	obj/kernel.asm	/^c010228d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102290	obj/kernel.asm	/^c0102290:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102293	obj/kernel.asm	/^c0102293:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c0102299	obj/kernel.asm	/^c0102299:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c010229c	obj/kernel.asm	/^c010229c:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01022a0	obj/kernel.asm	/^c01022a0:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01022a4	obj/kernel.asm	/^c01022a4:	ee                   	out    %al,(%dx)$/;"	l
c01022a5	obj/kernel.asm	/^c01022a5:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c01022ab	obj/kernel.asm	/^c01022ab:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c01022af	obj/kernel.asm	/^c01022af:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01022b3	obj/kernel.asm	/^c01022b3:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01022b7	obj/kernel.asm	/^c01022b7:	ee                   	out    %al,(%dx)$/;"	l
c01022b8	obj/kernel.asm	/^c01022b8:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01022be	obj/kernel.asm	/^c01022be:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01022c2	obj/kernel.asm	/^c01022c2:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01022c6	obj/kernel.asm	/^c01022c6:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01022ca	obj/kernel.asm	/^c01022ca:	ee                   	out    %al,(%dx)$/;"	l
c01022cb	obj/kernel.asm	/^c01022cb:	c9                   	leave  $/;"	l
c01022cc	obj/kernel.asm	/^c01022cc:	c3                   	ret    $/;"	l
c01022cd	obj/kernel.asm	/^c01022cd <lpt_putc>:$/;"	l
c01022cd	obj/kernel.asm	/^c01022cd:	55                   	push   %ebp$/;"	l
c01022ce	obj/kernel.asm	/^c01022ce:	89 e5                	mov    %esp,%ebp$/;"	l
c01022d0	obj/kernel.asm	/^c01022d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01022d3	obj/kernel.asm	/^c01022d3:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01022d7	obj/kernel.asm	/^c01022d7:	74 0d                	je     c01022e6 <lpt_putc+0x19>$/;"	l
c01022d9	obj/kernel.asm	/^c01022d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01022dc	obj/kernel.asm	/^c01022dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01022df	obj/kernel.asm	/^c01022df:	e8 70 ff ff ff       	call   c0102254 <lpt_putc_sub>$/;"	l
c01022e4	obj/kernel.asm	/^c01022e4:	eb 24                	jmp    c010230a <lpt_putc+0x3d>$/;"	l
c01022e6	obj/kernel.asm	/^c01022e6:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c01022ed	obj/kernel.asm	/^c01022ed:	e8 62 ff ff ff       	call   c0102254 <lpt_putc_sub>$/;"	l
c01022f2	obj/kernel.asm	/^c01022f2:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c01022f9	obj/kernel.asm	/^c01022f9:	e8 56 ff ff ff       	call   c0102254 <lpt_putc_sub>$/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0102305	obj/kernel.asm	/^c0102305:	e8 4a ff ff ff       	call   c0102254 <lpt_putc_sub>$/;"	l
c010230a	obj/kernel.asm	/^c010230a:	c9                   	leave  $/;"	l
c010230b	obj/kernel.asm	/^c010230b:	c3                   	ret    $/;"	l
c010230c	obj/kernel.asm	/^c010230c <cga_putc>:$/;"	l
c010230c	obj/kernel.asm	/^c010230c:	55                   	push   %ebp$/;"	l
c010230d	obj/kernel.asm	/^c010230d:	89 e5                	mov    %esp,%ebp$/;"	l
c010230f	obj/kernel.asm	/^c010230f:	53                   	push   %ebx$/;"	l
c0102310	obj/kernel.asm	/^c0102310:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0102313	obj/kernel.asm	/^c0102313:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102316	obj/kernel.asm	/^c0102316:	b0 00                	mov    $0x0,%al$/;"	l
c0102318	obj/kernel.asm	/^c0102318:	85 c0                	test   %eax,%eax$/;"	l
c010231a	obj/kernel.asm	/^c010231a:	75 07                	jne    c0102323 <cga_putc+0x17>$/;"	l
c010231c	obj/kernel.asm	/^c010231c:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0102323	obj/kernel.asm	/^c0102323:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102326	obj/kernel.asm	/^c0102326:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102329	obj/kernel.asm	/^c0102329:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c010232c	obj/kernel.asm	/^c010232c:	74 4c                	je     c010237a <cga_putc+0x6e>$/;"	l
c010232e	obj/kernel.asm	/^c010232e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0102331	obj/kernel.asm	/^c0102331:	74 57                	je     c010238a <cga_putc+0x7e>$/;"	l
c0102333	obj/kernel.asm	/^c0102333:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0102336	obj/kernel.asm	/^c0102336:	0f 85 88 00 00 00    	jne    c01023c4 <cga_putc+0xb8>$/;"	l
c010233c	obj/kernel.asm	/^c010233c:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c0102343	obj/kernel.asm	/^c0102343:	66 85 c0             	test   %ax,%ax$/;"	l
c0102346	obj/kernel.asm	/^c0102346:	74 30                	je     c0102378 <cga_putc+0x6c>$/;"	l
c0102348	obj/kernel.asm	/^c0102348:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c010234f	obj/kernel.asm	/^c010234f:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0102352	obj/kernel.asm	/^c0102352:	66 a3 64 74 15 c0    	mov    %ax,0xc0157464$/;"	l
c0102358	obj/kernel.asm	/^c0102358:	a1 60 74 15 c0       	mov    0xc0157460,%eax$/;"	l
c010235d	obj/kernel.asm	/^c010235d:	0f b7 15 64 74 15 c0 	movzwl 0xc0157464,%edx$/;"	l
c0102364	obj/kernel.asm	/^c0102364:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0102367	obj/kernel.asm	/^c0102367:	01 d2                	add    %edx,%edx$/;"	l
c0102369	obj/kernel.asm	/^c0102369:	01 c2                	add    %eax,%edx$/;"	l
c010236b	obj/kernel.asm	/^c010236b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010236e	obj/kernel.asm	/^c010236e:	b0 00                	mov    $0x0,%al$/;"	l
c0102370	obj/kernel.asm	/^c0102370:	83 c8 20             	or     $0x20,%eax$/;"	l
c0102373	obj/kernel.asm	/^c0102373:	66 89 02             	mov    %ax,(%edx)$/;"	l
c0102376	obj/kernel.asm	/^c0102376:	eb 72                	jmp    c01023ea <cga_putc+0xde>$/;"	l
c0102378	obj/kernel.asm	/^c0102378:	eb 70                	jmp    c01023ea <cga_putc+0xde>$/;"	l
c010237a	obj/kernel.asm	/^c010237a:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c0102381	obj/kernel.asm	/^c0102381:	83 c0 50             	add    $0x50,%eax$/;"	l
c0102384	obj/kernel.asm	/^c0102384:	66 a3 64 74 15 c0    	mov    %ax,0xc0157464$/;"	l
c010238a	obj/kernel.asm	/^c010238a:	0f b7 1d 64 74 15 c0 	movzwl 0xc0157464,%ebx$/;"	l
c0102391	obj/kernel.asm	/^c0102391:	0f b7 0d 64 74 15 c0 	movzwl 0xc0157464,%ecx$/;"	l
c0102398	obj/kernel.asm	/^c0102398:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c010239b	obj/kernel.asm	/^c010239b:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c01023a1	obj/kernel.asm	/^c01023a1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023a4	obj/kernel.asm	/^c01023a4:	89 c2                	mov    %eax,%edx$/;"	l
c01023a6	obj/kernel.asm	/^c01023a6:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c01023aa	obj/kernel.asm	/^c01023aa:	89 d0                	mov    %edx,%eax$/;"	l
c01023ac	obj/kernel.asm	/^c01023ac:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01023af	obj/kernel.asm	/^c01023af:	01 d0                	add    %edx,%eax$/;"	l
c01023b1	obj/kernel.asm	/^c01023b1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01023b4	obj/kernel.asm	/^c01023b4:	29 c1                	sub    %eax,%ecx$/;"	l
c01023b6	obj/kernel.asm	/^c01023b6:	89 ca                	mov    %ecx,%edx$/;"	l
c01023b8	obj/kernel.asm	/^c01023b8:	89 d8                	mov    %ebx,%eax$/;"	l
c01023ba	obj/kernel.asm	/^c01023ba:	29 d0                	sub    %edx,%eax$/;"	l
c01023bc	obj/kernel.asm	/^c01023bc:	66 a3 64 74 15 c0    	mov    %ax,0xc0157464$/;"	l
c01023c2	obj/kernel.asm	/^c01023c2:	eb 26                	jmp    c01023ea <cga_putc+0xde>$/;"	l
c01023c4	obj/kernel.asm	/^c01023c4:	8b 0d 60 74 15 c0    	mov    0xc0157460,%ecx$/;"	l
c01023ca	obj/kernel.asm	/^c01023ca:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01023d4	obj/kernel.asm	/^c01023d4:	66 89 15 64 74 15 c0 	mov    %dx,0xc0157464$/;"	l
c01023db	obj/kernel.asm	/^c01023db:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01023de	obj/kernel.asm	/^c01023de:	01 c0                	add    %eax,%eax$/;"	l
c01023e0	obj/kernel.asm	/^c01023e0:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01023e3	obj/kernel.asm	/^c01023e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023e6	obj/kernel.asm	/^c01023e6:	66 89 02             	mov    %ax,(%edx)$/;"	l
c01023e9	obj/kernel.asm	/^c01023e9:	90                   	nop$/;"	l
c01023ea	obj/kernel.asm	/^c01023ea:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c01023f1	obj/kernel.asm	/^c01023f1:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01023f5	obj/kernel.asm	/^c01023f5:	76 5b                	jbe    c0102452 <cga_putc+0x146>$/;"	l
c01023f7	obj/kernel.asm	/^c01023f7:	a1 60 74 15 c0       	mov    0xc0157460,%eax$/;"	l
c01023fc	obj/kernel.asm	/^c01023fc:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c0102402	obj/kernel.asm	/^c0102402:	a1 60 74 15 c0       	mov    0xc0157460,%eax$/;"	l
c0102407	obj/kernel.asm	/^c0102407:	c7 44 24 08 00 0f 00 	movl   $0xf00,0x8(%esp)$/;"	l
c010240e	obj/kernel.asm	/^c010240e:	00 $/;"	l
c010240f	obj/kernel.asm	/^c010240f:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0102413	obj/kernel.asm	/^c0102413:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102416	obj/kernel.asm	/^c0102416:	e8 b4 42 01 00       	call   c01166cf <memmove>$/;"	l
c010241b	obj/kernel.asm	/^c010241b:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0102422	obj/kernel.asm	/^c0102422:	eb 15                	jmp    c0102439 <cga_putc+0x12d>$/;"	l
c0102424	obj/kernel.asm	/^c0102424:	a1 60 74 15 c0       	mov    0xc0157460,%eax$/;"	l
c0102429	obj/kernel.asm	/^c0102429:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010242c	obj/kernel.asm	/^c010242c:	01 d2                	add    %edx,%edx$/;"	l
c010242e	obj/kernel.asm	/^c010242e:	01 d0                	add    %edx,%eax$/;"	l
c0102430	obj/kernel.asm	/^c0102430:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0102435	obj/kernel.asm	/^c0102435:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0102439	obj/kernel.asm	/^c0102439:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0102440	obj/kernel.asm	/^c0102440:	7e e2                	jle    c0102424 <cga_putc+0x118>$/;"	l
c0102442	obj/kernel.asm	/^c0102442:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c0102449	obj/kernel.asm	/^c0102449:	83 e8 50             	sub    $0x50,%eax$/;"	l
c010244c	obj/kernel.asm	/^c010244c:	66 a3 64 74 15 c0    	mov    %ax,0xc0157464$/;"	l
c0102452	obj/kernel.asm	/^c0102452:	0f b7 05 66 74 15 c0 	movzwl 0xc0157466,%eax$/;"	l
c0102459	obj/kernel.asm	/^c0102459:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010245c	obj/kernel.asm	/^c010245c:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0102460	obj/kernel.asm	/^c0102460:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0102464	obj/kernel.asm	/^c0102464:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0102468	obj/kernel.asm	/^c0102468:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010246c	obj/kernel.asm	/^c010246c:	ee                   	out    %al,(%dx)$/;"	l
c010246d	obj/kernel.asm	/^c010246d:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c0102474	obj/kernel.asm	/^c0102474:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102478	obj/kernel.asm	/^c0102478:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010247b	obj/kernel.asm	/^c010247b:	0f b7 15 66 74 15 c0 	movzwl 0xc0157466,%edx$/;"	l
c0102482	obj/kernel.asm	/^c0102482:	83 c2 01             	add    $0x1,%edx$/;"	l
c0102485	obj/kernel.asm	/^c0102485:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0102488	obj/kernel.asm	/^c0102488:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c010248c	obj/kernel.asm	/^c010248c:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c010248f	obj/kernel.asm	/^c010248f:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102493	obj/kernel.asm	/^c0102493:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0102497	obj/kernel.asm	/^c0102497:	ee                   	out    %al,(%dx)$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	0f b7 05 66 74 15 c0 	movzwl 0xc0157466,%eax$/;"	l
c010249f	obj/kernel.asm	/^c010249f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024a2	obj/kernel.asm	/^c01024a2:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c01024a6	obj/kernel.asm	/^c01024a6:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c01024aa	obj/kernel.asm	/^c01024aa:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01024ae	obj/kernel.asm	/^c01024ae:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01024b2	obj/kernel.asm	/^c01024b2:	ee                   	out    %al,(%dx)$/;"	l
c01024b3	obj/kernel.asm	/^c01024b3:	0f b7 05 64 74 15 c0 	movzwl 0xc0157464,%eax$/;"	l
c01024ba	obj/kernel.asm	/^c01024ba:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	0f b7 15 66 74 15 c0 	movzwl 0xc0157466,%edx$/;"	l
c01024c4	obj/kernel.asm	/^c01024c4:	83 c2 01             	add    $0x1,%edx$/;"	l
c01024c7	obj/kernel.asm	/^c01024c7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01024ca	obj/kernel.asm	/^c01024ca:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c01024ce	obj/kernel.asm	/^c01024ce:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c01024d1	obj/kernel.asm	/^c01024d1:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01024d5	obj/kernel.asm	/^c01024d5:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01024d9	obj/kernel.asm	/^c01024d9:	ee                   	out    %al,(%dx)$/;"	l
c01024da	obj/kernel.asm	/^c01024da:	83 c4 34             	add    $0x34,%esp$/;"	l
c01024dd	obj/kernel.asm	/^c01024dd:	5b                   	pop    %ebx$/;"	l
c01024de	obj/kernel.asm	/^c01024de:	5d                   	pop    %ebp$/;"	l
c01024df	obj/kernel.asm	/^c01024df:	c3                   	ret    $/;"	l
c01024e0	obj/kernel.asm	/^c01024e0 <serial_putc_sub>:$/;"	l
c01024e0	obj/kernel.asm	/^c01024e0:	55                   	push   %ebp$/;"	l
c01024e1	obj/kernel.asm	/^c01024e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01024e3	obj/kernel.asm	/^c01024e3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01024ed	obj/kernel.asm	/^c01024ed:	eb 09                	jmp    c01024f8 <serial_putc_sub+0x18>$/;"	l
c01024ef	obj/kernel.asm	/^c01024ef:	e8 3b fb ff ff       	call   c010202f <delay>$/;"	l
c01024f4	obj/kernel.asm	/^c01024f4:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01024f8	obj/kernel.asm	/^c01024f8:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01024fe	obj/kernel.asm	/^c01024fe:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0102502	obj/kernel.asm	/^c0102502:	89 c2                	mov    %eax,%edx$/;"	l
c0102504	obj/kernel.asm	/^c0102504:	ec                   	in     (%dx),%al$/;"	l
c0102505	obj/kernel.asm	/^c0102505:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0102508	obj/kernel.asm	/^c0102508:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010250c	obj/kernel.asm	/^c010250c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010250f	obj/kernel.asm	/^c010250f:	83 e0 20             	and    $0x20,%eax$/;"	l
c0102512	obj/kernel.asm	/^c0102512:	85 c0                	test   %eax,%eax$/;"	l
c0102514	obj/kernel.asm	/^c0102514:	75 09                	jne    c010251f <serial_putc_sub+0x3f>$/;"	l
c0102516	obj/kernel.asm	/^c0102516:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c010251d	obj/kernel.asm	/^c010251d:	7e d0                	jle    c01024ef <serial_putc_sub+0xf>$/;"	l
c010251f	obj/kernel.asm	/^c010251f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102522	obj/kernel.asm	/^c0102522:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102525	obj/kernel.asm	/^c0102525:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c010252b	obj/kernel.asm	/^c010252b:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c010252e	obj/kernel.asm	/^c010252e:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0102532	obj/kernel.asm	/^c0102532:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0102536	obj/kernel.asm	/^c0102536:	ee                   	out    %al,(%dx)$/;"	l
c0102537	obj/kernel.asm	/^c0102537:	c9                   	leave  $/;"	l
c0102538	obj/kernel.asm	/^c0102538:	c3                   	ret    $/;"	l
c0102539	obj/kernel.asm	/^c0102539 <serial_putc>:$/;"	l
c0102539	obj/kernel.asm	/^c0102539:	55                   	push   %ebp$/;"	l
c010253a	obj/kernel.asm	/^c010253a:	89 e5                	mov    %esp,%ebp$/;"	l
c010253c	obj/kernel.asm	/^c010253c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010253f	obj/kernel.asm	/^c010253f:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0102543	obj/kernel.asm	/^c0102543:	74 0d                	je     c0102552 <serial_putc+0x19>$/;"	l
c0102545	obj/kernel.asm	/^c0102545:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102548	obj/kernel.asm	/^c0102548:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010254b	obj/kernel.asm	/^c010254b:	e8 90 ff ff ff       	call   c01024e0 <serial_putc_sub>$/;"	l
c0102550	obj/kernel.asm	/^c0102550:	eb 24                	jmp    c0102576 <serial_putc+0x3d>$/;"	l
c0102552	obj/kernel.asm	/^c0102552:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0102559	obj/kernel.asm	/^c0102559:	e8 82 ff ff ff       	call   c01024e0 <serial_putc_sub>$/;"	l
c010255e	obj/kernel.asm	/^c010255e:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0102565	obj/kernel.asm	/^c0102565:	e8 76 ff ff ff       	call   c01024e0 <serial_putc_sub>$/;"	l
c010256a	obj/kernel.asm	/^c010256a:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	e8 6a ff ff ff       	call   c01024e0 <serial_putc_sub>$/;"	l
c0102576	obj/kernel.asm	/^c0102576:	c9                   	leave  $/;"	l
c0102577	obj/kernel.asm	/^c0102577:	c3                   	ret    $/;"	l
c0102578	obj/kernel.asm	/^c0102578 <cons_intr>:$/;"	l
c0102578	obj/kernel.asm	/^c0102578:	55                   	push   %ebp$/;"	l
c0102579	obj/kernel.asm	/^c0102579:	89 e5                	mov    %esp,%ebp$/;"	l
c010257b	obj/kernel.asm	/^c010257b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010257e	obj/kernel.asm	/^c010257e:	eb 33                	jmp    c01025b3 <cons_intr+0x3b>$/;"	l
c0102580	obj/kernel.asm	/^c0102580:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0102584	obj/kernel.asm	/^c0102584:	74 2d                	je     c01025b3 <cons_intr+0x3b>$/;"	l
c0102586	obj/kernel.asm	/^c0102586:	a1 84 76 15 c0       	mov    0xc0157684,%eax$/;"	l
c010258b	obj/kernel.asm	/^c010258b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010258e	obj/kernel.asm	/^c010258e:	89 15 84 76 15 c0    	mov    %edx,0xc0157684$/;"	l
c0102594	obj/kernel.asm	/^c0102594:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102597	obj/kernel.asm	/^c0102597:	88 90 80 74 15 c0    	mov    %dl,-0x3fea8b80(%eax)$/;"	l
c010259d	obj/kernel.asm	/^c010259d:	a1 84 76 15 c0       	mov    0xc0157684,%eax$/;"	l
c01025a2	obj/kernel.asm	/^c01025a2:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c01025a7	obj/kernel.asm	/^c01025a7:	75 0a                	jne    c01025b3 <cons_intr+0x3b>$/;"	l
c01025a9	obj/kernel.asm	/^c01025a9:	c7 05 84 76 15 c0 00 	movl   $0x0,0xc0157684$/;"	l
c01025b0	obj/kernel.asm	/^c01025b0:	00 00 00 $/;"	l
c01025b3	obj/kernel.asm	/^c01025b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025b6	obj/kernel.asm	/^c01025b6:	ff d0                	call   *%eax$/;"	l
c01025b8	obj/kernel.asm	/^c01025b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01025bb	obj/kernel.asm	/^c01025bb:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c01025bf	obj/kernel.asm	/^c01025bf:	75 bf                	jne    c0102580 <cons_intr+0x8>$/;"	l
c01025c1	obj/kernel.asm	/^c01025c1:	c9                   	leave  $/;"	l
c01025c2	obj/kernel.asm	/^c01025c2:	c3                   	ret    $/;"	l
c01025c3	obj/kernel.asm	/^c01025c3 <serial_proc_data>:$/;"	l
c01025c3	obj/kernel.asm	/^c01025c3:	55                   	push   %ebp$/;"	l
c01025c4	obj/kernel.asm	/^c01025c4:	89 e5                	mov    %esp,%ebp$/;"	l
c01025c6	obj/kernel.asm	/^c01025c6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01025c9	obj/kernel.asm	/^c01025c9:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c01025cf	obj/kernel.asm	/^c01025cf:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c01025d3	obj/kernel.asm	/^c01025d3:	89 c2                	mov    %eax,%edx$/;"	l
c01025d5	obj/kernel.asm	/^c01025d5:	ec                   	in     (%dx),%al$/;"	l
c01025d6	obj/kernel.asm	/^c01025d6:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01025d9	obj/kernel.asm	/^c01025d9:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01025dd	obj/kernel.asm	/^c01025dd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01025e0	obj/kernel.asm	/^c01025e0:	83 e0 01             	and    $0x1,%eax$/;"	l
c01025e3	obj/kernel.asm	/^c01025e3:	85 c0                	test   %eax,%eax$/;"	l
c01025e5	obj/kernel.asm	/^c01025e5:	75 07                	jne    c01025ee <serial_proc_data+0x2b>$/;"	l
c01025e7	obj/kernel.asm	/^c01025e7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01025ec	obj/kernel.asm	/^c01025ec:	eb 2a                	jmp    c0102618 <serial_proc_data+0x55>$/;"	l
c01025ee	obj/kernel.asm	/^c01025ee:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c01025f4	obj/kernel.asm	/^c01025f4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01025f8	obj/kernel.asm	/^c01025f8:	89 c2                	mov    %eax,%edx$/;"	l
c01025fa	obj/kernel.asm	/^c01025fa:	ec                   	in     (%dx),%al$/;"	l
c01025fb	obj/kernel.asm	/^c01025fb:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01025fe	obj/kernel.asm	/^c01025fe:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0102602	obj/kernel.asm	/^c0102602:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102605	obj/kernel.asm	/^c0102605:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0102608	obj/kernel.asm	/^c0102608:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c010260c	obj/kernel.asm	/^c010260c:	75 07                	jne    c0102615 <serial_proc_data+0x52>$/;"	l
c010260e	obj/kernel.asm	/^c010260e:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0102615	obj/kernel.asm	/^c0102615:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102618	obj/kernel.asm	/^c0102618:	c9                   	leave  $/;"	l
c0102619	obj/kernel.asm	/^c0102619:	c3                   	ret    $/;"	l
c010261a	obj/kernel.asm	/^c010261a <serial_intr>:$/;"	l
c010261a	obj/kernel.asm	/^c010261a:	55                   	push   %ebp$/;"	l
c010261b	obj/kernel.asm	/^c010261b:	89 e5                	mov    %esp,%ebp$/;"	l
c010261d	obj/kernel.asm	/^c010261d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102620	obj/kernel.asm	/^c0102620:	a1 68 74 15 c0       	mov    0xc0157468,%eax$/;"	l
c0102625	obj/kernel.asm	/^c0102625:	85 c0                	test   %eax,%eax$/;"	l
c0102627	obj/kernel.asm	/^c0102627:	74 0c                	je     c0102635 <serial_intr+0x1b>$/;"	l
c0102629	obj/kernel.asm	/^c0102629:	c7 04 24 c3 25 10 c0 	movl   $0xc01025c3,(%esp)$/;"	l
c0102630	obj/kernel.asm	/^c0102630:	e8 43 ff ff ff       	call   c0102578 <cons_intr>$/;"	l
c0102635	obj/kernel.asm	/^c0102635:	c9                   	leave  $/;"	l
c0102636	obj/kernel.asm	/^c0102636:	c3                   	ret    $/;"	l
c0102637	obj/kernel.asm	/^c0102637 <kbd_proc_data>:$/;"	l
c0102637	obj/kernel.asm	/^c0102637:	55                   	push   %ebp$/;"	l
c0102638	obj/kernel.asm	/^c0102638:	89 e5                	mov    %esp,%ebp$/;"	l
c010263a	obj/kernel.asm	/^c010263a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010263d	obj/kernel.asm	/^c010263d:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0102643	obj/kernel.asm	/^c0102643:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0102647	obj/kernel.asm	/^c0102647:	89 c2                	mov    %eax,%edx$/;"	l
c0102649	obj/kernel.asm	/^c0102649:	ec                   	in     (%dx),%al$/;"	l
c010264a	obj/kernel.asm	/^c010264a:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c010264d	obj/kernel.asm	/^c010264d:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0102651	obj/kernel.asm	/^c0102651:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102654	obj/kernel.asm	/^c0102654:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102657	obj/kernel.asm	/^c0102657:	85 c0                	test   %eax,%eax$/;"	l
c0102659	obj/kernel.asm	/^c0102659:	75 0a                	jne    c0102665 <kbd_proc_data+0x2e>$/;"	l
c010265b	obj/kernel.asm	/^c010265b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0102660	obj/kernel.asm	/^c0102660:	e9 59 01 00 00       	jmp    c01027be <kbd_proc_data+0x187>$/;"	l
c0102665	obj/kernel.asm	/^c0102665:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c010266b	obj/kernel.asm	/^c010266b:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c010266f	obj/kernel.asm	/^c010266f:	89 c2                	mov    %eax,%edx$/;"	l
c0102671	obj/kernel.asm	/^c0102671:	ec                   	in     (%dx),%al$/;"	l
c0102672	obj/kernel.asm	/^c0102672:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0102675	obj/kernel.asm	/^c0102675:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0102679	obj/kernel.asm	/^c0102679:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c010267c	obj/kernel.asm	/^c010267c:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	75 17                	jne    c0102699 <kbd_proc_data+0x62>$/;"	l
c0102682	obj/kernel.asm	/^c0102682:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c0102687	obj/kernel.asm	/^c0102687:	83 c8 40             	or     $0x40,%eax$/;"	l
c010268a	obj/kernel.asm	/^c010268a:	a3 88 76 15 c0       	mov    %eax,0xc0157688$/;"	l
c010268f	obj/kernel.asm	/^c010268f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0102694	obj/kernel.asm	/^c0102694:	e9 25 01 00 00       	jmp    c01027be <kbd_proc_data+0x187>$/;"	l
c0102699	obj/kernel.asm	/^c0102699:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010269d	obj/kernel.asm	/^c010269d:	84 c0                	test   %al,%al$/;"	l
c010269f	obj/kernel.asm	/^c010269f:	79 47                	jns    c01026e8 <kbd_proc_data+0xb1>$/;"	l
c01026a1	obj/kernel.asm	/^c01026a1:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c01026a6	obj/kernel.asm	/^c01026a6:	83 e0 40             	and    $0x40,%eax$/;"	l
c01026a9	obj/kernel.asm	/^c01026a9:	85 c0                	test   %eax,%eax$/;"	l
c01026ab	obj/kernel.asm	/^c01026ab:	75 09                	jne    c01026b6 <kbd_proc_data+0x7f>$/;"	l
c01026ad	obj/kernel.asm	/^c01026ad:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01026b1	obj/kernel.asm	/^c01026b1:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01026b4	obj/kernel.asm	/^c01026b4:	eb 04                	jmp    c01026ba <kbd_proc_data+0x83>$/;"	l
c01026b6	obj/kernel.asm	/^c01026b6:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01026ba	obj/kernel.asm	/^c01026ba:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c01026bd	obj/kernel.asm	/^c01026bd:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c01026c1	obj/kernel.asm	/^c01026c1:	0f b6 80 40 60 15 c0 	movzbl -0x3fea9fc0(%eax),%eax$/;"	l
c01026c8	obj/kernel.asm	/^c01026c8:	83 c8 40             	or     $0x40,%eax$/;"	l
c01026cb	obj/kernel.asm	/^c01026cb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	f7 d0                	not    %eax$/;"	l
c01026d0	obj/kernel.asm	/^c01026d0:	89 c2                	mov    %eax,%edx$/;"	l
c01026d2	obj/kernel.asm	/^c01026d2:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c01026d7	obj/kernel.asm	/^c01026d7:	21 d0                	and    %edx,%eax$/;"	l
c01026d9	obj/kernel.asm	/^c01026d9:	a3 88 76 15 c0       	mov    %eax,0xc0157688$/;"	l
c01026de	obj/kernel.asm	/^c01026de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01026e3	obj/kernel.asm	/^c01026e3:	e9 d6 00 00 00       	jmp    c01027be <kbd_proc_data+0x187>$/;"	l
c01026e8	obj/kernel.asm	/^c01026e8:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c01026ed	obj/kernel.asm	/^c01026ed:	83 e0 40             	and    $0x40,%eax$/;"	l
c01026f0	obj/kernel.asm	/^c01026f0:	85 c0                	test   %eax,%eax$/;"	l
c01026f2	obj/kernel.asm	/^c01026f2:	74 11                	je     c0102705 <kbd_proc_data+0xce>$/;"	l
c01026f4	obj/kernel.asm	/^c01026f4:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c01026f8	obj/kernel.asm	/^c01026f8:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c01026fd	obj/kernel.asm	/^c01026fd:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c0102700	obj/kernel.asm	/^c0102700:	a3 88 76 15 c0       	mov    %eax,0xc0157688$/;"	l
c0102705	obj/kernel.asm	/^c0102705:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0102709	obj/kernel.asm	/^c0102709:	0f b6 80 40 60 15 c0 	movzbl -0x3fea9fc0(%eax),%eax$/;"	l
c0102710	obj/kernel.asm	/^c0102710:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0102713	obj/kernel.asm	/^c0102713:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c0102718	obj/kernel.asm	/^c0102718:	09 d0                	or     %edx,%eax$/;"	l
c010271a	obj/kernel.asm	/^c010271a:	a3 88 76 15 c0       	mov    %eax,0xc0157688$/;"	l
c010271f	obj/kernel.asm	/^c010271f:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0102723	obj/kernel.asm	/^c0102723:	0f b6 80 40 61 15 c0 	movzbl -0x3fea9ec0(%eax),%eax$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010272d	obj/kernel.asm	/^c010272d:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c0102732	obj/kernel.asm	/^c0102732:	31 d0                	xor    %edx,%eax$/;"	l
c0102734	obj/kernel.asm	/^c0102734:	a3 88 76 15 c0       	mov    %eax,0xc0157688$/;"	l
c0102739	obj/kernel.asm	/^c0102739:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c010273e	obj/kernel.asm	/^c010273e:	83 e0 03             	and    $0x3,%eax$/;"	l
c0102741	obj/kernel.asm	/^c0102741:	8b 14 85 40 65 15 c0 	mov    -0x3fea9ac0(,%eax,4),%edx$/;"	l
c0102748	obj/kernel.asm	/^c0102748:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c010274c	obj/kernel.asm	/^c010274c:	01 d0                	add    %edx,%eax$/;"	l
c010274e	obj/kernel.asm	/^c010274e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0102751	obj/kernel.asm	/^c0102751:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102754	obj/kernel.asm	/^c0102754:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102757	obj/kernel.asm	/^c0102757:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c010275c	obj/kernel.asm	/^c010275c:	83 e0 08             	and    $0x8,%eax$/;"	l
c010275f	obj/kernel.asm	/^c010275f:	85 c0                	test   %eax,%eax$/;"	l
c0102761	obj/kernel.asm	/^c0102761:	74 22                	je     c0102785 <kbd_proc_data+0x14e>$/;"	l
c0102763	obj/kernel.asm	/^c0102763:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0102767	obj/kernel.asm	/^c0102767:	7e 0c                	jle    c0102775 <kbd_proc_data+0x13e>$/;"	l
c0102769	obj/kernel.asm	/^c0102769:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c010276d	obj/kernel.asm	/^c010276d:	7f 06                	jg     c0102775 <kbd_proc_data+0x13e>$/;"	l
c010276f	obj/kernel.asm	/^c010276f:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0102773	obj/kernel.asm	/^c0102773:	eb 10                	jmp    c0102785 <kbd_proc_data+0x14e>$/;"	l
c0102775	obj/kernel.asm	/^c0102775:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0102779	obj/kernel.asm	/^c0102779:	7e 0a                	jle    c0102785 <kbd_proc_data+0x14e>$/;"	l
c010277b	obj/kernel.asm	/^c010277b:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c010277f	obj/kernel.asm	/^c010277f:	7f 04                	jg     c0102785 <kbd_proc_data+0x14e>$/;"	l
c0102781	obj/kernel.asm	/^c0102781:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0102785	obj/kernel.asm	/^c0102785:	a1 88 76 15 c0       	mov    0xc0157688,%eax$/;"	l
c010278a	obj/kernel.asm	/^c010278a:	f7 d0                	not    %eax$/;"	l
c010278c	obj/kernel.asm	/^c010278c:	83 e0 06             	and    $0x6,%eax$/;"	l
c010278f	obj/kernel.asm	/^c010278f:	85 c0                	test   %eax,%eax$/;"	l
c0102791	obj/kernel.asm	/^c0102791:	75 28                	jne    c01027bb <kbd_proc_data+0x184>$/;"	l
c0102793	obj/kernel.asm	/^c0102793:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c010279a	obj/kernel.asm	/^c010279a:	75 1f                	jne    c01027bb <kbd_proc_data+0x184>$/;"	l
c010279c	obj/kernel.asm	/^c010279c:	c7 04 24 ed 74 11 c0 	movl   $0xc01174ed,(%esp)$/;"	l
c01027a3	obj/kernel.asm	/^c01027a3:	e8 38 e3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01027a8	obj/kernel.asm	/^c01027a8:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c01027ae	obj/kernel.asm	/^c01027ae:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c01027b2	obj/kernel.asm	/^c01027b2:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c01027b6	obj/kernel.asm	/^c01027b6:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c01027ba	obj/kernel.asm	/^c01027ba:	ee                   	out    %al,(%dx)$/;"	l
c01027bb	obj/kernel.asm	/^c01027bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01027be	obj/kernel.asm	/^c01027be:	c9                   	leave  $/;"	l
c01027bf	obj/kernel.asm	/^c01027bf:	c3                   	ret    $/;"	l
c01027c0	obj/kernel.asm	/^c01027c0 <kbd_intr>:$/;"	l
c01027c0	obj/kernel.asm	/^c01027c0:	55                   	push   %ebp$/;"	l
c01027c1	obj/kernel.asm	/^c01027c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01027c3	obj/kernel.asm	/^c01027c3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01027c6	obj/kernel.asm	/^c01027c6:	c7 04 24 37 26 10 c0 	movl   $0xc0102637,(%esp)$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	e8 a6 fd ff ff       	call   c0102578 <cons_intr>$/;"	l
c01027d2	obj/kernel.asm	/^c01027d2:	c9                   	leave  $/;"	l
c01027d3	obj/kernel.asm	/^c01027d3:	c3                   	ret    $/;"	l
c01027d4	obj/kernel.asm	/^c01027d4 <kbd_init>:$/;"	l
c01027d4	obj/kernel.asm	/^c01027d4:	55                   	push   %ebp$/;"	l
c01027d5	obj/kernel.asm	/^c01027d5:	89 e5                	mov    %esp,%ebp$/;"	l
c01027d7	obj/kernel.asm	/^c01027d7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01027da	obj/kernel.asm	/^c01027da:	e8 e1 ff ff ff       	call   c01027c0 <kbd_intr>$/;"	l
c01027df	obj/kernel.asm	/^c01027df:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01027e6	obj/kernel.asm	/^c01027e6:	e8 34 01 00 00       	call   c010291f <pic_enable>$/;"	l
c01027eb	obj/kernel.asm	/^c01027eb:	c9                   	leave  $/;"	l
c01027ec	obj/kernel.asm	/^c01027ec:	c3                   	ret    $/;"	l
c01027ed	obj/kernel.asm	/^c01027ed <cons_init>:$/;"	l
c01027ed	obj/kernel.asm	/^c01027ed:	55                   	push   %ebp$/;"	l
c01027ee	obj/kernel.asm	/^c01027ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01027f0	obj/kernel.asm	/^c01027f0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01027f3	obj/kernel.asm	/^c01027f3:	e8 7f f8 ff ff       	call   c0102077 <cga_init>$/;"	l
c01027f8	obj/kernel.asm	/^c01027f8:	a1 68 74 15 c0       	mov    0xc0157468,%eax$/;"	l
c01027fd	obj/kernel.asm	/^c01027fd:	85 c0                	test   %eax,%eax$/;"	l
c01027ff	obj/kernel.asm	/^c01027ff:	75 0c                	jne    c010280d <cons_init+0x20>$/;"	l
c0102801	obj/kernel.asm	/^c0102801:	c7 04 24 f9 74 11 c0 	movl   $0xc01174f9,(%esp)$/;"	l
c0102808	obj/kernel.asm	/^c0102808:	e8 d3 e2 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010280d	obj/kernel.asm	/^c010280d:	c9                   	leave  $/;"	l
c010280e	obj/kernel.asm	/^c010280e:	c3                   	ret    $/;"	l
c010280f	obj/kernel.asm	/^c010280f <uartinit>:$/;"	l
c010280f	obj/kernel.asm	/^c010280f:	55                   	push   %ebp$/;"	l
c0102810	obj/kernel.asm	/^c0102810:	89 e5                	mov    %esp,%ebp$/;"	l
c0102812	obj/kernel.asm	/^c0102812:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102815	obj/kernel.asm	/^c0102815:	e8 43 f9 ff ff       	call   c010215d <serial_init>$/;"	l
c010281a	obj/kernel.asm	/^c010281a:	c9                   	leave  $/;"	l
c010281b	obj/kernel.asm	/^c010281b:	c3                   	ret    $/;"	l
c010281c	obj/kernel.asm	/^c010281c <cons_putc>:$/;"	l
c010281c	obj/kernel.asm	/^c010281c:	55                   	push   %ebp$/;"	l
c010281d	obj/kernel.asm	/^c010281d:	89 e5                	mov    %esp,%ebp$/;"	l
c010281f	obj/kernel.asm	/^c010281f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102822	obj/kernel.asm	/^c0102822:	e8 cb f7 ff ff       	call   c0101ff2 <__intr_save>$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010282a	obj/kernel.asm	/^c010282a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010282d	obj/kernel.asm	/^c010282d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102830	obj/kernel.asm	/^c0102830:	e8 98 fa ff ff       	call   c01022cd <lpt_putc>$/;"	l
c0102835	obj/kernel.asm	/^c0102835:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102838	obj/kernel.asm	/^c0102838:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010283b	obj/kernel.asm	/^c010283b:	e8 cc fa ff ff       	call   c010230c <cga_putc>$/;"	l
c0102840	obj/kernel.asm	/^c0102840:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102843	obj/kernel.asm	/^c0102843:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102846	obj/kernel.asm	/^c0102846:	e8 ee fc ff ff       	call   c0102539 <serial_putc>$/;"	l
c010284b	obj/kernel.asm	/^c010284b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010284e	obj/kernel.asm	/^c010284e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102851	obj/kernel.asm	/^c0102851:	e8 c6 f7 ff ff       	call   c010201c <__intr_restore>$/;"	l
c0102856	obj/kernel.asm	/^c0102856:	c9                   	leave  $/;"	l
c0102857	obj/kernel.asm	/^c0102857:	c3                   	ret    $/;"	l
c0102858	obj/kernel.asm	/^c0102858 <cons_getc>:$/;"	l
c0102858	obj/kernel.asm	/^c0102858:	55                   	push   %ebp$/;"	l
c0102859	obj/kernel.asm	/^c0102859:	89 e5                	mov    %esp,%ebp$/;"	l
c010285b	obj/kernel.asm	/^c010285b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010285e	obj/kernel.asm	/^c010285e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102865	obj/kernel.asm	/^c0102865:	e8 88 f7 ff ff       	call   c0101ff2 <__intr_save>$/;"	l
c010286a	obj/kernel.asm	/^c010286a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010286d	obj/kernel.asm	/^c010286d:	e8 a8 fd ff ff       	call   c010261a <serial_intr>$/;"	l
c0102872	obj/kernel.asm	/^c0102872:	e8 49 ff ff ff       	call   c01027c0 <kbd_intr>$/;"	l
c0102877	obj/kernel.asm	/^c0102877:	8b 15 80 76 15 c0    	mov    0xc0157680,%edx$/;"	l
c010287d	obj/kernel.asm	/^c010287d:	a1 84 76 15 c0       	mov    0xc0157684,%eax$/;"	l
c0102882	obj/kernel.asm	/^c0102882:	39 c2                	cmp    %eax,%edx$/;"	l
c0102884	obj/kernel.asm	/^c0102884:	74 31                	je     c01028b7 <cons_getc+0x5f>$/;"	l
c0102886	obj/kernel.asm	/^c0102886:	a1 80 76 15 c0       	mov    0xc0157680,%eax$/;"	l
c010288b	obj/kernel.asm	/^c010288b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010288e	obj/kernel.asm	/^c010288e:	89 15 80 76 15 c0    	mov    %edx,0xc0157680$/;"	l
c0102894	obj/kernel.asm	/^c0102894:	0f b6 80 80 74 15 c0 	movzbl -0x3fea8b80(%eax),%eax$/;"	l
c010289b	obj/kernel.asm	/^c010289b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010289e	obj/kernel.asm	/^c010289e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01028a1	obj/kernel.asm	/^c01028a1:	a1 80 76 15 c0       	mov    0xc0157680,%eax$/;"	l
c01028a6	obj/kernel.asm	/^c01028a6:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c01028ab	obj/kernel.asm	/^c01028ab:	75 0a                	jne    c01028b7 <cons_getc+0x5f>$/;"	l
c01028ad	obj/kernel.asm	/^c01028ad:	c7 05 80 76 15 c0 00 	movl   $0x0,0xc0157680$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	00 00 00 $/;"	l
c01028b7	obj/kernel.asm	/^c01028b7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01028ba	obj/kernel.asm	/^c01028ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01028bd	obj/kernel.asm	/^c01028bd:	e8 5a f7 ff ff       	call   c010201c <__intr_restore>$/;"	l
c01028c2	obj/kernel.asm	/^c01028c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01028c5	obj/kernel.asm	/^c01028c5:	c9                   	leave  $/;"	l
c01028c6	obj/kernel.asm	/^c01028c6:	c3                   	ret    $/;"	l
c01028c7	obj/kernel.asm	/^c01028c7 <pic_setmask>:$/;"	l
c01028c7	obj/kernel.asm	/^c01028c7:	55                   	push   %ebp$/;"	l
c01028c8	obj/kernel.asm	/^c01028c8:	89 e5                	mov    %esp,%ebp$/;"	l
c01028ca	obj/kernel.asm	/^c01028ca:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01028cd	obj/kernel.asm	/^c01028cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01028d0	obj/kernel.asm	/^c01028d0:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01028d4	obj/kernel.asm	/^c01028d4:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01028d8	obj/kernel.asm	/^c01028d8:	66 a3 50 65 15 c0    	mov    %ax,0xc0156550$/;"	l
c01028de	obj/kernel.asm	/^c01028de:	a1 8c 76 15 c0       	mov    0xc015768c,%eax$/;"	l
c01028e3	obj/kernel.asm	/^c01028e3:	85 c0                	test   %eax,%eax$/;"	l
c01028e5	obj/kernel.asm	/^c01028e5:	74 36                	je     c010291d <pic_setmask+0x56>$/;"	l
c01028e7	obj/kernel.asm	/^c01028e7:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01028eb	obj/kernel.asm	/^c01028eb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c01028f4	obj/kernel.asm	/^c01028f4:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c01028f7	obj/kernel.asm	/^c01028f7:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c01028fb	obj/kernel.asm	/^c01028fb:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c01028ff	obj/kernel.asm	/^c01028ff:	ee                   	out    %al,(%dx)$/;"	l
c0102900	obj/kernel.asm	/^c0102900:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102904	obj/kernel.asm	/^c0102904:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102908	obj/kernel.asm	/^c0102908:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010290b	obj/kernel.asm	/^c010290b:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0102911	obj/kernel.asm	/^c0102911:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0102914	obj/kernel.asm	/^c0102914:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102918	obj/kernel.asm	/^c0102918:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c010291c	obj/kernel.asm	/^c010291c:	ee                   	out    %al,(%dx)$/;"	l
c010291d	obj/kernel.asm	/^c010291d:	c9                   	leave  $/;"	l
c010291e	obj/kernel.asm	/^c010291e:	c3                   	ret    $/;"	l
c010291f	obj/kernel.asm	/^c010291f <pic_enable>:$/;"	l
c010291f	obj/kernel.asm	/^c010291f:	55                   	push   %ebp$/;"	l
c0102920	obj/kernel.asm	/^c0102920:	89 e5                	mov    %esp,%ebp$/;"	l
c0102922	obj/kernel.asm	/^c0102922:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102925	obj/kernel.asm	/^c0102925:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102928	obj/kernel.asm	/^c0102928:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c010292d	obj/kernel.asm	/^c010292d:	89 c1                	mov    %eax,%ecx$/;"	l
c010292f	obj/kernel.asm	/^c010292f:	d3 e2                	shl    %cl,%edx$/;"	d
c0102931	obj/kernel.asm	/^c0102931:	89 d0                	mov    %edx,%eax$/;"	l
c0102933	obj/kernel.asm	/^c0102933:	f7 d0                	not    %eax$/;"	l
c0102935	obj/kernel.asm	/^c0102935:	89 c2                	mov    %eax,%edx$/;"	l
c0102937	obj/kernel.asm	/^c0102937:	0f b7 05 50 65 15 c0 	movzwl 0xc0156550,%eax$/;"	l
c010293e	obj/kernel.asm	/^c010293e:	21 d0                	and    %edx,%eax$/;"	l
c0102940	obj/kernel.asm	/^c0102940:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102943	obj/kernel.asm	/^c0102943:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102946	obj/kernel.asm	/^c0102946:	e8 7c ff ff ff       	call   c01028c7 <pic_setmask>$/;"	l
c010294b	obj/kernel.asm	/^c010294b:	c9                   	leave  $/;"	l
c010294c	obj/kernel.asm	/^c010294c:	c3                   	ret    $/;"	l
c010294d	obj/kernel.asm	/^c010294d <pic_init>:$/;"	l
c010294d	obj/kernel.asm	/^c010294d:	55                   	push   %ebp$/;"	l
c010294e	obj/kernel.asm	/^c010294e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102950	obj/kernel.asm	/^c0102950:	83 ec 44             	sub    $0x44,%esp$/;"	l
c0102953	obj/kernel.asm	/^c0102953:	c7 05 8c 76 15 c0 01 	movl   $0x1,0xc015768c$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	00 00 00 $/;"	l
c010295d	obj/kernel.asm	/^c010295d:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0102963	obj/kernel.asm	/^c0102963:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c0102967	obj/kernel.asm	/^c0102967:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c010296b	obj/kernel.asm	/^c010296b:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c010296f	obj/kernel.asm	/^c010296f:	ee                   	out    %al,(%dx)$/;"	l
c0102970	obj/kernel.asm	/^c0102970:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0102976	obj/kernel.asm	/^c0102976:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c010297a	obj/kernel.asm	/^c010297a:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010297e	obj/kernel.asm	/^c010297e:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0102982	obj/kernel.asm	/^c0102982:	ee                   	out    %al,(%dx)$/;"	l
c0102983	obj/kernel.asm	/^c0102983:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c0102989	obj/kernel.asm	/^c0102989:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c010298d	obj/kernel.asm	/^c010298d:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0102991	obj/kernel.asm	/^c0102991:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0102995	obj/kernel.asm	/^c0102995:	ee                   	out    %al,(%dx)$/;"	l
c0102996	obj/kernel.asm	/^c0102996:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c010299c	obj/kernel.asm	/^c010299c:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c01029a0	obj/kernel.asm	/^c01029a0:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01029a4	obj/kernel.asm	/^c01029a4:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01029a8	obj/kernel.asm	/^c01029a8:	ee                   	out    %al,(%dx)$/;"	l
c01029a9	obj/kernel.asm	/^c01029a9:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c01029af	obj/kernel.asm	/^c01029af:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c01029b3	obj/kernel.asm	/^c01029b3:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01029b7	obj/kernel.asm	/^c01029b7:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01029bb	obj/kernel.asm	/^c01029bb:	ee                   	out    %al,(%dx)$/;"	l
c01029bc	obj/kernel.asm	/^c01029bc:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c01029c2	obj/kernel.asm	/^c01029c2:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c01029c6	obj/kernel.asm	/^c01029c6:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01029ca	obj/kernel.asm	/^c01029ca:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01029ce	obj/kernel.asm	/^c01029ce:	ee                   	out    %al,(%dx)$/;"	l
c01029cf	obj/kernel.asm	/^c01029cf:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c01029d5	obj/kernel.asm	/^c01029d5:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c01029d9	obj/kernel.asm	/^c01029d9:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01029dd	obj/kernel.asm	/^c01029dd:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01029e1	obj/kernel.asm	/^c01029e1:	ee                   	out    %al,(%dx)$/;"	l
c01029e2	obj/kernel.asm	/^c01029e2:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c01029e8	obj/kernel.asm	/^c01029e8:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c01029ec	obj/kernel.asm	/^c01029ec:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01029f0	obj/kernel.asm	/^c01029f0:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01029f4	obj/kernel.asm	/^c01029f4:	ee                   	out    %al,(%dx)$/;"	l
c01029f5	obj/kernel.asm	/^c01029f5:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c01029fb	obj/kernel.asm	/^c01029fb:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c01029ff	obj/kernel.asm	/^c01029ff:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0102a03	obj/kernel.asm	/^c0102a03:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102a07	obj/kernel.asm	/^c0102a07:	ee                   	out    %al,(%dx)$/;"	l
c0102a08	obj/kernel.asm	/^c0102a08:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c0102a0e	obj/kernel.asm	/^c0102a0e:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c0102a12	obj/kernel.asm	/^c0102a12:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102a1a	obj/kernel.asm	/^c0102a1a:	ee                   	out    %al,(%dx)$/;"	l
c0102a1b	obj/kernel.asm	/^c0102a1b:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c0102a21	obj/kernel.asm	/^c0102a21:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102a25	obj/kernel.asm	/^c0102a25:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0102a29	obj/kernel.asm	/^c0102a29:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0102a2d	obj/kernel.asm	/^c0102a2d:	ee                   	out    %al,(%dx)$/;"	l
c0102a2e	obj/kernel.asm	/^c0102a2e:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c0102a34	obj/kernel.asm	/^c0102a34:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c0102a38	obj/kernel.asm	/^c0102a38:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0102a3c	obj/kernel.asm	/^c0102a3c:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0102a40	obj/kernel.asm	/^c0102a40:	ee                   	out    %al,(%dx)$/;"	l
c0102a41	obj/kernel.asm	/^c0102a41:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c0102a47	obj/kernel.asm	/^c0102a47:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c0102a4b	obj/kernel.asm	/^c0102a4b:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0102a4f	obj/kernel.asm	/^c0102a4f:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0102a53	obj/kernel.asm	/^c0102a53:	ee                   	out    %al,(%dx)$/;"	l
c0102a54	obj/kernel.asm	/^c0102a54:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c0102a5a	obj/kernel.asm	/^c0102a5a:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c0102a5e	obj/kernel.asm	/^c0102a5e:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0102a62	obj/kernel.asm	/^c0102a62:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c0102a66	obj/kernel.asm	/^c0102a66:	ee                   	out    %al,(%dx)$/;"	l
c0102a67	obj/kernel.asm	/^c0102a67:	0f b7 05 50 65 15 c0 	movzwl 0xc0156550,%eax$/;"	l
c0102a6e	obj/kernel.asm	/^c0102a6e:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c0102a72	obj/kernel.asm	/^c0102a72:	74 12                	je     c0102a86 <pic_init+0x139>$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	0f b7 05 50 65 15 c0 	movzwl 0xc0156550,%eax$/;"	l
c0102a7b	obj/kernel.asm	/^c0102a7b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102a7e	obj/kernel.asm	/^c0102a7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102a81	obj/kernel.asm	/^c0102a81:	e8 41 fe ff ff       	call   c01028c7 <pic_setmask>$/;"	l
c0102a86	obj/kernel.asm	/^c0102a86:	c9                   	leave  $/;"	l
c0102a87	obj/kernel.asm	/^c0102a87:	c3                   	ret    $/;"	l
c0102a88	obj/kernel.asm	/^c0102a88 <intr_enable>:$/;"	l
c0102a88	obj/kernel.asm	/^c0102a88:	55                   	push   %ebp$/;"	l
c0102a89	obj/kernel.asm	/^c0102a89:	89 e5                	mov    %esp,%ebp$/;"	l
c0102a8b	obj/kernel.asm	/^c0102a8b:	fb                   	sti    $/;"	l
c0102a8c	obj/kernel.asm	/^c0102a8c:	5d                   	pop    %ebp$/;"	l
c0102a8d	obj/kernel.asm	/^c0102a8d:	c3                   	ret    $/;"	l
c0102a8e	obj/kernel.asm	/^c0102a8e <intr_disable>:$/;"	l
c0102a8e	obj/kernel.asm	/^c0102a8e:	55                   	push   %ebp$/;"	l
c0102a8f	obj/kernel.asm	/^c0102a8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102a91	obj/kernel.asm	/^c0102a91:	fa                   	cli    $/;"	l
c0102a92	obj/kernel.asm	/^c0102a92:	5d                   	pop    %ebp$/;"	l
c0102a93	obj/kernel.asm	/^c0102a93:	c3                   	ret    $/;"	l
c0102a94	obj/kernel.asm	/^c0102a94 <print_ticks>:$/;"	l
c0102a94	obj/kernel.asm	/^c0102a94:	55                   	push   %ebp$/;"	l
c0102a95	obj/kernel.asm	/^c0102a95:	89 e5                	mov    %esp,%ebp$/;"	l
c0102a97	obj/kernel.asm	/^c0102a97:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0102aa1	obj/kernel.asm	/^c0102aa1:	00 $/;"	l
c0102aa2	obj/kernel.asm	/^c0102aa2:	c7 04 24 20 75 11 c0 	movl   $0xc0117520,(%esp)$/;"	l
c0102aa9	obj/kernel.asm	/^c0102aa9:	e8 32 e0 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102aae	obj/kernel.asm	/^c0102aae:	c9                   	leave  $/;"	l
c0102aaf	obj/kernel.asm	/^c0102aaf:	c3                   	ret    $/;"	l
c0102ab0	obj/kernel.asm	/^c0102ab0 <idt_init>:$/;"	l
c0102ab0	obj/kernel.asm	/^c0102ab0:	55                   	push   %ebp$/;"	l
c0102ab1	obj/kernel.asm	/^c0102ab1:	89 e5                	mov    %esp,%ebp$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102abd	obj/kernel.asm	/^c0102abd:	e9 c3 00 00 00       	jmp    c0102b85 <idt_init+0xd5>$/;"	l
c0102ac2	obj/kernel.asm	/^c0102ac2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102ac5	obj/kernel.asm	/^c0102ac5:	8b 04 85 e0 65 15 c0 	mov    -0x3fea9a20(,%eax,4),%eax$/;"	l
c0102acc	obj/kernel.asm	/^c0102acc:	89 c2                	mov    %eax,%edx$/;"	l
c0102ace	obj/kernel.asm	/^c0102ace:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102ad1	obj/kernel.asm	/^c0102ad1:	66 89 14 c5 a0 76 15 	mov    %dx,-0x3fea8960(,%eax,8)$/;"	l
c0102ad8	obj/kernel.asm	/^c0102ad8:	c0 $/;"	l
c0102ad9	obj/kernel.asm	/^c0102ad9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102adc	obj/kernel.asm	/^c0102adc:	66 c7 04 c5 a2 76 15 	movw   $0x8,-0x3fea895e(,%eax,8)$/;"	l
c0102ae3	obj/kernel.asm	/^c0102ae3:	c0 08 00 $/;"	l
c0102ae6	obj/kernel.asm	/^c0102ae6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102ae9	obj/kernel.asm	/^c0102ae9:	0f b6 14 c5 a4 76 15 	movzbl -0x3fea895c(,%eax,8),%edx$/;"	l
c0102af0	obj/kernel.asm	/^c0102af0:	c0 $/;"	l
c0102af1	obj/kernel.asm	/^c0102af1:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102af4	obj/kernel.asm	/^c0102af4:	88 14 c5 a4 76 15 c0 	mov    %dl,-0x3fea895c(,%eax,8)$/;"	l
c0102afb	obj/kernel.asm	/^c0102afb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102afe	obj/kernel.asm	/^c0102afe:	0f b6 14 c5 a4 76 15 	movzbl -0x3fea895c(,%eax,8),%edx$/;"	l
c0102b05	obj/kernel.asm	/^c0102b05:	c0 $/;"	l
c0102b06	obj/kernel.asm	/^c0102b06:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102b09	obj/kernel.asm	/^c0102b09:	88 14 c5 a4 76 15 c0 	mov    %dl,-0x3fea895c(,%eax,8)$/;"	l
c0102b10	obj/kernel.asm	/^c0102b10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b13	obj/kernel.asm	/^c0102b13:	0f b6 14 c5 a5 76 15 	movzbl -0x3fea895b(,%eax,8),%edx$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a:	c0 $/;"	l
c0102b1b	obj/kernel.asm	/^c0102b1b:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c0102b1e	obj/kernel.asm	/^c0102b1e:	83 ca 0e             	or     $0xe,%edx$/;"	l
c0102b21	obj/kernel.asm	/^c0102b21:	88 14 c5 a5 76 15 c0 	mov    %dl,-0x3fea895b(,%eax,8)$/;"	l
c0102b28	obj/kernel.asm	/^c0102b28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b:	0f b6 14 c5 a5 76 15 	movzbl -0x3fea895b(,%eax,8),%edx$/;"	l
c0102b32	obj/kernel.asm	/^c0102b32:	c0 $/;"	l
c0102b33	obj/kernel.asm	/^c0102b33:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102b36	obj/kernel.asm	/^c0102b36:	88 14 c5 a5 76 15 c0 	mov    %dl,-0x3fea895b(,%eax,8)$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b40	obj/kernel.asm	/^c0102b40:	0f b6 14 c5 a5 76 15 	movzbl -0x3fea895b(,%eax,8),%edx$/;"	l
c0102b47	obj/kernel.asm	/^c0102b47:	c0 $/;"	l
c0102b48	obj/kernel.asm	/^c0102b48:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0102b4b	obj/kernel.asm	/^c0102b4b:	88 14 c5 a5 76 15 c0 	mov    %dl,-0x3fea895b(,%eax,8)$/;"	l
c0102b52	obj/kernel.asm	/^c0102b52:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b55	obj/kernel.asm	/^c0102b55:	0f b6 14 c5 a5 76 15 	movzbl -0x3fea895b(,%eax,8),%edx$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c:	c0 $/;"	l
c0102b5d	obj/kernel.asm	/^c0102b5d:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102b60	obj/kernel.asm	/^c0102b60:	88 14 c5 a5 76 15 c0 	mov    %dl,-0x3fea895b(,%eax,8)$/;"	l
c0102b67	obj/kernel.asm	/^c0102b67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a:	8b 04 85 e0 65 15 c0 	mov    -0x3fea9a20(,%eax,4),%eax$/;"	l
c0102b71	obj/kernel.asm	/^c0102b71:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102b74	obj/kernel.asm	/^c0102b74:	89 c2                	mov    %eax,%edx$/;"	l
c0102b76	obj/kernel.asm	/^c0102b76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b79	obj/kernel.asm	/^c0102b79:	66 89 14 c5 a6 76 15 	mov    %dx,-0x3fea895a(,%eax,8)$/;"	l
c0102b80	obj/kernel.asm	/^c0102b80:	c0 $/;"	l
c0102b81	obj/kernel.asm	/^c0102b81:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0102b85	obj/kernel.asm	/^c0102b85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c0102b8d	obj/kernel.asm	/^c0102b8d:	0f 86 2f ff ff ff    	jbe    c0102ac2 <idt_init+0x12>$/;"	l
c0102b93	obj/kernel.asm	/^c0102b93:	a1 e0 67 15 c0       	mov    0xc01567e0,%eax$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98:	66 a3 a0 7a 15 c0    	mov    %ax,0xc0157aa0$/;"	l
c0102b9e	obj/kernel.asm	/^c0102b9e:	66 c7 05 a2 7a 15 c0 	movw   $0x8,0xc0157aa2$/;"	l
c0102ba5	obj/kernel.asm	/^c0102ba5:	08 00 $/;"	l
c0102ba7	obj/kernel.asm	/^c0102ba7:	0f b6 05 a4 7a 15 c0 	movzbl 0xc0157aa4,%eax$/;"	l
c0102bae	obj/kernel.asm	/^c0102bae:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c0102bb1	obj/kernel.asm	/^c0102bb1:	a2 a4 7a 15 c0       	mov    %al,0xc0157aa4$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6:	0f b6 05 a4 7a 15 c0 	movzbl 0xc0157aa4,%eax$/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	a2 a4 7a 15 c0       	mov    %al,0xc0157aa4$/;"	l
c0102bc5	obj/kernel.asm	/^c0102bc5:	0f b6 05 a5 7a 15 c0 	movzbl 0xc0157aa5,%eax$/;"	l
c0102bcc	obj/kernel.asm	/^c0102bcc:	83 c8 0f             	or     $0xf,%eax$/;"	l
c0102bcf	obj/kernel.asm	/^c0102bcf:	a2 a5 7a 15 c0       	mov    %al,0xc0157aa5$/;"	l
c0102bd4	obj/kernel.asm	/^c0102bd4:	0f b6 05 a5 7a 15 c0 	movzbl 0xc0157aa5,%eax$/;"	l
c0102bdb	obj/kernel.asm	/^c0102bdb:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0102bde	obj/kernel.asm	/^c0102bde:	a2 a5 7a 15 c0       	mov    %al,0xc0157aa5$/;"	l
c0102be3	obj/kernel.asm	/^c0102be3:	0f b6 05 a5 7a 15 c0 	movzbl 0xc0157aa5,%eax$/;"	l
c0102bea	obj/kernel.asm	/^c0102bea:	83 c8 60             	or     $0x60,%eax$/;"	l
c0102bed	obj/kernel.asm	/^c0102bed:	a2 a5 7a 15 c0       	mov    %al,0xc0157aa5$/;"	l
c0102bf2	obj/kernel.asm	/^c0102bf2:	0f b6 05 a5 7a 15 c0 	movzbl 0xc0157aa5,%eax$/;"	l
c0102bf9	obj/kernel.asm	/^c0102bf9:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0102bfc	obj/kernel.asm	/^c0102bfc:	a2 a5 7a 15 c0       	mov    %al,0xc0157aa5$/;"	l
c0102c01	obj/kernel.asm	/^c0102c01:	a1 e0 67 15 c0       	mov    0xc01567e0,%eax$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102c09	obj/kernel.asm	/^c0102c09:	66 a3 a6 7a 15 c0    	mov    %ax,0xc0157aa6$/;"	l
c0102c0f	obj/kernel.asm	/^c0102c0f:	c7 45 f0 60 65 15 c0 	movl   $0xc0156560,-0x10(%ebp)$/;"	l
c0102c16	obj/kernel.asm	/^c0102c16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19:	0f 01 18             	lidtl  (%eax)$/;"	l
c0102c1c	obj/kernel.asm	/^c0102c1c:	c7 44 24 04 60 65 15 	movl   $0xc0156560,0x4(%esp)$/;"	l
c0102c23	obj/kernel.asm	/^c0102c23:	c0 $/;"	l
c0102c24	obj/kernel.asm	/^c0102c24:	c7 04 24 2a 75 11 c0 	movl   $0xc011752a,(%esp)$/;"	l
c0102c2b	obj/kernel.asm	/^c0102c2b:	e8 b0 de ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102c30	obj/kernel.asm	/^c0102c30:	c9                   	leave  $/;"	l
c0102c31	obj/kernel.asm	/^c0102c31:	c3                   	ret    $/;"	l
c0102c32	obj/kernel.asm	/^c0102c32 <trapname>:$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32:	55                   	push   %ebp$/;"	l
c0102c33	obj/kernel.asm	/^c0102c33:	89 e5                	mov    %esp,%ebp$/;"	l
c0102c35	obj/kernel.asm	/^c0102c35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102c38	obj/kernel.asm	/^c0102c38:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b:	77 0c                	ja     c0102c49 <trapname+0x17>$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40:	8b 04 85 00 7a 11 c0 	mov    -0x3fee8600(,%eax,4),%eax$/;"	l
c0102c47	obj/kernel.asm	/^c0102c47:	eb 18                	jmp    c0102c61 <trapname+0x2f>$/;"	l
c0102c49	obj/kernel.asm	/^c0102c49:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d:	7e 0d                	jle    c0102c5c <trapname+0x2a>$/;"	l
c0102c4f	obj/kernel.asm	/^c0102c4f:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c0102c53	obj/kernel.asm	/^c0102c53:	7f 07                	jg     c0102c5c <trapname+0x2a>$/;"	l
c0102c55	obj/kernel.asm	/^c0102c55:	b8 39 75 11 c0       	mov    $0xc0117539,%eax$/;"	l
c0102c5a	obj/kernel.asm	/^c0102c5a:	eb 05                	jmp    c0102c61 <trapname+0x2f>$/;"	l
c0102c5c	obj/kernel.asm	/^c0102c5c:	b8 4c 75 11 c0       	mov    $0xc011754c,%eax$/;"	l
c0102c61	obj/kernel.asm	/^c0102c61:	5d                   	pop    %ebp$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62:	c3                   	ret    $/;"	l
c0102c63	obj/kernel.asm	/^c0102c63 <trap_in_kernel>:$/;"	l
c0102c63	obj/kernel.asm	/^c0102c63:	55                   	push   %ebp$/;"	l
c0102c64	obj/kernel.asm	/^c0102c64:	89 e5                	mov    %esp,%ebp$/;"	l
c0102c66	obj/kernel.asm	/^c0102c66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102c69	obj/kernel.asm	/^c0102c69:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102c6d	obj/kernel.asm	/^c0102c6d:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102c71	obj/kernel.asm	/^c0102c71:	0f 94 c0             	sete   %al$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102c77	obj/kernel.asm	/^c0102c77:	5d                   	pop    %ebp$/;"	l
c0102c78	obj/kernel.asm	/^c0102c78:	c3                   	ret    $/;"	l
c0102c79	obj/kernel.asm	/^c0102c79 <print_trapframe>:$/;"	l
c0102c79	obj/kernel.asm	/^c0102c79:	55                   	push   %ebp$/;"	l
c0102c7a	obj/kernel.asm	/^c0102c7a:	89 e5                	mov    %esp,%ebp$/;"	l
c0102c7c	obj/kernel.asm	/^c0102c7c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102c7f	obj/kernel.asm	/^c0102c7f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102c82	obj/kernel.asm	/^c0102c82:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86:	c7 04 24 8d 75 11 c0 	movl   $0xc011758d,(%esp)$/;"	l
c0102c8d	obj/kernel.asm	/^c0102c8d:	e8 4e de ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102c92	obj/kernel.asm	/^c0102c92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102c95	obj/kernel.asm	/^c0102c95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98:	e8 a1 01 00 00       	call   c0102e3e <print_regs>$/;"	l
c0102c9d	obj/kernel.asm	/^c0102c9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ca0	obj/kernel.asm	/^c0102ca0:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c0102ca4	obj/kernel.asm	/^c0102ca4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102ca7	obj/kernel.asm	/^c0102ca7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102cab	obj/kernel.asm	/^c0102cab:	c7 04 24 9e 75 11 c0 	movl   $0xc011759e,(%esp)$/;"	l
c0102cb2	obj/kernel.asm	/^c0102cb2:	e8 29 de ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102cb7	obj/kernel.asm	/^c0102cb7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102cba	obj/kernel.asm	/^c0102cba:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c0102cbe	obj/kernel.asm	/^c0102cbe:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102cc1	obj/kernel.asm	/^c0102cc1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5:	c7 04 24 b1 75 11 c0 	movl   $0xc01175b1,(%esp)$/;"	l
c0102ccc	obj/kernel.asm	/^c0102ccc:	e8 0f de ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102cd1	obj/kernel.asm	/^c0102cd1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102cd4	obj/kernel.asm	/^c0102cd4:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102cd8	obj/kernel.asm	/^c0102cd8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102cdb	obj/kernel.asm	/^c0102cdb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102cdf	obj/kernel.asm	/^c0102cdf:	c7 04 24 c4 75 11 c0 	movl   $0xc01175c4,(%esp)$/;"	l
c0102ce6	obj/kernel.asm	/^c0102ce6:	e8 f5 dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102ceb	obj/kernel.asm	/^c0102ceb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102cee	obj/kernel.asm	/^c0102cee:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102cf5	obj/kernel.asm	/^c0102cf5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102cf9	obj/kernel.asm	/^c0102cf9:	c7 04 24 d7 75 11 c0 	movl   $0xc01175d7,(%esp)$/;"	l
c0102d00	obj/kernel.asm	/^c0102d00:	e8 db dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102d05	obj/kernel.asm	/^c0102d05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102d08	obj/kernel.asm	/^c0102d08:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0102d0b	obj/kernel.asm	/^c0102d0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102d0e	obj/kernel.asm	/^c0102d0e:	e8 1f ff ff ff       	call   c0102c32 <trapname>$/;"	l
c0102d13	obj/kernel.asm	/^c0102d13:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16:	8b 52 30             	mov    0x30(%edx),%edx$/;"	l
c0102d19	obj/kernel.asm	/^c0102d19:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0102d1d	obj/kernel.asm	/^c0102d1d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0102d21	obj/kernel.asm	/^c0102d21:	c7 04 24 ea 75 11 c0 	movl   $0xc01175ea,(%esp)$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28:	e8 b3 dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102d2d	obj/kernel.asm	/^c0102d2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102d30	obj/kernel.asm	/^c0102d30:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102d33	obj/kernel.asm	/^c0102d33:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102d37	obj/kernel.asm	/^c0102d37:	c7 04 24 fc 75 11 c0 	movl   $0xc01175fc,(%esp)$/;"	l
c0102d3e	obj/kernel.asm	/^c0102d3e:	e8 9d dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102d46	obj/kernel.asm	/^c0102d46:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0102d49	obj/kernel.asm	/^c0102d49:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102d4d	obj/kernel.asm	/^c0102d4d:	c7 04 24 0b 76 11 c0 	movl   $0xc011760b,(%esp)$/;"	l
c0102d54	obj/kernel.asm	/^c0102d54:	e8 87 dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102d59	obj/kernel.asm	/^c0102d59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102d5c	obj/kernel.asm	/^c0102d5c:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102d60	obj/kernel.asm	/^c0102d60:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102d63	obj/kernel.asm	/^c0102d63:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67:	c7 04 24 1a 76 11 c0 	movl   $0xc011761a,(%esp)$/;"	l
c0102d6e	obj/kernel.asm	/^c0102d6e:	e8 6d dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102d73	obj/kernel.asm	/^c0102d73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102d76	obj/kernel.asm	/^c0102d76:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102d7d	obj/kernel.asm	/^c0102d7d:	c7 04 24 2d 76 11 c0 	movl   $0xc011762d,(%esp)$/;"	l
c0102d84	obj/kernel.asm	/^c0102d84:	e8 57 dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102d89	obj/kernel.asm	/^c0102d89:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102d90	obj/kernel.asm	/^c0102d90:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c0102d97	obj/kernel.asm	/^c0102d97:	eb 3e                	jmp    c0102dd7 <print_trapframe+0x15e>$/;"	l
c0102d99	obj/kernel.asm	/^c0102d99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102d9c	obj/kernel.asm	/^c0102d9c:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c0102d9f	obj/kernel.asm	/^c0102d9f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102da2	obj/kernel.asm	/^c0102da2:	21 d0                	and    %edx,%eax$/;"	l
c0102da4	obj/kernel.asm	/^c0102da4:	85 c0                	test   %eax,%eax$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6:	74 28                	je     c0102dd0 <print_trapframe+0x157>$/;"	l
c0102da8	obj/kernel.asm	/^c0102da8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102dab	obj/kernel.asm	/^c0102dab:	8b 04 85 80 65 15 c0 	mov    -0x3fea9a80(,%eax,4),%eax$/;"	l
c0102db2	obj/kernel.asm	/^c0102db2:	85 c0                	test   %eax,%eax$/;"	l
c0102db4	obj/kernel.asm	/^c0102db4:	74 1a                	je     c0102dd0 <print_trapframe+0x157>$/;"	l
c0102db6	obj/kernel.asm	/^c0102db6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102db9	obj/kernel.asm	/^c0102db9:	8b 04 85 80 65 15 c0 	mov    -0x3fea9a80(,%eax,4),%eax$/;"	l
c0102dc0	obj/kernel.asm	/^c0102dc0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102dc4	obj/kernel.asm	/^c0102dc4:	c7 04 24 3c 76 11 c0 	movl   $0xc011763c,(%esp)$/;"	l
c0102dcb	obj/kernel.asm	/^c0102dcb:	e8 10 dd ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102dd0	obj/kernel.asm	/^c0102dd0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0102dd4	obj/kernel.asm	/^c0102dd4:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c0102dd7	obj/kernel.asm	/^c0102dd7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102dda	obj/kernel.asm	/^c0102dda:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c0102ddd	obj/kernel.asm	/^c0102ddd:	76 ba                	jbe    c0102d99 <print_trapframe+0x120>$/;"	l
c0102ddf	obj/kernel.asm	/^c0102ddf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102de2	obj/kernel.asm	/^c0102de2:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c0102dea	obj/kernel.asm	/^c0102dea:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0102ded	obj/kernel.asm	/^c0102ded:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102df1	obj/kernel.asm	/^c0102df1:	c7 04 24 40 76 11 c0 	movl   $0xc0117640,(%esp)$/;"	l
c0102df8	obj/kernel.asm	/^c0102df8:	e8 e3 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102dfd	obj/kernel.asm	/^c0102dfd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102e03	obj/kernel.asm	/^c0102e03:	e8 5b fe ff ff       	call   c0102c63 <trap_in_kernel>$/;"	l
c0102e08	obj/kernel.asm	/^c0102e08:	85 c0                	test   %eax,%eax$/;"	l
c0102e0a	obj/kernel.asm	/^c0102e0a:	75 30                	jne    c0102e3c <print_trapframe+0x1c3>$/;"	l
c0102e0c	obj/kernel.asm	/^c0102e0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e0f	obj/kernel.asm	/^c0102e0f:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102e16	obj/kernel.asm	/^c0102e16:	c7 04 24 49 76 11 c0 	movl   $0xc0117649,(%esp)$/;"	l
c0102e1d	obj/kernel.asm	/^c0102e1d:	e8 be dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102e22	obj/kernel.asm	/^c0102e22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e25	obj/kernel.asm	/^c0102e25:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c0102e29	obj/kernel.asm	/^c0102e29:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102e2c	obj/kernel.asm	/^c0102e2c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102e30	obj/kernel.asm	/^c0102e30:	c7 04 24 58 76 11 c0 	movl   $0xc0117658,(%esp)$/;"	l
c0102e37	obj/kernel.asm	/^c0102e37:	e8 a4 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102e3c	obj/kernel.asm	/^c0102e3c:	c9                   	leave  $/;"	l
c0102e3d	obj/kernel.asm	/^c0102e3d:	c3                   	ret    $/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e <print_regs>:$/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e:	55                   	push   %ebp$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102e41	obj/kernel.asm	/^c0102e41:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102e44	obj/kernel.asm	/^c0102e44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e47	obj/kernel.asm	/^c0102e47:	8b 00                	mov    (%eax),%eax$/;"	l
c0102e49	obj/kernel.asm	/^c0102e49:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102e4d	obj/kernel.asm	/^c0102e4d:	c7 04 24 6b 76 11 c0 	movl   $0xc011766b,(%esp)$/;"	l
c0102e54	obj/kernel.asm	/^c0102e54:	e8 87 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102e59	obj/kernel.asm	/^c0102e59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e5c	obj/kernel.asm	/^c0102e5c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0102e5f	obj/kernel.asm	/^c0102e5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63:	c7 04 24 7a 76 11 c0 	movl   $0xc011767a,(%esp)$/;"	l
c0102e6a	obj/kernel.asm	/^c0102e6a:	e8 71 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102e6f	obj/kernel.asm	/^c0102e6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e72	obj/kernel.asm	/^c0102e72:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102e79	obj/kernel.asm	/^c0102e79:	c7 04 24 89 76 11 c0 	movl   $0xc0117689,(%esp)$/;"	l
c0102e80	obj/kernel.asm	/^c0102e80:	e8 5b dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102e85	obj/kernel.asm	/^c0102e85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e88	obj/kernel.asm	/^c0102e88:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0102e8b	obj/kernel.asm	/^c0102e8b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102e8f	obj/kernel.asm	/^c0102e8f:	c7 04 24 98 76 11 c0 	movl   $0xc0117698,(%esp)$/;"	l
c0102e96	obj/kernel.asm	/^c0102e96:	e8 45 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102e9b	obj/kernel.asm	/^c0102e9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102e9e	obj/kernel.asm	/^c0102e9e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102ea1	obj/kernel.asm	/^c0102ea1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102ea5	obj/kernel.asm	/^c0102ea5:	c7 04 24 a7 76 11 c0 	movl   $0xc01176a7,(%esp)$/;"	l
c0102eac	obj/kernel.asm	/^c0102eac:	e8 2f dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102eb1	obj/kernel.asm	/^c0102eb1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0102eb7	obj/kernel.asm	/^c0102eb7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102ebb	obj/kernel.asm	/^c0102ebb:	c7 04 24 b6 76 11 c0 	movl   $0xc01176b6,(%esp)$/;"	l
c0102ec2	obj/kernel.asm	/^c0102ec2:	e8 19 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102ec7	obj/kernel.asm	/^c0102ec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102eca	obj/kernel.asm	/^c0102eca:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0102ecd	obj/kernel.asm	/^c0102ecd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102ed1	obj/kernel.asm	/^c0102ed1:	c7 04 24 c5 76 11 c0 	movl   $0xc01176c5,(%esp)$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8:	e8 03 dc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102edd	obj/kernel.asm	/^c0102edd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ee0	obj/kernel.asm	/^c0102ee0:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0102ee3	obj/kernel.asm	/^c0102ee3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7:	c7 04 24 d4 76 11 c0 	movl   $0xc01176d4,(%esp)$/;"	l
c0102eee	obj/kernel.asm	/^c0102eee:	e8 ed db ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3:	c9                   	leave  $/;"	l
c0102ef4	obj/kernel.asm	/^c0102ef4:	c3                   	ret    $/;"	l
c0102ef5	obj/kernel.asm	/^c0102ef5 <print_pgfault>:$/;"	l
c0102ef5	obj/kernel.asm	/^c0102ef5:	55                   	push   %ebp$/;"	l
c0102ef6	obj/kernel.asm	/^c0102ef6:	89 e5                	mov    %esp,%ebp$/;"	l
c0102ef8	obj/kernel.asm	/^c0102ef8:	53                   	push   %ebx$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102eff	obj/kernel.asm	/^c0102eff:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102f02	obj/kernel.asm	/^c0102f02:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05:	85 c0                	test   %eax,%eax$/;"	l
c0102f07	obj/kernel.asm	/^c0102f07:	74 07                	je     c0102f10 <print_pgfault+0x1b>$/;"	l
c0102f09	obj/kernel.asm	/^c0102f09:	b9 e3 76 11 c0       	mov    $0xc01176e3,%ecx$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e:	eb 05                	jmp    c0102f15 <print_pgfault+0x20>$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10:	b9 f4 76 11 c0       	mov    $0xc01176f4,%ecx$/;"	l
c0102f15	obj/kernel.asm	/^c0102f15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102f18	obj/kernel.asm	/^c0102f18:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102f1b	obj/kernel.asm	/^c0102f1b:	83 e0 02             	and    $0x2,%eax$/;"	l
c0102f1e	obj/kernel.asm	/^c0102f1e:	85 c0                	test   %eax,%eax$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20:	74 07                	je     c0102f29 <print_pgfault+0x34>$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22:	ba 57 00 00 00       	mov    $0x57,%edx$/;"	l
c0102f27	obj/kernel.asm	/^c0102f27:	eb 05                	jmp    c0102f2e <print_pgfault+0x39>$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29:	ba 52 00 00 00       	mov    $0x52,%edx$/;"	l
c0102f2e	obj/kernel.asm	/^c0102f2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102f31	obj/kernel.asm	/^c0102f31:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102f34	obj/kernel.asm	/^c0102f34:	83 e0 04             	and    $0x4,%eax$/;"	l
c0102f37	obj/kernel.asm	/^c0102f37:	85 c0                	test   %eax,%eax$/;"	l
c0102f39	obj/kernel.asm	/^c0102f39:	74 07                	je     c0102f42 <print_pgfault+0x4d>$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b:	b8 55 00 00 00       	mov    $0x55,%eax$/;"	l
c0102f40	obj/kernel.asm	/^c0102f40:	eb 05                	jmp    c0102f47 <print_pgfault+0x52>$/;"	l
c0102f42	obj/kernel.asm	/^c0102f42:	b8 4b 00 00 00       	mov    $0x4b,%eax$/;"	l
c0102f47	obj/kernel.asm	/^c0102f47:	0f 20 d3             	mov    %cr2,%ebx$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a:	89 5d f4             	mov    %ebx,-0xc(%ebp)$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d:	8b 5d f4             	mov    -0xc(%ebp),%ebx$/;"	l
c0102f50	obj/kernel.asm	/^c0102f50:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0102f54	obj/kernel.asm	/^c0102f54:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0102f58	obj/kernel.asm	/^c0102f58:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0102f5c	obj/kernel.asm	/^c0102f5c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0102f60	obj/kernel.asm	/^c0102f60:	c7 04 24 04 77 11 c0 	movl   $0xc0117704,(%esp)$/;"	l
c0102f67	obj/kernel.asm	/^c0102f67:	e8 74 db ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c:	83 c4 34             	add    $0x34,%esp$/;"	l
c0102f6f	obj/kernel.asm	/^c0102f6f:	5b                   	pop    %ebx$/;"	l
c0102f70	obj/kernel.asm	/^c0102f70:	5d                   	pop    %ebp$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71:	c3                   	ret    $/;"	l
c0102f72	obj/kernel.asm	/^c0102f72 <pgfault_handler>:$/;"	l
c0102f72	obj/kernel.asm	/^c0102f72:	55                   	push   %ebp$/;"	l
c0102f73	obj/kernel.asm	/^c0102f73:	89 e5                	mov    %esp,%ebp$/;"	l
c0102f75	obj/kernel.asm	/^c0102f75:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0102f78	obj/kernel.asm	/^c0102f78:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c0102f7d	obj/kernel.asm	/^c0102f7d:	85 c0                	test   %eax,%eax$/;"	l
c0102f7f	obj/kernel.asm	/^c0102f7f:	74 0b                	je     c0102f8c <pgfault_handler+0x1a>$/;"	l
c0102f81	obj/kernel.asm	/^c0102f81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102f84	obj/kernel.asm	/^c0102f84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102f87	obj/kernel.asm	/^c0102f87:	e8 69 ff ff ff       	call   c0102ef5 <print_pgfault>$/;"	l
c0102f8c	obj/kernel.asm	/^c0102f8c:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c0102f91	obj/kernel.asm	/^c0102f91:	85 c0                	test   %eax,%eax$/;"	l
c0102f93	obj/kernel.asm	/^c0102f93:	74 3d                	je     c0102fd2 <pgfault_handler+0x60>$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95:	8b 15 68 7f 15 c0    	mov    0xc0157f68,%edx$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c0102fa0	obj/kernel.asm	/^c0102fa0:	39 c2                	cmp    %eax,%edx$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	74 24                	je     c0102fc8 <pgfault_handler+0x56>$/;"	l
c0102fa4	obj/kernel.asm	/^c0102fa4:	c7 44 24 0c 27 77 11 	movl   $0xc0117727,0xc(%esp)$/;"	l
c0102fab	obj/kernel.asm	/^c0102fab:	c0 $/;"	l
c0102fac	obj/kernel.asm	/^c0102fac:	c7 44 24 08 3b 77 11 	movl   $0xc011773b,0x8(%esp)$/;"	l
c0102fb3	obj/kernel.asm	/^c0102fb3:	c0 $/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c0102fbb	obj/kernel.asm	/^c0102fbb:	00 $/;"	l
c0102fbc	obj/kernel.asm	/^c0102fbc:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c0102fc3	obj/kernel.asm	/^c0102fc3:	e8 6f dc ff ff       	call   c0100c37 <__panic>$/;"	l
c0102fc8	obj/kernel.asm	/^c0102fc8:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c0102fcd	obj/kernel.asm	/^c0102fcd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102fd0	obj/kernel.asm	/^c0102fd0:	eb 46                	jmp    c0103018 <pgfault_handler+0xa6>$/;"	l
c0102fd2	obj/kernel.asm	/^c0102fd2:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0102fd7	obj/kernel.asm	/^c0102fd7:	85 c0                	test   %eax,%eax$/;"	l
c0102fd9	obj/kernel.asm	/^c0102fd9:	75 32                	jne    c010300d <pgfault_handler+0x9b>$/;"	l
c0102fdb	obj/kernel.asm	/^c0102fdb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102fde	obj/kernel.asm	/^c0102fde:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102fe1	obj/kernel.asm	/^c0102fe1:	e8 93 fc ff ff       	call   c0102c79 <print_trapframe>$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102fe9	obj/kernel.asm	/^c0102fe9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0102fec	obj/kernel.asm	/^c0102fec:	e8 04 ff ff ff       	call   c0102ef5 <print_pgfault>$/;"	l
c0102ff1	obj/kernel.asm	/^c0102ff1:	c7 44 24 08 61 77 11 	movl   $0xc0117761,0x8(%esp)$/;"	l
c0102ff8	obj/kernel.asm	/^c0102ff8:	c0 $/;"	l
c0102ff9	obj/kernel.asm	/^c0102ff9:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c0103000	obj/kernel.asm	/^c0103000:	00 $/;"	l
c0103001	obj/kernel.asm	/^c0103001:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c0103008	obj/kernel.asm	/^c0103008:	e8 2a dc ff ff       	call   c0100c37 <__panic>$/;"	l
c010300d	obj/kernel.asm	/^c010300d:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0103012	obj/kernel.asm	/^c0103012:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0103015	obj/kernel.asm	/^c0103015:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103018	obj/kernel.asm	/^c0103018:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c010301b	obj/kernel.asm	/^c010301b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010301e	obj/kernel.asm	/^c010301e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103021	obj/kernel.asm	/^c0103021:	89 c2                	mov    %eax,%edx$/;"	l
c0103023	obj/kernel.asm	/^c0103023:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103026	obj/kernel.asm	/^c0103026:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0103029	obj/kernel.asm	/^c0103029:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010302d	obj/kernel.asm	/^c010302d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0103031	obj/kernel.asm	/^c0103031:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103034	obj/kernel.asm	/^c0103034:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103037	obj/kernel.asm	/^c0103037:	e8 30 47 00 00       	call   c010776c <do_pgfault>$/;"	l
c010303c	obj/kernel.asm	/^c010303c:	c9                   	leave  $/;"	l
c010303d	obj/kernel.asm	/^c010303d:	c3                   	ret    $/;"	l
c010303e	obj/kernel.asm	/^c010303e <trap_dispatch>:$/;"	l
c010303e	obj/kernel.asm	/^c010303e:	55                   	push   %ebp$/;"	l
c010303f	obj/kernel.asm	/^c010303f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103041	obj/kernel.asm	/^c0103041:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103044	obj/kernel.asm	/^c0103044:	c7 04 24 78 77 11 c0 	movl   $0xc0117778,(%esp)$/;"	l
c010304b	obj/kernel.asm	/^c010304b:	e8 90 da ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0103050	obj/kernel.asm	/^c0103050:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103053	obj/kernel.asm	/^c0103053:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0103056	obj/kernel.asm	/^c0103056:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010305a	obj/kernel.asm	/^c010305a:	c7 04 24 84 77 11 c0 	movl   $0xc0117784,(%esp)$/;"	l
c0103061	obj/kernel.asm	/^c0103061:	e8 7a da ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0103066	obj/kernel.asm	/^c0103066:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010306d	obj/kernel.asm	/^c010306d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103070	obj/kernel.asm	/^c0103070:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0103073	obj/kernel.asm	/^c0103073:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c0103076	obj/kernel.asm	/^c0103076:	77 38                	ja     c01030b0 <trap_dispatch+0x72>$/;"	l
c0103078	obj/kernel.asm	/^c0103078:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c010307b	obj/kernel.asm	/^c010307b:	0f 83 57 02 00 00    	jae    c01032d8 <trap_dispatch+0x29a>$/;"	l
c0103081	obj/kernel.asm	/^c0103081:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0103084	obj/kernel.asm	/^c0103084:	0f 84 11 01 00 00    	je     c010319b <trap_dispatch+0x15d>$/;"	l
c010308a	obj/kernel.asm	/^c010308a:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c010308d	obj/kernel.asm	/^c010308d:	77 0a                	ja     c0103099 <trap_dispatch+0x5b>$/;"	l
c010308f	obj/kernel.asm	/^c010308f:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c0103092	obj/kernel.asm	/^c0103092:	74 48                	je     c01030dc <trap_dispatch+0x9e>$/;"	l
c0103094	obj/kernel.asm	/^c0103094:	e9 f7 01 00 00       	jmp    c0103290 <trap_dispatch+0x252>$/;"	l
c0103099	obj/kernel.asm	/^c0103099:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c010309c	obj/kernel.asm	/^c010309c:	0f 84 79 01 00 00    	je     c010321b <trap_dispatch+0x1dd>$/;"	l
c01030a2	obj/kernel.asm	/^c01030a2:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c01030a5	obj/kernel.asm	/^c01030a5:	0f 84 70 01 00 00    	je     c010321b <trap_dispatch+0x1dd>$/;"	l
c01030ab	obj/kernel.asm	/^c01030ab:	e9 e0 01 00 00       	jmp    c0103290 <trap_dispatch+0x252>$/;"	l
c01030b0	obj/kernel.asm	/^c01030b0:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c01030b3	obj/kernel.asm	/^c01030b3:	77 17                	ja     c01030cc <trap_dispatch+0x8e>$/;"	l
c01030b5	obj/kernel.asm	/^c01030b5:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c01030b8	obj/kernel.asm	/^c01030b8:	0f 83 7b 01 00 00    	jae    c0103239 <trap_dispatch+0x1fb>$/;"	l
c01030be	obj/kernel.asm	/^c01030be:	83 f8 3f             	cmp    $0x3f,%eax$/;"	l
c01030c1	obj/kernel.asm	/^c01030c1:	0f 84 8e 01 00 00    	je     c0103255 <trap_dispatch+0x217>$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7:	e9 c4 01 00 00       	jmp    c0103290 <trap_dispatch+0x252>$/;"	l
c01030cc	obj/kernel.asm	/^c01030cc:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c01030d1	obj/kernel.asm	/^c01030d1:	0f 84 ba 00 00 00    	je     c0103191 <trap_dispatch+0x153>$/;"	l
c01030d7	obj/kernel.asm	/^c01030d7:	e9 b4 01 00 00       	jmp    c0103290 <trap_dispatch+0x252>$/;"	l
c01030dc	obj/kernel.asm	/^c01030dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01030df	obj/kernel.asm	/^c01030df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01030e2	obj/kernel.asm	/^c01030e2:	e8 8b fe ff ff       	call   c0102f72 <pgfault_handler>$/;"	l
c01030e7	obj/kernel.asm	/^c01030e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01030ea	obj/kernel.asm	/^c01030ea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01030ee	obj/kernel.asm	/^c01030ee:	0f 84 98 00 00 00    	je     c010318c <trap_dispatch+0x14e>$/;"	l
c01030f4	obj/kernel.asm	/^c01030f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01030fa	obj/kernel.asm	/^c01030fa:	e8 7a fb ff ff       	call   c0102c79 <print_trapframe>$/;"	l
c01030ff	obj/kernel.asm	/^c01030ff:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0103104	obj/kernel.asm	/^c0103104:	85 c0                	test   %eax,%eax$/;"	l
c0103106	obj/kernel.asm	/^c0103106:	75 23                	jne    c010312b <trap_dispatch+0xed>$/;"	l
c0103108	obj/kernel.asm	/^c0103108:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010310b	obj/kernel.asm	/^c010310b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010310f	obj/kernel.asm	/^c010310f:	c7 44 24 08 94 77 11 	movl   $0xc0117794,0x8(%esp)$/;"	l
c0103116	obj/kernel.asm	/^c0103116:	c0 $/;"	l
c0103117	obj/kernel.asm	/^c0103117:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
c010311e	obj/kernel.asm	/^c010311e:	00 $/;"	l
c010311f	obj/kernel.asm	/^c010311f:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c0103126	obj/kernel.asm	/^c0103126:	e8 0c db ff ff       	call   c0100c37 <__panic>$/;"	l
c010312b	obj/kernel.asm	/^c010312b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010312e	obj/kernel.asm	/^c010312e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103131	obj/kernel.asm	/^c0103131:	e8 2d fb ff ff       	call   c0102c63 <trap_in_kernel>$/;"	l
c0103136	obj/kernel.asm	/^c0103136:	85 c0                	test   %eax,%eax$/;"	l
c0103138	obj/kernel.asm	/^c0103138:	74 23                	je     c010315d <trap_dispatch+0x11f>$/;"	l
c010313a	obj/kernel.asm	/^c010313a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010313d	obj/kernel.asm	/^c010313d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0103141	obj/kernel.asm	/^c0103141:	c7 44 24 08 b4 77 11 	movl   $0xc01177b4,0x8(%esp)$/;"	l
c0103148	obj/kernel.asm	/^c0103148:	c0 $/;"	l
c0103149	obj/kernel.asm	/^c0103149:	c7 44 24 04 d5 00 00 	movl   $0xd5,0x4(%esp)$/;"	l
c0103150	obj/kernel.asm	/^c0103150:	00 $/;"	l
c0103151	obj/kernel.asm	/^c0103151:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c0103158	obj/kernel.asm	/^c0103158:	e8 da da ff ff       	call   c0100c37 <__panic>$/;"	l
c010315d	obj/kernel.asm	/^c010315d:	c7 04 24 e2 77 11 c0 	movl   $0xc01177e2,(%esp)$/;"	l
c0103164	obj/kernel.asm	/^c0103164:	e8 77 d9 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0103169	obj/kernel.asm	/^c0103169:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010316c	obj/kernel.asm	/^c010316c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0103170	obj/kernel.asm	/^c0103170:	c7 44 24 08 f8 77 11 	movl   $0xc01177f8,0x8(%esp)$/;"	l
c0103177	obj/kernel.asm	/^c0103177:	c0 $/;"	l
c0103178	obj/kernel.asm	/^c0103178:	c7 44 24 04 d8 00 00 	movl   $0xd8,0x4(%esp)$/;"	l
c010317f	obj/kernel.asm	/^c010317f:	00 $/;"	l
c0103180	obj/kernel.asm	/^c0103180:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c0103187	obj/kernel.asm	/^c0103187:	e8 ab da ff ff       	call   c0100c37 <__panic>$/;"	l
c010318c	obj/kernel.asm	/^c010318c:	e9 48 01 00 00       	jmp    c01032d9 <trap_dispatch+0x29b>$/;"	l
c0103191	obj/kernel.asm	/^c0103191:	e8 71 ca 00 00       	call   c010fc07 <syscall>$/;"	l
c0103196	obj/kernel.asm	/^c0103196:	e9 3e 01 00 00       	jmp    c01032d9 <trap_dispatch+0x29b>$/;"	l
c010319b	obj/kernel.asm	/^c010319b:	a1 68 b6 15 c0       	mov    0xc015b668,%eax$/;"	l
c01031a0	obj/kernel.asm	/^c01031a0:	83 c0 01             	add    $0x1,%eax$/;"	l
c01031a3	obj/kernel.asm	/^c01031a3:	a3 68 b6 15 c0       	mov    %eax,0xc015b668$/;"	l
c01031a8	obj/kernel.asm	/^c01031a8:	c7 04 24 21 78 11 c0 	movl   $0xc0117821,(%esp)$/;"	l
c01031af	obj/kernel.asm	/^c01031af:	e8 2c d9 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01031b4	obj/kernel.asm	/^c01031b4:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c01031b9	obj/kernel.asm	/^c01031b9:	85 c0                	test   %eax,%eax$/;"	l
c01031bb	obj/kernel.asm	/^c01031bb:	75 24                	jne    c01031e1 <trap_dispatch+0x1a3>$/;"	l
c01031bd	obj/kernel.asm	/^c01031bd:	c7 44 24 0c 32 78 11 	movl   $0xc0117832,0xc(%esp)$/;"	l
c01031c4	obj/kernel.asm	/^c01031c4:	c0 $/;"	l
c01031c5	obj/kernel.asm	/^c01031c5:	c7 44 24 08 3b 77 11 	movl   $0xc011773b,0x8(%esp)$/;"	l
c01031cc	obj/kernel.asm	/^c01031cc:	c0 $/;"	l
c01031cd	obj/kernel.asm	/^c01031cd:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)$/;"	l
c01031d4	obj/kernel.asm	/^c01031d4:	00 $/;"	l
c01031d5	obj/kernel.asm	/^c01031d5:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c01031dc	obj/kernel.asm	/^c01031dc:	e8 56 da ff ff       	call   c0100c37 <__panic>$/;"	l
c01031e1	obj/kernel.asm	/^c01031e1:	8b 0d 68 b6 15 c0    	mov    0xc015b668,%ecx$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7:	ba 1f 85 eb 51       	mov    $0x51eb851f,%edx$/;"	l
c01031ec	obj/kernel.asm	/^c01031ec:	89 c8                	mov    %ecx,%eax$/;"	l
c01031ee	obj/kernel.asm	/^c01031ee:	f7 e2                	mul    %edx$/;"	l
c01031f0	obj/kernel.asm	/^c01031f0:	89 d0                	mov    %edx,%eax$/;"	l
c01031f2	obj/kernel.asm	/^c01031f2:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c01031f5	obj/kernel.asm	/^c01031f5:	6b c0 64             	imul   $0x64,%eax,%eax$/;"	l
c01031f8	obj/kernel.asm	/^c01031f8:	29 c1                	sub    %eax,%ecx$/;"	l
c01031fa	obj/kernel.asm	/^c01031fa:	89 c8                	mov    %ecx,%eax$/;"	l
c01031fc	obj/kernel.asm	/^c01031fc:	85 c0                	test   %eax,%eax$/;"	l
c01031fe	obj/kernel.asm	/^c01031fe:	75 0c                	jne    c010320c <trap_dispatch+0x1ce>$/;"	l
c0103200	obj/kernel.asm	/^c0103200:	c7 04 24 42 78 11 c0 	movl   $0xc0117842,(%esp)$/;"	l
c0103207	obj/kernel.asm	/^c0103207:	e8 d4 d8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010320c	obj/kernel.asm	/^c010320c:	e8 0f c2 00 00       	call   c010f420 <run_timer_list>$/;"	l
c0103211	obj/kernel.asm	/^c0103211:	e8 cf 29 01 00       	call   c0115be5 <lapiceoi>$/;"	l
c0103216	obj/kernel.asm	/^c0103216:	e9 be 00 00 00       	jmp    c01032d9 <trap_dispatch+0x29b>$/;"	l
c010321b	obj/kernel.asm	/^c010321b:	e8 38 f6 ff ff       	call   c0102858 <cons_getc>$/;"	l
c0103220	obj/kernel.asm	/^c0103220:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0103223	obj/kernel.asm	/^c0103223:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0103227	obj/kernel.asm	/^c0103227:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010322a	obj/kernel.asm	/^c010322a:	e8 a2 e3 00 00       	call   c01115d1 <dev_stdin_write>$/;"	l
c010322f	obj/kernel.asm	/^c010322f:	e8 b1 29 01 00       	call   c0115be5 <lapiceoi>$/;"	l
c0103234	obj/kernel.asm	/^c0103234:	e9 a0 00 00 00       	jmp    c01032d9 <trap_dispatch+0x29b>$/;"	l
c0103239	obj/kernel.asm	/^c0103239:	c7 44 24 08 4e 78 11 	movl   $0xc011784e,0x8(%esp)$/;"	l
c0103240	obj/kernel.asm	/^c0103240:	c0 $/;"	l
c0103241	obj/kernel.asm	/^c0103241:	c7 44 24 04 11 01 00 	movl   $0x111,0x4(%esp)$/;"	l
c0103248	obj/kernel.asm	/^c0103248:	00 $/;"	l
c0103249	obj/kernel.asm	/^c0103249:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c0103250	obj/kernel.asm	/^c0103250:	e8 e2 d9 ff ff       	call   c0100c37 <__panic>$/;"	l
c0103255	obj/kernel.asm	/^c0103255:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103258	obj/kernel.asm	/^c0103258:	8b 48 38             	mov    0x38(%eax),%ecx$/;"	l
c010325b	obj/kernel.asm	/^c010325b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010325e	obj/kernel.asm	/^c010325e:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0103262	obj/kernel.asm	/^c0103262:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0103265	obj/kernel.asm	/^c0103265:	65 a1 00 00 00 00    	mov    %gs:0x0,%eax$/;"	l
c010326b	obj/kernel.asm	/^c010326b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010326e	obj/kernel.asm	/^c010326e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0103271	obj/kernel.asm	/^c0103271:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0103275	obj/kernel.asm	/^c0103275:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0103279	obj/kernel.asm	/^c0103279:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010327d	obj/kernel.asm	/^c010327d:	c7 04 24 60 78 11 c0 	movl   $0xc0117860,(%esp)$/;"	l
c0103284	obj/kernel.asm	/^c0103284:	e8 57 d8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0103289	obj/kernel.asm	/^c0103289:	e8 57 29 01 00       	call   c0115be5 <lapiceoi>$/;"	l
c010328e	obj/kernel.asm	/^c010328e:	eb 49                	jmp    c01032d9 <trap_dispatch+0x29b>$/;"	l
c0103290	obj/kernel.asm	/^c0103290:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103293	obj/kernel.asm	/^c0103293:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103296	obj/kernel.asm	/^c0103296:	e8 de f9 ff ff       	call   c0102c79 <print_trapframe>$/;"	l
c010329b	obj/kernel.asm	/^c010329b:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c01032a0	obj/kernel.asm	/^c01032a0:	85 c0                	test   %eax,%eax$/;"	l
c01032a2	obj/kernel.asm	/^c01032a2:	74 18                	je     c01032bc <trap_dispatch+0x27e>$/;"	l
c01032a4	obj/kernel.asm	/^c01032a4:	c7 04 24 84 78 11 c0 	movl   $0xc0117884,(%esp)$/;"	l
c01032ab	obj/kernel.asm	/^c01032ab:	e8 30 d8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01032b0	obj/kernel.asm	/^c01032b0:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c01032b7	obj/kernel.asm	/^c01032b7:	e8 3a a7 00 00       	call   c010d9f6 <do_exit>$/;"	l
c01032bc	obj/kernel.asm	/^c01032bc:	c7 44 24 08 95 78 11 	movl   $0xc0117895,0x8(%esp)$/;"	l
c01032c3	obj/kernel.asm	/^c01032c3:	c0 $/;"	l
c01032c4	obj/kernel.asm	/^c01032c4:	c7 44 24 04 25 01 00 	movl   $0x125,0x4(%esp)$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb:	00 $/;"	l
c01032cc	obj/kernel.asm	/^c01032cc:	c7 04 24 50 77 11 c0 	movl   $0xc0117750,(%esp)$/;"	l
c01032d3	obj/kernel.asm	/^c01032d3:	e8 5f d9 ff ff       	call   c0100c37 <__panic>$/;"	l
c01032d8	obj/kernel.asm	/^c01032d8:	90                   	nop$/;"	l
c01032d9	obj/kernel.asm	/^c01032d9:	c9                   	leave  $/;"	l
c01032da	obj/kernel.asm	/^c01032da:	c3                   	ret    $/;"	l
c01032db	obj/kernel.asm	/^c01032db <trap>:$/;"	l
c01032db	obj/kernel.asm	/^c01032db:	55                   	push   %ebp$/;"	l
c01032dc	obj/kernel.asm	/^c01032dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01032de	obj/kernel.asm	/^c01032de:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01032e1	obj/kernel.asm	/^c01032e1:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c01032e6	obj/kernel.asm	/^c01032e6:	85 c0                	test   %eax,%eax$/;"	l
c01032e8	obj/kernel.asm	/^c01032e8:	75 0d                	jne    c01032f7 <trap+0x1c>$/;"	l
c01032ea	obj/kernel.asm	/^c01032ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01032ed	obj/kernel.asm	/^c01032ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01032f0	obj/kernel.asm	/^c01032f0:	e8 49 fd ff ff       	call   c010303e <trap_dispatch>$/;"	l
c01032f5	obj/kernel.asm	/^c01032f5:	eb 6c                	jmp    c0103363 <trap+0x88>$/;"	l
c01032f7	obj/kernel.asm	/^c01032f7:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c01032fc	obj/kernel.asm	/^c01032fc:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01032ff	obj/kernel.asm	/^c01032ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103302	obj/kernel.asm	/^c0103302:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0103307	obj/kernel.asm	/^c0103307:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010330a	obj/kernel.asm	/^c010330a:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010330d	obj/kernel.asm	/^c010330d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103310	obj/kernel.asm	/^c0103310:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103313	obj/kernel.asm	/^c0103313:	e8 4b f9 ff ff       	call   c0102c63 <trap_in_kernel>$/;"	l
c0103318	obj/kernel.asm	/^c0103318:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010331b	obj/kernel.asm	/^c010331b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010331e	obj/kernel.asm	/^c010331e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103321	obj/kernel.asm	/^c0103321:	e8 18 fd ff ff       	call   c010303e <trap_dispatch>$/;"	l
c0103326	obj/kernel.asm	/^c0103326:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010332b	obj/kernel.asm	/^c010332b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010332e	obj/kernel.asm	/^c010332e:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0103331	obj/kernel.asm	/^c0103331:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103335	obj/kernel.asm	/^c0103335:	75 2c                	jne    c0103363 <trap+0x88>$/;"	l
c0103337	obj/kernel.asm	/^c0103337:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010333c	obj/kernel.asm	/^c010333c:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010333f	obj/kernel.asm	/^c010333f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0103342	obj/kernel.asm	/^c0103342:	85 c0                	test   %eax,%eax$/;"	l
c0103344	obj/kernel.asm	/^c0103344:	74 0c                	je     c0103352 <trap+0x77>$/;"	l
c0103346	obj/kernel.asm	/^c0103346:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010334d	obj/kernel.asm	/^c010334d:	e8 a4 a6 00 00       	call   c010d9f6 <do_exit>$/;"	l
c0103352	obj/kernel.asm	/^c0103352:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0103357	obj/kernel.asm	/^c0103357:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010335a	obj/kernel.asm	/^c010335a:	85 c0                	test   %eax,%eax$/;"	l
c010335c	obj/kernel.asm	/^c010335c:	74 05                	je     c0103363 <trap+0x88>$/;"	l
c010335e	obj/kernel.asm	/^c010335e:	e8 30 be 00 00       	call   c010f193 <schedule>$/;"	l
c0103363	obj/kernel.asm	/^c0103363:	c9                   	leave  $/;"	l
c0103364	obj/kernel.asm	/^c0103364:	c3                   	ret    $/;"	l
c0103365	obj/kernel.asm	/^c0103365 <vector0>:$/;"	l
c0103365	obj/kernel.asm	/^c0103365:	6a 00                	push   $0x0$/;"	l
c0103367	obj/kernel.asm	/^c0103367:	6a 00                	push   $0x0$/;"	l
c0103369	obj/kernel.asm	/^c0103369:	e9 67 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010336e	obj/kernel.asm	/^c010336e <vector1>:$/;"	l
c010336e	obj/kernel.asm	/^c010336e:	6a 00                	push   $0x0$/;"	l
c0103370	obj/kernel.asm	/^c0103370:	6a 01                	push   $0x1$/;"	l
c0103372	obj/kernel.asm	/^c0103372:	e9 5e 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103377	obj/kernel.asm	/^c0103377 <vector2>:$/;"	l
c0103377	obj/kernel.asm	/^c0103377:	6a 00                	push   $0x0$/;"	l
c0103379	obj/kernel.asm	/^c0103379:	6a 02                	push   $0x2$/;"	l
c010337b	obj/kernel.asm	/^c010337b:	e9 55 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103380	obj/kernel.asm	/^c0103380 <vector3>:$/;"	l
c0103380	obj/kernel.asm	/^c0103380:	6a 00                	push   $0x0$/;"	l
c0103382	obj/kernel.asm	/^c0103382:	6a 03                	push   $0x3$/;"	l
c0103384	obj/kernel.asm	/^c0103384:	e9 4c 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103389	obj/kernel.asm	/^c0103389 <vector4>:$/;"	l
c0103389	obj/kernel.asm	/^c0103389:	6a 00                	push   $0x0$/;"	l
c010338b	obj/kernel.asm	/^c010338b:	6a 04                	push   $0x4$/;"	l
c010338d	obj/kernel.asm	/^c010338d:	e9 43 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103392	obj/kernel.asm	/^c0103392 <vector5>:$/;"	l
c0103392	obj/kernel.asm	/^c0103392:	6a 00                	push   $0x0$/;"	l
c0103394	obj/kernel.asm	/^c0103394:	6a 05                	push   $0x5$/;"	l
c0103396	obj/kernel.asm	/^c0103396:	e9 3a 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010339b	obj/kernel.asm	/^c010339b <vector6>:$/;"	l
c010339b	obj/kernel.asm	/^c010339b:	6a 00                	push   $0x0$/;"	l
c010339d	obj/kernel.asm	/^c010339d:	6a 06                	push   $0x6$/;"	l
c010339f	obj/kernel.asm	/^c010339f:	e9 31 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033a4	obj/kernel.asm	/^c01033a4 <vector7>:$/;"	l
c01033a4	obj/kernel.asm	/^c01033a4:	6a 00                	push   $0x0$/;"	l
c01033a6	obj/kernel.asm	/^c01033a6:	6a 07                	push   $0x7$/;"	l
c01033a8	obj/kernel.asm	/^c01033a8:	e9 28 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033ad	obj/kernel.asm	/^c01033ad <vector8>:$/;"	l
c01033ad	obj/kernel.asm	/^c01033ad:	6a 08                	push   $0x8$/;"	l
c01033af	obj/kernel.asm	/^c01033af:	e9 21 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033b4	obj/kernel.asm	/^c01033b4 <vector9>:$/;"	l
c01033b4	obj/kernel.asm	/^c01033b4:	6a 09                	push   $0x9$/;"	l
c01033b6	obj/kernel.asm	/^c01033b6:	e9 1a 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb <vector10>:$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb:	6a 0a                	push   $0xa$/;"	l
c01033bd	obj/kernel.asm	/^c01033bd:	e9 13 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033c2	obj/kernel.asm	/^c01033c2 <vector11>:$/;"	l
c01033c2	obj/kernel.asm	/^c01033c2:	6a 0b                	push   $0xb$/;"	l
c01033c4	obj/kernel.asm	/^c01033c4:	e9 0c 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033c9	obj/kernel.asm	/^c01033c9 <vector12>:$/;"	l
c01033c9	obj/kernel.asm	/^c01033c9:	6a 0c                	push   $0xc$/;"	l
c01033cb	obj/kernel.asm	/^c01033cb:	e9 05 0a 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033d0	obj/kernel.asm	/^c01033d0 <vector13>:$/;"	l
c01033d0	obj/kernel.asm	/^c01033d0:	6a 0d                	push   $0xd$/;"	l
c01033d2	obj/kernel.asm	/^c01033d2:	e9 fe 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033d7	obj/kernel.asm	/^c01033d7 <vector14>:$/;"	l
c01033d7	obj/kernel.asm	/^c01033d7:	6a 0e                	push   $0xe$/;"	l
c01033d9	obj/kernel.asm	/^c01033d9:	e9 f7 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033de	obj/kernel.asm	/^c01033de <vector15>:$/;"	l
c01033de	obj/kernel.asm	/^c01033de:	6a 00                	push   $0x0$/;"	l
c01033e0	obj/kernel.asm	/^c01033e0:	6a 0f                	push   $0xf$/;"	l
c01033e2	obj/kernel.asm	/^c01033e2:	e9 ee 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033e7	obj/kernel.asm	/^c01033e7 <vector16>:$/;"	l
c01033e7	obj/kernel.asm	/^c01033e7:	6a 00                	push   $0x0$/;"	l
c01033e9	obj/kernel.asm	/^c01033e9:	6a 10                	push   $0x10$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb:	e9 e5 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033f0	obj/kernel.asm	/^c01033f0 <vector17>:$/;"	l
c01033f0	obj/kernel.asm	/^c01033f0:	6a 11                	push   $0x11$/;"	l
c01033f2	obj/kernel.asm	/^c01033f2:	e9 de 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7 <vector18>:$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7:	6a 00                	push   $0x0$/;"	l
c01033f9	obj/kernel.asm	/^c01033f9:	6a 12                	push   $0x12$/;"	l
c01033fb	obj/kernel.asm	/^c01033fb:	e9 d5 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103400	obj/kernel.asm	/^c0103400 <vector19>:$/;"	l
c0103400	obj/kernel.asm	/^c0103400:	6a 00                	push   $0x0$/;"	l
c0103402	obj/kernel.asm	/^c0103402:	6a 13                	push   $0x13$/;"	l
c0103404	obj/kernel.asm	/^c0103404:	e9 cc 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103409	obj/kernel.asm	/^c0103409 <vector20>:$/;"	l
c0103409	obj/kernel.asm	/^c0103409:	6a 00                	push   $0x0$/;"	l
c010340b	obj/kernel.asm	/^c010340b:	6a 14                	push   $0x14$/;"	l
c010340d	obj/kernel.asm	/^c010340d:	e9 c3 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103412	obj/kernel.asm	/^c0103412 <vector21>:$/;"	l
c0103412	obj/kernel.asm	/^c0103412:	6a 00                	push   $0x0$/;"	l
c0103414	obj/kernel.asm	/^c0103414:	6a 15                	push   $0x15$/;"	l
c0103416	obj/kernel.asm	/^c0103416:	e9 ba 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010341b	obj/kernel.asm	/^c010341b <vector22>:$/;"	l
c010341b	obj/kernel.asm	/^c010341b:	6a 00                	push   $0x0$/;"	l
c010341d	obj/kernel.asm	/^c010341d:	6a 16                	push   $0x16$/;"	l
c010341f	obj/kernel.asm	/^c010341f:	e9 b1 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103424	obj/kernel.asm	/^c0103424 <vector23>:$/;"	l
c0103424	obj/kernel.asm	/^c0103424:	6a 00                	push   $0x0$/;"	l
c0103426	obj/kernel.asm	/^c0103426:	6a 17                	push   $0x17$/;"	l
c0103428	obj/kernel.asm	/^c0103428:	e9 a8 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010342d	obj/kernel.asm	/^c010342d <vector24>:$/;"	l
c010342d	obj/kernel.asm	/^c010342d:	6a 00                	push   $0x0$/;"	l
c010342f	obj/kernel.asm	/^c010342f:	6a 18                	push   $0x18$/;"	l
c0103431	obj/kernel.asm	/^c0103431:	e9 9f 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103436	obj/kernel.asm	/^c0103436 <vector25>:$/;"	l
c0103436	obj/kernel.asm	/^c0103436:	6a 00                	push   $0x0$/;"	l
c0103438	obj/kernel.asm	/^c0103438:	6a 19                	push   $0x19$/;"	l
c010343a	obj/kernel.asm	/^c010343a:	e9 96 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010343f	obj/kernel.asm	/^c010343f <vector26>:$/;"	l
c010343f	obj/kernel.asm	/^c010343f:	6a 00                	push   $0x0$/;"	l
c0103441	obj/kernel.asm	/^c0103441:	6a 1a                	push   $0x1a$/;"	l
c0103443	obj/kernel.asm	/^c0103443:	e9 8d 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103448	obj/kernel.asm	/^c0103448 <vector27>:$/;"	l
c0103448	obj/kernel.asm	/^c0103448:	6a 00                	push   $0x0$/;"	l
c010344a	obj/kernel.asm	/^c010344a:	6a 1b                	push   $0x1b$/;"	l
c010344c	obj/kernel.asm	/^c010344c:	e9 84 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103451	obj/kernel.asm	/^c0103451 <vector28>:$/;"	l
c0103451	obj/kernel.asm	/^c0103451:	6a 00                	push   $0x0$/;"	l
c0103453	obj/kernel.asm	/^c0103453:	6a 1c                	push   $0x1c$/;"	l
c0103455	obj/kernel.asm	/^c0103455:	e9 7b 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010345a	obj/kernel.asm	/^c010345a <vector29>:$/;"	l
c010345a	obj/kernel.asm	/^c010345a:	6a 00                	push   $0x0$/;"	l
c010345c	obj/kernel.asm	/^c010345c:	6a 1d                	push   $0x1d$/;"	l
c010345e	obj/kernel.asm	/^c010345e:	e9 72 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103463	obj/kernel.asm	/^c0103463 <vector30>:$/;"	l
c0103463	obj/kernel.asm	/^c0103463:	6a 00                	push   $0x0$/;"	l
c0103465	obj/kernel.asm	/^c0103465:	6a 1e                	push   $0x1e$/;"	l
c0103467	obj/kernel.asm	/^c0103467:	e9 69 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010346c	obj/kernel.asm	/^c010346c <vector31>:$/;"	l
c010346c	obj/kernel.asm	/^c010346c:	6a 00                	push   $0x0$/;"	l
c010346e	obj/kernel.asm	/^c010346e:	6a 1f                	push   $0x1f$/;"	l
c0103470	obj/kernel.asm	/^c0103470:	e9 60 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103475	obj/kernel.asm	/^c0103475 <vector32>:$/;"	l
c0103475	obj/kernel.asm	/^c0103475:	6a 00                	push   $0x0$/;"	l
c0103477	obj/kernel.asm	/^c0103477:	6a 20                	push   $0x20$/;"	l
c0103479	obj/kernel.asm	/^c0103479:	e9 57 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010347e	obj/kernel.asm	/^c010347e <vector33>:$/;"	l
c010347e	obj/kernel.asm	/^c010347e:	6a 00                	push   $0x0$/;"	l
c0103480	obj/kernel.asm	/^c0103480:	6a 21                	push   $0x21$/;"	l
c0103482	obj/kernel.asm	/^c0103482:	e9 4e 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103487	obj/kernel.asm	/^c0103487 <vector34>:$/;"	l
c0103487	obj/kernel.asm	/^c0103487:	6a 00                	push   $0x0$/;"	l
c0103489	obj/kernel.asm	/^c0103489:	6a 22                	push   $0x22$/;"	l
c010348b	obj/kernel.asm	/^c010348b:	e9 45 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103490	obj/kernel.asm	/^c0103490 <vector35>:$/;"	l
c0103490	obj/kernel.asm	/^c0103490:	6a 00                	push   $0x0$/;"	l
c0103492	obj/kernel.asm	/^c0103492:	6a 23                	push   $0x23$/;"	l
c0103494	obj/kernel.asm	/^c0103494:	e9 3c 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103499	obj/kernel.asm	/^c0103499 <vector36>:$/;"	l
c0103499	obj/kernel.asm	/^c0103499:	6a 00                	push   $0x0$/;"	l
c010349b	obj/kernel.asm	/^c010349b:	6a 24                	push   $0x24$/;"	l
c010349d	obj/kernel.asm	/^c010349d:	e9 33 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034a2	obj/kernel.asm	/^c01034a2 <vector37>:$/;"	l
c01034a2	obj/kernel.asm	/^c01034a2:	6a 00                	push   $0x0$/;"	l
c01034a4	obj/kernel.asm	/^c01034a4:	6a 25                	push   $0x25$/;"	l
c01034a6	obj/kernel.asm	/^c01034a6:	e9 2a 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab <vector38>:$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab:	6a 00                	push   $0x0$/;"	l
c01034ad	obj/kernel.asm	/^c01034ad:	6a 26                	push   $0x26$/;"	l
c01034af	obj/kernel.asm	/^c01034af:	e9 21 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034b4	obj/kernel.asm	/^c01034b4 <vector39>:$/;"	l
c01034b4	obj/kernel.asm	/^c01034b4:	6a 00                	push   $0x0$/;"	l
c01034b6	obj/kernel.asm	/^c01034b6:	6a 27                	push   $0x27$/;"	l
c01034b8	obj/kernel.asm	/^c01034b8:	e9 18 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034bd	obj/kernel.asm	/^c01034bd <vector40>:$/;"	l
c01034bd	obj/kernel.asm	/^c01034bd:	6a 00                	push   $0x0$/;"	l
c01034bf	obj/kernel.asm	/^c01034bf:	6a 28                	push   $0x28$/;"	l
c01034c1	obj/kernel.asm	/^c01034c1:	e9 0f 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034c6	obj/kernel.asm	/^c01034c6 <vector41>:$/;"	l
c01034c6	obj/kernel.asm	/^c01034c6:	6a 00                	push   $0x0$/;"	l
c01034c8	obj/kernel.asm	/^c01034c8:	6a 29                	push   $0x29$/;"	l
c01034ca	obj/kernel.asm	/^c01034ca:	e9 06 09 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf <vector42>:$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf:	6a 00                	push   $0x0$/;"	l
c01034d1	obj/kernel.asm	/^c01034d1:	6a 2a                	push   $0x2a$/;"	l
c01034d3	obj/kernel.asm	/^c01034d3:	e9 fd 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034d8	obj/kernel.asm	/^c01034d8 <vector43>:$/;"	l
c01034d8	obj/kernel.asm	/^c01034d8:	6a 00                	push   $0x0$/;"	l
c01034da	obj/kernel.asm	/^c01034da:	6a 2b                	push   $0x2b$/;"	l
c01034dc	obj/kernel.asm	/^c01034dc:	e9 f4 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034e1	obj/kernel.asm	/^c01034e1 <vector44>:$/;"	l
c01034e1	obj/kernel.asm	/^c01034e1:	6a 00                	push   $0x0$/;"	l
c01034e3	obj/kernel.asm	/^c01034e3:	6a 2c                	push   $0x2c$/;"	l
c01034e5	obj/kernel.asm	/^c01034e5:	e9 eb 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034ea	obj/kernel.asm	/^c01034ea <vector45>:$/;"	l
c01034ea	obj/kernel.asm	/^c01034ea:	6a 00                	push   $0x0$/;"	l
c01034ec	obj/kernel.asm	/^c01034ec:	6a 2d                	push   $0x2d$/;"	l
c01034ee	obj/kernel.asm	/^c01034ee:	e9 e2 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3 <vector46>:$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3:	6a 00                	push   $0x0$/;"	l
c01034f5	obj/kernel.asm	/^c01034f5:	6a 2e                	push   $0x2e$/;"	l
c01034f7	obj/kernel.asm	/^c01034f7:	e9 d9 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01034fc	obj/kernel.asm	/^c01034fc <vector47>:$/;"	l
c01034fc	obj/kernel.asm	/^c01034fc:	6a 00                	push   $0x0$/;"	l
c01034fe	obj/kernel.asm	/^c01034fe:	6a 2f                	push   $0x2f$/;"	l
c0103500	obj/kernel.asm	/^c0103500:	e9 d0 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103505	obj/kernel.asm	/^c0103505 <vector48>:$/;"	l
c0103505	obj/kernel.asm	/^c0103505:	6a 00                	push   $0x0$/;"	l
c0103507	obj/kernel.asm	/^c0103507:	6a 30                	push   $0x30$/;"	l
c0103509	obj/kernel.asm	/^c0103509:	e9 c7 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010350e	obj/kernel.asm	/^c010350e <vector49>:$/;"	l
c010350e	obj/kernel.asm	/^c010350e:	6a 00                	push   $0x0$/;"	l
c0103510	obj/kernel.asm	/^c0103510:	6a 31                	push   $0x31$/;"	l
c0103512	obj/kernel.asm	/^c0103512:	e9 be 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103517	obj/kernel.asm	/^c0103517 <vector50>:$/;"	l
c0103517	obj/kernel.asm	/^c0103517:	6a 00                	push   $0x0$/;"	l
c0103519	obj/kernel.asm	/^c0103519:	6a 32                	push   $0x32$/;"	l
c010351b	obj/kernel.asm	/^c010351b:	e9 b5 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103520	obj/kernel.asm	/^c0103520 <vector51>:$/;"	l
c0103520	obj/kernel.asm	/^c0103520:	6a 00                	push   $0x0$/;"	l
c0103522	obj/kernel.asm	/^c0103522:	6a 33                	push   $0x33$/;"	l
c0103524	obj/kernel.asm	/^c0103524:	e9 ac 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103529	obj/kernel.asm	/^c0103529 <vector52>:$/;"	l
c0103529	obj/kernel.asm	/^c0103529:	6a 00                	push   $0x0$/;"	l
c010352b	obj/kernel.asm	/^c010352b:	6a 34                	push   $0x34$/;"	l
c010352d	obj/kernel.asm	/^c010352d:	e9 a3 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103532	obj/kernel.asm	/^c0103532 <vector53>:$/;"	l
c0103532	obj/kernel.asm	/^c0103532:	6a 00                	push   $0x0$/;"	l
c0103534	obj/kernel.asm	/^c0103534:	6a 35                	push   $0x35$/;"	l
c0103536	obj/kernel.asm	/^c0103536:	e9 9a 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010353b	obj/kernel.asm	/^c010353b <vector54>:$/;"	l
c010353b	obj/kernel.asm	/^c010353b:	6a 00                	push   $0x0$/;"	l
c010353d	obj/kernel.asm	/^c010353d:	6a 36                	push   $0x36$/;"	l
c010353f	obj/kernel.asm	/^c010353f:	e9 91 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103544	obj/kernel.asm	/^c0103544 <vector55>:$/;"	l
c0103544	obj/kernel.asm	/^c0103544:	6a 00                	push   $0x0$/;"	l
c0103546	obj/kernel.asm	/^c0103546:	6a 37                	push   $0x37$/;"	l
c0103548	obj/kernel.asm	/^c0103548:	e9 88 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010354d	obj/kernel.asm	/^c010354d <vector56>:$/;"	l
c010354d	obj/kernel.asm	/^c010354d:	6a 00                	push   $0x0$/;"	l
c010354f	obj/kernel.asm	/^c010354f:	6a 38                	push   $0x38$/;"	l
c0103551	obj/kernel.asm	/^c0103551:	e9 7f 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103556	obj/kernel.asm	/^c0103556 <vector57>:$/;"	l
c0103556	obj/kernel.asm	/^c0103556:	6a 00                	push   $0x0$/;"	l
c0103558	obj/kernel.asm	/^c0103558:	6a 39                	push   $0x39$/;"	l
c010355a	obj/kernel.asm	/^c010355a:	e9 76 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010355f	obj/kernel.asm	/^c010355f <vector58>:$/;"	l
c010355f	obj/kernel.asm	/^c010355f:	6a 00                	push   $0x0$/;"	l
c0103561	obj/kernel.asm	/^c0103561:	6a 3a                	push   $0x3a$/;"	l
c0103563	obj/kernel.asm	/^c0103563:	e9 6d 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103568	obj/kernel.asm	/^c0103568 <vector59>:$/;"	l
c0103568	obj/kernel.asm	/^c0103568:	6a 00                	push   $0x0$/;"	l
c010356a	obj/kernel.asm	/^c010356a:	6a 3b                	push   $0x3b$/;"	l
c010356c	obj/kernel.asm	/^c010356c:	e9 64 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103571	obj/kernel.asm	/^c0103571 <vector60>:$/;"	l
c0103571	obj/kernel.asm	/^c0103571:	6a 00                	push   $0x0$/;"	l
c0103573	obj/kernel.asm	/^c0103573:	6a 3c                	push   $0x3c$/;"	l
c0103575	obj/kernel.asm	/^c0103575:	e9 5b 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010357a	obj/kernel.asm	/^c010357a <vector61>:$/;"	l
c010357a	obj/kernel.asm	/^c010357a:	6a 00                	push   $0x0$/;"	l
c010357c	obj/kernel.asm	/^c010357c:	6a 3d                	push   $0x3d$/;"	l
c010357e	obj/kernel.asm	/^c010357e:	e9 52 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103583	obj/kernel.asm	/^c0103583 <vector62>:$/;"	l
c0103583	obj/kernel.asm	/^c0103583:	6a 00                	push   $0x0$/;"	l
c0103585	obj/kernel.asm	/^c0103585:	6a 3e                	push   $0x3e$/;"	l
c0103587	obj/kernel.asm	/^c0103587:	e9 49 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010358c	obj/kernel.asm	/^c010358c <vector63>:$/;"	l
c010358c	obj/kernel.asm	/^c010358c:	6a 00                	push   $0x0$/;"	l
c010358e	obj/kernel.asm	/^c010358e:	6a 3f                	push   $0x3f$/;"	l
c0103590	obj/kernel.asm	/^c0103590:	e9 40 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103595	obj/kernel.asm	/^c0103595 <vector64>:$/;"	l
c0103595	obj/kernel.asm	/^c0103595:	6a 00                	push   $0x0$/;"	l
c0103597	obj/kernel.asm	/^c0103597:	6a 40                	push   $0x40$/;"	l
c0103599	obj/kernel.asm	/^c0103599:	e9 37 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010359e	obj/kernel.asm	/^c010359e <vector65>:$/;"	l
c010359e	obj/kernel.asm	/^c010359e:	6a 00                	push   $0x0$/;"	l
c01035a0	obj/kernel.asm	/^c01035a0:	6a 41                	push   $0x41$/;"	l
c01035a2	obj/kernel.asm	/^c01035a2:	e9 2e 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035a7	obj/kernel.asm	/^c01035a7 <vector66>:$/;"	l
c01035a7	obj/kernel.asm	/^c01035a7:	6a 00                	push   $0x0$/;"	l
c01035a9	obj/kernel.asm	/^c01035a9:	6a 42                	push   $0x42$/;"	l
c01035ab	obj/kernel.asm	/^c01035ab:	e9 25 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035b0	obj/kernel.asm	/^c01035b0 <vector67>:$/;"	l
c01035b0	obj/kernel.asm	/^c01035b0:	6a 00                	push   $0x0$/;"	l
c01035b2	obj/kernel.asm	/^c01035b2:	6a 43                	push   $0x43$/;"	l
c01035b4	obj/kernel.asm	/^c01035b4:	e9 1c 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035b9	obj/kernel.asm	/^c01035b9 <vector68>:$/;"	l
c01035b9	obj/kernel.asm	/^c01035b9:	6a 00                	push   $0x0$/;"	l
c01035bb	obj/kernel.asm	/^c01035bb:	6a 44                	push   $0x44$/;"	l
c01035bd	obj/kernel.asm	/^c01035bd:	e9 13 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035c2	obj/kernel.asm	/^c01035c2 <vector69>:$/;"	l
c01035c2	obj/kernel.asm	/^c01035c2:	6a 00                	push   $0x0$/;"	l
c01035c4	obj/kernel.asm	/^c01035c4:	6a 45                	push   $0x45$/;"	l
c01035c6	obj/kernel.asm	/^c01035c6:	e9 0a 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035cb	obj/kernel.asm	/^c01035cb <vector70>:$/;"	l
c01035cb	obj/kernel.asm	/^c01035cb:	6a 00                	push   $0x0$/;"	l
c01035cd	obj/kernel.asm	/^c01035cd:	6a 46                	push   $0x46$/;"	l
c01035cf	obj/kernel.asm	/^c01035cf:	e9 01 08 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035d4	obj/kernel.asm	/^c01035d4 <vector71>:$/;"	l
c01035d4	obj/kernel.asm	/^c01035d4:	6a 00                	push   $0x0$/;"	l
c01035d6	obj/kernel.asm	/^c01035d6:	6a 47                	push   $0x47$/;"	l
c01035d8	obj/kernel.asm	/^c01035d8:	e9 f8 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd <vector72>:$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd:	6a 00                	push   $0x0$/;"	l
c01035df	obj/kernel.asm	/^c01035df:	6a 48                	push   $0x48$/;"	l
c01035e1	obj/kernel.asm	/^c01035e1:	e9 ef 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035e6	obj/kernel.asm	/^c01035e6 <vector73>:$/;"	l
c01035e6	obj/kernel.asm	/^c01035e6:	6a 00                	push   $0x0$/;"	l
c01035e8	obj/kernel.asm	/^c01035e8:	6a 49                	push   $0x49$/;"	l
c01035ea	obj/kernel.asm	/^c01035ea:	e9 e6 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035ef	obj/kernel.asm	/^c01035ef <vector74>:$/;"	l
c01035ef	obj/kernel.asm	/^c01035ef:	6a 00                	push   $0x0$/;"	l
c01035f1	obj/kernel.asm	/^c01035f1:	6a 4a                	push   $0x4a$/;"	l
c01035f3	obj/kernel.asm	/^c01035f3:	e9 dd 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01035f8	obj/kernel.asm	/^c01035f8 <vector75>:$/;"	l
c01035f8	obj/kernel.asm	/^c01035f8:	6a 00                	push   $0x0$/;"	l
c01035fa	obj/kernel.asm	/^c01035fa:	6a 4b                	push   $0x4b$/;"	l
c01035fc	obj/kernel.asm	/^c01035fc:	e9 d4 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103601	obj/kernel.asm	/^c0103601 <vector76>:$/;"	l
c0103601	obj/kernel.asm	/^c0103601:	6a 00                	push   $0x0$/;"	l
c0103603	obj/kernel.asm	/^c0103603:	6a 4c                	push   $0x4c$/;"	l
c0103605	obj/kernel.asm	/^c0103605:	e9 cb 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010360a	obj/kernel.asm	/^c010360a <vector77>:$/;"	l
c010360a	obj/kernel.asm	/^c010360a:	6a 00                	push   $0x0$/;"	l
c010360c	obj/kernel.asm	/^c010360c:	6a 4d                	push   $0x4d$/;"	l
c010360e	obj/kernel.asm	/^c010360e:	e9 c2 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103613	obj/kernel.asm	/^c0103613 <vector78>:$/;"	l
c0103613	obj/kernel.asm	/^c0103613:	6a 00                	push   $0x0$/;"	l
c0103615	obj/kernel.asm	/^c0103615:	6a 4e                	push   $0x4e$/;"	l
c0103617	obj/kernel.asm	/^c0103617:	e9 b9 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010361c	obj/kernel.asm	/^c010361c <vector79>:$/;"	l
c010361c	obj/kernel.asm	/^c010361c:	6a 00                	push   $0x0$/;"	l
c010361e	obj/kernel.asm	/^c010361e:	6a 4f                	push   $0x4f$/;"	l
c0103620	obj/kernel.asm	/^c0103620:	e9 b0 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103625	obj/kernel.asm	/^c0103625 <vector80>:$/;"	l
c0103625	obj/kernel.asm	/^c0103625:	6a 00                	push   $0x0$/;"	l
c0103627	obj/kernel.asm	/^c0103627:	6a 50                	push   $0x50$/;"	l
c0103629	obj/kernel.asm	/^c0103629:	e9 a7 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010362e	obj/kernel.asm	/^c010362e <vector81>:$/;"	l
c010362e	obj/kernel.asm	/^c010362e:	6a 00                	push   $0x0$/;"	l
c0103630	obj/kernel.asm	/^c0103630:	6a 51                	push   $0x51$/;"	l
c0103632	obj/kernel.asm	/^c0103632:	e9 9e 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103637	obj/kernel.asm	/^c0103637 <vector82>:$/;"	l
c0103637	obj/kernel.asm	/^c0103637:	6a 00                	push   $0x0$/;"	l
c0103639	obj/kernel.asm	/^c0103639:	6a 52                	push   $0x52$/;"	l
c010363b	obj/kernel.asm	/^c010363b:	e9 95 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103640	obj/kernel.asm	/^c0103640 <vector83>:$/;"	l
c0103640	obj/kernel.asm	/^c0103640:	6a 00                	push   $0x0$/;"	l
c0103642	obj/kernel.asm	/^c0103642:	6a 53                	push   $0x53$/;"	l
c0103644	obj/kernel.asm	/^c0103644:	e9 8c 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103649	obj/kernel.asm	/^c0103649 <vector84>:$/;"	l
c0103649	obj/kernel.asm	/^c0103649:	6a 00                	push   $0x0$/;"	l
c010364b	obj/kernel.asm	/^c010364b:	6a 54                	push   $0x54$/;"	l
c010364d	obj/kernel.asm	/^c010364d:	e9 83 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103652	obj/kernel.asm	/^c0103652 <vector85>:$/;"	l
c0103652	obj/kernel.asm	/^c0103652:	6a 00                	push   $0x0$/;"	l
c0103654	obj/kernel.asm	/^c0103654:	6a 55                	push   $0x55$/;"	l
c0103656	obj/kernel.asm	/^c0103656:	e9 7a 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010365b	obj/kernel.asm	/^c010365b <vector86>:$/;"	l
c010365b	obj/kernel.asm	/^c010365b:	6a 00                	push   $0x0$/;"	l
c010365d	obj/kernel.asm	/^c010365d:	6a 56                	push   $0x56$/;"	l
c010365f	obj/kernel.asm	/^c010365f:	e9 71 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103664	obj/kernel.asm	/^c0103664 <vector87>:$/;"	l
c0103664	obj/kernel.asm	/^c0103664:	6a 00                	push   $0x0$/;"	l
c0103666	obj/kernel.asm	/^c0103666:	6a 57                	push   $0x57$/;"	l
c0103668	obj/kernel.asm	/^c0103668:	e9 68 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010366d	obj/kernel.asm	/^c010366d <vector88>:$/;"	l
c010366d	obj/kernel.asm	/^c010366d:	6a 00                	push   $0x0$/;"	l
c010366f	obj/kernel.asm	/^c010366f:	6a 58                	push   $0x58$/;"	l
c0103671	obj/kernel.asm	/^c0103671:	e9 5f 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103676	obj/kernel.asm	/^c0103676 <vector89>:$/;"	l
c0103676	obj/kernel.asm	/^c0103676:	6a 00                	push   $0x0$/;"	l
c0103678	obj/kernel.asm	/^c0103678:	6a 59                	push   $0x59$/;"	l
c010367a	obj/kernel.asm	/^c010367a:	e9 56 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010367f	obj/kernel.asm	/^c010367f <vector90>:$/;"	l
c010367f	obj/kernel.asm	/^c010367f:	6a 00                	push   $0x0$/;"	l
c0103681	obj/kernel.asm	/^c0103681:	6a 5a                	push   $0x5a$/;"	l
c0103683	obj/kernel.asm	/^c0103683:	e9 4d 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103688	obj/kernel.asm	/^c0103688 <vector91>:$/;"	l
c0103688	obj/kernel.asm	/^c0103688:	6a 00                	push   $0x0$/;"	l
c010368a	obj/kernel.asm	/^c010368a:	6a 5b                	push   $0x5b$/;"	l
c010368c	obj/kernel.asm	/^c010368c:	e9 44 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103691	obj/kernel.asm	/^c0103691 <vector92>:$/;"	l
c0103691	obj/kernel.asm	/^c0103691:	6a 00                	push   $0x0$/;"	l
c0103693	obj/kernel.asm	/^c0103693:	6a 5c                	push   $0x5c$/;"	l
c0103695	obj/kernel.asm	/^c0103695:	e9 3b 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010369a	obj/kernel.asm	/^c010369a <vector93>:$/;"	l
c010369a	obj/kernel.asm	/^c010369a:	6a 00                	push   $0x0$/;"	l
c010369c	obj/kernel.asm	/^c010369c:	6a 5d                	push   $0x5d$/;"	l
c010369e	obj/kernel.asm	/^c010369e:	e9 32 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036a3	obj/kernel.asm	/^c01036a3 <vector94>:$/;"	l
c01036a3	obj/kernel.asm	/^c01036a3:	6a 00                	push   $0x0$/;"	l
c01036a5	obj/kernel.asm	/^c01036a5:	6a 5e                	push   $0x5e$/;"	l
c01036a7	obj/kernel.asm	/^c01036a7:	e9 29 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036ac	obj/kernel.asm	/^c01036ac <vector95>:$/;"	l
c01036ac	obj/kernel.asm	/^c01036ac:	6a 00                	push   $0x0$/;"	l
c01036ae	obj/kernel.asm	/^c01036ae:	6a 5f                	push   $0x5f$/;"	l
c01036b0	obj/kernel.asm	/^c01036b0:	e9 20 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036b5	obj/kernel.asm	/^c01036b5 <vector96>:$/;"	l
c01036b5	obj/kernel.asm	/^c01036b5:	6a 00                	push   $0x0$/;"	l
c01036b7	obj/kernel.asm	/^c01036b7:	6a 60                	push   $0x60$/;"	l
c01036b9	obj/kernel.asm	/^c01036b9:	e9 17 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036be	obj/kernel.asm	/^c01036be <vector97>:$/;"	l
c01036be	obj/kernel.asm	/^c01036be:	6a 00                	push   $0x0$/;"	l
c01036c0	obj/kernel.asm	/^c01036c0:	6a 61                	push   $0x61$/;"	l
c01036c2	obj/kernel.asm	/^c01036c2:	e9 0e 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036c7	obj/kernel.asm	/^c01036c7 <vector98>:$/;"	l
c01036c7	obj/kernel.asm	/^c01036c7:	6a 00                	push   $0x0$/;"	l
c01036c9	obj/kernel.asm	/^c01036c9:	6a 62                	push   $0x62$/;"	l
c01036cb	obj/kernel.asm	/^c01036cb:	e9 05 07 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036d0	obj/kernel.asm	/^c01036d0 <vector99>:$/;"	l
c01036d0	obj/kernel.asm	/^c01036d0:	6a 00                	push   $0x0$/;"	l
c01036d2	obj/kernel.asm	/^c01036d2:	6a 63                	push   $0x63$/;"	l
c01036d4	obj/kernel.asm	/^c01036d4:	e9 fc 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036d9	obj/kernel.asm	/^c01036d9 <vector100>:$/;"	l
c01036d9	obj/kernel.asm	/^c01036d9:	6a 00                	push   $0x0$/;"	l
c01036db	obj/kernel.asm	/^c01036db:	6a 64                	push   $0x64$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	e9 f3 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036e2	obj/kernel.asm	/^c01036e2 <vector101>:$/;"	l
c01036e2	obj/kernel.asm	/^c01036e2:	6a 00                	push   $0x0$/;"	l
c01036e4	obj/kernel.asm	/^c01036e4:	6a 65                	push   $0x65$/;"	l
c01036e6	obj/kernel.asm	/^c01036e6:	e9 ea 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036eb	obj/kernel.asm	/^c01036eb <vector102>:$/;"	l
c01036eb	obj/kernel.asm	/^c01036eb:	6a 00                	push   $0x0$/;"	l
c01036ed	obj/kernel.asm	/^c01036ed:	6a 66                	push   $0x66$/;"	l
c01036ef	obj/kernel.asm	/^c01036ef:	e9 e1 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036f4	obj/kernel.asm	/^c01036f4 <vector103>:$/;"	l
c01036f4	obj/kernel.asm	/^c01036f4:	6a 00                	push   $0x0$/;"	l
c01036f6	obj/kernel.asm	/^c01036f6:	6a 67                	push   $0x67$/;"	l
c01036f8	obj/kernel.asm	/^c01036f8:	e9 d8 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01036fd	obj/kernel.asm	/^c01036fd <vector104>:$/;"	l
c01036fd	obj/kernel.asm	/^c01036fd:	6a 00                	push   $0x0$/;"	l
c01036ff	obj/kernel.asm	/^c01036ff:	6a 68                	push   $0x68$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	e9 cf 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103706	obj/kernel.asm	/^c0103706 <vector105>:$/;"	l
c0103706	obj/kernel.asm	/^c0103706:	6a 00                	push   $0x0$/;"	l
c0103708	obj/kernel.asm	/^c0103708:	6a 69                	push   $0x69$/;"	l
c010370a	obj/kernel.asm	/^c010370a:	e9 c6 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010370f	obj/kernel.asm	/^c010370f <vector106>:$/;"	l
c010370f	obj/kernel.asm	/^c010370f:	6a 00                	push   $0x0$/;"	l
c0103711	obj/kernel.asm	/^c0103711:	6a 6a                	push   $0x6a$/;"	l
c0103713	obj/kernel.asm	/^c0103713:	e9 bd 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103718	obj/kernel.asm	/^c0103718 <vector107>:$/;"	l
c0103718	obj/kernel.asm	/^c0103718:	6a 00                	push   $0x0$/;"	l
c010371a	obj/kernel.asm	/^c010371a:	6a 6b                	push   $0x6b$/;"	l
c010371c	obj/kernel.asm	/^c010371c:	e9 b4 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103721	obj/kernel.asm	/^c0103721 <vector108>:$/;"	l
c0103721	obj/kernel.asm	/^c0103721:	6a 00                	push   $0x0$/;"	l
c0103723	obj/kernel.asm	/^c0103723:	6a 6c                	push   $0x6c$/;"	l
c0103725	obj/kernel.asm	/^c0103725:	e9 ab 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010372a	obj/kernel.asm	/^c010372a <vector109>:$/;"	l
c010372a	obj/kernel.asm	/^c010372a:	6a 00                	push   $0x0$/;"	l
c010372c	obj/kernel.asm	/^c010372c:	6a 6d                	push   $0x6d$/;"	l
c010372e	obj/kernel.asm	/^c010372e:	e9 a2 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103733	obj/kernel.asm	/^c0103733 <vector110>:$/;"	l
c0103733	obj/kernel.asm	/^c0103733:	6a 00                	push   $0x0$/;"	l
c0103735	obj/kernel.asm	/^c0103735:	6a 6e                	push   $0x6e$/;"	l
c0103737	obj/kernel.asm	/^c0103737:	e9 99 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010373c	obj/kernel.asm	/^c010373c <vector111>:$/;"	l
c010373c	obj/kernel.asm	/^c010373c:	6a 00                	push   $0x0$/;"	l
c010373e	obj/kernel.asm	/^c010373e:	6a 6f                	push   $0x6f$/;"	l
c0103740	obj/kernel.asm	/^c0103740:	e9 90 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103745	obj/kernel.asm	/^c0103745 <vector112>:$/;"	l
c0103745	obj/kernel.asm	/^c0103745:	6a 00                	push   $0x0$/;"	l
c0103747	obj/kernel.asm	/^c0103747:	6a 70                	push   $0x70$/;"	l
c0103749	obj/kernel.asm	/^c0103749:	e9 87 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010374e	obj/kernel.asm	/^c010374e <vector113>:$/;"	l
c010374e	obj/kernel.asm	/^c010374e:	6a 00                	push   $0x0$/;"	l
c0103750	obj/kernel.asm	/^c0103750:	6a 71                	push   $0x71$/;"	l
c0103752	obj/kernel.asm	/^c0103752:	e9 7e 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103757	obj/kernel.asm	/^c0103757 <vector114>:$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	6a 00                	push   $0x0$/;"	l
c0103759	obj/kernel.asm	/^c0103759:	6a 72                	push   $0x72$/;"	l
c010375b	obj/kernel.asm	/^c010375b:	e9 75 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103760	obj/kernel.asm	/^c0103760 <vector115>:$/;"	l
c0103760	obj/kernel.asm	/^c0103760:	6a 00                	push   $0x0$/;"	l
c0103762	obj/kernel.asm	/^c0103762:	6a 73                	push   $0x73$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	e9 6c 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103769	obj/kernel.asm	/^c0103769 <vector116>:$/;"	l
c0103769	obj/kernel.asm	/^c0103769:	6a 00                	push   $0x0$/;"	l
c010376b	obj/kernel.asm	/^c010376b:	6a 74                	push   $0x74$/;"	l
c010376d	obj/kernel.asm	/^c010376d:	e9 63 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103772	obj/kernel.asm	/^c0103772 <vector117>:$/;"	l
c0103772	obj/kernel.asm	/^c0103772:	6a 00                	push   $0x0$/;"	l
c0103774	obj/kernel.asm	/^c0103774:	6a 75                	push   $0x75$/;"	l
c0103776	obj/kernel.asm	/^c0103776:	e9 5a 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010377b	obj/kernel.asm	/^c010377b <vector118>:$/;"	l
c010377b	obj/kernel.asm	/^c010377b:	6a 00                	push   $0x0$/;"	l
c010377d	obj/kernel.asm	/^c010377d:	6a 76                	push   $0x76$/;"	l
c010377f	obj/kernel.asm	/^c010377f:	e9 51 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103784	obj/kernel.asm	/^c0103784 <vector119>:$/;"	l
c0103784	obj/kernel.asm	/^c0103784:	6a 00                	push   $0x0$/;"	l
c0103786	obj/kernel.asm	/^c0103786:	6a 77                	push   $0x77$/;"	l
c0103788	obj/kernel.asm	/^c0103788:	e9 48 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010378d	obj/kernel.asm	/^c010378d <vector120>:$/;"	l
c010378d	obj/kernel.asm	/^c010378d:	6a 00                	push   $0x0$/;"	l
c010378f	obj/kernel.asm	/^c010378f:	6a 78                	push   $0x78$/;"	l
c0103791	obj/kernel.asm	/^c0103791:	e9 3f 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103796	obj/kernel.asm	/^c0103796 <vector121>:$/;"	l
c0103796	obj/kernel.asm	/^c0103796:	6a 00                	push   $0x0$/;"	l
c0103798	obj/kernel.asm	/^c0103798:	6a 79                	push   $0x79$/;"	l
c010379a	obj/kernel.asm	/^c010379a:	e9 36 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010379f	obj/kernel.asm	/^c010379f <vector122>:$/;"	l
c010379f	obj/kernel.asm	/^c010379f:	6a 00                	push   $0x0$/;"	l
c01037a1	obj/kernel.asm	/^c01037a1:	6a 7a                	push   $0x7a$/;"	l
c01037a3	obj/kernel.asm	/^c01037a3:	e9 2d 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037a8	obj/kernel.asm	/^c01037a8 <vector123>:$/;"	l
c01037a8	obj/kernel.asm	/^c01037a8:	6a 00                	push   $0x0$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	6a 7b                	push   $0x7b$/;"	l
c01037ac	obj/kernel.asm	/^c01037ac:	e9 24 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037b1	obj/kernel.asm	/^c01037b1 <vector124>:$/;"	l
c01037b1	obj/kernel.asm	/^c01037b1:	6a 00                	push   $0x0$/;"	l
c01037b3	obj/kernel.asm	/^c01037b3:	6a 7c                	push   $0x7c$/;"	l
c01037b5	obj/kernel.asm	/^c01037b5:	e9 1b 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037ba	obj/kernel.asm	/^c01037ba <vector125>:$/;"	l
c01037ba	obj/kernel.asm	/^c01037ba:	6a 00                	push   $0x0$/;"	l
c01037bc	obj/kernel.asm	/^c01037bc:	6a 7d                	push   $0x7d$/;"	l
c01037be	obj/kernel.asm	/^c01037be:	e9 12 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037c3	obj/kernel.asm	/^c01037c3 <vector126>:$/;"	l
c01037c3	obj/kernel.asm	/^c01037c3:	6a 00                	push   $0x0$/;"	l
c01037c5	obj/kernel.asm	/^c01037c5:	6a 7e                	push   $0x7e$/;"	l
c01037c7	obj/kernel.asm	/^c01037c7:	e9 09 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc <vector127>:$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	6a 00                	push   $0x0$/;"	l
c01037ce	obj/kernel.asm	/^c01037ce:	6a 7f                	push   $0x7f$/;"	l
c01037d0	obj/kernel.asm	/^c01037d0:	e9 00 06 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037d5	obj/kernel.asm	/^c01037d5 <vector128>:$/;"	l
c01037d5	obj/kernel.asm	/^c01037d5:	6a 00                	push   $0x0$/;"	l
c01037d7	obj/kernel.asm	/^c01037d7:	68 80 00 00 00       	push   $0x80$/;"	l
c01037dc	obj/kernel.asm	/^c01037dc:	e9 f4 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037e1	obj/kernel.asm	/^c01037e1 <vector129>:$/;"	l
c01037e1	obj/kernel.asm	/^c01037e1:	6a 00                	push   $0x0$/;"	l
c01037e3	obj/kernel.asm	/^c01037e3:	68 81 00 00 00       	push   $0x81$/;"	l
c01037e8	obj/kernel.asm	/^c01037e8:	e9 e8 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037ed	obj/kernel.asm	/^c01037ed <vector130>:$/;"	l
c01037ed	obj/kernel.asm	/^c01037ed:	6a 00                	push   $0x0$/;"	l
c01037ef	obj/kernel.asm	/^c01037ef:	68 82 00 00 00       	push   $0x82$/;"	l
c01037f4	obj/kernel.asm	/^c01037f4:	e9 dc 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01037f9	obj/kernel.asm	/^c01037f9 <vector131>:$/;"	l
c01037f9	obj/kernel.asm	/^c01037f9:	6a 00                	push   $0x0$/;"	l
c01037fb	obj/kernel.asm	/^c01037fb:	68 83 00 00 00       	push   $0x83$/;"	l
c0103800	obj/kernel.asm	/^c0103800:	e9 d0 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103805	obj/kernel.asm	/^c0103805 <vector132>:$/;"	l
c0103805	obj/kernel.asm	/^c0103805:	6a 00                	push   $0x0$/;"	l
c0103807	obj/kernel.asm	/^c0103807:	68 84 00 00 00       	push   $0x84$/;"	l
c010380c	obj/kernel.asm	/^c010380c:	e9 c4 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103811	obj/kernel.asm	/^c0103811 <vector133>:$/;"	l
c0103811	obj/kernel.asm	/^c0103811:	6a 00                	push   $0x0$/;"	l
c0103813	obj/kernel.asm	/^c0103813:	68 85 00 00 00       	push   $0x85$/;"	l
c0103818	obj/kernel.asm	/^c0103818:	e9 b8 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010381d	obj/kernel.asm	/^c010381d <vector134>:$/;"	l
c010381d	obj/kernel.asm	/^c010381d:	6a 00                	push   $0x0$/;"	l
c010381f	obj/kernel.asm	/^c010381f:	68 86 00 00 00       	push   $0x86$/;"	l
c0103824	obj/kernel.asm	/^c0103824:	e9 ac 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103829	obj/kernel.asm	/^c0103829 <vector135>:$/;"	l
c0103829	obj/kernel.asm	/^c0103829:	6a 00                	push   $0x0$/;"	l
c010382b	obj/kernel.asm	/^c010382b:	68 87 00 00 00       	push   $0x87$/;"	l
c0103830	obj/kernel.asm	/^c0103830:	e9 a0 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103835	obj/kernel.asm	/^c0103835 <vector136>:$/;"	l
c0103835	obj/kernel.asm	/^c0103835:	6a 00                	push   $0x0$/;"	l
c0103837	obj/kernel.asm	/^c0103837:	68 88 00 00 00       	push   $0x88$/;"	l
c010383c	obj/kernel.asm	/^c010383c:	e9 94 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103841	obj/kernel.asm	/^c0103841 <vector137>:$/;"	l
c0103841	obj/kernel.asm	/^c0103841:	6a 00                	push   $0x0$/;"	l
c0103843	obj/kernel.asm	/^c0103843:	68 89 00 00 00       	push   $0x89$/;"	l
c0103848	obj/kernel.asm	/^c0103848:	e9 88 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010384d	obj/kernel.asm	/^c010384d <vector138>:$/;"	l
c010384d	obj/kernel.asm	/^c010384d:	6a 00                	push   $0x0$/;"	l
c010384f	obj/kernel.asm	/^c010384f:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0103854	obj/kernel.asm	/^c0103854:	e9 7c 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103859	obj/kernel.asm	/^c0103859 <vector139>:$/;"	l
c0103859	obj/kernel.asm	/^c0103859:	6a 00                	push   $0x0$/;"	l
c010385b	obj/kernel.asm	/^c010385b:	68 8b 00 00 00       	push   $0x8b$/;"	l
c0103860	obj/kernel.asm	/^c0103860:	e9 70 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103865	obj/kernel.asm	/^c0103865 <vector140>:$/;"	l
c0103865	obj/kernel.asm	/^c0103865:	6a 00                	push   $0x0$/;"	l
c0103867	obj/kernel.asm	/^c0103867:	68 8c 00 00 00       	push   $0x8c$/;"	l
c010386c	obj/kernel.asm	/^c010386c:	e9 64 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103871	obj/kernel.asm	/^c0103871 <vector141>:$/;"	l
c0103871	obj/kernel.asm	/^c0103871:	6a 00                	push   $0x0$/;"	l
c0103873	obj/kernel.asm	/^c0103873:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0103878	obj/kernel.asm	/^c0103878:	e9 58 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010387d	obj/kernel.asm	/^c010387d <vector142>:$/;"	l
c010387d	obj/kernel.asm	/^c010387d:	6a 00                	push   $0x0$/;"	l
c010387f	obj/kernel.asm	/^c010387f:	68 8e 00 00 00       	push   $0x8e$/;"	l
c0103884	obj/kernel.asm	/^c0103884:	e9 4c 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103889	obj/kernel.asm	/^c0103889 <vector143>:$/;"	l
c0103889	obj/kernel.asm	/^c0103889:	6a 00                	push   $0x0$/;"	l
c010388b	obj/kernel.asm	/^c010388b:	68 8f 00 00 00       	push   $0x8f$/;"	l
c0103890	obj/kernel.asm	/^c0103890:	e9 40 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103895	obj/kernel.asm	/^c0103895 <vector144>:$/;"	l
c0103895	obj/kernel.asm	/^c0103895:	6a 00                	push   $0x0$/;"	l
c0103897	obj/kernel.asm	/^c0103897:	68 90 00 00 00       	push   $0x90$/;"	l
c010389c	obj/kernel.asm	/^c010389c:	e9 34 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038a1	obj/kernel.asm	/^c01038a1 <vector145>:$/;"	l
c01038a1	obj/kernel.asm	/^c01038a1:	6a 00                	push   $0x0$/;"	l
c01038a3	obj/kernel.asm	/^c01038a3:	68 91 00 00 00       	push   $0x91$/;"	l
c01038a8	obj/kernel.asm	/^c01038a8:	e9 28 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038ad	obj/kernel.asm	/^c01038ad <vector146>:$/;"	l
c01038ad	obj/kernel.asm	/^c01038ad:	6a 00                	push   $0x0$/;"	l
c01038af	obj/kernel.asm	/^c01038af:	68 92 00 00 00       	push   $0x92$/;"	l
c01038b4	obj/kernel.asm	/^c01038b4:	e9 1c 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038b9	obj/kernel.asm	/^c01038b9 <vector147>:$/;"	l
c01038b9	obj/kernel.asm	/^c01038b9:	6a 00                	push   $0x0$/;"	l
c01038bb	obj/kernel.asm	/^c01038bb:	68 93 00 00 00       	push   $0x93$/;"	l
c01038c0	obj/kernel.asm	/^c01038c0:	e9 10 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038c5	obj/kernel.asm	/^c01038c5 <vector148>:$/;"	l
c01038c5	obj/kernel.asm	/^c01038c5:	6a 00                	push   $0x0$/;"	l
c01038c7	obj/kernel.asm	/^c01038c7:	68 94 00 00 00       	push   $0x94$/;"	l
c01038cc	obj/kernel.asm	/^c01038cc:	e9 04 05 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038d1	obj/kernel.asm	/^c01038d1 <vector149>:$/;"	l
c01038d1	obj/kernel.asm	/^c01038d1:	6a 00                	push   $0x0$/;"	l
c01038d3	obj/kernel.asm	/^c01038d3:	68 95 00 00 00       	push   $0x95$/;"	l
c01038d8	obj/kernel.asm	/^c01038d8:	e9 f8 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038dd	obj/kernel.asm	/^c01038dd <vector150>:$/;"	l
c01038dd	obj/kernel.asm	/^c01038dd:	6a 00                	push   $0x0$/;"	l
c01038df	obj/kernel.asm	/^c01038df:	68 96 00 00 00       	push   $0x96$/;"	l
c01038e4	obj/kernel.asm	/^c01038e4:	e9 ec 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038e9	obj/kernel.asm	/^c01038e9 <vector151>:$/;"	l
c01038e9	obj/kernel.asm	/^c01038e9:	6a 00                	push   $0x0$/;"	l
c01038eb	obj/kernel.asm	/^c01038eb:	68 97 00 00 00       	push   $0x97$/;"	l
c01038f0	obj/kernel.asm	/^c01038f0:	e9 e0 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01038f5	obj/kernel.asm	/^c01038f5 <vector152>:$/;"	l
c01038f5	obj/kernel.asm	/^c01038f5:	6a 00                	push   $0x0$/;"	l
c01038f7	obj/kernel.asm	/^c01038f7:	68 98 00 00 00       	push   $0x98$/;"	l
c01038fc	obj/kernel.asm	/^c01038fc:	e9 d4 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103901	obj/kernel.asm	/^c0103901 <vector153>:$/;"	l
c0103901	obj/kernel.asm	/^c0103901:	6a 00                	push   $0x0$/;"	l
c0103903	obj/kernel.asm	/^c0103903:	68 99 00 00 00       	push   $0x99$/;"	l
c0103908	obj/kernel.asm	/^c0103908:	e9 c8 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010390d	obj/kernel.asm	/^c010390d <vector154>:$/;"	l
c010390d	obj/kernel.asm	/^c010390d:	6a 00                	push   $0x0$/;"	l
c010390f	obj/kernel.asm	/^c010390f:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0103914	obj/kernel.asm	/^c0103914:	e9 bc 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103919	obj/kernel.asm	/^c0103919 <vector155>:$/;"	l
c0103919	obj/kernel.asm	/^c0103919:	6a 00                	push   $0x0$/;"	l
c010391b	obj/kernel.asm	/^c010391b:	68 9b 00 00 00       	push   $0x9b$/;"	l
c0103920	obj/kernel.asm	/^c0103920:	e9 b0 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103925	obj/kernel.asm	/^c0103925 <vector156>:$/;"	l
c0103925	obj/kernel.asm	/^c0103925:	6a 00                	push   $0x0$/;"	l
c0103927	obj/kernel.asm	/^c0103927:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010392c	obj/kernel.asm	/^c010392c:	e9 a4 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103931	obj/kernel.asm	/^c0103931 <vector157>:$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	6a 00                	push   $0x0$/;"	l
c0103933	obj/kernel.asm	/^c0103933:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103938	obj/kernel.asm	/^c0103938:	e9 98 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010393d	obj/kernel.asm	/^c010393d <vector158>:$/;"	l
c010393d	obj/kernel.asm	/^c010393d:	6a 00                	push   $0x0$/;"	l
c010393f	obj/kernel.asm	/^c010393f:	68 9e 00 00 00       	push   $0x9e$/;"	l
c0103944	obj/kernel.asm	/^c0103944:	e9 8c 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103949	obj/kernel.asm	/^c0103949 <vector159>:$/;"	l
c0103949	obj/kernel.asm	/^c0103949:	6a 00                	push   $0x0$/;"	l
c010394b	obj/kernel.asm	/^c010394b:	68 9f 00 00 00       	push   $0x9f$/;"	l
c0103950	obj/kernel.asm	/^c0103950:	e9 80 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103955	obj/kernel.asm	/^c0103955 <vector160>:$/;"	l
c0103955	obj/kernel.asm	/^c0103955:	6a 00                	push   $0x0$/;"	l
c0103957	obj/kernel.asm	/^c0103957:	68 a0 00 00 00       	push   $0xa0$/;"	l
c010395c	obj/kernel.asm	/^c010395c:	e9 74 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103961	obj/kernel.asm	/^c0103961 <vector161>:$/;"	l
c0103961	obj/kernel.asm	/^c0103961:	6a 00                	push   $0x0$/;"	l
c0103963	obj/kernel.asm	/^c0103963:	68 a1 00 00 00       	push   $0xa1$/;"	l
c0103968	obj/kernel.asm	/^c0103968:	e9 68 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010396d	obj/kernel.asm	/^c010396d <vector162>:$/;"	l
c010396d	obj/kernel.asm	/^c010396d:	6a 00                	push   $0x0$/;"	l
c010396f	obj/kernel.asm	/^c010396f:	68 a2 00 00 00       	push   $0xa2$/;"	l
c0103974	obj/kernel.asm	/^c0103974:	e9 5c 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103979	obj/kernel.asm	/^c0103979 <vector163>:$/;"	l
c0103979	obj/kernel.asm	/^c0103979:	6a 00                	push   $0x0$/;"	l
c010397b	obj/kernel.asm	/^c010397b:	68 a3 00 00 00       	push   $0xa3$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	e9 50 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103985	obj/kernel.asm	/^c0103985 <vector164>:$/;"	l
c0103985	obj/kernel.asm	/^c0103985:	6a 00                	push   $0x0$/;"	l
c0103987	obj/kernel.asm	/^c0103987:	68 a4 00 00 00       	push   $0xa4$/;"	l
c010398c	obj/kernel.asm	/^c010398c:	e9 44 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103991	obj/kernel.asm	/^c0103991 <vector165>:$/;"	l
c0103991	obj/kernel.asm	/^c0103991:	6a 00                	push   $0x0$/;"	l
c0103993	obj/kernel.asm	/^c0103993:	68 a5 00 00 00       	push   $0xa5$/;"	l
c0103998	obj/kernel.asm	/^c0103998:	e9 38 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c010399d	obj/kernel.asm	/^c010399d <vector166>:$/;"	l
c010399d	obj/kernel.asm	/^c010399d:	6a 00                	push   $0x0$/;"	l
c010399f	obj/kernel.asm	/^c010399f:	68 a6 00 00 00       	push   $0xa6$/;"	l
c01039a4	obj/kernel.asm	/^c01039a4:	e9 2c 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039a9	obj/kernel.asm	/^c01039a9 <vector167>:$/;"	l
c01039a9	obj/kernel.asm	/^c01039a9:	6a 00                	push   $0x0$/;"	l
c01039ab	obj/kernel.asm	/^c01039ab:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01039b0	obj/kernel.asm	/^c01039b0:	e9 20 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039b5	obj/kernel.asm	/^c01039b5 <vector168>:$/;"	l
c01039b5	obj/kernel.asm	/^c01039b5:	6a 00                	push   $0x0$/;"	l
c01039b7	obj/kernel.asm	/^c01039b7:	68 a8 00 00 00       	push   $0xa8$/;"	l
c01039bc	obj/kernel.asm	/^c01039bc:	e9 14 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039c1	obj/kernel.asm	/^c01039c1 <vector169>:$/;"	l
c01039c1	obj/kernel.asm	/^c01039c1:	6a 00                	push   $0x0$/;"	l
c01039c3	obj/kernel.asm	/^c01039c3:	68 a9 00 00 00       	push   $0xa9$/;"	l
c01039c8	obj/kernel.asm	/^c01039c8:	e9 08 04 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039cd	obj/kernel.asm	/^c01039cd <vector170>:$/;"	l
c01039cd	obj/kernel.asm	/^c01039cd:	6a 00                	push   $0x0$/;"	l
c01039cf	obj/kernel.asm	/^c01039cf:	68 aa 00 00 00       	push   $0xaa$/;"	l
c01039d4	obj/kernel.asm	/^c01039d4:	e9 fc 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039d9	obj/kernel.asm	/^c01039d9 <vector171>:$/;"	l
c01039d9	obj/kernel.asm	/^c01039d9:	6a 00                	push   $0x0$/;"	l
c01039db	obj/kernel.asm	/^c01039db:	68 ab 00 00 00       	push   $0xab$/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	e9 f0 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5 <vector172>:$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	6a 00                	push   $0x0$/;"	l
c01039e7	obj/kernel.asm	/^c01039e7:	68 ac 00 00 00       	push   $0xac$/;"	l
c01039ec	obj/kernel.asm	/^c01039ec:	e9 e4 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039f1	obj/kernel.asm	/^c01039f1 <vector173>:$/;"	l
c01039f1	obj/kernel.asm	/^c01039f1:	6a 00                	push   $0x0$/;"	l
c01039f3	obj/kernel.asm	/^c01039f3:	68 ad 00 00 00       	push   $0xad$/;"	l
c01039f8	obj/kernel.asm	/^c01039f8:	e9 d8 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c01039fd	obj/kernel.asm	/^c01039fd <vector174>:$/;"	l
c01039fd	obj/kernel.asm	/^c01039fd:	6a 00                	push   $0x0$/;"	l
c01039ff	obj/kernel.asm	/^c01039ff:	68 ae 00 00 00       	push   $0xae$/;"	l
c0103a04	obj/kernel.asm	/^c0103a04:	e9 cc 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a09	obj/kernel.asm	/^c0103a09 <vector175>:$/;"	l
c0103a09	obj/kernel.asm	/^c0103a09:	6a 00                	push   $0x0$/;"	l
c0103a0b	obj/kernel.asm	/^c0103a0b:	68 af 00 00 00       	push   $0xaf$/;"	l
c0103a10	obj/kernel.asm	/^c0103a10:	e9 c0 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a15	obj/kernel.asm	/^c0103a15 <vector176>:$/;"	l
c0103a15	obj/kernel.asm	/^c0103a15:	6a 00                	push   $0x0$/;"	l
c0103a17	obj/kernel.asm	/^c0103a17:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0103a1c	obj/kernel.asm	/^c0103a1c:	e9 b4 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a21	obj/kernel.asm	/^c0103a21 <vector177>:$/;"	l
c0103a21	obj/kernel.asm	/^c0103a21:	6a 00                	push   $0x0$/;"	l
c0103a23	obj/kernel.asm	/^c0103a23:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103a28	obj/kernel.asm	/^c0103a28:	e9 a8 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a2d	obj/kernel.asm	/^c0103a2d <vector178>:$/;"	l
c0103a2d	obj/kernel.asm	/^c0103a2d:	6a 00                	push   $0x0$/;"	l
c0103a2f	obj/kernel.asm	/^c0103a2f:	68 b2 00 00 00       	push   $0xb2$/;"	l
c0103a34	obj/kernel.asm	/^c0103a34:	e9 9c 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a39	obj/kernel.asm	/^c0103a39 <vector179>:$/;"	l
c0103a39	obj/kernel.asm	/^c0103a39:	6a 00                	push   $0x0$/;"	l
c0103a3b	obj/kernel.asm	/^c0103a3b:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0103a40	obj/kernel.asm	/^c0103a40:	e9 90 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a45	obj/kernel.asm	/^c0103a45 <vector180>:$/;"	l
c0103a45	obj/kernel.asm	/^c0103a45:	6a 00                	push   $0x0$/;"	l
c0103a47	obj/kernel.asm	/^c0103a47:	68 b4 00 00 00       	push   $0xb4$/;"	l
c0103a4c	obj/kernel.asm	/^c0103a4c:	e9 84 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a51	obj/kernel.asm	/^c0103a51 <vector181>:$/;"	l
c0103a51	obj/kernel.asm	/^c0103a51:	6a 00                	push   $0x0$/;"	l
c0103a53	obj/kernel.asm	/^c0103a53:	68 b5 00 00 00       	push   $0xb5$/;"	l
c0103a58	obj/kernel.asm	/^c0103a58:	e9 78 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a5d	obj/kernel.asm	/^c0103a5d <vector182>:$/;"	l
c0103a5d	obj/kernel.asm	/^c0103a5d:	6a 00                	push   $0x0$/;"	l
c0103a5f	obj/kernel.asm	/^c0103a5f:	68 b6 00 00 00       	push   $0xb6$/;"	l
c0103a64	obj/kernel.asm	/^c0103a64:	e9 6c 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a69	obj/kernel.asm	/^c0103a69 <vector183>:$/;"	l
c0103a69	obj/kernel.asm	/^c0103a69:	6a 00                	push   $0x0$/;"	l
c0103a6b	obj/kernel.asm	/^c0103a6b:	68 b7 00 00 00       	push   $0xb7$/;"	l
c0103a70	obj/kernel.asm	/^c0103a70:	e9 60 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a75	obj/kernel.asm	/^c0103a75 <vector184>:$/;"	l
c0103a75	obj/kernel.asm	/^c0103a75:	6a 00                	push   $0x0$/;"	l
c0103a77	obj/kernel.asm	/^c0103a77:	68 b8 00 00 00       	push   $0xb8$/;"	l
c0103a7c	obj/kernel.asm	/^c0103a7c:	e9 54 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a81	obj/kernel.asm	/^c0103a81 <vector185>:$/;"	l
c0103a81	obj/kernel.asm	/^c0103a81:	6a 00                	push   $0x0$/;"	l
c0103a83	obj/kernel.asm	/^c0103a83:	68 b9 00 00 00       	push   $0xb9$/;"	l
c0103a88	obj/kernel.asm	/^c0103a88:	e9 48 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a8d	obj/kernel.asm	/^c0103a8d <vector186>:$/;"	l
c0103a8d	obj/kernel.asm	/^c0103a8d:	6a 00                	push   $0x0$/;"	l
c0103a8f	obj/kernel.asm	/^c0103a8f:	68 ba 00 00 00       	push   $0xba$/;"	l
c0103a94	obj/kernel.asm	/^c0103a94:	e9 3c 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99 <vector187>:$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	6a 00                	push   $0x0$/;"	l
c0103a9b	obj/kernel.asm	/^c0103a9b:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0103aa0	obj/kernel.asm	/^c0103aa0:	e9 30 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103aa5	obj/kernel.asm	/^c0103aa5 <vector188>:$/;"	l
c0103aa5	obj/kernel.asm	/^c0103aa5:	6a 00                	push   $0x0$/;"	l
c0103aa7	obj/kernel.asm	/^c0103aa7:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0103aac	obj/kernel.asm	/^c0103aac:	e9 24 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ab1	obj/kernel.asm	/^c0103ab1 <vector189>:$/;"	l
c0103ab1	obj/kernel.asm	/^c0103ab1:	6a 00                	push   $0x0$/;"	l
c0103ab3	obj/kernel.asm	/^c0103ab3:	68 bd 00 00 00       	push   $0xbd$/;"	l
c0103ab8	obj/kernel.asm	/^c0103ab8:	e9 18 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103abd	obj/kernel.asm	/^c0103abd <vector190>:$/;"	l
c0103abd	obj/kernel.asm	/^c0103abd:	6a 00                	push   $0x0$/;"	l
c0103abf	obj/kernel.asm	/^c0103abf:	68 be 00 00 00       	push   $0xbe$/;"	l
c0103ac4	obj/kernel.asm	/^c0103ac4:	e9 0c 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ac9	obj/kernel.asm	/^c0103ac9 <vector191>:$/;"	l
c0103ac9	obj/kernel.asm	/^c0103ac9:	6a 00                	push   $0x0$/;"	l
c0103acb	obj/kernel.asm	/^c0103acb:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0103ad0	obj/kernel.asm	/^c0103ad0:	e9 00 03 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ad5	obj/kernel.asm	/^c0103ad5 <vector192>:$/;"	l
c0103ad5	obj/kernel.asm	/^c0103ad5:	6a 00                	push   $0x0$/;"	l
c0103ad7	obj/kernel.asm	/^c0103ad7:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0103adc	obj/kernel.asm	/^c0103adc:	e9 f4 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ae1	obj/kernel.asm	/^c0103ae1 <vector193>:$/;"	l
c0103ae1	obj/kernel.asm	/^c0103ae1:	6a 00                	push   $0x0$/;"	l
c0103ae3	obj/kernel.asm	/^c0103ae3:	68 c1 00 00 00       	push   $0xc1$/;"	l
c0103ae8	obj/kernel.asm	/^c0103ae8:	e9 e8 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed <vector194>:$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed:	6a 00                	push   $0x0$/;"	l
c0103aef	obj/kernel.asm	/^c0103aef:	68 c2 00 00 00       	push   $0xc2$/;"	l
c0103af4	obj/kernel.asm	/^c0103af4:	e9 dc 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103af9	obj/kernel.asm	/^c0103af9 <vector195>:$/;"	l
c0103af9	obj/kernel.asm	/^c0103af9:	6a 00                	push   $0x0$/;"	l
c0103afb	obj/kernel.asm	/^c0103afb:	68 c3 00 00 00       	push   $0xc3$/;"	l
c0103b00	obj/kernel.asm	/^c0103b00:	e9 d0 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05 <vector196>:$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05:	6a 00                	push   $0x0$/;"	l
c0103b07	obj/kernel.asm	/^c0103b07:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0103b0c	obj/kernel.asm	/^c0103b0c:	e9 c4 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b11	obj/kernel.asm	/^c0103b11 <vector197>:$/;"	l
c0103b11	obj/kernel.asm	/^c0103b11:	6a 00                	push   $0x0$/;"	l
c0103b13	obj/kernel.asm	/^c0103b13:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103b18	obj/kernel.asm	/^c0103b18:	e9 b8 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d <vector198>:$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d:	6a 00                	push   $0x0$/;"	l
c0103b1f	obj/kernel.asm	/^c0103b1f:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0103b24	obj/kernel.asm	/^c0103b24:	e9 ac 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b29	obj/kernel.asm	/^c0103b29 <vector199>:$/;"	l
c0103b29	obj/kernel.asm	/^c0103b29:	6a 00                	push   $0x0$/;"	l
c0103b2b	obj/kernel.asm	/^c0103b2b:	68 c7 00 00 00       	push   $0xc7$/;"	l
c0103b30	obj/kernel.asm	/^c0103b30:	e9 a0 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b35	obj/kernel.asm	/^c0103b35 <vector200>:$/;"	l
c0103b35	obj/kernel.asm	/^c0103b35:	6a 00                	push   $0x0$/;"	l
c0103b37	obj/kernel.asm	/^c0103b37:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103b3c	obj/kernel.asm	/^c0103b3c:	e9 94 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b41	obj/kernel.asm	/^c0103b41 <vector201>:$/;"	l
c0103b41	obj/kernel.asm	/^c0103b41:	6a 00                	push   $0x0$/;"	l
c0103b43	obj/kernel.asm	/^c0103b43:	68 c9 00 00 00       	push   $0xc9$/;"	l
c0103b48	obj/kernel.asm	/^c0103b48:	e9 88 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b4d	obj/kernel.asm	/^c0103b4d <vector202>:$/;"	l
c0103b4d	obj/kernel.asm	/^c0103b4d:	6a 00                	push   $0x0$/;"	l
c0103b4f	obj/kernel.asm	/^c0103b4f:	68 ca 00 00 00       	push   $0xca$/;"	l
c0103b54	obj/kernel.asm	/^c0103b54:	e9 7c 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b59	obj/kernel.asm	/^c0103b59 <vector203>:$/;"	l
c0103b59	obj/kernel.asm	/^c0103b59:	6a 00                	push   $0x0$/;"	l
c0103b5b	obj/kernel.asm	/^c0103b5b:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0103b60	obj/kernel.asm	/^c0103b60:	e9 70 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b65	obj/kernel.asm	/^c0103b65 <vector204>:$/;"	l
c0103b65	obj/kernel.asm	/^c0103b65:	6a 00                	push   $0x0$/;"	l
c0103b67	obj/kernel.asm	/^c0103b67:	68 cc 00 00 00       	push   $0xcc$/;"	l
c0103b6c	obj/kernel.asm	/^c0103b6c:	e9 64 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b71	obj/kernel.asm	/^c0103b71 <vector205>:$/;"	l
c0103b71	obj/kernel.asm	/^c0103b71:	6a 00                	push   $0x0$/;"	l
c0103b73	obj/kernel.asm	/^c0103b73:	68 cd 00 00 00       	push   $0xcd$/;"	l
c0103b78	obj/kernel.asm	/^c0103b78:	e9 58 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b7d	obj/kernel.asm	/^c0103b7d <vector206>:$/;"	l
c0103b7d	obj/kernel.asm	/^c0103b7d:	6a 00                	push   $0x0$/;"	l
c0103b7f	obj/kernel.asm	/^c0103b7f:	68 ce 00 00 00       	push   $0xce$/;"	l
c0103b84	obj/kernel.asm	/^c0103b84:	e9 4c 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b89	obj/kernel.asm	/^c0103b89 <vector207>:$/;"	l
c0103b89	obj/kernel.asm	/^c0103b89:	6a 00                	push   $0x0$/;"	l
c0103b8b	obj/kernel.asm	/^c0103b8b:	68 cf 00 00 00       	push   $0xcf$/;"	l
c0103b90	obj/kernel.asm	/^c0103b90:	e9 40 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103b95	obj/kernel.asm	/^c0103b95 <vector208>:$/;"	l
c0103b95	obj/kernel.asm	/^c0103b95:	6a 00                	push   $0x0$/;"	l
c0103b97	obj/kernel.asm	/^c0103b97:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0103b9c	obj/kernel.asm	/^c0103b9c:	e9 34 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ba1	obj/kernel.asm	/^c0103ba1 <vector209>:$/;"	l
c0103ba1	obj/kernel.asm	/^c0103ba1:	6a 00                	push   $0x0$/;"	l
c0103ba3	obj/kernel.asm	/^c0103ba3:	68 d1 00 00 00       	push   $0xd1$/;"	l
c0103ba8	obj/kernel.asm	/^c0103ba8:	e9 28 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103bad	obj/kernel.asm	/^c0103bad <vector210>:$/;"	l
c0103bad	obj/kernel.asm	/^c0103bad:	6a 00                	push   $0x0$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	68 d2 00 00 00       	push   $0xd2$/;"	l
c0103bb4	obj/kernel.asm	/^c0103bb4:	e9 1c 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103bb9	obj/kernel.asm	/^c0103bb9 <vector211>:$/;"	l
c0103bb9	obj/kernel.asm	/^c0103bb9:	6a 00                	push   $0x0$/;"	l
c0103bbb	obj/kernel.asm	/^c0103bbb:	68 d3 00 00 00       	push   $0xd3$/;"	l
c0103bc0	obj/kernel.asm	/^c0103bc0:	e9 10 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103bc5	obj/kernel.asm	/^c0103bc5 <vector212>:$/;"	l
c0103bc5	obj/kernel.asm	/^c0103bc5:	6a 00                	push   $0x0$/;"	l
c0103bc7	obj/kernel.asm	/^c0103bc7:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103bcc	obj/kernel.asm	/^c0103bcc:	e9 04 02 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103bd1	obj/kernel.asm	/^c0103bd1 <vector213>:$/;"	l
c0103bd1	obj/kernel.asm	/^c0103bd1:	6a 00                	push   $0x0$/;"	l
c0103bd3	obj/kernel.asm	/^c0103bd3:	68 d5 00 00 00       	push   $0xd5$/;"	l
c0103bd8	obj/kernel.asm	/^c0103bd8:	e9 f8 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103bdd	obj/kernel.asm	/^c0103bdd <vector214>:$/;"	l
c0103bdd	obj/kernel.asm	/^c0103bdd:	6a 00                	push   $0x0$/;"	l
c0103bdf	obj/kernel.asm	/^c0103bdf:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0103be4	obj/kernel.asm	/^c0103be4:	e9 ec 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9 <vector215>:$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	6a 00                	push   $0x0$/;"	l
c0103beb	obj/kernel.asm	/^c0103beb:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0103bf0	obj/kernel.asm	/^c0103bf0:	e9 e0 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103bf5	obj/kernel.asm	/^c0103bf5 <vector216>:$/;"	l
c0103bf5	obj/kernel.asm	/^c0103bf5:	6a 00                	push   $0x0$/;"	l
c0103bf7	obj/kernel.asm	/^c0103bf7:	68 d8 00 00 00       	push   $0xd8$/;"	l
c0103bfc	obj/kernel.asm	/^c0103bfc:	e9 d4 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c01	obj/kernel.asm	/^c0103c01 <vector217>:$/;"	l
c0103c01	obj/kernel.asm	/^c0103c01:	6a 00                	push   $0x0$/;"	l
c0103c03	obj/kernel.asm	/^c0103c03:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103c08	obj/kernel.asm	/^c0103c08:	e9 c8 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c0d	obj/kernel.asm	/^c0103c0d <vector218>:$/;"	l
c0103c0d	obj/kernel.asm	/^c0103c0d:	6a 00                	push   $0x0$/;"	l
c0103c0f	obj/kernel.asm	/^c0103c0f:	68 da 00 00 00       	push   $0xda$/;"	l
c0103c14	obj/kernel.asm	/^c0103c14:	e9 bc 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c19	obj/kernel.asm	/^c0103c19 <vector219>:$/;"	l
c0103c19	obj/kernel.asm	/^c0103c19:	6a 00                	push   $0x0$/;"	l
c0103c1b	obj/kernel.asm	/^c0103c1b:	68 db 00 00 00       	push   $0xdb$/;"	l
c0103c20	obj/kernel.asm	/^c0103c20:	e9 b0 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c25	obj/kernel.asm	/^c0103c25 <vector220>:$/;"	l
c0103c25	obj/kernel.asm	/^c0103c25:	6a 00                	push   $0x0$/;"	l
c0103c27	obj/kernel.asm	/^c0103c27:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0103c2c	obj/kernel.asm	/^c0103c2c:	e9 a4 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c31	obj/kernel.asm	/^c0103c31 <vector221>:$/;"	l
c0103c31	obj/kernel.asm	/^c0103c31:	6a 00                	push   $0x0$/;"	l
c0103c33	obj/kernel.asm	/^c0103c33:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103c38	obj/kernel.asm	/^c0103c38:	e9 98 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c3d	obj/kernel.asm	/^c0103c3d <vector222>:$/;"	l
c0103c3d	obj/kernel.asm	/^c0103c3d:	6a 00                	push   $0x0$/;"	l
c0103c3f	obj/kernel.asm	/^c0103c3f:	68 de 00 00 00       	push   $0xde$/;"	l
c0103c44	obj/kernel.asm	/^c0103c44:	e9 8c 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c49	obj/kernel.asm	/^c0103c49 <vector223>:$/;"	l
c0103c49	obj/kernel.asm	/^c0103c49:	6a 00                	push   $0x0$/;"	l
c0103c4b	obj/kernel.asm	/^c0103c4b:	68 df 00 00 00       	push   $0xdf$/;"	l
c0103c50	obj/kernel.asm	/^c0103c50:	e9 80 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c55	obj/kernel.asm	/^c0103c55 <vector224>:$/;"	l
c0103c55	obj/kernel.asm	/^c0103c55:	6a 00                	push   $0x0$/;"	l
c0103c57	obj/kernel.asm	/^c0103c57:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0103c5c	obj/kernel.asm	/^c0103c5c:	e9 74 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c61	obj/kernel.asm	/^c0103c61 <vector225>:$/;"	l
c0103c61	obj/kernel.asm	/^c0103c61:	6a 00                	push   $0x0$/;"	l
c0103c63	obj/kernel.asm	/^c0103c63:	68 e1 00 00 00       	push   $0xe1$/;"	l
c0103c68	obj/kernel.asm	/^c0103c68:	e9 68 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c6d	obj/kernel.asm	/^c0103c6d <vector226>:$/;"	l
c0103c6d	obj/kernel.asm	/^c0103c6d:	6a 00                	push   $0x0$/;"	l
c0103c6f	obj/kernel.asm	/^c0103c6f:	68 e2 00 00 00       	push   $0xe2$/;"	l
c0103c74	obj/kernel.asm	/^c0103c74:	e9 5c 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c79	obj/kernel.asm	/^c0103c79 <vector227>:$/;"	l
c0103c79	obj/kernel.asm	/^c0103c79:	6a 00                	push   $0x0$/;"	l
c0103c7b	obj/kernel.asm	/^c0103c7b:	68 e3 00 00 00       	push   $0xe3$/;"	l
c0103c80	obj/kernel.asm	/^c0103c80:	e9 50 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c85	obj/kernel.asm	/^c0103c85 <vector228>:$/;"	l
c0103c85	obj/kernel.asm	/^c0103c85:	6a 00                	push   $0x0$/;"	l
c0103c87	obj/kernel.asm	/^c0103c87:	68 e4 00 00 00       	push   $0xe4$/;"	l
c0103c8c	obj/kernel.asm	/^c0103c8c:	e9 44 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c91	obj/kernel.asm	/^c0103c91 <vector229>:$/;"	l
c0103c91	obj/kernel.asm	/^c0103c91:	6a 00                	push   $0x0$/;"	l
c0103c93	obj/kernel.asm	/^c0103c93:	68 e5 00 00 00       	push   $0xe5$/;"	l
c0103c98	obj/kernel.asm	/^c0103c98:	e9 38 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d <vector230>:$/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d:	6a 00                	push   $0x0$/;"	l
c0103c9f	obj/kernel.asm	/^c0103c9f:	68 e6 00 00 00       	push   $0xe6$/;"	l
c0103ca4	obj/kernel.asm	/^c0103ca4:	e9 2c 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ca9	obj/kernel.asm	/^c0103ca9 <vector231>:$/;"	l
c0103ca9	obj/kernel.asm	/^c0103ca9:	6a 00                	push   $0x0$/;"	l
c0103cab	obj/kernel.asm	/^c0103cab:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0103cb0	obj/kernel.asm	/^c0103cb0:	e9 20 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103cb5	obj/kernel.asm	/^c0103cb5 <vector232>:$/;"	l
c0103cb5	obj/kernel.asm	/^c0103cb5:	6a 00                	push   $0x0$/;"	l
c0103cb7	obj/kernel.asm	/^c0103cb7:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0103cbc	obj/kernel.asm	/^c0103cbc:	e9 14 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103cc1	obj/kernel.asm	/^c0103cc1 <vector233>:$/;"	l
c0103cc1	obj/kernel.asm	/^c0103cc1:	6a 00                	push   $0x0$/;"	l
c0103cc3	obj/kernel.asm	/^c0103cc3:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103cc8	obj/kernel.asm	/^c0103cc8:	e9 08 01 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ccd	obj/kernel.asm	/^c0103ccd <vector234>:$/;"	l
c0103ccd	obj/kernel.asm	/^c0103ccd:	6a 00                	push   $0x0$/;"	l
c0103ccf	obj/kernel.asm	/^c0103ccf:	68 ea 00 00 00       	push   $0xea$/;"	l
c0103cd4	obj/kernel.asm	/^c0103cd4:	e9 fc 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103cd9	obj/kernel.asm	/^c0103cd9 <vector235>:$/;"	l
c0103cd9	obj/kernel.asm	/^c0103cd9:	6a 00                	push   $0x0$/;"	l
c0103cdb	obj/kernel.asm	/^c0103cdb:	68 eb 00 00 00       	push   $0xeb$/;"	l
c0103ce0	obj/kernel.asm	/^c0103ce0:	e9 f0 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103ce5	obj/kernel.asm	/^c0103ce5 <vector236>:$/;"	l
c0103ce5	obj/kernel.asm	/^c0103ce5:	6a 00                	push   $0x0$/;"	l
c0103ce7	obj/kernel.asm	/^c0103ce7:	68 ec 00 00 00       	push   $0xec$/;"	l
c0103cec	obj/kernel.asm	/^c0103cec:	e9 e4 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103cf1	obj/kernel.asm	/^c0103cf1 <vector237>:$/;"	l
c0103cf1	obj/kernel.asm	/^c0103cf1:	6a 00                	push   $0x0$/;"	l
c0103cf3	obj/kernel.asm	/^c0103cf3:	68 ed 00 00 00       	push   $0xed$/;"	l
c0103cf8	obj/kernel.asm	/^c0103cf8:	e9 d8 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103cfd	obj/kernel.asm	/^c0103cfd <vector238>:$/;"	l
c0103cfd	obj/kernel.asm	/^c0103cfd:	6a 00                	push   $0x0$/;"	l
c0103cff	obj/kernel.asm	/^c0103cff:	68 ee 00 00 00       	push   $0xee$/;"	l
c0103d04	obj/kernel.asm	/^c0103d04:	e9 cc 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d09	obj/kernel.asm	/^c0103d09 <vector239>:$/;"	l
c0103d09	obj/kernel.asm	/^c0103d09:	6a 00                	push   $0x0$/;"	l
c0103d0b	obj/kernel.asm	/^c0103d0b:	68 ef 00 00 00       	push   $0xef$/;"	l
c0103d10	obj/kernel.asm	/^c0103d10:	e9 c0 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d15	obj/kernel.asm	/^c0103d15 <vector240>:$/;"	l
c0103d15	obj/kernel.asm	/^c0103d15:	6a 00                	push   $0x0$/;"	l
c0103d17	obj/kernel.asm	/^c0103d17:	68 f0 00 00 00       	push   $0xf0$/;"	l
c0103d1c	obj/kernel.asm	/^c0103d1c:	e9 b4 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d21	obj/kernel.asm	/^c0103d21 <vector241>:$/;"	l
c0103d21	obj/kernel.asm	/^c0103d21:	6a 00                	push   $0x0$/;"	l
c0103d23	obj/kernel.asm	/^c0103d23:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103d28	obj/kernel.asm	/^c0103d28:	e9 a8 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d2d	obj/kernel.asm	/^c0103d2d <vector242>:$/;"	l
c0103d2d	obj/kernel.asm	/^c0103d2d:	6a 00                	push   $0x0$/;"	l
c0103d2f	obj/kernel.asm	/^c0103d2f:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0103d34	obj/kernel.asm	/^c0103d34:	e9 9c 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d39	obj/kernel.asm	/^c0103d39 <vector243>:$/;"	l
c0103d39	obj/kernel.asm	/^c0103d39:	6a 00                	push   $0x0$/;"	l
c0103d3b	obj/kernel.asm	/^c0103d3b:	68 f3 00 00 00       	push   $0xf3$/;"	l
c0103d40	obj/kernel.asm	/^c0103d40:	e9 90 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d45	obj/kernel.asm	/^c0103d45 <vector244>:$/;"	l
c0103d45	obj/kernel.asm	/^c0103d45:	6a 00                	push   $0x0$/;"	l
c0103d47	obj/kernel.asm	/^c0103d47:	68 f4 00 00 00       	push   $0xf4$/;"	l
c0103d4c	obj/kernel.asm	/^c0103d4c:	e9 84 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d51	obj/kernel.asm	/^c0103d51 <vector245>:$/;"	l
c0103d51	obj/kernel.asm	/^c0103d51:	6a 00                	push   $0x0$/;"	l
c0103d53	obj/kernel.asm	/^c0103d53:	68 f5 00 00 00       	push   $0xf5$/;"	l
c0103d58	obj/kernel.asm	/^c0103d58:	e9 78 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d5d	obj/kernel.asm	/^c0103d5d <vector246>:$/;"	l
c0103d5d	obj/kernel.asm	/^c0103d5d:	6a 00                	push   $0x0$/;"	l
c0103d5f	obj/kernel.asm	/^c0103d5f:	68 f6 00 00 00       	push   $0xf6$/;"	l
c0103d64	obj/kernel.asm	/^c0103d64:	e9 6c 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d69	obj/kernel.asm	/^c0103d69 <vector247>:$/;"	l
c0103d69	obj/kernel.asm	/^c0103d69:	6a 00                	push   $0x0$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	68 f7 00 00 00       	push   $0xf7$/;"	l
c0103d70	obj/kernel.asm	/^c0103d70:	e9 60 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d75	obj/kernel.asm	/^c0103d75 <vector248>:$/;"	l
c0103d75	obj/kernel.asm	/^c0103d75:	6a 00                	push   $0x0$/;"	l
c0103d77	obj/kernel.asm	/^c0103d77:	68 f8 00 00 00       	push   $0xf8$/;"	l
c0103d7c	obj/kernel.asm	/^c0103d7c:	e9 54 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d81	obj/kernel.asm	/^c0103d81 <vector249>:$/;"	l
c0103d81	obj/kernel.asm	/^c0103d81:	6a 00                	push   $0x0$/;"	l
c0103d83	obj/kernel.asm	/^c0103d83:	68 f9 00 00 00       	push   $0xf9$/;"	l
c0103d88	obj/kernel.asm	/^c0103d88:	e9 48 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d <vector250>:$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	6a 00                	push   $0x0$/;"	l
c0103d8f	obj/kernel.asm	/^c0103d8f:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0103d94	obj/kernel.asm	/^c0103d94:	e9 3c 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103d99	obj/kernel.asm	/^c0103d99 <vector251>:$/;"	l
c0103d99	obj/kernel.asm	/^c0103d99:	6a 00                	push   $0x0$/;"	l
c0103d9b	obj/kernel.asm	/^c0103d9b:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0103da0	obj/kernel.asm	/^c0103da0:	e9 30 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103da5	obj/kernel.asm	/^c0103da5 <vector252>:$/;"	l
c0103da5	obj/kernel.asm	/^c0103da5:	6a 00                	push   $0x0$/;"	l
c0103da7	obj/kernel.asm	/^c0103da7:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0103dac	obj/kernel.asm	/^c0103dac:	e9 24 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103db1	obj/kernel.asm	/^c0103db1 <vector253>:$/;"	l
c0103db1	obj/kernel.asm	/^c0103db1:	6a 00                	push   $0x0$/;"	l
c0103db3	obj/kernel.asm	/^c0103db3:	68 fd 00 00 00       	push   $0xfd$/;"	l
c0103db8	obj/kernel.asm	/^c0103db8:	e9 18 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103dbd	obj/kernel.asm	/^c0103dbd <vector254>:$/;"	l
c0103dbd	obj/kernel.asm	/^c0103dbd:	6a 00                	push   $0x0$/;"	l
c0103dbf	obj/kernel.asm	/^c0103dbf:	68 fe 00 00 00       	push   $0xfe$/;"	l
c0103dc4	obj/kernel.asm	/^c0103dc4:	e9 0c 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103dc9	obj/kernel.asm	/^c0103dc9 <vector255>:$/;"	l
c0103dc9	obj/kernel.asm	/^c0103dc9:	6a 00                	push   $0x0$/;"	l
c0103dcb	obj/kernel.asm	/^c0103dcb:	68 ff 00 00 00       	push   $0xff$/;"	l
c0103dd0	obj/kernel.asm	/^c0103dd0:	e9 00 00 00 00       	jmp    c0103dd5 <__alltraps>$/;"	l
c0103dd5	obj/kernel.asm	/^c0103dd5 <__alltraps>:$/;"	l
c0103dd5	obj/kernel.asm	/^c0103dd5:	1e                   	push   %ds$/;"	l
c0103dd6	obj/kernel.asm	/^c0103dd6:	06                   	push   %es$/;"	l
c0103dd7	obj/kernel.asm	/^c0103dd7:	0f a0                	push   %fs$/;"	l
c0103dd9	obj/kernel.asm	/^c0103dd9:	0f a8                	push   %gs$/;"	l
c0103ddb	obj/kernel.asm	/^c0103ddb:	60                   	pusha  $/;"	l
c0103ddc	obj/kernel.asm	/^c0103ddc:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103de1	obj/kernel.asm	/^c0103de1:	8e d8                	mov    %eax,%ds$/;"	l
c0103de3	obj/kernel.asm	/^c0103de3:	8e c0                	mov    %eax,%es$/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	54                   	push   %esp$/;"	l
c0103de6	obj/kernel.asm	/^c0103de6:	e8 f0 f4 ff ff       	call   c01032db <trap>$/;"	l
c0103deb	obj/kernel.asm	/^c0103deb:	5c                   	pop    %esp$/;"	l
c0103dec	obj/kernel.asm	/^c0103dec <__trapret>:$/;"	l
c0103dec	obj/kernel.asm	/^c0103dec:	61                   	popa   $/;"	l
c0103ded	obj/kernel.asm	/^c0103ded:	0f a9                	pop    %gs$/;"	l
c0103def	obj/kernel.asm	/^c0103def:	0f a1                	pop    %fs$/;"	l
c0103df1	obj/kernel.asm	/^c0103df1:	07                   	pop    %es$/;"	l
c0103df2	obj/kernel.asm	/^c0103df2:	1f                   	pop    %ds$/;"	l
c0103df3	obj/kernel.asm	/^c0103df3:	83 c4 08             	add    $0x8,%esp$/;"	l
c0103df6	obj/kernel.asm	/^c0103df6:	cf                   	iret   $/;"	l
c0103df7	obj/kernel.asm	/^c0103df7 <forkrets>:$/;"	l
c0103df7	obj/kernel.asm	/^c0103df7:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0103dfb	obj/kernel.asm	/^c0103dfb:	e9 ec ff ff ff       	jmp    c0103dec <__trapret>$/;"	l
c0103e00	obj/kernel.asm	/^c0103e00 <loadgs>:$/;"	l
c0103e00	obj/kernel.asm	/^c0103e00:	55                   	push   %ebp$/;"	l
c0103e01	obj/kernel.asm	/^c0103e01:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e03	obj/kernel.asm	/^c0103e03:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103e06	obj/kernel.asm	/^c0103e06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103e09	obj/kernel.asm	/^c0103e09:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0103e0d	obj/kernel.asm	/^c0103e0d:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0103e11	obj/kernel.asm	/^c0103e11:	8e e8                	mov    %eax,%gs$/;"	l
c0103e13	obj/kernel.asm	/^c0103e13:	c9                   	leave  $/;"	l
c0103e14	obj/kernel.asm	/^c0103e14:	c3                   	ret    $/;"	l
c0103e15	obj/kernel.asm	/^c0103e15 <page2ppn>:$/;"	l
c0103e15	obj/kernel.asm	/^c0103e15:	55                   	push   %ebp$/;"	l
c0103e16	obj/kernel.asm	/^c0103e16:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e18	obj/kernel.asm	/^c0103e18:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0103e1b	obj/kernel.asm	/^c0103e1b:	a1 78 b6 15 c0       	mov    0xc015b678,%eax$/;"	l
c0103e20	obj/kernel.asm	/^c0103e20:	29 c2                	sub    %eax,%edx$/;"	l
c0103e22	obj/kernel.asm	/^c0103e22:	89 d0                	mov    %edx,%eax$/;"	l
c0103e24	obj/kernel.asm	/^c0103e24:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0103e27	obj/kernel.asm	/^c0103e27:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0103e2d	obj/kernel.asm	/^c0103e2d:	5d                   	pop    %ebp$/;"	l
c0103e2e	obj/kernel.asm	/^c0103e2e:	c3                   	ret    $/;"	l
c0103e2f	obj/kernel.asm	/^c0103e2f <page2pa>:$/;"	l
c0103e2f	obj/kernel.asm	/^c0103e2f:	55                   	push   %ebp$/;"	l
c0103e30	obj/kernel.asm	/^c0103e30:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e32	obj/kernel.asm	/^c0103e32:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103e35	obj/kernel.asm	/^c0103e35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103e38	obj/kernel.asm	/^c0103e38:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103e3b	obj/kernel.asm	/^c0103e3b:	e8 d5 ff ff ff       	call   c0103e15 <page2ppn>$/;"	l
c0103e40	obj/kernel.asm	/^c0103e40:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0103e43	obj/kernel.asm	/^c0103e43:	c9                   	leave  $/;"	l
c0103e44	obj/kernel.asm	/^c0103e44:	c3                   	ret    $/;"	l
c0103e45	obj/kernel.asm	/^c0103e45 <pa2page>:$/;"	l
c0103e45	obj/kernel.asm	/^c0103e45:	55                   	push   %ebp$/;"	l
c0103e46	obj/kernel.asm	/^c0103e46:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e48	obj/kernel.asm	/^c0103e48:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103e4b	obj/kernel.asm	/^c0103e4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103e4e	obj/kernel.asm	/^c0103e4e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103e51	obj/kernel.asm	/^c0103e51:	89 c2                	mov    %eax,%edx$/;"	l
c0103e53	obj/kernel.asm	/^c0103e53:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0103e58	obj/kernel.asm	/^c0103e58:	39 c2                	cmp    %eax,%edx$/;"	l
c0103e5a	obj/kernel.asm	/^c0103e5a:	72 1c                	jb     c0103e78 <pa2page+0x33>$/;"	l
c0103e5c	obj/kernel.asm	/^c0103e5c:	c7 44 24 08 50 7a 11 	movl   $0xc0117a50,0x8(%esp)$/;"	l
c0103e63	obj/kernel.asm	/^c0103e63:	c0 $/;"	l
c0103e64	obj/kernel.asm	/^c0103e64:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0103e6b	obj/kernel.asm	/^c0103e6b:	00 $/;"	l
c0103e6c	obj/kernel.asm	/^c0103e6c:	c7 04 24 6f 7a 11 c0 	movl   $0xc0117a6f,(%esp)$/;"	l
c0103e73	obj/kernel.asm	/^c0103e73:	e8 bf cd ff ff       	call   c0100c37 <__panic>$/;"	l
c0103e78	obj/kernel.asm	/^c0103e78:	8b 0d 78 b6 15 c0    	mov    0xc015b678,%ecx$/;"	l
c0103e7e	obj/kernel.asm	/^c0103e7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103e81	obj/kernel.asm	/^c0103e81:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103e84	obj/kernel.asm	/^c0103e84:	89 c2                	mov    %eax,%edx$/;"	l
c0103e86	obj/kernel.asm	/^c0103e86:	89 d0                	mov    %edx,%eax$/;"	l
c0103e88	obj/kernel.asm	/^c0103e88:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0103e8b	obj/kernel.asm	/^c0103e8b:	01 d0                	add    %edx,%eax$/;"	l
c0103e8d	obj/kernel.asm	/^c0103e8d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103e90	obj/kernel.asm	/^c0103e90:	01 c8                	add    %ecx,%eax$/;"	l
c0103e92	obj/kernel.asm	/^c0103e92:	c9                   	leave  $/;"	l
c0103e93	obj/kernel.asm	/^c0103e93:	c3                   	ret    $/;"	l
c0103e94	obj/kernel.asm	/^c0103e94 <page2kva>:$/;"	l
c0103e94	obj/kernel.asm	/^c0103e94:	55                   	push   %ebp$/;"	l
c0103e95	obj/kernel.asm	/^c0103e95:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e97	obj/kernel.asm	/^c0103e97:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103e9a	obj/kernel.asm	/^c0103e9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103e9d	obj/kernel.asm	/^c0103e9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103ea0	obj/kernel.asm	/^c0103ea0:	e8 8a ff ff ff       	call   c0103e2f <page2pa>$/;"	l
c0103ea5	obj/kernel.asm	/^c0103ea5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103ea8	obj/kernel.asm	/^c0103ea8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103eab	obj/kernel.asm	/^c0103eab:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103eae	obj/kernel.asm	/^c0103eae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103eb1	obj/kernel.asm	/^c0103eb1:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0103eb6	obj/kernel.asm	/^c0103eb6:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0103eb9	obj/kernel.asm	/^c0103eb9:	72 23                	jb     c0103ede <page2kva+0x4a>$/;"	l
c0103ebb	obj/kernel.asm	/^c0103ebb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103ebe	obj/kernel.asm	/^c0103ebe:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0103ec2	obj/kernel.asm	/^c0103ec2:	c7 44 24 08 80 7a 11 	movl   $0xc0117a80,0x8(%esp)$/;"	l
c0103ec9	obj/kernel.asm	/^c0103ec9:	c0 $/;"	l
c0103eca	obj/kernel.asm	/^c0103eca:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0103ed1	obj/kernel.asm	/^c0103ed1:	00 $/;"	l
c0103ed2	obj/kernel.asm	/^c0103ed2:	c7 04 24 6f 7a 11 c0 	movl   $0xc0117a6f,(%esp)$/;"	l
c0103ed9	obj/kernel.asm	/^c0103ed9:	e8 59 cd ff ff       	call   c0100c37 <__panic>$/;"	l
c0103ede	obj/kernel.asm	/^c0103ede:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103ee1	obj/kernel.asm	/^c0103ee1:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0103ee6	obj/kernel.asm	/^c0103ee6:	c9                   	leave  $/;"	l
c0103ee7	obj/kernel.asm	/^c0103ee7:	c3                   	ret    $/;"	l
c0103ee8	obj/kernel.asm	/^c0103ee8 <pte2page>:$/;"	l
c0103ee8	obj/kernel.asm	/^c0103ee8:	55                   	push   %ebp$/;"	l
c0103ee9	obj/kernel.asm	/^c0103ee9:	89 e5                	mov    %esp,%ebp$/;"	l
c0103eeb	obj/kernel.asm	/^c0103eeb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103eee	obj/kernel.asm	/^c0103eee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103ef1	obj/kernel.asm	/^c0103ef1:	83 e0 01             	and    $0x1,%eax$/;"	l
c0103ef4	obj/kernel.asm	/^c0103ef4:	85 c0                	test   %eax,%eax$/;"	l
c0103ef6	obj/kernel.asm	/^c0103ef6:	75 1c                	jne    c0103f14 <pte2page+0x2c>$/;"	l
c0103ef8	obj/kernel.asm	/^c0103ef8:	c7 44 24 08 a4 7a 11 	movl   $0xc0117aa4,0x8(%esp)$/;"	l
c0103eff	obj/kernel.asm	/^c0103eff:	c0 $/;"	l
c0103f00	obj/kernel.asm	/^c0103f00:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0103f07	obj/kernel.asm	/^c0103f07:	00 $/;"	l
c0103f08	obj/kernel.asm	/^c0103f08:	c7 04 24 6f 7a 11 c0 	movl   $0xc0117a6f,(%esp)$/;"	l
c0103f0f	obj/kernel.asm	/^c0103f0f:	e8 23 cd ff ff       	call   c0100c37 <__panic>$/;"	l
c0103f14	obj/kernel.asm	/^c0103f14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f17	obj/kernel.asm	/^c0103f17:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103f1c	obj/kernel.asm	/^c0103f1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f1f	obj/kernel.asm	/^c0103f1f:	e8 21 ff ff ff       	call   c0103e45 <pa2page>$/;"	l
c0103f24	obj/kernel.asm	/^c0103f24:	c9                   	leave  $/;"	l
c0103f25	obj/kernel.asm	/^c0103f25:	c3                   	ret    $/;"	l
c0103f26	obj/kernel.asm	/^c0103f26 <pde2page>:$/;"	l
c0103f26	obj/kernel.asm	/^c0103f26:	55                   	push   %ebp$/;"	l
c0103f27	obj/kernel.asm	/^c0103f27:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f29	obj/kernel.asm	/^c0103f29:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f2c	obj/kernel.asm	/^c0103f2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f2f	obj/kernel.asm	/^c0103f2f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103f34	obj/kernel.asm	/^c0103f34:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0103f37	obj/kernel.asm	/^c0103f37:	e8 09 ff ff ff       	call   c0103e45 <pa2page>$/;"	l
c0103f3c	obj/kernel.asm	/^c0103f3c:	c9                   	leave  $/;"	l
c0103f3d	obj/kernel.asm	/^c0103f3d:	c3                   	ret    $/;"	l
c0103f3e	obj/kernel.asm	/^c0103f3e <page_ref>:$/;"	l
c0103f3e	obj/kernel.asm	/^c0103f3e:	55                   	push   %ebp$/;"	l
c0103f3f	obj/kernel.asm	/^c0103f3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f41	obj/kernel.asm	/^c0103f41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f44	obj/kernel.asm	/^c0103f44:	8b 00                	mov    (%eax),%eax$/;"	l
c0103f46	obj/kernel.asm	/^c0103f46:	5d                   	pop    %ebp$/;"	l
c0103f47	obj/kernel.asm	/^c0103f47:	c3                   	ret    $/;"	l
c0103f48	obj/kernel.asm	/^c0103f48 <set_page_ref>:$/;"	l
c0103f48	obj/kernel.asm	/^c0103f48:	55                   	push   %ebp$/;"	l
c0103f49	obj/kernel.asm	/^c0103f49:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f4b	obj/kernel.asm	/^c0103f4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f4e	obj/kernel.asm	/^c0103f4e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103f51	obj/kernel.asm	/^c0103f51:	89 10                	mov    %edx,(%eax)$/;"	l
c0103f53	obj/kernel.asm	/^c0103f53:	5d                   	pop    %ebp$/;"	l
c0103f54	obj/kernel.asm	/^c0103f54:	c3                   	ret    $/;"	l
c0103f55	obj/kernel.asm	/^c0103f55 <page_ref_inc>:$/;"	l
c0103f55	obj/kernel.asm	/^c0103f55:	55                   	push   %ebp$/;"	l
c0103f56	obj/kernel.asm	/^c0103f56:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f58	obj/kernel.asm	/^c0103f58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f5b	obj/kernel.asm	/^c0103f5b:	8b 00                	mov    (%eax),%eax$/;"	l
c0103f5d	obj/kernel.asm	/^c0103f5d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0103f60	obj/kernel.asm	/^c0103f60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f63	obj/kernel.asm	/^c0103f63:	89 10                	mov    %edx,(%eax)$/;"	l
c0103f65	obj/kernel.asm	/^c0103f65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f68	obj/kernel.asm	/^c0103f68:	8b 00                	mov    (%eax),%eax$/;"	l
c0103f6a	obj/kernel.asm	/^c0103f6a:	5d                   	pop    %ebp$/;"	l
c0103f6b	obj/kernel.asm	/^c0103f6b:	c3                   	ret    $/;"	l
c0103f6c	obj/kernel.asm	/^c0103f6c <page_ref_dec>:$/;"	l
c0103f6c	obj/kernel.asm	/^c0103f6c:	55                   	push   %ebp$/;"	l
c0103f6d	obj/kernel.asm	/^c0103f6d:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f6f	obj/kernel.asm	/^c0103f6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f72	obj/kernel.asm	/^c0103f72:	8b 00                	mov    (%eax),%eax$/;"	l
c0103f74	obj/kernel.asm	/^c0103f74:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103f77	obj/kernel.asm	/^c0103f77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f7a	obj/kernel.asm	/^c0103f7a:	89 10                	mov    %edx,(%eax)$/;"	l
c0103f7c	obj/kernel.asm	/^c0103f7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f7f	obj/kernel.asm	/^c0103f7f:	8b 00                	mov    (%eax),%eax$/;"	l
c0103f81	obj/kernel.asm	/^c0103f81:	5d                   	pop    %ebp$/;"	l
c0103f82	obj/kernel.asm	/^c0103f82:	c3                   	ret    $/;"	l
c0103f83	obj/kernel.asm	/^c0103f83 <__intr_save>:$/;"	l
c0103f83	obj/kernel.asm	/^c0103f83:	55                   	push   %ebp$/;"	l
c0103f84	obj/kernel.asm	/^c0103f84:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f86	obj/kernel.asm	/^c0103f86:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f89	obj/kernel.asm	/^c0103f89:	9c                   	pushf  $/;"	l
c0103f8a	obj/kernel.asm	/^c0103f8a:	58                   	pop    %eax$/;"	l
c0103f8b	obj/kernel.asm	/^c0103f8b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f8e	obj/kernel.asm	/^c0103f8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103f91	obj/kernel.asm	/^c0103f91:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0103f96	obj/kernel.asm	/^c0103f96:	85 c0                	test   %eax,%eax$/;"	l
c0103f98	obj/kernel.asm	/^c0103f98:	74 0c                	je     c0103fa6 <__intr_save+0x23>$/;"	l
c0103f9a	obj/kernel.asm	/^c0103f9a:	e8 ef ea ff ff       	call   c0102a8e <intr_disable>$/;"	l
c0103f9f	obj/kernel.asm	/^c0103f9f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0103fa4	obj/kernel.asm	/^c0103fa4:	eb 05                	jmp    c0103fab <__intr_save+0x28>$/;"	l
c0103fa6	obj/kernel.asm	/^c0103fa6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103fab	obj/kernel.asm	/^c0103fab:	c9                   	leave  $/;"	l
c0103fac	obj/kernel.asm	/^c0103fac:	c3                   	ret    $/;"	l
c0103fad	obj/kernel.asm	/^c0103fad <__intr_restore>:$/;"	l
c0103fad	obj/kernel.asm	/^c0103fad:	55                   	push   %ebp$/;"	l
c0103fae	obj/kernel.asm	/^c0103fae:	89 e5                	mov    %esp,%ebp$/;"	l
c0103fb0	obj/kernel.asm	/^c0103fb0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103fb3	obj/kernel.asm	/^c0103fb3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0103fb7	obj/kernel.asm	/^c0103fb7:	74 05                	je     c0103fbe <__intr_restore+0x11>$/;"	l
c0103fb9	obj/kernel.asm	/^c0103fb9:	e8 ca ea ff ff       	call   c0102a88 <intr_enable>$/;"	l
c0103fbe	obj/kernel.asm	/^c0103fbe:	c9                   	leave  $/;"	l
c0103fbf	obj/kernel.asm	/^c0103fbf:	c3                   	ret    $/;"	l
c0103fc0	obj/kernel.asm	/^c0103fc0 <lgdt>:$/;"	l
c0103fc0	obj/kernel.asm	/^c0103fc0:	55                   	push   %ebp$/;"	l
c0103fc1	obj/kernel.asm	/^c0103fc1:	89 e5                	mov    %esp,%ebp$/;"	l
c0103fc3	obj/kernel.asm	/^c0103fc3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103fc6	obj/kernel.asm	/^c0103fc6:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0103fc9	obj/kernel.asm	/^c0103fc9:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0103fce	obj/kernel.asm	/^c0103fce:	8e e8                	mov    %eax,%gs$/;"	l
c0103fd0	obj/kernel.asm	/^c0103fd0:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0103fd5	obj/kernel.asm	/^c0103fd5:	8e e0                	mov    %eax,%fs$/;"	l
c0103fd7	obj/kernel.asm	/^c0103fd7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103fdc	obj/kernel.asm	/^c0103fdc:	8e c0                	mov    %eax,%es$/;"	l
c0103fde	obj/kernel.asm	/^c0103fde:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103fe3	obj/kernel.asm	/^c0103fe3:	8e d8                	mov    %eax,%ds$/;"	l
c0103fe5	obj/kernel.asm	/^c0103fe5:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	8e d0                	mov    %eax,%ss$/;"	l
c0103fec	obj/kernel.asm	/^c0103fec:	ea f3 3f 10 c0 08 00 	ljmp   $0x8,$0xc0103ff3$/;"	l
c0103ff3	obj/kernel.asm	/^c0103ff3:	5d                   	pop    %ebp$/;"	l
c0103ff4	obj/kernel.asm	/^c0103ff4:	c3                   	ret    $/;"	l
c0103ff5	obj/kernel.asm	/^c0103ff5 <load_esp0>:$/;"	l
c0103ff5	obj/kernel.asm	/^c0103ff5:	55                   	push   %ebp$/;"	l
c0103ff6	obj/kernel.asm	/^c0103ff6:	89 e5                	mov    %esp,%ebp$/;"	l
c0103ff8	obj/kernel.asm	/^c0103ff8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103ffb	obj/kernel.asm	/^c0103ffb:	a3 e4 7e 15 c0       	mov    %eax,0xc0157ee4$/;"	l
c0104000	obj/kernel.asm	/^c0104000:	5d                   	pop    %ebp$/;"	l
c0104001	obj/kernel.asm	/^c0104001:	c3                   	ret    $/;"	l
c0104002	obj/kernel.asm	/^c0104002 <gdt_init>:$/;"	l
c0104002	obj/kernel.asm	/^c0104002:	55                   	push   %ebp$/;"	l
c0104003	obj/kernel.asm	/^c0104003:	89 e5                	mov    %esp,%ebp$/;"	l
c0104005	obj/kernel.asm	/^c0104005:	53                   	push   %ebx$/;"	l
c0104006	obj/kernel.asm	/^c0104006:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0104009	obj/kernel.asm	/^c0104009:	b8 00 40 15 c0       	mov    $0xc0154000,%eax$/;"	l
c010400e	obj/kernel.asm	/^c010400e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104011	obj/kernel.asm	/^c0104011:	e8 df ff ff ff       	call   c0103ff5 <load_esp0>$/;"	l
c0104016	obj/kernel.asm	/^c0104016:	66 c7 05 e8 7e 15 c0 	movw   $0x10,0xc0157ee8$/;"	l
c010401d	obj/kernel.asm	/^c010401d:	10 00 $/;"	l
c010401f	obj/kernel.asm	/^c010401f:	e8 03 1b 01 00       	call   c0115b27 <cpunum>$/;"	l
c0104024	obj/kernel.asm	/^c0104024:	69 c0 bc 00 00 00    	imul   $0xbc,%eax,%eax$/;"	l
c010402a	obj/kernel.asm	/^c010402a:	05 80 b0 15 c0       	add    $0xc015b080,%eax$/;"	l
c010402f	obj/kernel.asm	/^c010402f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104032	obj/kernel.asm	/^c0104032:	e8 f0 1a 01 00       	call   c0115b27 <cpunum>$/;"	l
c0104037	obj/kernel.asm	/^c0104037:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010403b	obj/kernel.asm	/^c010403b:	c7 04 24 d0 7a 11 c0 	movl   $0xc0117ad0,(%esp)$/;"	l
c0104042	obj/kernel.asm	/^c0104042:	e8 99 ca ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0104047	obj/kernel.asm	/^c0104047:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010404a	obj/kernel.asm	/^c010404a:	66 c7 40 78 ff ff    	movw   $0xffff,0x78(%eax)$/;"	l
c0104050	obj/kernel.asm	/^c0104050:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104053	obj/kernel.asm	/^c0104053:	66 c7 40 7a 00 00    	movw   $0x0,0x7a(%eax)$/;"	l
c0104059	obj/kernel.asm	/^c0104059:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	c6 40 7c 00          	movb   $0x0,0x7c(%eax)$/;"	l
c0104060	obj/kernel.asm	/^c0104060:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104063	obj/kernel.asm	/^c0104063:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c0104067	obj/kernel.asm	/^c0104067:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010406a	obj/kernel.asm	/^c010406a:	83 ca 0a             	or     $0xa,%edx$/;"	l
c010406d	obj/kernel.asm	/^c010406d:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c0104070	obj/kernel.asm	/^c0104070:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104073	obj/kernel.asm	/^c0104073:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c0104077	obj/kernel.asm	/^c0104077:	83 ca 10             	or     $0x10,%edx$/;"	l
c010407a	obj/kernel.asm	/^c010407a:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c010407d	obj/kernel.asm	/^c010407d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104080	obj/kernel.asm	/^c0104080:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c0104084	obj/kernel.asm	/^c0104084:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0104087	obj/kernel.asm	/^c0104087:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c010408a	obj/kernel.asm	/^c010408a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010408d	obj/kernel.asm	/^c010408d:	0f b6 50 7d          	movzbl 0x7d(%eax),%edx$/;"	l
c0104091	obj/kernel.asm	/^c0104091:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0104094	obj/kernel.asm	/^c0104094:	88 50 7d             	mov    %dl,0x7d(%eax)$/;"	l
c0104097	obj/kernel.asm	/^c0104097:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010409a	obj/kernel.asm	/^c010409a:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c010409e	obj/kernel.asm	/^c010409e:	83 ca 0f             	or     $0xf,%edx$/;"	l
c01040a1	obj/kernel.asm	/^c01040a1:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01040a4	obj/kernel.asm	/^c01040a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040a7	obj/kernel.asm	/^c01040a7:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01040ab	obj/kernel.asm	/^c01040ab:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01040ae	obj/kernel.asm	/^c01040ae:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01040b1	obj/kernel.asm	/^c01040b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040b4	obj/kernel.asm	/^c01040b4:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01040b8	obj/kernel.asm	/^c01040b8:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c01040bb	obj/kernel.asm	/^c01040bb:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01040be	obj/kernel.asm	/^c01040be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040c1	obj/kernel.asm	/^c01040c1:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01040c5	obj/kernel.asm	/^c01040c5:	83 ca 40             	or     $0x40,%edx$/;"	l
c01040c8	obj/kernel.asm	/^c01040c8:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01040cb	obj/kernel.asm	/^c01040cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040ce	obj/kernel.asm	/^c01040ce:	0f b6 50 7e          	movzbl 0x7e(%eax),%edx$/;"	l
c01040d2	obj/kernel.asm	/^c01040d2:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01040d5	obj/kernel.asm	/^c01040d5:	88 50 7e             	mov    %dl,0x7e(%eax)$/;"	l
c01040d8	obj/kernel.asm	/^c01040d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040db	obj/kernel.asm	/^c01040db:	c6 40 7f 00          	movb   $0x0,0x7f(%eax)$/;"	l
c01040df	obj/kernel.asm	/^c01040df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040e2	obj/kernel.asm	/^c01040e2:	66 c7 80 80 00 00 00 	movw   $0xffff,0x80(%eax)$/;"	l
c01040e9	obj/kernel.asm	/^c01040e9:	ff ff $/;"	l
c01040eb	obj/kernel.asm	/^c01040eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040ee	obj/kernel.asm	/^c01040ee:	66 c7 80 82 00 00 00 	movw   $0x0,0x82(%eax)$/;"	l
c01040f5	obj/kernel.asm	/^c01040f5:	00 00 $/;"	l
c01040f7	obj/kernel.asm	/^c01040f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040fa	obj/kernel.asm	/^c01040fa:	c6 80 84 00 00 00 00 	movb   $0x0,0x84(%eax)$/;"	l
c0104101	obj/kernel.asm	/^c0104101:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104104	obj/kernel.asm	/^c0104104:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c010410b	obj/kernel.asm	/^c010410b:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010410e	obj/kernel.asm	/^c010410e:	83 ca 02             	or     $0x2,%edx$/;"	l
c0104111	obj/kernel.asm	/^c0104111:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c0104117	obj/kernel.asm	/^c0104117:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010411a	obj/kernel.asm	/^c010411a:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c0104121	obj/kernel.asm	/^c0104121:	83 ca 10             	or     $0x10,%edx$/;"	l
c0104124	obj/kernel.asm	/^c0104124:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c010412a	obj/kernel.asm	/^c010412a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010412d	obj/kernel.asm	/^c010412d:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c0104134	obj/kernel.asm	/^c0104134:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0104137	obj/kernel.asm	/^c0104137:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c010413d	obj/kernel.asm	/^c010413d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104140	obj/kernel.asm	/^c0104140:	0f b6 90 85 00 00 00 	movzbl 0x85(%eax),%edx$/;"	l
c0104147	obj/kernel.asm	/^c0104147:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010414a	obj/kernel.asm	/^c010414a:	88 90 85 00 00 00    	mov    %dl,0x85(%eax)$/;"	l
c0104150	obj/kernel.asm	/^c0104150:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104153	obj/kernel.asm	/^c0104153:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c010415a	obj/kernel.asm	/^c010415a:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010415d	obj/kernel.asm	/^c010415d:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c0104163	obj/kernel.asm	/^c0104163:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104166	obj/kernel.asm	/^c0104166:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c010416d	obj/kernel.asm	/^c010416d:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0104170	obj/kernel.asm	/^c0104170:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c0104176	obj/kernel.asm	/^c0104176:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104179	obj/kernel.asm	/^c0104179:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c0104180	obj/kernel.asm	/^c0104180:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c0104189	obj/kernel.asm	/^c0104189:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010418c	obj/kernel.asm	/^c010418c:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c0104193	obj/kernel.asm	/^c0104193:	83 ca 40             	or     $0x40,%edx$/;"	l
c0104196	obj/kernel.asm	/^c0104196:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c010419c	obj/kernel.asm	/^c010419c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010419f	obj/kernel.asm	/^c010419f:	0f b6 90 86 00 00 00 	movzbl 0x86(%eax),%edx$/;"	l
c01041a6	obj/kernel.asm	/^c01041a6:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01041a9	obj/kernel.asm	/^c01041a9:	88 90 86 00 00 00    	mov    %dl,0x86(%eax)$/;"	l
c01041af	obj/kernel.asm	/^c01041af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01041b2	obj/kernel.asm	/^c01041b2:	c6 80 87 00 00 00 00 	movb   $0x0,0x87(%eax)$/;"	l
c01041b9	obj/kernel.asm	/^c01041b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01041bc	obj/kernel.asm	/^c01041bc:	66 c7 80 88 00 00 00 	movw   $0xffff,0x88(%eax)$/;"	l
c01041c3	obj/kernel.asm	/^c01041c3:	ff ff $/;"	l
c01041c5	obj/kernel.asm	/^c01041c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01041c8	obj/kernel.asm	/^c01041c8:	66 c7 80 8a 00 00 00 	movw   $0x0,0x8a(%eax)$/;"	l
c01041cf	obj/kernel.asm	/^c01041cf:	00 00 $/;"	l
c01041d1	obj/kernel.asm	/^c01041d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01041d4	obj/kernel.asm	/^c01041d4:	c6 80 8c 00 00 00 00 	movb   $0x0,0x8c(%eax)$/;"	l
c01041db	obj/kernel.asm	/^c01041db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01041de	obj/kernel.asm	/^c01041de:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c01041e5	obj/kernel.asm	/^c01041e5:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01041e8	obj/kernel.asm	/^c01041e8:	83 ca 0a             	or     $0xa,%edx$/;"	l
c01041eb	obj/kernel.asm	/^c01041eb:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c01041f1	obj/kernel.asm	/^c01041f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01041f4	obj/kernel.asm	/^c01041f4:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c01041fb	obj/kernel.asm	/^c01041fb:	83 ca 10             	or     $0x10,%edx$/;"	l
c01041fe	obj/kernel.asm	/^c01041fe:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c0104204	obj/kernel.asm	/^c0104204:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104207	obj/kernel.asm	/^c0104207:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c010420e	obj/kernel.asm	/^c010420e:	83 ca 60             	or     $0x60,%edx$/;"	l
c0104211	obj/kernel.asm	/^c0104211:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c0104217	obj/kernel.asm	/^c0104217:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010421a	obj/kernel.asm	/^c010421a:	0f b6 90 8d 00 00 00 	movzbl 0x8d(%eax),%edx$/;"	l
c0104221	obj/kernel.asm	/^c0104221:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0104224	obj/kernel.asm	/^c0104224:	88 90 8d 00 00 00    	mov    %dl,0x8d(%eax)$/;"	l
c010422a	obj/kernel.asm	/^c010422a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010422d	obj/kernel.asm	/^c010422d:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c0104234	obj/kernel.asm	/^c0104234:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0104237	obj/kernel.asm	/^c0104237:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c010423d	obj/kernel.asm	/^c010423d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104240	obj/kernel.asm	/^c0104240:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c0104247	obj/kernel.asm	/^c0104247:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010424a	obj/kernel.asm	/^c010424a:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c0104250	obj/kernel.asm	/^c0104250:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104253	obj/kernel.asm	/^c0104253:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c010425a	obj/kernel.asm	/^c010425a:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c010425d	obj/kernel.asm	/^c010425d:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c0104263	obj/kernel.asm	/^c0104263:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104266	obj/kernel.asm	/^c0104266:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c010426d	obj/kernel.asm	/^c010426d:	83 ca 40             	or     $0x40,%edx$/;"	l
c0104270	obj/kernel.asm	/^c0104270:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c0104276	obj/kernel.asm	/^c0104276:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104279	obj/kernel.asm	/^c0104279:	0f b6 90 8e 00 00 00 	movzbl 0x8e(%eax),%edx$/;"	l
c0104280	obj/kernel.asm	/^c0104280:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0104283	obj/kernel.asm	/^c0104283:	88 90 8e 00 00 00    	mov    %dl,0x8e(%eax)$/;"	l
c0104289	obj/kernel.asm	/^c0104289:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010428c	obj/kernel.asm	/^c010428c:	c6 80 8f 00 00 00 00 	movb   $0x0,0x8f(%eax)$/;"	l
c0104293	obj/kernel.asm	/^c0104293:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104296	obj/kernel.asm	/^c0104296:	66 c7 80 90 00 00 00 	movw   $0xffff,0x90(%eax)$/;"	l
c010429d	obj/kernel.asm	/^c010429d:	ff ff $/;"	l
c010429f	obj/kernel.asm	/^c010429f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042a2	obj/kernel.asm	/^c01042a2:	66 c7 80 92 00 00 00 	movw   $0x0,0x92(%eax)$/;"	l
c01042a9	obj/kernel.asm	/^c01042a9:	00 00 $/;"	l
c01042ab	obj/kernel.asm	/^c01042ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042ae	obj/kernel.asm	/^c01042ae:	c6 80 94 00 00 00 00 	movb   $0x0,0x94(%eax)$/;"	l
c01042b5	obj/kernel.asm	/^c01042b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042b8	obj/kernel.asm	/^c01042b8:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c01042bf	obj/kernel.asm	/^c01042bf:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01042c2	obj/kernel.asm	/^c01042c2:	83 ca 02             	or     $0x2,%edx$/;"	l
c01042c5	obj/kernel.asm	/^c01042c5:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c01042cb	obj/kernel.asm	/^c01042cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042ce	obj/kernel.asm	/^c01042ce:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c01042d5	obj/kernel.asm	/^c01042d5:	83 ca 10             	or     $0x10,%edx$/;"	l
c01042d8	obj/kernel.asm	/^c01042d8:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c01042de	obj/kernel.asm	/^c01042de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042e1	obj/kernel.asm	/^c01042e1:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c01042e8	obj/kernel.asm	/^c01042e8:	83 ca 60             	or     $0x60,%edx$/;"	l
c01042eb	obj/kernel.asm	/^c01042eb:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c01042f1	obj/kernel.asm	/^c01042f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042f4	obj/kernel.asm	/^c01042f4:	0f b6 90 95 00 00 00 	movzbl 0x95(%eax),%edx$/;"	l
c01042fb	obj/kernel.asm	/^c01042fb:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01042fe	obj/kernel.asm	/^c01042fe:	88 90 95 00 00 00    	mov    %dl,0x95(%eax)$/;"	l
c0104304	obj/kernel.asm	/^c0104304:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104307	obj/kernel.asm	/^c0104307:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c010430e	obj/kernel.asm	/^c010430e:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0104311	obj/kernel.asm	/^c0104311:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c0104317	obj/kernel.asm	/^c0104317:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010431a	obj/kernel.asm	/^c010431a:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c0104321	obj/kernel.asm	/^c0104321:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0104324	obj/kernel.asm	/^c0104324:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c010432a	obj/kernel.asm	/^c010432a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010432d	obj/kernel.asm	/^c010432d:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c0104334	obj/kernel.asm	/^c0104334:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c0104337	obj/kernel.asm	/^c0104337:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c010433d	obj/kernel.asm	/^c010433d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104340	obj/kernel.asm	/^c0104340:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c0104347	obj/kernel.asm	/^c0104347:	83 ca 40             	or     $0x40,%edx$/;"	l
c010434a	obj/kernel.asm	/^c010434a:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c0104350	obj/kernel.asm	/^c0104350:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104353	obj/kernel.asm	/^c0104353:	0f b6 90 96 00 00 00 	movzbl 0x96(%eax),%edx$/;"	l
c010435a	obj/kernel.asm	/^c010435a:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010435d	obj/kernel.asm	/^c010435d:	88 90 96 00 00 00    	mov    %dl,0x96(%eax)$/;"	l
c0104363	obj/kernel.asm	/^c0104363:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104366	obj/kernel.asm	/^c0104366:	c6 80 97 00 00 00 00 	movb   $0x0,0x97(%eax)$/;"	l
c010436d	obj/kernel.asm	/^c010436d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104370	obj/kernel.asm	/^c0104370:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c0104375	obj/kernel.asm	/^c0104375:	89 c3                	mov    %eax,%ebx$/;"	l
c0104377	obj/kernel.asm	/^c0104377:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010437a	obj/kernel.asm	/^c010437a:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c010437f	obj/kernel.asm	/^c010437f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	89 c1                	mov    %eax,%ecx$/;"	l
c0104384	obj/kernel.asm	/^c0104384:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104387	obj/kernel.asm	/^c0104387:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c010438c	obj/kernel.asm	/^c010438c:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c010438f	obj/kernel.asm	/^c010438f:	89 c2                	mov    %eax,%edx$/;"	l
c0104391	obj/kernel.asm	/^c0104391:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104394	obj/kernel.asm	/^c0104394:	66 c7 80 a0 00 00 00 	movw   $0x0,0xa0(%eax)$/;"	l
c010439b	obj/kernel.asm	/^c010439b:	00 00 $/;"	l
c010439d	obj/kernel.asm	/^c010439d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01043a0	obj/kernel.asm	/^c01043a0:	66 89 98 a2 00 00 00 	mov    %bx,0xa2(%eax)$/;"	l
c01043a7	obj/kernel.asm	/^c01043a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01043aa	obj/kernel.asm	/^c01043aa:	88 88 a4 00 00 00    	mov    %cl,0xa4(%eax)$/;"	l
c01043b0	obj/kernel.asm	/^c01043b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01043b3	obj/kernel.asm	/^c01043b3:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c01043ba	obj/kernel.asm	/^c01043ba:	83 e1 f0             	and    $0xfffffff0,%ecx$/;"	l
c01043bd	obj/kernel.asm	/^c01043bd:	83 c9 02             	or     $0x2,%ecx$/;"	l
c01043c0	obj/kernel.asm	/^c01043c0:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c01043c6	obj/kernel.asm	/^c01043c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01043c9	obj/kernel.asm	/^c01043c9:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c01043d0	obj/kernel.asm	/^c01043d0:	83 c9 10             	or     $0x10,%ecx$/;"	l
c01043d3	obj/kernel.asm	/^c01043d3:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c01043d9	obj/kernel.asm	/^c01043d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01043dc	obj/kernel.asm	/^c01043dc:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c01043e3	obj/kernel.asm	/^c01043e3:	83 e1 9f             	and    $0xffffff9f,%ecx$/;"	l
c01043e6	obj/kernel.asm	/^c01043e6:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c01043ec	obj/kernel.asm	/^c01043ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01043ef	obj/kernel.asm	/^c01043ef:	0f b6 88 a5 00 00 00 	movzbl 0xa5(%eax),%ecx$/;"	l
c01043f6	obj/kernel.asm	/^c01043f6:	83 c9 80             	or     $0xffffff80,%ecx$/;"	l
c01043f9	obj/kernel.asm	/^c01043f9:	88 88 a5 00 00 00    	mov    %cl,0xa5(%eax)$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104402	obj/kernel.asm	/^c0104402:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0104409	obj/kernel.asm	/^c0104409:	83 e1 f0             	and    $0xfffffff0,%ecx$/;"	l
c010440c	obj/kernel.asm	/^c010440c:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c0104412	obj/kernel.asm	/^c0104412:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104415	obj/kernel.asm	/^c0104415:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c010441c	obj/kernel.asm	/^c010441c:	83 e1 ef             	and    $0xffffffef,%ecx$/;"	l
c010441f	obj/kernel.asm	/^c010441f:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c0104425	obj/kernel.asm	/^c0104425:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104428	obj/kernel.asm	/^c0104428:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c010442f	obj/kernel.asm	/^c010442f:	83 e1 df             	and    $0xffffffdf,%ecx$/;"	l
c0104432	obj/kernel.asm	/^c0104432:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c0104438	obj/kernel.asm	/^c0104438:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010443b	obj/kernel.asm	/^c010443b:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0104442	obj/kernel.asm	/^c0104442:	83 c9 40             	or     $0x40,%ecx$/;"	l
c0104445	obj/kernel.asm	/^c0104445:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c010444b	obj/kernel.asm	/^c010444b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010444e	obj/kernel.asm	/^c010444e:	0f b6 88 a6 00 00 00 	movzbl 0xa6(%eax),%ecx$/;"	l
c0104455	obj/kernel.asm	/^c0104455:	83 c9 80             	or     $0xffffff80,%ecx$/;"	l
c0104458	obj/kernel.asm	/^c0104458:	88 88 a6 00 00 00    	mov    %cl,0xa6(%eax)$/;"	l
c010445e	obj/kernel.asm	/^c010445e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104461	obj/kernel.asm	/^c0104461:	88 90 a7 00 00 00    	mov    %dl,0xa7(%eax)$/;"	l
c0104467	obj/kernel.asm	/^c0104467:	66 c7 05 08 6a 15 c0 	movw   $0x68,0xc0156a08$/;"	l
c010446e	obj/kernel.asm	/^c010446e:	68 00 $/;"	l
c0104470	obj/kernel.asm	/^c0104470:	b8 e0 7e 15 c0       	mov    $0xc0157ee0,%eax$/;"	l
c0104475	obj/kernel.asm	/^c0104475:	66 a3 0a 6a 15 c0    	mov    %ax,0xc0156a0a$/;"	l
c010447b	obj/kernel.asm	/^c010447b:	b8 e0 7e 15 c0       	mov    $0xc0157ee0,%eax$/;"	l
c0104480	obj/kernel.asm	/^c0104480:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0104483	obj/kernel.asm	/^c0104483:	a2 0c 6a 15 c0       	mov    %al,0xc0156a0c$/;"	l
c0104488	obj/kernel.asm	/^c0104488:	0f b6 05 0d 6a 15 c0 	movzbl 0xc0156a0d,%eax$/;"	l
c010448f	obj/kernel.asm	/^c010448f:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0104492	obj/kernel.asm	/^c0104492:	83 c8 09             	or     $0x9,%eax$/;"	l
c0104495	obj/kernel.asm	/^c0104495:	a2 0d 6a 15 c0       	mov    %al,0xc0156a0d$/;"	l
c010449a	obj/kernel.asm	/^c010449a:	0f b6 05 0d 6a 15 c0 	movzbl 0xc0156a0d,%eax$/;"	l
c01044a1	obj/kernel.asm	/^c01044a1:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01044a4	obj/kernel.asm	/^c01044a4:	a2 0d 6a 15 c0       	mov    %al,0xc0156a0d$/;"	l
c01044a9	obj/kernel.asm	/^c01044a9:	0f b6 05 0d 6a 15 c0 	movzbl 0xc0156a0d,%eax$/;"	l
c01044b0	obj/kernel.asm	/^c01044b0:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c01044b3	obj/kernel.asm	/^c01044b3:	a2 0d 6a 15 c0       	mov    %al,0xc0156a0d$/;"	l
c01044b8	obj/kernel.asm	/^c01044b8:	0f b6 05 0d 6a 15 c0 	movzbl 0xc0156a0d,%eax$/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01044c2	obj/kernel.asm	/^c01044c2:	a2 0d 6a 15 c0       	mov    %al,0xc0156a0d$/;"	l
c01044c7	obj/kernel.asm	/^c01044c7:	0f b6 05 0e 6a 15 c0 	movzbl 0xc0156a0e,%eax$/;"	l
c01044ce	obj/kernel.asm	/^c01044ce:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c01044d1	obj/kernel.asm	/^c01044d1:	a2 0e 6a 15 c0       	mov    %al,0xc0156a0e$/;"	l
c01044d6	obj/kernel.asm	/^c01044d6:	0f b6 05 0e 6a 15 c0 	movzbl 0xc0156a0e,%eax$/;"	l
c01044dd	obj/kernel.asm	/^c01044dd:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01044e0	obj/kernel.asm	/^c01044e0:	a2 0e 6a 15 c0       	mov    %al,0xc0156a0e$/;"	l
c01044e5	obj/kernel.asm	/^c01044e5:	0f b6 05 0e 6a 15 c0 	movzbl 0xc0156a0e,%eax$/;"	l
c01044ec	obj/kernel.asm	/^c01044ec:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c01044ef	obj/kernel.asm	/^c01044ef:	a2 0e 6a 15 c0       	mov    %al,0xc0156a0e$/;"	l
c01044f4	obj/kernel.asm	/^c01044f4:	0f b6 05 0e 6a 15 c0 	movzbl 0xc0156a0e,%eax$/;"	l
c01044fb	obj/kernel.asm	/^c01044fb:	83 c8 40             	or     $0x40,%eax$/;"	l
c01044fe	obj/kernel.asm	/^c01044fe:	a2 0e 6a 15 c0       	mov    %al,0xc0156a0e$/;"	l
c0104503	obj/kernel.asm	/^c0104503:	0f b6 05 0e 6a 15 c0 	movzbl 0xc0156a0e,%eax$/;"	l
c010450a	obj/kernel.asm	/^c010450a:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c010450d	obj/kernel.asm	/^c010450d:	a2 0e 6a 15 c0       	mov    %al,0xc0156a0e$/;"	l
c0104512	obj/kernel.asm	/^c0104512:	b8 e0 7e 15 c0       	mov    $0xc0157ee0,%eax$/;"	l
c0104517	obj/kernel.asm	/^c0104517:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c010451a	obj/kernel.asm	/^c010451a:	a2 0f 6a 15 c0       	mov    %al,0xc0156a0f$/;"	l
c010451f	obj/kernel.asm	/^c010451f:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
c0104522	obj/kernel.asm	/^c0104522:	a1 08 6a 15 c0       	mov    0xc0156a08,%eax$/;"	l
c0104527	obj/kernel.asm	/^c0104527:	8b 15 0c 6a 15 c0    	mov    0xc0156a0c,%edx$/;"	l
c010452d	obj/kernel.asm	/^c010452d:	89 81 98 00 00 00    	mov    %eax,0x98(%ecx)$/;"	l
c0104533	obj/kernel.asm	/^c0104533:	89 91 9c 00 00 00    	mov    %edx,0x9c(%ecx)$/;"	l
c0104539	obj/kernel.asm	/^c0104539:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010453c	obj/kernel.asm	/^c010453c:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c0104541	obj/kernel.asm	/^c0104541:	89 c1                	mov    %eax,%ecx$/;"	l
c0104543	obj/kernel.asm	/^c0104543:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104546	obj/kernel.asm	/^c0104546:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c010454b	obj/kernel.asm	/^c010454b:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010454e	obj/kernel.asm	/^c010454e:	89 c2                	mov    %eax,%edx$/;"	l
c0104550	obj/kernel.asm	/^c0104550:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104553	obj/kernel.asm	/^c0104553:	05 b4 00 00 00       	add    $0xb4,%eax$/;"	l
c0104558	obj/kernel.asm	/^c0104558:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c010455b	obj/kernel.asm	/^c010455b:	66 c7 05 10 6a 15 c0 	movw   $0x0,0xc0156a10$/;"	l
c0104562	obj/kernel.asm	/^c0104562:	00 00 $/;"	l
c0104564	obj/kernel.asm	/^c0104564:	66 89 0d 12 6a 15 c0 	mov    %cx,0xc0156a12$/;"	l
c010456b	obj/kernel.asm	/^c010456b:	88 15 14 6a 15 c0    	mov    %dl,0xc0156a14$/;"	l
c0104571	obj/kernel.asm	/^c0104571:	0f b6 15 15 6a 15 c0 	movzbl 0xc0156a15,%edx$/;"	l
c0104578	obj/kernel.asm	/^c0104578:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c010457b	obj/kernel.asm	/^c010457b:	83 ca 02             	or     $0x2,%edx$/;"	l
c010457e	obj/kernel.asm	/^c010457e:	88 15 15 6a 15 c0    	mov    %dl,0xc0156a15$/;"	l
c0104584	obj/kernel.asm	/^c0104584:	0f b6 15 15 6a 15 c0 	movzbl 0xc0156a15,%edx$/;"	l
c010458b	obj/kernel.asm	/^c010458b:	83 ca 10             	or     $0x10,%edx$/;"	l
c010458e	obj/kernel.asm	/^c010458e:	88 15 15 6a 15 c0    	mov    %dl,0xc0156a15$/;"	l
c0104594	obj/kernel.asm	/^c0104594:	0f b6 15 15 6a 15 c0 	movzbl 0xc0156a15,%edx$/;"	l
c010459b	obj/kernel.asm	/^c010459b:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c010459e	obj/kernel.asm	/^c010459e:	88 15 15 6a 15 c0    	mov    %dl,0xc0156a15$/;"	l
c01045a4	obj/kernel.asm	/^c01045a4:	0f b6 15 15 6a 15 c0 	movzbl 0xc0156a15,%edx$/;"	l
c01045ab	obj/kernel.asm	/^c01045ab:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01045ae	obj/kernel.asm	/^c01045ae:	88 15 15 6a 15 c0    	mov    %dl,0xc0156a15$/;"	l
c01045b4	obj/kernel.asm	/^c01045b4:	0f b6 15 16 6a 15 c0 	movzbl 0xc0156a16,%edx$/;"	l
c01045bb	obj/kernel.asm	/^c01045bb:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01045be	obj/kernel.asm	/^c01045be:	88 15 16 6a 15 c0    	mov    %dl,0xc0156a16$/;"	l
c01045c4	obj/kernel.asm	/^c01045c4:	0f b6 15 16 6a 15 c0 	movzbl 0xc0156a16,%edx$/;"	l
c01045cb	obj/kernel.asm	/^c01045cb:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01045ce	obj/kernel.asm	/^c01045ce:	88 15 16 6a 15 c0    	mov    %dl,0xc0156a16$/;"	l
c01045d4	obj/kernel.asm	/^c01045d4:	0f b6 15 16 6a 15 c0 	movzbl 0xc0156a16,%edx$/;"	l
c01045db	obj/kernel.asm	/^c01045db:	83 e2 df             	and    $0xffffffdf,%edx$/;"	l
c01045de	obj/kernel.asm	/^c01045de:	88 15 16 6a 15 c0    	mov    %dl,0xc0156a16$/;"	l
c01045e4	obj/kernel.asm	/^c01045e4:	0f b6 15 16 6a 15 c0 	movzbl 0xc0156a16,%edx$/;"	l
c01045eb	obj/kernel.asm	/^c01045eb:	83 ca 40             	or     $0x40,%edx$/;"	l
c01045ee	obj/kernel.asm	/^c01045ee:	88 15 16 6a 15 c0    	mov    %dl,0xc0156a16$/;"	l
c01045f4	obj/kernel.asm	/^c01045f4:	0f b6 15 16 6a 15 c0 	movzbl 0xc0156a16,%edx$/;"	l
c01045fb	obj/kernel.asm	/^c01045fb:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c01045fe	obj/kernel.asm	/^c01045fe:	88 15 16 6a 15 c0    	mov    %dl,0xc0156a16$/;"	l
c0104604	obj/kernel.asm	/^c0104604:	a2 17 6a 15 c0       	mov    %al,0xc0156a17$/;"	l
c0104609	obj/kernel.asm	/^c0104609:	c7 04 24 18 6a 15 c0 	movl   $0xc0156a18,(%esp)$/;"	l
c0104610	obj/kernel.asm	/^c0104610:	e8 ab f9 ff ff       	call   c0103fc0 <lgdt>$/;"	l
c0104615	obj/kernel.asm	/^c0104615:	66 c7 45 f2 28 00    	movw   $0x28,-0xe(%ebp)$/;"	l
c010461b	obj/kernel.asm	/^c010461b:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010461f	obj/kernel.asm	/^c010461f:	0f 00 d8             	ltr    %ax$/;"	l
c0104622	obj/kernel.asm	/^c0104622:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c0104629	obj/kernel.asm	/^c0104629:	e8 d2 f7 ff ff       	call   c0103e00 <loadgs>$/;"	l
c010462e	obj/kernel.asm	/^c010462e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104631	obj/kernel.asm	/^c0104631:	65 a3 00 00 00 00    	mov    %eax,%gs:0x0$/;"	l
c0104637	obj/kernel.asm	/^c0104637:	83 c4 24             	add    $0x24,%esp$/;"	l
c010463a	obj/kernel.asm	/^c010463a:	5b                   	pop    %ebx$/;"	l
c010463b	obj/kernel.asm	/^c010463b:	5d                   	pop    %ebp$/;"	l
c010463c	obj/kernel.asm	/^c010463c:	c3                   	ret    $/;"	l
c010463d	obj/kernel.asm	/^c010463d <init_pmm_manager>:$/;"	l
c010463d	obj/kernel.asm	/^c010463d:	55                   	push   %ebp$/;"	l
c010463e	obj/kernel.asm	/^c010463e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104640	obj/kernel.asm	/^c0104640:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104643	obj/kernel.asm	/^c0104643:	c7 05 70 b6 15 c0 94 	movl   $0xc0119094,0xc015b670$/;"	l
c010464a	obj/kernel.asm	/^c010464a:	90 11 c0 $/;"	l
c010464d	obj/kernel.asm	/^c010464d:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c0104652	obj/kernel.asm	/^c0104652:	8b 00                	mov    (%eax),%eax$/;"	l
c0104654	obj/kernel.asm	/^c0104654:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104658	obj/kernel.asm	/^c0104658:	c7 04 24 dc 7a 11 c0 	movl   $0xc0117adc,(%esp)$/;"	l
c010465f	obj/kernel.asm	/^c010465f:	e8 7c c4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0104664	obj/kernel.asm	/^c0104664:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c0104669	obj/kernel.asm	/^c0104669:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010466c	obj/kernel.asm	/^c010466c:	ff d0                	call   *%eax$/;"	l
c010466e	obj/kernel.asm	/^c010466e:	c9                   	leave  $/;"	l
c010466f	obj/kernel.asm	/^c010466f:	c3                   	ret    $/;"	l
c0104670	obj/kernel.asm	/^c0104670 <init_memmap>:$/;"	l
c0104670	obj/kernel.asm	/^c0104670:	55                   	push   %ebp$/;"	l
c0104671	obj/kernel.asm	/^c0104671:	89 e5                	mov    %esp,%ebp$/;"	l
c0104673	obj/kernel.asm	/^c0104673:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104676	obj/kernel.asm	/^c0104676:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c010467b	obj/kernel.asm	/^c010467b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010467e	obj/kernel.asm	/^c010467e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104681	obj/kernel.asm	/^c0104681:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104685	obj/kernel.asm	/^c0104685:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0104688	obj/kernel.asm	/^c0104688:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010468b	obj/kernel.asm	/^c010468b:	ff d0                	call   *%eax$/;"	l
c010468d	obj/kernel.asm	/^c010468d:	c9                   	leave  $/;"	l
c010468e	obj/kernel.asm	/^c010468e:	c3                   	ret    $/;"	l
c010468f	obj/kernel.asm	/^c010468f <alloc_pages>:$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	55                   	push   %ebp$/;"	l
c0104690	obj/kernel.asm	/^c0104690:	89 e5                	mov    %esp,%ebp$/;"	l
c0104692	obj/kernel.asm	/^c0104692:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104695	obj/kernel.asm	/^c0104695:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010469c	obj/kernel.asm	/^c010469c:	e8 e2 f8 ff ff       	call   c0103f83 <__intr_save>$/;"	l
c01046a1	obj/kernel.asm	/^c01046a1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01046a4	obj/kernel.asm	/^c01046a4:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c01046a9	obj/kernel.asm	/^c01046a9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01046ac	obj/kernel.asm	/^c01046ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01046af	obj/kernel.asm	/^c01046af:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01046b2	obj/kernel.asm	/^c01046b2:	ff d0                	call   *%eax$/;"	l
c01046b4	obj/kernel.asm	/^c01046b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046b7	obj/kernel.asm	/^c01046b7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01046ba	obj/kernel.asm	/^c01046ba:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01046bd	obj/kernel.asm	/^c01046bd:	e8 eb f8 ff ff       	call   c0103fad <__intr_restore>$/;"	l
c01046c2	obj/kernel.asm	/^c01046c2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01046c6	obj/kernel.asm	/^c01046c6:	75 2d                	jne    c01046f5 <alloc_pages+0x66>$/;"	l
c01046c8	obj/kernel.asm	/^c01046c8:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c01046cc	obj/kernel.asm	/^c01046cc:	77 27                	ja     c01046f5 <alloc_pages+0x66>$/;"	l
c01046ce	obj/kernel.asm	/^c01046ce:	a1 54 7f 15 c0       	mov    0xc0157f54,%eax$/;"	l
c01046d3	obj/kernel.asm	/^c01046d3:	85 c0                	test   %eax,%eax$/;"	l
c01046d5	obj/kernel.asm	/^c01046d5:	74 1e                	je     c01046f5 <alloc_pages+0x66>$/;"	l
c01046d7	obj/kernel.asm	/^c01046d7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01046da	obj/kernel.asm	/^c01046da:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c01046df	obj/kernel.asm	/^c01046df:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01046e6	obj/kernel.asm	/^c01046e6:	00 $/;"	l
c01046e7	obj/kernel.asm	/^c01046e7:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01046eb	obj/kernel.asm	/^c01046eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01046ee	obj/kernel.asm	/^c01046ee:	e8 e5 3d 00 00       	call   c01084d8 <swap_out>$/;"	l
c01046f3	obj/kernel.asm	/^c01046f3:	eb a7                	jmp    c010469c <alloc_pages+0xd>$/;"	l
c01046f5	obj/kernel.asm	/^c01046f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046f8	obj/kernel.asm	/^c01046f8:	c9                   	leave  $/;"	l
c01046f9	obj/kernel.asm	/^c01046f9:	c3                   	ret    $/;"	l
c01046fa	obj/kernel.asm	/^c01046fa <free_pages>:$/;"	l
c01046fa	obj/kernel.asm	/^c01046fa:	55                   	push   %ebp$/;"	l
c01046fb	obj/kernel.asm	/^c01046fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01046fd	obj/kernel.asm	/^c01046fd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104700	obj/kernel.asm	/^c0104700:	e8 7e f8 ff ff       	call   c0103f83 <__intr_save>$/;"	l
c0104705	obj/kernel.asm	/^c0104705:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104708	obj/kernel.asm	/^c0104708:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c010470d	obj/kernel.asm	/^c010470d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0104710	obj/kernel.asm	/^c0104710:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104713	obj/kernel.asm	/^c0104713:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104717	obj/kernel.asm	/^c0104717:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010471a	obj/kernel.asm	/^c010471a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010471d	obj/kernel.asm	/^c010471d:	ff d0                	call   *%eax$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104722	obj/kernel.asm	/^c0104722:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104725	obj/kernel.asm	/^c0104725:	e8 83 f8 ff ff       	call   c0103fad <__intr_restore>$/;"	l
c010472a	obj/kernel.asm	/^c010472a:	c9                   	leave  $/;"	l
c010472b	obj/kernel.asm	/^c010472b:	c3                   	ret    $/;"	l
c010472c	obj/kernel.asm	/^c010472c <nr_free_pages>:$/;"	l
c010472c	obj/kernel.asm	/^c010472c:	55                   	push   %ebp$/;"	l
c010472d	obj/kernel.asm	/^c010472d:	89 e5                	mov    %esp,%ebp$/;"	l
c010472f	obj/kernel.asm	/^c010472f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104732	obj/kernel.asm	/^c0104732:	e8 4c f8 ff ff       	call   c0103f83 <__intr_save>$/;"	l
c0104737	obj/kernel.asm	/^c0104737:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010473a	obj/kernel.asm	/^c010473a:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c010473f	obj/kernel.asm	/^c010473f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0104742	obj/kernel.asm	/^c0104742:	ff d0                	call   *%eax$/;"	l
c0104744	obj/kernel.asm	/^c0104744:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104747	obj/kernel.asm	/^c0104747:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010474a	obj/kernel.asm	/^c010474a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010474d	obj/kernel.asm	/^c010474d:	e8 5b f8 ff ff       	call   c0103fad <__intr_restore>$/;"	l
c0104752	obj/kernel.asm	/^c0104752:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104755	obj/kernel.asm	/^c0104755:	c9                   	leave  $/;"	l
c0104756	obj/kernel.asm	/^c0104756:	c3                   	ret    $/;"	l
c0104757	obj/kernel.asm	/^c0104757 <page_init>:$/;"	l
c0104757	obj/kernel.asm	/^c0104757:	55                   	push   %ebp$/;"	l
c0104758	obj/kernel.asm	/^c0104758:	89 e5                	mov    %esp,%ebp$/;"	l
c010475a	obj/kernel.asm	/^c010475a:	57                   	push   %edi$/;"	l
c010475b	obj/kernel.asm	/^c010475b:	56                   	push   %esi$/;"	l
c010475c	obj/kernel.asm	/^c010475c:	53                   	push   %ebx$/;"	l
c010475d	obj/kernel.asm	/^c010475d:	81 ec 9c 00 00 00    	sub    $0x9c,%esp$/;"	l
c0104763	obj/kernel.asm	/^c0104763:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c010476a	obj/kernel.asm	/^c010476a:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0104771	obj/kernel.asm	/^c0104771:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0104778	obj/kernel.asm	/^c0104778:	c7 04 24 f3 7a 11 c0 	movl   $0xc0117af3,(%esp)$/;"	l
c010477f	obj/kernel.asm	/^c010477f:	e8 5c c3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0104784	obj/kernel.asm	/^c0104784:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010478b	obj/kernel.asm	/^c010478b:	e9 15 01 00 00       	jmp    c01048a5 <page_init+0x14e>$/;"	l
c0104790	obj/kernel.asm	/^c0104790:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0104793	obj/kernel.asm	/^c0104793:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0104796	obj/kernel.asm	/^c0104796:	89 d0                	mov    %edx,%eax$/;"	l
c0104798	obj/kernel.asm	/^c0104798:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010479b	obj/kernel.asm	/^c010479b:	01 d0                	add    %edx,%eax$/;"	l
c010479d	obj/kernel.asm	/^c010479d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01047a0	obj/kernel.asm	/^c01047a0:	01 c8                	add    %ecx,%eax$/;"	l
c01047a2	obj/kernel.asm	/^c01047a2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01047a5	obj/kernel.asm	/^c01047a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01047a8	obj/kernel.asm	/^c01047a8:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01047ab	obj/kernel.asm	/^c01047ab:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c01047ae	obj/kernel.asm	/^c01047ae:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01047b1	obj/kernel.asm	/^c01047b1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01047b4	obj/kernel.asm	/^c01047b4:	89 d0                	mov    %edx,%eax$/;"	l
c01047b6	obj/kernel.asm	/^c01047b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01047b9	obj/kernel.asm	/^c01047b9:	01 d0                	add    %edx,%eax$/;"	l
c01047bb	obj/kernel.asm	/^c01047bb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01047be	obj/kernel.asm	/^c01047be:	01 c8                	add    %ecx,%eax$/;"	l
c01047c0	obj/kernel.asm	/^c01047c0:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01047c3	obj/kernel.asm	/^c01047c3:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01047c6	obj/kernel.asm	/^c01047c6:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01047c9	obj/kernel.asm	/^c01047c9:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c01047cc	obj/kernel.asm	/^c01047cc:	01 c8                	add    %ecx,%eax$/;"	l
c01047ce	obj/kernel.asm	/^c01047ce:	11 da                	adc    %ebx,%edx$/;"	l
c01047d0	obj/kernel.asm	/^c01047d0:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01047d3	obj/kernel.asm	/^c01047d3:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c01047d6	obj/kernel.asm	/^c01047d6:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01047d9	obj/kernel.asm	/^c01047d9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01047dc	obj/kernel.asm	/^c01047dc:	89 d0                	mov    %edx,%eax$/;"	l
c01047de	obj/kernel.asm	/^c01047de:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01047e1	obj/kernel.asm	/^c01047e1:	01 d0                	add    %edx,%eax$/;"	l
c01047e3	obj/kernel.asm	/^c01047e3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01047e6	obj/kernel.asm	/^c01047e6:	01 c8                	add    %ecx,%eax$/;"	l
c01047e8	obj/kernel.asm	/^c01047e8:	83 c0 14             	add    $0x14,%eax$/;"	l
c01047eb	obj/kernel.asm	/^c01047eb:	8b 00                	mov    (%eax),%eax$/;"	l
c01047ed	obj/kernel.asm	/^c01047ed:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c01047f3	obj/kernel.asm	/^c01047f3:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01047f6	obj/kernel.asm	/^c01047f6:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01047f9	obj/kernel.asm	/^c01047f9:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c01047fc	obj/kernel.asm	/^c01047fc:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c01047ff	obj/kernel.asm	/^c01047ff:	89 c6                	mov    %eax,%esi$/;"	l
c0104801	obj/kernel.asm	/^c0104801:	89 d7                	mov    %edx,%edi$/;"	l
c0104803	obj/kernel.asm	/^c0104803:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0104806	obj/kernel.asm	/^c0104806:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0104809	obj/kernel.asm	/^c0104809:	89 d0                	mov    %edx,%eax$/;"	l
c010480b	obj/kernel.asm	/^c010480b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010480e	obj/kernel.asm	/^c010480e:	01 d0                	add    %edx,%eax$/;"	l
c0104810	obj/kernel.asm	/^c0104810:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104813	obj/kernel.asm	/^c0104813:	01 c8                	add    %ecx,%eax$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0104818	obj/kernel.asm	/^c0104818:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c010481b	obj/kernel.asm	/^c010481b:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c0104821	obj/kernel.asm	/^c0104821:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c0104825	obj/kernel.asm	/^c0104825:	89 74 24 14          	mov    %esi,0x14(%esp)$/;"	l
c0104829	obj/kernel.asm	/^c0104829:	89 7c 24 18          	mov    %edi,0x18(%esp)$/;"	l
c010482d	obj/kernel.asm	/^c010482d:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0104830	obj/kernel.asm	/^c0104830:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0104833	obj/kernel.asm	/^c0104833:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c010483b	obj/kernel.asm	/^c010483b:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010483f	obj/kernel.asm	/^c010483f:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0104843	obj/kernel.asm	/^c0104843:	c7 04 24 00 7b 11 c0 	movl   $0xc0117b00,(%esp)$/;"	l
c010484a	obj/kernel.asm	/^c010484a:	e8 91 c2 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010484f	obj/kernel.asm	/^c010484f:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0104852	obj/kernel.asm	/^c0104852:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0104855	obj/kernel.asm	/^c0104855:	89 d0                	mov    %edx,%eax$/;"	l
c0104857	obj/kernel.asm	/^c0104857:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010485a	obj/kernel.asm	/^c010485a:	01 d0                	add    %edx,%eax$/;"	l
c010485c	obj/kernel.asm	/^c010485c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010485f	obj/kernel.asm	/^c010485f:	01 c8                	add    %ecx,%eax$/;"	l
c0104861	obj/kernel.asm	/^c0104861:	83 c0 14             	add    $0x14,%eax$/;"	l
c0104864	obj/kernel.asm	/^c0104864:	8b 00                	mov    (%eax),%eax$/;"	l
c0104866	obj/kernel.asm	/^c0104866:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104869	obj/kernel.asm	/^c0104869:	75 36                	jne    c01048a1 <page_init+0x14a>$/;"	l
c010486b	obj/kernel.asm	/^c010486b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010486e	obj/kernel.asm	/^c010486e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0104871	obj/kernel.asm	/^c0104871:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0104874	obj/kernel.asm	/^c0104874:	77 2b                	ja     c01048a1 <page_init+0x14a>$/;"	l
c0104876	obj/kernel.asm	/^c0104876:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0104879	obj/kernel.asm	/^c0104879:	72 05                	jb     c0104880 <page_init+0x129>$/;"	l
c010487b	obj/kernel.asm	/^c010487b:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c010487e	obj/kernel.asm	/^c010487e:	73 21                	jae    c01048a1 <page_init+0x14a>$/;"	l
c0104880	obj/kernel.asm	/^c0104880:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0104884	obj/kernel.asm	/^c0104884:	77 1b                	ja     c01048a1 <page_init+0x14a>$/;"	l
c0104886	obj/kernel.asm	/^c0104886:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010488a	obj/kernel.asm	/^c010488a:	72 09                	jb     c0104895 <page_init+0x13e>$/;"	l
c010488c	obj/kernel.asm	/^c010488c:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0104893	obj/kernel.asm	/^c0104893:	77 0c                	ja     c01048a1 <page_init+0x14a>$/;"	l
c0104895	obj/kernel.asm	/^c0104895:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0104898	obj/kernel.asm	/^c0104898:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010489b	obj/kernel.asm	/^c010489b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010489e	obj/kernel.asm	/^c010489e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01048a1	obj/kernel.asm	/^c01048a1:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c01048a5	obj/kernel.asm	/^c01048a5:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01048a8	obj/kernel.asm	/^c01048a8:	8b 00                	mov    (%eax),%eax$/;"	l
c01048aa	obj/kernel.asm	/^c01048aa:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01048ad	obj/kernel.asm	/^c01048ad:	0f 8f dd fe ff ff    	jg     c0104790 <page_init+0x39>$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01048b7	obj/kernel.asm	/^c01048b7:	72 1d                	jb     c01048d6 <page_init+0x17f>$/;"	l
c01048b9	obj/kernel.asm	/^c01048b9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01048bd	obj/kernel.asm	/^c01048bd:	77 09                	ja     c01048c8 <page_init+0x171>$/;"	l
c01048bf	obj/kernel.asm	/^c01048bf:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c01048c6	obj/kernel.asm	/^c01048c6:	76 0e                	jbe    c01048d6 <page_init+0x17f>$/;"	l
c01048c8	obj/kernel.asm	/^c01048c8:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c01048cf	obj/kernel.asm	/^c01048cf:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01048d6	obj/kernel.asm	/^c01048d6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01048d9	obj/kernel.asm	/^c01048d9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01048dc	obj/kernel.asm	/^c01048dc:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c01048e0	obj/kernel.asm	/^c01048e0:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01048e3	obj/kernel.asm	/^c01048e3:	a3 c0 7e 15 c0       	mov    %eax,0xc0157ec0$/;"	l
c01048e8	obj/kernel.asm	/^c01048e8:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c01048ef	obj/kernel.asm	/^c01048ef:	b8 64 b8 15 c0       	mov    $0xc015b864,%eax$/;"	l
c01048f4	obj/kernel.asm	/^c01048f4:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01048f7	obj/kernel.asm	/^c01048f7:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c01048fa	obj/kernel.asm	/^c01048fa:	01 d0                	add    %edx,%eax$/;"	l
c01048fc	obj/kernel.asm	/^c01048fc:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01048ff	obj/kernel.asm	/^c01048ff:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0104902	obj/kernel.asm	/^c0104902:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0104907	obj/kernel.asm	/^c0104907:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c010490a	obj/kernel.asm	/^c010490a:	89 d0                	mov    %edx,%eax$/;"	l
c010490c	obj/kernel.asm	/^c010490c:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c010490f	obj/kernel.asm	/^c010490f:	29 c2                	sub    %eax,%edx$/;"	l
c0104911	obj/kernel.asm	/^c0104911:	89 d0                	mov    %edx,%eax$/;"	l
c0104913	obj/kernel.asm	/^c0104913:	a3 78 b6 15 c0       	mov    %eax,0xc015b678$/;"	l
c0104918	obj/kernel.asm	/^c0104918:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010491f	obj/kernel.asm	/^c010491f:	eb 2f                	jmp    c0104950 <page_init+0x1f9>$/;"	l
c0104921	obj/kernel.asm	/^c0104921:	8b 0d 78 b6 15 c0    	mov    0xc015b678,%ecx$/;"	l
c0104927	obj/kernel.asm	/^c0104927:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010492a	obj/kernel.asm	/^c010492a:	89 d0                	mov    %edx,%eax$/;"	l
c010492c	obj/kernel.asm	/^c010492c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010492f	obj/kernel.asm	/^c010492f:	01 d0                	add    %edx,%eax$/;"	l
c0104931	obj/kernel.asm	/^c0104931:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104934	obj/kernel.asm	/^c0104934:	01 c8                	add    %ecx,%eax$/;"	l
c0104936	obj/kernel.asm	/^c0104936:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104939	obj/kernel.asm	/^c0104939:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0104940	obj/kernel.asm	/^c0104940:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0104943	obj/kernel.asm	/^c0104943:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0104946	obj/kernel.asm	/^c0104946:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0104949	obj/kernel.asm	/^c0104949:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c010494c	obj/kernel.asm	/^c010494c:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0104950	obj/kernel.asm	/^c0104950:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0104953	obj/kernel.asm	/^c0104953:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0104958	obj/kernel.asm	/^c0104958:	39 c2                	cmp    %eax,%edx$/;"	l
c010495a	obj/kernel.asm	/^c010495a:	72 c5                	jb     c0104921 <page_init+0x1ca>$/;"	l
c010495c	obj/kernel.asm	/^c010495c:	8b 15 c0 7e 15 c0    	mov    0xc0157ec0,%edx$/;"	l
c0104962	obj/kernel.asm	/^c0104962:	89 d0                	mov    %edx,%eax$/;"	l
c0104964	obj/kernel.asm	/^c0104964:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0104967	obj/kernel.asm	/^c0104967:	01 d0                	add    %edx,%eax$/;"	l
c0104969	obj/kernel.asm	/^c0104969:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010496c	obj/kernel.asm	/^c010496c:	89 c2                	mov    %eax,%edx$/;"	l
c010496e	obj/kernel.asm	/^c010496e:	a1 78 b6 15 c0       	mov    0xc015b678,%eax$/;"	l
c0104973	obj/kernel.asm	/^c0104973:	01 d0                	add    %edx,%eax$/;"	l
c0104975	obj/kernel.asm	/^c0104975:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0104978	obj/kernel.asm	/^c0104978:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c010497f	obj/kernel.asm	/^c010497f:	77 23                	ja     c01049a4 <page_init+0x24d>$/;"	l
c0104981	obj/kernel.asm	/^c0104981:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0104984	obj/kernel.asm	/^c0104984:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104988	obj/kernel.asm	/^c0104988:	c7 44 24 08 30 7b 11 	movl   $0xc0117b30,0x8(%esp)$/;"	l
c010498f	obj/kernel.asm	/^c010498f:	c0 $/;"	l
c0104990	obj/kernel.asm	/^c0104990:	c7 44 24 04 0f 01 00 	movl   $0x10f,0x4(%esp)$/;"	l
c0104997	obj/kernel.asm	/^c0104997:	00 $/;"	l
c0104998	obj/kernel.asm	/^c0104998:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010499f	obj/kernel.asm	/^c010499f:	e8 93 c2 ff ff       	call   c0100c37 <__panic>$/;"	l
c01049a4	obj/kernel.asm	/^c01049a4:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c01049a7	obj/kernel.asm	/^c01049a7:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01049ac	obj/kernel.asm	/^c01049ac:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c01049af	obj/kernel.asm	/^c01049af:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01049b6	obj/kernel.asm	/^c01049b6:	e9 74 01 00 00       	jmp    c0104b2f <page_init+0x3d8>$/;"	l
c01049bb	obj/kernel.asm	/^c01049bb:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01049be	obj/kernel.asm	/^c01049be:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01049c1	obj/kernel.asm	/^c01049c1:	89 d0                	mov    %edx,%eax$/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01049c6	obj/kernel.asm	/^c01049c6:	01 d0                	add    %edx,%eax$/;"	l
c01049c8	obj/kernel.asm	/^c01049c8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01049cb	obj/kernel.asm	/^c01049cb:	01 c8                	add    %ecx,%eax$/;"	l
c01049cd	obj/kernel.asm	/^c01049cd:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01049d0	obj/kernel.asm	/^c01049d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01049d3	obj/kernel.asm	/^c01049d3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01049d6	obj/kernel.asm	/^c01049d6:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01049d9	obj/kernel.asm	/^c01049d9:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01049dc	obj/kernel.asm	/^c01049dc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01049df	obj/kernel.asm	/^c01049df:	89 d0                	mov    %edx,%eax$/;"	l
c01049e1	obj/kernel.asm	/^c01049e1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01049e4	obj/kernel.asm	/^c01049e4:	01 d0                	add    %edx,%eax$/;"	l
c01049e6	obj/kernel.asm	/^c01049e6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01049e9	obj/kernel.asm	/^c01049e9:	01 c8                	add    %ecx,%eax$/;"	l
c01049eb	obj/kernel.asm	/^c01049eb:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01049ee	obj/kernel.asm	/^c01049ee:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c01049f1	obj/kernel.asm	/^c01049f1:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01049f4	obj/kernel.asm	/^c01049f4:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01049f7	obj/kernel.asm	/^c01049f7:	01 c8                	add    %ecx,%eax$/;"	l
c01049f9	obj/kernel.asm	/^c01049f9:	11 da                	adc    %ebx,%edx$/;"	l
c01049fb	obj/kernel.asm	/^c01049fb:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01049fe	obj/kernel.asm	/^c01049fe:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0104a01	obj/kernel.asm	/^c0104a01:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0104a04	obj/kernel.asm	/^c0104a04:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0104a07	obj/kernel.asm	/^c0104a07:	89 d0                	mov    %edx,%eax$/;"	l
c0104a09	obj/kernel.asm	/^c0104a09:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104a0c	obj/kernel.asm	/^c0104a0c:	01 d0                	add    %edx,%eax$/;"	l
c0104a0e	obj/kernel.asm	/^c0104a0e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104a11	obj/kernel.asm	/^c0104a11:	01 c8                	add    %ecx,%eax$/;"	l
c0104a13	obj/kernel.asm	/^c0104a13:	83 c0 14             	add    $0x14,%eax$/;"	l
c0104a16	obj/kernel.asm	/^c0104a16:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a18	obj/kernel.asm	/^c0104a18:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104a1b	obj/kernel.asm	/^c0104a1b:	0f 85 0a 01 00 00    	jne    c0104b2b <page_init+0x3d4>$/;"	l
c0104a21	obj/kernel.asm	/^c0104a21:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0104a24	obj/kernel.asm	/^c0104a24:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0104a29	obj/kernel.asm	/^c0104a29:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0104a2c	obj/kernel.asm	/^c0104a2c:	72 17                	jb     c0104a45 <page_init+0x2ee>$/;"	l
c0104a2e	obj/kernel.asm	/^c0104a2e:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0104a31	obj/kernel.asm	/^c0104a31:	77 05                	ja     c0104a38 <page_init+0x2e1>$/;"	l
c0104a33	obj/kernel.asm	/^c0104a33:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0104a36	obj/kernel.asm	/^c0104a36:	76 0d                	jbe    c0104a45 <page_init+0x2ee>$/;"	l
c0104a38	obj/kernel.asm	/^c0104a38:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0104a3b	obj/kernel.asm	/^c0104a3b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0104a3e	obj/kernel.asm	/^c0104a3e:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0104a45	obj/kernel.asm	/^c0104a45:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0104a49	obj/kernel.asm	/^c0104a49:	72 1d                	jb     c0104a68 <page_init+0x311>$/;"	l
c0104a4b	obj/kernel.asm	/^c0104a4b:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0104a4f	obj/kernel.asm	/^c0104a4f:	77 09                	ja     c0104a5a <page_init+0x303>$/;"	l
c0104a51	obj/kernel.asm	/^c0104a51:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0104a58	obj/kernel.asm	/^c0104a58:	76 0e                	jbe    c0104a68 <page_init+0x311>$/;"	l
c0104a5a	obj/kernel.asm	/^c0104a5a:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0104a61	obj/kernel.asm	/^c0104a61:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0104a68	obj/kernel.asm	/^c0104a68:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0104a6b	obj/kernel.asm	/^c0104a6b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0104a6e	obj/kernel.asm	/^c0104a6e:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0104a71	obj/kernel.asm	/^c0104a71:	0f 87 b4 00 00 00    	ja     c0104b2b <page_init+0x3d4>$/;"	l
c0104a77	obj/kernel.asm	/^c0104a77:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0104a7a	obj/kernel.asm	/^c0104a7a:	72 09                	jb     c0104a85 <page_init+0x32e>$/;"	l
c0104a7c	obj/kernel.asm	/^c0104a7c:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0104a7f	obj/kernel.asm	/^c0104a7f:	0f 83 a6 00 00 00    	jae    c0104b2b <page_init+0x3d4>$/;"	l
c0104a85	obj/kernel.asm	/^c0104a85:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0104a8c	obj/kernel.asm	/^c0104a8c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0104a8f	obj/kernel.asm	/^c0104a8f:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0104a92	obj/kernel.asm	/^c0104a92:	01 d0                	add    %edx,%eax$/;"	l
c0104a94	obj/kernel.asm	/^c0104a94:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0104a97	obj/kernel.asm	/^c0104a97:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0104a9a	obj/kernel.asm	/^c0104a9a:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0104a9d	obj/kernel.asm	/^c0104a9d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0104aa2	obj/kernel.asm	/^c0104aa2:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0104aa5	obj/kernel.asm	/^c0104aa5:	89 d0                	mov    %edx,%eax$/;"	l
c0104aa7	obj/kernel.asm	/^c0104aa7:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c0104aaa	obj/kernel.asm	/^c0104aaa:	29 c2                	sub    %eax,%edx$/;"	l
c0104aac	obj/kernel.asm	/^c0104aac:	89 d0                	mov    %edx,%eax$/;"	l
c0104aae	obj/kernel.asm	/^c0104aae:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0104ab3	obj/kernel.asm	/^c0104ab3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0104ab6	obj/kernel.asm	/^c0104ab6:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0104ab9	obj/kernel.asm	/^c0104ab9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0104abc	obj/kernel.asm	/^c0104abc:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0104abf	obj/kernel.asm	/^c0104abf:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0104ac2	obj/kernel.asm	/^c0104ac2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0104ac7	obj/kernel.asm	/^c0104ac7:	89 c7                	mov    %eax,%edi$/;"	l
c0104ac9	obj/kernel.asm	/^c0104ac9:	81 e7 00 f0 ff ff    	and    $0xfffff000,%edi$/;"	l
c0104acf	obj/kernel.asm	/^c0104acf:	89 7d 80             	mov    %edi,-0x80(%ebp)$/;"	l
c0104ad2	obj/kernel.asm	/^c0104ad2:	89 d0                	mov    %edx,%eax$/;"	l
c0104ad4	obj/kernel.asm	/^c0104ad4:	83 e0 00             	and    $0x0,%eax$/;"	l
c0104ad7	obj/kernel.asm	/^c0104ad7:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0104ada	obj/kernel.asm	/^c0104ada:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0104add	obj/kernel.asm	/^c0104add:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0104ae0	obj/kernel.asm	/^c0104ae0:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0104ae3	obj/kernel.asm	/^c0104ae3:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0104ae6	obj/kernel.asm	/^c0104ae6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0104ae9	obj/kernel.asm	/^c0104ae9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0104aec	obj/kernel.asm	/^c0104aec:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0104aef	obj/kernel.asm	/^c0104aef:	77 3a                	ja     c0104b2b <page_init+0x3d4>$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0104af4	obj/kernel.asm	/^c0104af4:	72 05                	jb     c0104afb <page_init+0x3a4>$/;"	l
c0104af6	obj/kernel.asm	/^c0104af6:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0104af9	obj/kernel.asm	/^c0104af9:	73 30                	jae    c0104b2b <page_init+0x3d4>$/;"	l
c0104afb	obj/kernel.asm	/^c0104afb:	8b 4d d0             	mov    -0x30(%ebp),%ecx$/;"	l
c0104afe	obj/kernel.asm	/^c0104afe:	8b 5d d4             	mov    -0x2c(%ebp),%ebx$/;"	l
c0104b01	obj/kernel.asm	/^c0104b01:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0104b04	obj/kernel.asm	/^c0104b04:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0104b07	obj/kernel.asm	/^c0104b07:	29 c8                	sub    %ecx,%eax$/;"	l
c0104b09	obj/kernel.asm	/^c0104b09:	19 da                	sbb    %ebx,%edx$/;"	l
c0104b0b	obj/kernel.asm	/^c0104b0b:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0104b0f	obj/kernel.asm	/^c0104b0f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104b12	obj/kernel.asm	/^c0104b12:	89 c3                	mov    %eax,%ebx$/;"	l
c0104b14	obj/kernel.asm	/^c0104b14:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0104b17	obj/kernel.asm	/^c0104b17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104b1a	obj/kernel.asm	/^c0104b1a:	e8 26 f3 ff ff       	call   c0103e45 <pa2page>$/;"	l
c0104b1f	obj/kernel.asm	/^c0104b1f:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0104b23	obj/kernel.asm	/^c0104b23:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104b26	obj/kernel.asm	/^c0104b26:	e8 45 fb ff ff       	call   c0104670 <init_memmap>$/;"	l
c0104b2b	obj/kernel.asm	/^c0104b2b:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0104b2f	obj/kernel.asm	/^c0104b2f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0104b32	obj/kernel.asm	/^c0104b32:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b34	obj/kernel.asm	/^c0104b34:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0104b37	obj/kernel.asm	/^c0104b37:	0f 8f 7e fe ff ff    	jg     c01049bb <page_init+0x264>$/;"	l
c0104b3d	obj/kernel.asm	/^c0104b3d:	81 c4 9c 00 00 00    	add    $0x9c,%esp$/;"	l
c0104b43	obj/kernel.asm	/^c0104b43:	5b                   	pop    %ebx$/;"	l
c0104b44	obj/kernel.asm	/^c0104b44:	5e                   	pop    %esi$/;"	l
c0104b45	obj/kernel.asm	/^c0104b45:	5f                   	pop    %edi$/;"	l
c0104b46	obj/kernel.asm	/^c0104b46:	5d                   	pop    %ebp$/;"	l
c0104b47	obj/kernel.asm	/^c0104b47:	c3                   	ret    $/;"	l
c0104b48	obj/kernel.asm	/^c0104b48 <enable_paging>:$/;"	l
c0104b48	obj/kernel.asm	/^c0104b48:	55                   	push   %ebp$/;"	l
c0104b49	obj/kernel.asm	/^c0104b49:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b4b	obj/kernel.asm	/^c0104b4b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0104b4e	obj/kernel.asm	/^c0104b4e:	a1 74 b6 15 c0       	mov    0xc015b674,%eax$/;"	l
c0104b53	obj/kernel.asm	/^c0104b53:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0104b56	obj/kernel.asm	/^c0104b56:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0104b59	obj/kernel.asm	/^c0104b59:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0104b5c	obj/kernel.asm	/^c0104b5c:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0104b5f	obj/kernel.asm	/^c0104b5f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104b62	obj/kernel.asm	/^c0104b62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0104b68	obj/kernel.asm	/^c0104b68:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0104b6f	obj/kernel.asm	/^c0104b6f:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0104b73	obj/kernel.asm	/^c0104b73:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104b76	obj/kernel.asm	/^c0104b76:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104b79	obj/kernel.asm	/^c0104b79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b7c	obj/kernel.asm	/^c0104b7c:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0104b7f	obj/kernel.asm	/^c0104b7f:	c9                   	leave  $/;"	l
c0104b80	obj/kernel.asm	/^c0104b80:	c3                   	ret    $/;"	l
c0104b81	obj/kernel.asm	/^c0104b81 <boot_map_segment>:$/;"	l
c0104b81	obj/kernel.asm	/^c0104b81:	55                   	push   %ebp$/;"	l
c0104b82	obj/kernel.asm	/^c0104b82:	89 e5                	mov    %esp,%ebp$/;"	l
c0104b84	obj/kernel.asm	/^c0104b84:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0104b87	obj/kernel.asm	/^c0104b87:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0104b8a	obj/kernel.asm	/^c0104b8a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104b8d	obj/kernel.asm	/^c0104b8d:	31 d0                	xor    %edx,%eax$/;"	l
c0104b8f	obj/kernel.asm	/^c0104b8f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104b94	obj/kernel.asm	/^c0104b94:	85 c0                	test   %eax,%eax$/;"	l
c0104b96	obj/kernel.asm	/^c0104b96:	74 24                	je     c0104bbc <boot_map_segment+0x3b>$/;"	l
c0104b98	obj/kernel.asm	/^c0104b98:	c7 44 24 0c 62 7b 11 	movl   $0xc0117b62,0xc(%esp)$/;"	l
c0104b9f	obj/kernel.asm	/^c0104b9f:	c0 $/;"	l
c0104ba0	obj/kernel.asm	/^c0104ba0:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0104ba7	obj/kernel.asm	/^c0104ba7:	c0 $/;"	l
c0104ba8	obj/kernel.asm	/^c0104ba8:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
c0104baf	obj/kernel.asm	/^c0104baf:	00 $/;"	l
c0104bb0	obj/kernel.asm	/^c0104bb0:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104bb7	obj/kernel.asm	/^c0104bb7:	e8 7b c0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0104bbc	obj/kernel.asm	/^c0104bbc:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0104bc3	obj/kernel.asm	/^c0104bc3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104bc6	obj/kernel.asm	/^c0104bc6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104bcb	obj/kernel.asm	/^c0104bcb:	89 c2                	mov    %eax,%edx$/;"	l
c0104bcd	obj/kernel.asm	/^c0104bcd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104bd0	obj/kernel.asm	/^c0104bd0:	01 c2                	add    %eax,%edx$/;"	l
c0104bd2	obj/kernel.asm	/^c0104bd2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104bd5	obj/kernel.asm	/^c0104bd5:	01 d0                	add    %edx,%eax$/;"	l
c0104bd7	obj/kernel.asm	/^c0104bd7:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0104bda	obj/kernel.asm	/^c0104bda:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104bdd	obj/kernel.asm	/^c0104bdd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104be0	obj/kernel.asm	/^c0104be0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0104be5	obj/kernel.asm	/^c0104be5:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0104be8	obj/kernel.asm	/^c0104be8:	89 d0                	mov    %edx,%eax$/;"	l
c0104bea	obj/kernel.asm	/^c0104bea:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0104bed	obj/kernel.asm	/^c0104bed:	29 c2                	sub    %eax,%edx$/;"	l
c0104bef	obj/kernel.asm	/^c0104bef:	89 d0                	mov    %edx,%eax$/;"	l
c0104bf1	obj/kernel.asm	/^c0104bf1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104bf4	obj/kernel.asm	/^c0104bf4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104bf7	obj/kernel.asm	/^c0104bf7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104bfa	obj/kernel.asm	/^c0104bfa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104bfd	obj/kernel.asm	/^c0104bfd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104c00	obj/kernel.asm	/^c0104c00:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104c05	obj/kernel.asm	/^c0104c05:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0104c08	obj/kernel.asm	/^c0104c08:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0104c0b	obj/kernel.asm	/^c0104c0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104c0e	obj/kernel.asm	/^c0104c0e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104c11	obj/kernel.asm	/^c0104c11:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104c16	obj/kernel.asm	/^c0104c16:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c0104c19	obj/kernel.asm	/^c0104c19:	eb 6b                	jmp    c0104c86 <boot_map_segment+0x105>$/;"	l
c0104c1b	obj/kernel.asm	/^c0104c1b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0104c22	obj/kernel.asm	/^c0104c22:	00 $/;"	l
c0104c23	obj/kernel.asm	/^c0104c23:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104c26	obj/kernel.asm	/^c0104c26:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104c2a	obj/kernel.asm	/^c0104c2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104c2d	obj/kernel.asm	/^c0104c2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104c30	obj/kernel.asm	/^c0104c30:	e8 96 02 00 00       	call   c0104ecb <get_pte>$/;"	l
c0104c35	obj/kernel.asm	/^c0104c35:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104c38	obj/kernel.asm	/^c0104c38:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0104c3c	obj/kernel.asm	/^c0104c3c:	75 24                	jne    c0104c62 <boot_map_segment+0xe1>$/;"	l
c0104c3e	obj/kernel.asm	/^c0104c3e:	c7 44 24 0c 8e 7b 11 	movl   $0xc0117b8e,0xc(%esp)$/;"	l
c0104c45	obj/kernel.asm	/^c0104c45:	c0 $/;"	l
c0104c46	obj/kernel.asm	/^c0104c46:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0104c4d	obj/kernel.asm	/^c0104c4d:	c0 $/;"	l
c0104c4e	obj/kernel.asm	/^c0104c4e:	c7 44 24 04 3f 01 00 	movl   $0x13f,0x4(%esp)$/;"	l
c0104c55	obj/kernel.asm	/^c0104c55:	00 $/;"	l
c0104c56	obj/kernel.asm	/^c0104c56:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104c5d	obj/kernel.asm	/^c0104c5d:	e8 d5 bf ff ff       	call   c0100c37 <__panic>$/;"	l
c0104c62	obj/kernel.asm	/^c0104c62:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0104c65	obj/kernel.asm	/^c0104c65:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0104c68	obj/kernel.asm	/^c0104c68:	09 d0                	or     %edx,%eax$/;"	l
c0104c6a	obj/kernel.asm	/^c0104c6a:	83 c8 01             	or     $0x1,%eax$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	89 c2                	mov    %eax,%edx$/;"	l
c0104c6f	obj/kernel.asm	/^c0104c6f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104c72	obj/kernel.asm	/^c0104c72:	89 10                	mov    %edx,(%eax)$/;"	l
c0104c74	obj/kernel.asm	/^c0104c74:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0104c78	obj/kernel.asm	/^c0104c78:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0104c7f	obj/kernel.asm	/^c0104c7f:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0104c86	obj/kernel.asm	/^c0104c86:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104c8a	obj/kernel.asm	/^c0104c8a:	75 8f                	jne    c0104c1b <boot_map_segment+0x9a>$/;"	l
c0104c8c	obj/kernel.asm	/^c0104c8c:	c9                   	leave  $/;"	l
c0104c8d	obj/kernel.asm	/^c0104c8d:	c3                   	ret    $/;"	l
c0104c8e	obj/kernel.asm	/^c0104c8e <boot_alloc_page>:$/;"	l
c0104c8e	obj/kernel.asm	/^c0104c8e:	55                   	push   %ebp$/;"	l
c0104c8f	obj/kernel.asm	/^c0104c8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104c91	obj/kernel.asm	/^c0104c91:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104c94	obj/kernel.asm	/^c0104c94:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104c9b	obj/kernel.asm	/^c0104c9b:	e8 ef f9 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0104ca0	obj/kernel.asm	/^c0104ca0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104ca3	obj/kernel.asm	/^c0104ca3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104ca7	obj/kernel.asm	/^c0104ca7:	75 1c                	jne    c0104cc5 <boot_alloc_page+0x37>$/;"	l
c0104ca9	obj/kernel.asm	/^c0104ca9:	c7 44 24 08 9b 7b 11 	movl   $0xc0117b9b,0x8(%esp)$/;"	l
c0104cb0	obj/kernel.asm	/^c0104cb0:	c0 $/;"	l
c0104cb1	obj/kernel.asm	/^c0104cb1:	c7 44 24 04 4b 01 00 	movl   $0x14b,0x4(%esp)$/;"	l
c0104cb8	obj/kernel.asm	/^c0104cb8:	00 $/;"	l
c0104cb9	obj/kernel.asm	/^c0104cb9:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104cc0	obj/kernel.asm	/^c0104cc0:	e8 72 bf ff ff       	call   c0100c37 <__panic>$/;"	l
c0104cc5	obj/kernel.asm	/^c0104cc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cc8	obj/kernel.asm	/^c0104cc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104ccb	obj/kernel.asm	/^c0104ccb:	e8 c4 f1 ff ff       	call   c0103e94 <page2kva>$/;"	l
c0104cd0	obj/kernel.asm	/^c0104cd0:	c9                   	leave  $/;"	l
c0104cd1	obj/kernel.asm	/^c0104cd1:	c3                   	ret    $/;"	l
c0104cd2	obj/kernel.asm	/^c0104cd2 <pmm_init>:$/;"	l
c0104cd2	obj/kernel.asm	/^c0104cd2:	55                   	push   %ebp$/;"	l
c0104cd3	obj/kernel.asm	/^c0104cd3:	89 e5                	mov    %esp,%ebp$/;"	l
c0104cd5	obj/kernel.asm	/^c0104cd5:	53                   	push   %ebx$/;"	l
c0104cd6	obj/kernel.asm	/^c0104cd6:	83 ec 34             	sub    $0x34,%esp$/;"	l
c0104cd9	obj/kernel.asm	/^c0104cd9:	e8 5f f9 ff ff       	call   c010463d <init_pmm_manager>$/;"	l
c0104cde	obj/kernel.asm	/^c0104cde:	c7 45 f4 20 6a 15 c0 	movl   $0xc0156a20,-0xc(%ebp)$/;"	l
c0104ce5	obj/kernel.asm	/^c0104ce5:	e8 6d fa ff ff       	call   c0104757 <page_init>$/;"	l
c0104cea	obj/kernel.asm	/^c0104cea:	e8 1a 0a 00 00       	call   c0105709 <check_alloc_page>$/;"	l
c0104cef	obj/kernel.asm	/^c0104cef:	e8 9a ff ff ff       	call   c0104c8e <boot_alloc_page>$/;"	l
c0104cf4	obj/kernel.asm	/^c0104cf4:	a3 c4 7e 15 c0       	mov    %eax,0xc0157ec4$/;"	l
c0104cf9	obj/kernel.asm	/^c0104cf9:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104cfe	obj/kernel.asm	/^c0104cfe:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0104d05	obj/kernel.asm	/^c0104d05:	00 $/;"	l
c0104d06	obj/kernel.asm	/^c0104d06:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104d0d	obj/kernel.asm	/^c0104d0d:	00 $/;"	l
c0104d0e	obj/kernel.asm	/^c0104d0e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104d11	obj/kernel.asm	/^c0104d11:	e8 7a 19 01 00       	call   c0116690 <memset>$/;"	l
c0104d16	obj/kernel.asm	/^c0104d16:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104d1b	obj/kernel.asm	/^c0104d1b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d1e	obj/kernel.asm	/^c0104d1e:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0104d25	obj/kernel.asm	/^c0104d25:	77 23                	ja     c0104d4a <pmm_init+0x78>$/;"	l
c0104d27	obj/kernel.asm	/^c0104d27:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d2a	obj/kernel.asm	/^c0104d2a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104d2e	obj/kernel.asm	/^c0104d2e:	c7 44 24 08 30 7b 11 	movl   $0xc0117b30,0x8(%esp)$/;"	l
c0104d35	obj/kernel.asm	/^c0104d35:	c0 $/;"	l
c0104d36	obj/kernel.asm	/^c0104d36:	c7 44 24 04 67 01 00 	movl   $0x167,0x4(%esp)$/;"	l
c0104d3d	obj/kernel.asm	/^c0104d3d:	00 $/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104d45	obj/kernel.asm	/^c0104d45:	e8 ed be ff ff       	call   c0100c37 <__panic>$/;"	l
c0104d4a	obj/kernel.asm	/^c0104d4a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d4d	obj/kernel.asm	/^c0104d4d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104d52	obj/kernel.asm	/^c0104d52:	a3 74 b6 15 c0       	mov    %eax,0xc015b674$/;"	l
c0104d57	obj/kernel.asm	/^c0104d57:	e8 cb 09 00 00       	call   c0105727 <check_pgdir>$/;"	l
c0104d5c	obj/kernel.asm	/^c0104d5c:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104d61	obj/kernel.asm	/^c0104d61:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0104d67	obj/kernel.asm	/^c0104d67:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104d6c	obj/kernel.asm	/^c0104d6c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104d6f	obj/kernel.asm	/^c0104d6f:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c0104d76	obj/kernel.asm	/^c0104d76:	77 23                	ja     c0104d9b <pmm_init+0xc9>$/;"	l
c0104d78	obj/kernel.asm	/^c0104d78:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104d7b	obj/kernel.asm	/^c0104d7b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104d7f	obj/kernel.asm	/^c0104d7f:	c7 44 24 08 30 7b 11 	movl   $0xc0117b30,0x8(%esp)$/;"	l
c0104d86	obj/kernel.asm	/^c0104d86:	c0 $/;"	l
c0104d87	obj/kernel.asm	/^c0104d87:	c7 44 24 04 6f 01 00 	movl   $0x16f,0x4(%esp)$/;"	l
c0104d8e	obj/kernel.asm	/^c0104d8e:	00 $/;"	l
c0104d8f	obj/kernel.asm	/^c0104d8f:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	e8 9c be ff ff       	call   c0100c37 <__panic>$/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104d9e	obj/kernel.asm	/^c0104d9e:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104da3	obj/kernel.asm	/^c0104da3:	83 c8 03             	or     $0x3,%eax$/;"	l
c0104da6	obj/kernel.asm	/^c0104da6:	89 02                	mov    %eax,(%edx)$/;"	l
c0104da8	obj/kernel.asm	/^c0104da8:	c7 45 f4 20 6a 15 c0 	movl   $0xc0156a20,-0xc(%ebp)$/;"	l
c0104daf	obj/kernel.asm	/^c0104daf:	eb 42                	jmp    c0104df3 <pmm_init+0x121>$/;"	l
c0104db1	obj/kernel.asm	/^c0104db1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104db4	obj/kernel.asm	/^c0104db4:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0104db7	obj/kernel.asm	/^c0104db7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dba	obj/kernel.asm	/^c0104dba:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0104dbd	obj/kernel.asm	/^c0104dbd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dc0	obj/kernel.asm	/^c0104dc0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0104dc3	obj/kernel.asm	/^c0104dc3:	89 d3                	mov    %edx,%ebx$/;"	l
c0104dc5	obj/kernel.asm	/^c0104dc5:	29 c3                	sub    %eax,%ebx$/;"	l
c0104dc7	obj/kernel.asm	/^c0104dc7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104dca	obj/kernel.asm	/^c0104dca:	8b 00                	mov    (%eax),%eax$/;"	l
c0104dcc	obj/kernel.asm	/^c0104dcc:	89 c2                	mov    %eax,%edx$/;"	l
c0104dce	obj/kernel.asm	/^c0104dce:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104dd3	obj/kernel.asm	/^c0104dd3:	c7 44 24 10 02 00 00 	movl   $0x2,0x10(%esp)$/;"	l
c0104dda	obj/kernel.asm	/^c0104dda:	00 $/;"	l
c0104ddb	obj/kernel.asm	/^c0104ddb:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c0104ddf	obj/kernel.asm	/^c0104ddf:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0104de3	obj/kernel.asm	/^c0104de3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0104de7	obj/kernel.asm	/^c0104de7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104dea	obj/kernel.asm	/^c0104dea:	e8 92 fd ff ff       	call   c0104b81 <boot_map_segment>$/;"	l
c0104def	obj/kernel.asm	/^c0104def:	83 45 f4 10          	addl   $0x10,-0xc(%ebp)$/;"	l
c0104df3	obj/kernel.asm	/^c0104df3:	81 7d f4 40 6a 15 c0 	cmpl   $0xc0156a40,-0xc(%ebp)$/;"	l
c0104dfa	obj/kernel.asm	/^c0104dfa:	72 b5                	jb     c0104db1 <pmm_init+0xdf>$/;"	l
c0104dfc	obj/kernel.asm	/^c0104dfc:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104e01	obj/kernel.asm	/^c0104e01:	8b 15 c4 7e 15 c0    	mov    0xc0157ec4,%edx$/;"	l
c0104e07	obj/kernel.asm	/^c0104e07:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	89 10                	mov    %edx,(%eax)$/;"	l
c0104e0f	obj/kernel.asm	/^c0104e0f:	e8 34 fd ff ff       	call   c0104b48 <enable_paging>$/;"	l
c0104e14	obj/kernel.asm	/^c0104e14:	e8 e9 f1 ff ff       	call   c0104002 <gdt_init>$/;"	l
c0104e19	obj/kernel.asm	/^c0104e19:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104e1e	obj/kernel.asm	/^c0104e1e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104e24	obj/kernel.asm	/^c0104e24:	e8 99 0f 00 00       	call   c0105dc2 <check_boot_pgdir>$/;"	l
c0104e29	obj/kernel.asm	/^c0104e29:	e8 26 14 00 00       	call   c0106254 <print_pgdir>$/;"	l
c0104e2e	obj/kernel.asm	/^c0104e2e:	e8 75 32 00 00       	call   c01080a8 <kmalloc_init>$/;"	l
c0104e33	obj/kernel.asm	/^c0104e33:	a1 74 b6 15 c0       	mov    0xc015b674,%eax$/;"	l
c0104e38	obj/kernel.asm	/^c0104e38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104e3c	obj/kernel.asm	/^c0104e3c:	c7 04 24 b4 7b 11 c0 	movl   $0xc0117bb4,(%esp)$/;"	l
c0104e43	obj/kernel.asm	/^c0104e43:	e8 98 bc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0104e48	obj/kernel.asm	/^c0104e48:	83 c4 34             	add    $0x34,%esp$/;"	l
c0104e4b	obj/kernel.asm	/^c0104e4b:	5b                   	pop    %ebx$/;"	l
c0104e4c	obj/kernel.asm	/^c0104e4c:	5d                   	pop    %ebp$/;"	l
c0104e4d	obj/kernel.asm	/^c0104e4d:	c3                   	ret    $/;"	l
c0104e4e	obj/kernel.asm	/^c0104e4e <pmm_init2>:$/;"	l
c0104e4e	obj/kernel.asm	/^c0104e4e:	55                   	push   %ebp$/;"	l
c0104e4f	obj/kernel.asm	/^c0104e4f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104e51	obj/kernel.asm	/^c0104e51:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104e54	obj/kernel.asm	/^c0104e54:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104e59	obj/kernel.asm	/^c0104e59:	8b 15 c4 7e 15 c0    	mov    0xc0157ec4,%edx$/;"	l
c0104e5f	obj/kernel.asm	/^c0104e5f:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c0104e65	obj/kernel.asm	/^c0104e65:	89 10                	mov    %edx,(%eax)$/;"	l
c0104e67	obj/kernel.asm	/^c0104e67:	a1 74 b6 15 c0       	mov    0xc015b674,%eax$/;"	l
c0104e6c	obj/kernel.asm	/^c0104e6c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0104e70	obj/kernel.asm	/^c0104e70:	c7 04 24 b4 7b 11 c0 	movl   $0xc0117bb4,(%esp)$/;"	l
c0104e77	obj/kernel.asm	/^c0104e77:	e8 64 bc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0104e7c	obj/kernel.asm	/^c0104e7c:	a1 74 b6 15 c0       	mov    0xc015b674,%eax$/;"	l
c0104e81	obj/kernel.asm	/^c0104e81:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104e84	obj/kernel.asm	/^c0104e84:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104e87	obj/kernel.asm	/^c0104e87:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0104e8a	obj/kernel.asm	/^c0104e8a:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0104e8d	obj/kernel.asm	/^c0104e8d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104e90	obj/kernel.asm	/^c0104e90:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104e93	obj/kernel.asm	/^c0104e93:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104e96	obj/kernel.asm	/^c0104e96:	81 4d f4 2f 00 05 80 	orl    $0x8005002f,-0xc(%ebp)$/;"	l
c0104e9d	obj/kernel.asm	/^c0104e9d:	83 65 f4 f3          	andl   $0xfffffff3,-0xc(%ebp)$/;"	l
c0104ea1	obj/kernel.asm	/^c0104ea1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ea4	obj/kernel.asm	/^c0104ea4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104ea7	obj/kernel.asm	/^c0104ea7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104eaa	obj/kernel.asm	/^c0104eaa:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0104ead	obj/kernel.asm	/^c0104ead:	c7 04 24 c4 7b 11 c0 	movl   $0xc0117bc4,(%esp)$/;"	l
c0104eb4	obj/kernel.asm	/^c0104eb4:	e8 27 bc ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0104eb9	obj/kernel.asm	/^c0104eb9:	e8 44 f1 ff ff       	call   c0104002 <gdt_init>$/;"	l
c0104ebe	obj/kernel.asm	/^c0104ebe:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0104ec3	obj/kernel.asm	/^c0104ec3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104ec9	obj/kernel.asm	/^c0104ec9:	c9                   	leave  $/;"	l
c0104eca	obj/kernel.asm	/^c0104eca:	c3                   	ret    $/;"	l
c0104ecb	obj/kernel.asm	/^c0104ecb <get_pte>:$/;"	l
c0104ecb	obj/kernel.asm	/^c0104ecb:	55                   	push   %ebp$/;"	l
c0104ecc	obj/kernel.asm	/^c0104ecc:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ece	obj/kernel.asm	/^c0104ece:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0104ed1	obj/kernel.asm	/^c0104ed1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104ed4	obj/kernel.asm	/^c0104ed4:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104ed7	obj/kernel.asm	/^c0104ed7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104ede	obj/kernel.asm	/^c0104ede:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ee1	obj/kernel.asm	/^c0104ee1:	01 d0                	add    %edx,%eax$/;"	l
c0104ee3	obj/kernel.asm	/^c0104ee3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104ee6	obj/kernel.asm	/^c0104ee6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104ee9	obj/kernel.asm	/^c0104ee9:	8b 00                	mov    (%eax),%eax$/;"	l
c0104eeb	obj/kernel.asm	/^c0104eeb:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104eee	obj/kernel.asm	/^c0104eee:	85 c0                	test   %eax,%eax$/;"	l
c0104ef0	obj/kernel.asm	/^c0104ef0:	0f 85 af 00 00 00    	jne    c0104fa5 <get_pte+0xda>$/;"	l
c0104ef6	obj/kernel.asm	/^c0104ef6:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104efa	obj/kernel.asm	/^c0104efa:	74 15                	je     c0104f11 <get_pte+0x46>$/;"	l
c0104efc	obj/kernel.asm	/^c0104efc:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0104f03	obj/kernel.asm	/^c0104f03:	e8 87 f7 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104f0b	obj/kernel.asm	/^c0104f0b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104f0f	obj/kernel.asm	/^c0104f0f:	75 0a                	jne    c0104f1b <get_pte+0x50>$/;"	l
c0104f11	obj/kernel.asm	/^c0104f11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104f16	obj/kernel.asm	/^c0104f16:	e9 e6 00 00 00       	jmp    c0105001 <get_pte+0x136>$/;"	l
c0104f1b	obj/kernel.asm	/^c0104f1b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0104f22	obj/kernel.asm	/^c0104f22:	00 $/;"	l
c0104f23	obj/kernel.asm	/^c0104f23:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104f26	obj/kernel.asm	/^c0104f26:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f29	obj/kernel.asm	/^c0104f29:	e8 1a f0 ff ff       	call   c0103f48 <set_page_ref>$/;"	l
c0104f2e	obj/kernel.asm	/^c0104f2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104f31	obj/kernel.asm	/^c0104f31:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f34	obj/kernel.asm	/^c0104f34:	e8 f6 ee ff ff       	call   c0103e2f <page2pa>$/;"	l
c0104f39	obj/kernel.asm	/^c0104f39:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104f3c	obj/kernel.asm	/^c0104f3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104f3f	obj/kernel.asm	/^c0104f3f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104f42	obj/kernel.asm	/^c0104f42:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104f45	obj/kernel.asm	/^c0104f45:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104f48	obj/kernel.asm	/^c0104f48:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104f4b	obj/kernel.asm	/^c0104f4b:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0104f50	obj/kernel.asm	/^c0104f50:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0104f53	obj/kernel.asm	/^c0104f53:	72 23                	jb     c0104f78 <get_pte+0xad>$/;"	l
c0104f55	obj/kernel.asm	/^c0104f55:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104f58	obj/kernel.asm	/^c0104f58:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104f5c	obj/kernel.asm	/^c0104f5c:	c7 44 24 08 80 7a 11 	movl   $0xc0117a80,0x8(%esp)$/;"	l
c0104f63	obj/kernel.asm	/^c0104f63:	c0 $/;"	l
c0104f64	obj/kernel.asm	/^c0104f64:	c7 44 24 04 dd 01 00 	movl   $0x1dd,0x4(%esp)$/;"	l
c0104f6b	obj/kernel.asm	/^c0104f6b:	00 $/;"	l
c0104f6c	obj/kernel.asm	/^c0104f6c:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104f73	obj/kernel.asm	/^c0104f73:	e8 bf bc ff ff       	call   c0100c37 <__panic>$/;"	l
c0104f78	obj/kernel.asm	/^c0104f78:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104f7b	obj/kernel.asm	/^c0104f7b:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104f80	obj/kernel.asm	/^c0104f80:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0104f87	obj/kernel.asm	/^c0104f87:	00 $/;"	l
c0104f88	obj/kernel.asm	/^c0104f88:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0104f8f	obj/kernel.asm	/^c0104f8f:	00 $/;"	l
c0104f90	obj/kernel.asm	/^c0104f90:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0104f93	obj/kernel.asm	/^c0104f93:	e8 f8 16 01 00       	call   c0116690 <memset>$/;"	l
c0104f98	obj/kernel.asm	/^c0104f98:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104f9b	obj/kernel.asm	/^c0104f9b:	83 c8 07             	or     $0x7,%eax$/;"	l
c0104f9e	obj/kernel.asm	/^c0104f9e:	89 c2                	mov    %eax,%edx$/;"	l
c0104fa0	obj/kernel.asm	/^c0104fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104fa3	obj/kernel.asm	/^c0104fa3:	89 10                	mov    %edx,(%eax)$/;"	l
c0104fa5	obj/kernel.asm	/^c0104fa5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104fa8	obj/kernel.asm	/^c0104fa8:	8b 00                	mov    (%eax),%eax$/;"	l
c0104faa	obj/kernel.asm	/^c0104faa:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104faf	obj/kernel.asm	/^c0104faf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104fb2	obj/kernel.asm	/^c0104fb2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104fb5	obj/kernel.asm	/^c0104fb5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104fb8	obj/kernel.asm	/^c0104fb8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0104fbb	obj/kernel.asm	/^c0104fbb:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0104fc0	obj/kernel.asm	/^c0104fc0:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0104fc3	obj/kernel.asm	/^c0104fc3:	72 23                	jb     c0104fe8 <get_pte+0x11d>$/;"	l
c0104fc5	obj/kernel.asm	/^c0104fc5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104fc8	obj/kernel.asm	/^c0104fc8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0104fcc	obj/kernel.asm	/^c0104fcc:	c7 44 24 08 80 7a 11 	movl   $0xc0117a80,0x8(%esp)$/;"	l
c0104fd3	obj/kernel.asm	/^c0104fd3:	c0 $/;"	l
c0104fd4	obj/kernel.asm	/^c0104fd4:	c7 44 24 04 e0 01 00 	movl   $0x1e0,0x4(%esp)$/;"	l
c0104fdb	obj/kernel.asm	/^c0104fdb:	00 $/;"	l
c0104fdc	obj/kernel.asm	/^c0104fdc:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0104fe3	obj/kernel.asm	/^c0104fe3:	e8 4f bc ff ff       	call   c0100c37 <__panic>$/;"	l
c0104fe8	obj/kernel.asm	/^c0104fe8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0104feb	obj/kernel.asm	/^c0104feb:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104ff0	obj/kernel.asm	/^c0104ff0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104ff3	obj/kernel.asm	/^c0104ff3:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0104ff6	obj/kernel.asm	/^c0104ff6:	81 e2 ff 03 00 00    	and    $0x3ff,%edx$/;"	l
c0104ffc	obj/kernel.asm	/^c0104ffc:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0104fff	obj/kernel.asm	/^c0104fff:	01 d0                	add    %edx,%eax$/;"	l
c0105001	obj/kernel.asm	/^c0105001:	c9                   	leave  $/;"	l
c0105002	obj/kernel.asm	/^c0105002:	c3                   	ret    $/;"	l
c0105003	obj/kernel.asm	/^c0105003 <get_page>:$/;"	l
c0105003	obj/kernel.asm	/^c0105003:	55                   	push   %ebp$/;"	l
c0105004	obj/kernel.asm	/^c0105004:	89 e5                	mov    %esp,%ebp$/;"	l
c0105006	obj/kernel.asm	/^c0105006:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105009	obj/kernel.asm	/^c0105009:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105010	obj/kernel.asm	/^c0105010:	00 $/;"	l
c0105011	obj/kernel.asm	/^c0105011:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105014	obj/kernel.asm	/^c0105014:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105018	obj/kernel.asm	/^c0105018:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010501b	obj/kernel.asm	/^c010501b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010501e	obj/kernel.asm	/^c010501e:	e8 a8 fe ff ff       	call   c0104ecb <get_pte>$/;"	l
c0105023	obj/kernel.asm	/^c0105023:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105026	obj/kernel.asm	/^c0105026:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010502a	obj/kernel.asm	/^c010502a:	74 08                	je     c0105034 <get_page+0x31>$/;"	l
c010502c	obj/kernel.asm	/^c010502c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010502f	obj/kernel.asm	/^c010502f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105032	obj/kernel.asm	/^c0105032:	89 10                	mov    %edx,(%eax)$/;"	l
c0105034	obj/kernel.asm	/^c0105034:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105038	obj/kernel.asm	/^c0105038:	74 1b                	je     c0105055 <get_page+0x52>$/;"	l
c010503a	obj/kernel.asm	/^c010503a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010503d	obj/kernel.asm	/^c010503d:	8b 00                	mov    (%eax),%eax$/;"	l
c010503f	obj/kernel.asm	/^c010503f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105042	obj/kernel.asm	/^c0105042:	85 c0                	test   %eax,%eax$/;"	l
c0105044	obj/kernel.asm	/^c0105044:	74 0f                	je     c0105055 <get_page+0x52>$/;"	l
c0105046	obj/kernel.asm	/^c0105046:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105049	obj/kernel.asm	/^c0105049:	8b 00                	mov    (%eax),%eax$/;"	l
c010504b	obj/kernel.asm	/^c010504b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010504e	obj/kernel.asm	/^c010504e:	e8 f2 ed ff ff       	call   c0103e45 <pa2page>$/;"	l
c0105053	obj/kernel.asm	/^c0105053:	eb 05                	jmp    c010505a <get_page+0x57>$/;"	l
c0105055	obj/kernel.asm	/^c0105055:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010505a	obj/kernel.asm	/^c010505a:	c9                   	leave  $/;"	l
c010505b	obj/kernel.asm	/^c010505b:	c3                   	ret    $/;"	l
c010505c	obj/kernel.asm	/^c010505c <page_remove_pte>:$/;"	l
c010505c	obj/kernel.asm	/^c010505c:	55                   	push   %ebp$/;"	l
c010505d	obj/kernel.asm	/^c010505d:	89 e5                	mov    %esp,%ebp$/;"	l
c010505f	obj/kernel.asm	/^c010505f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105062	obj/kernel.asm	/^c0105062:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105065	obj/kernel.asm	/^c0105065:	8b 00                	mov    (%eax),%eax$/;"	l
c0105067	obj/kernel.asm	/^c0105067:	83 e0 01             	and    $0x1,%eax$/;"	l
c010506a	obj/kernel.asm	/^c010506a:	85 c0                	test   %eax,%eax$/;"	l
c010506c	obj/kernel.asm	/^c010506c:	74 4d                	je     c01050bb <page_remove_pte+0x5f>$/;"	l
c010506e	obj/kernel.asm	/^c010506e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105071	obj/kernel.asm	/^c0105071:	8b 00                	mov    (%eax),%eax$/;"	l
c0105073	obj/kernel.asm	/^c0105073:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105076	obj/kernel.asm	/^c0105076:	e8 6d ee ff ff       	call   c0103ee8 <pte2page>$/;"	l
c010507b	obj/kernel.asm	/^c010507b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010507e	obj/kernel.asm	/^c010507e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105081	obj/kernel.asm	/^c0105081:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105084	obj/kernel.asm	/^c0105084:	e8 e3 ee ff ff       	call   c0103f6c <page_ref_dec>$/;"	l
c0105089	obj/kernel.asm	/^c0105089:	85 c0                	test   %eax,%eax$/;"	l
c010508b	obj/kernel.asm	/^c010508b:	75 13                	jne    c01050a0 <page_remove_pte+0x44>$/;"	l
c010508d	obj/kernel.asm	/^c010508d:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105094	obj/kernel.asm	/^c0105094:	00 $/;"	l
c0105095	obj/kernel.asm	/^c0105095:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105098	obj/kernel.asm	/^c0105098:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010509b	obj/kernel.asm	/^c010509b:	e8 5a f6 ff ff       	call   c01046fa <free_pages>$/;"	l
c01050a0	obj/kernel.asm	/^c01050a0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050a3	obj/kernel.asm	/^c01050a3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01050a9	obj/kernel.asm	/^c01050a9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01050ac	obj/kernel.asm	/^c01050ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01050b0	obj/kernel.asm	/^c01050b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01050b3	obj/kernel.asm	/^c01050b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01050b6	obj/kernel.asm	/^c01050b6:	e8 1d 05 00 00       	call   c01055d8 <tlb_invalidate>$/;"	l
c01050bb	obj/kernel.asm	/^c01050bb:	c9                   	leave  $/;"	l
c01050bc	obj/kernel.asm	/^c01050bc:	c3                   	ret    $/;"	l
c01050bd	obj/kernel.asm	/^c01050bd <unmap_range>:$/;"	l
c01050bd	obj/kernel.asm	/^c01050bd:	55                   	push   %ebp$/;"	l
c01050be	obj/kernel.asm	/^c01050be:	89 e5                	mov    %esp,%ebp$/;"	l
c01050c0	obj/kernel.asm	/^c01050c0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01050c3	obj/kernel.asm	/^c01050c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01050c6	obj/kernel.asm	/^c01050c6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01050cb	obj/kernel.asm	/^c01050cb:	85 c0                	test   %eax,%eax$/;"	l
c01050cd	obj/kernel.asm	/^c01050cd:	75 0c                	jne    c01050db <unmap_range+0x1e>$/;"	l
c01050cf	obj/kernel.asm	/^c01050cf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050d2	obj/kernel.asm	/^c01050d2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01050d7	obj/kernel.asm	/^c01050d7:	85 c0                	test   %eax,%eax$/;"	l
c01050d9	obj/kernel.asm	/^c01050d9:	74 24                	je     c01050ff <unmap_range+0x42>$/;"	l
c01050db	obj/kernel.asm	/^c01050db:	c7 44 24 0c cc 7b 11 	movl   $0xc0117bcc,0xc(%esp)$/;"	l
c01050e2	obj/kernel.asm	/^c01050e2:	c0 $/;"	l
c01050e3	obj/kernel.asm	/^c01050e3:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01050ea	obj/kernel.asm	/^c01050ea:	c0 $/;"	l
c01050eb	obj/kernel.asm	/^c01050eb:	c7 44 24 04 1a 02 00 	movl   $0x21a,0x4(%esp)$/;"	l
c01050f2	obj/kernel.asm	/^c01050f2:	00 $/;"	l
c01050f3	obj/kernel.asm	/^c01050f3:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01050fa	obj/kernel.asm	/^c01050fa:	e8 38 bb ff ff       	call   c0100c37 <__panic>$/;"	l
c01050ff	obj/kernel.asm	/^c01050ff:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0105106	obj/kernel.asm	/^c0105106:	76 11                	jbe    c0105119 <unmap_range+0x5c>$/;"	l
c0105108	obj/kernel.asm	/^c0105108:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010510b	obj/kernel.asm	/^c010510b:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	73 09                	jae    c0105119 <unmap_range+0x5c>$/;"	l
c0105110	obj/kernel.asm	/^c0105110:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0105117	obj/kernel.asm	/^c0105117:	76 24                	jbe    c010513d <unmap_range+0x80>$/;"	l
c0105119	obj/kernel.asm	/^c0105119:	c7 44 24 0c f5 7b 11 	movl   $0xc0117bf5,0xc(%esp)$/;"	l
c0105120	obj/kernel.asm	/^c0105120:	c0 $/;"	l
c0105121	obj/kernel.asm	/^c0105121:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105128	obj/kernel.asm	/^c0105128:	c0 $/;"	l
c0105129	obj/kernel.asm	/^c0105129:	c7 44 24 04 1b 02 00 	movl   $0x21b,0x4(%esp)$/;"	l
c0105130	obj/kernel.asm	/^c0105130:	00 $/;"	l
c0105131	obj/kernel.asm	/^c0105131:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105138	obj/kernel.asm	/^c0105138:	e8 fa ba ff ff       	call   c0100c37 <__panic>$/;"	l
c010513d	obj/kernel.asm	/^c010513d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105144	obj/kernel.asm	/^c0105144:	00 $/;"	l
c0105145	obj/kernel.asm	/^c0105145:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105148	obj/kernel.asm	/^c0105148:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010514c	obj/kernel.asm	/^c010514c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010514f	obj/kernel.asm	/^c010514f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105152	obj/kernel.asm	/^c0105152:	e8 74 fd ff ff       	call   c0104ecb <get_pte>$/;"	l
c0105157	obj/kernel.asm	/^c0105157:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010515e	obj/kernel.asm	/^c010515e:	75 18                	jne    c0105178 <unmap_range+0xbb>$/;"	l
c0105160	obj/kernel.asm	/^c0105160:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105163	obj/kernel.asm	/^c0105163:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105168	obj/kernel.asm	/^c0105168:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010516b	obj/kernel.asm	/^c010516b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010516e	obj/kernel.asm	/^c010516e:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0105173	obj/kernel.asm	/^c0105173:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105176	obj/kernel.asm	/^c0105176:	eb 29                	jmp    c01051a1 <unmap_range+0xe4>$/;"	l
c0105178	obj/kernel.asm	/^c0105178:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010517b	obj/kernel.asm	/^c010517b:	8b 00                	mov    (%eax),%eax$/;"	l
c010517d	obj/kernel.asm	/^c010517d:	85 c0                	test   %eax,%eax$/;"	l
c010517f	obj/kernel.asm	/^c010517f:	74 19                	je     c010519a <unmap_range+0xdd>$/;"	l
c0105181	obj/kernel.asm	/^c0105181:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105184	obj/kernel.asm	/^c0105184:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105188	obj/kernel.asm	/^c0105188:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010518b	obj/kernel.asm	/^c010518b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010518f	obj/kernel.asm	/^c010518f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105192	obj/kernel.asm	/^c0105192:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105195	obj/kernel.asm	/^c0105195:	e8 c2 fe ff ff       	call   c010505c <page_remove_pte>$/;"	l
c010519a	obj/kernel.asm	/^c010519a:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01051a1	obj/kernel.asm	/^c01051a1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01051a5	obj/kernel.asm	/^c01051a5:	74 08                	je     c01051af <unmap_range+0xf2>$/;"	l
c01051a7	obj/kernel.asm	/^c01051a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01051aa	obj/kernel.asm	/^c01051aa:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01051ad	obj/kernel.asm	/^c01051ad:	72 8e                	jb     c010513d <unmap_range+0x80>$/;"	l
c01051af	obj/kernel.asm	/^c01051af:	c9                   	leave  $/;"	l
c01051b0	obj/kernel.asm	/^c01051b0:	c3                   	ret    $/;"	l
c01051b1	obj/kernel.asm	/^c01051b1 <exit_range>:$/;"	l
c01051b1	obj/kernel.asm	/^c01051b1:	55                   	push   %ebp$/;"	l
c01051b2	obj/kernel.asm	/^c01051b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01051b4	obj/kernel.asm	/^c01051b4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01051b7	obj/kernel.asm	/^c01051b7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01051ba	obj/kernel.asm	/^c01051ba:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01051bf	obj/kernel.asm	/^c01051bf:	85 c0                	test   %eax,%eax$/;"	l
c01051c1	obj/kernel.asm	/^c01051c1:	75 0c                	jne    c01051cf <exit_range+0x1e>$/;"	l
c01051c3	obj/kernel.asm	/^c01051c3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01051c6	obj/kernel.asm	/^c01051c6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01051cb	obj/kernel.asm	/^c01051cb:	85 c0                	test   %eax,%eax$/;"	l
c01051cd	obj/kernel.asm	/^c01051cd:	74 24                	je     c01051f3 <exit_range+0x42>$/;"	l
c01051cf	obj/kernel.asm	/^c01051cf:	c7 44 24 0c cc 7b 11 	movl   $0xc0117bcc,0xc(%esp)$/;"	l
c01051d6	obj/kernel.asm	/^c01051d6:	c0 $/;"	l
c01051d7	obj/kernel.asm	/^c01051d7:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01051de	obj/kernel.asm	/^c01051de:	c0 $/;"	l
c01051df	obj/kernel.asm	/^c01051df:	c7 44 24 04 2c 02 00 	movl   $0x22c,0x4(%esp)$/;"	l
c01051e6	obj/kernel.asm	/^c01051e6:	00 $/;"	l
c01051e7	obj/kernel.asm	/^c01051e7:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01051ee	obj/kernel.asm	/^c01051ee:	e8 44 ba ff ff       	call   c0100c37 <__panic>$/;"	l
c01051f3	obj/kernel.asm	/^c01051f3:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01051fa	obj/kernel.asm	/^c01051fa:	76 11                	jbe    c010520d <exit_range+0x5c>$/;"	l
c01051fc	obj/kernel.asm	/^c01051fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01051ff	obj/kernel.asm	/^c01051ff:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105202	obj/kernel.asm	/^c0105202:	73 09                	jae    c010520d <exit_range+0x5c>$/;"	l
c0105204	obj/kernel.asm	/^c0105204:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c010520b	obj/kernel.asm	/^c010520b:	76 24                	jbe    c0105231 <exit_range+0x80>$/;"	l
c010520d	obj/kernel.asm	/^c010520d:	c7 44 24 0c f5 7b 11 	movl   $0xc0117bf5,0xc(%esp)$/;"	l
c0105214	obj/kernel.asm	/^c0105214:	c0 $/;"	l
c0105215	obj/kernel.asm	/^c0105215:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c010521c	obj/kernel.asm	/^c010521c:	c0 $/;"	l
c010521d	obj/kernel.asm	/^c010521d:	c7 44 24 04 2d 02 00 	movl   $0x22d,0x4(%esp)$/;"	l
c0105224	obj/kernel.asm	/^c0105224:	00 $/;"	l
c0105225	obj/kernel.asm	/^c0105225:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010522c	obj/kernel.asm	/^c010522c:	e8 06 ba ff ff       	call   c0100c37 <__panic>$/;"	l
c0105231	obj/kernel.asm	/^c0105231:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105234	obj/kernel.asm	/^c0105234:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105237	obj/kernel.asm	/^c0105237:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010523a	obj/kernel.asm	/^c010523a:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010523f	obj/kernel.asm	/^c010523f:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0105242	obj/kernel.asm	/^c0105242:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105245	obj/kernel.asm	/^c0105245:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0105248	obj/kernel.asm	/^c0105248:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010524b	obj/kernel.asm	/^c010524b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010524e	obj/kernel.asm	/^c010524e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105255	obj/kernel.asm	/^c0105255:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105258	obj/kernel.asm	/^c0105258:	01 d0                	add    %edx,%eax$/;"	l
c010525a	obj/kernel.asm	/^c010525a:	8b 00                	mov    (%eax),%eax$/;"	l
c010525c	obj/kernel.asm	/^c010525c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010525f	obj/kernel.asm	/^c010525f:	85 c0                	test   %eax,%eax$/;"	l
c0105261	obj/kernel.asm	/^c0105261:	74 3e                	je     c01052a1 <exit_range+0xf0>$/;"	l
c0105263	obj/kernel.asm	/^c0105263:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105266	obj/kernel.asm	/^c0105266:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105270	obj/kernel.asm	/^c0105270:	01 d0                	add    %edx,%eax$/;"	l
c0105272	obj/kernel.asm	/^c0105272:	8b 00                	mov    (%eax),%eax$/;"	l
c0105274	obj/kernel.asm	/^c0105274:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	e8 aa ec ff ff       	call   c0103f26 <pde2page>$/;"	l
c010527c	obj/kernel.asm	/^c010527c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105283	obj/kernel.asm	/^c0105283:	00 $/;"	l
c0105284	obj/kernel.asm	/^c0105284:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105287	obj/kernel.asm	/^c0105287:	e8 6e f4 ff ff       	call   c01046fa <free_pages>$/;"	l
c010528c	obj/kernel.asm	/^c010528c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010528f	obj/kernel.asm	/^c010528f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105296	obj/kernel.asm	/^c0105296:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105299	obj/kernel.asm	/^c0105299:	01 d0                	add    %edx,%eax$/;"	l
c010529b	obj/kernel.asm	/^c010529b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01052a1	obj/kernel.asm	/^c01052a1:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c01052a8	obj/kernel.asm	/^c01052a8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01052ac	obj/kernel.asm	/^c01052ac:	74 08                	je     c01052b6 <exit_range+0x105>$/;"	l
c01052ae	obj/kernel.asm	/^c01052ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01052b1	obj/kernel.asm	/^c01052b1:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01052b4	obj/kernel.asm	/^c01052b4:	72 8c                	jb     c0105242 <exit_range+0x91>$/;"	l
c01052b6	obj/kernel.asm	/^c01052b6:	c9                   	leave  $/;"	l
c01052b7	obj/kernel.asm	/^c01052b7:	c3                   	ret    $/;"	l
c01052b8	obj/kernel.asm	/^c01052b8 <copy_range>:$/;"	l
c01052b8	obj/kernel.asm	/^c01052b8:	55                   	push   %ebp$/;"	l
c01052b9	obj/kernel.asm	/^c01052b9:	89 e5                	mov    %esp,%ebp$/;"	l
c01052bb	obj/kernel.asm	/^c01052bb:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01052be	obj/kernel.asm	/^c01052be:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01052c1	obj/kernel.asm	/^c01052c1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01052c6	obj/kernel.asm	/^c01052c6:	85 c0                	test   %eax,%eax$/;"	l
c01052c8	obj/kernel.asm	/^c01052c8:	75 0c                	jne    c01052d6 <copy_range+0x1e>$/;"	l
c01052ca	obj/kernel.asm	/^c01052ca:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01052cd	obj/kernel.asm	/^c01052cd:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01052d2	obj/kernel.asm	/^c01052d2:	85 c0                	test   %eax,%eax$/;"	l
c01052d4	obj/kernel.asm	/^c01052d4:	74 24                	je     c01052fa <copy_range+0x42>$/;"	l
c01052d6	obj/kernel.asm	/^c01052d6:	c7 44 24 0c cc 7b 11 	movl   $0xc0117bcc,0xc(%esp)$/;"	l
c01052dd	obj/kernel.asm	/^c01052dd:	c0 $/;"	l
c01052de	obj/kernel.asm	/^c01052de:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01052e5	obj/kernel.asm	/^c01052e5:	c0 $/;"	l
c01052e6	obj/kernel.asm	/^c01052e6:	c7 44 24 04 42 02 00 	movl   $0x242,0x4(%esp)$/;"	l
c01052ed	obj/kernel.asm	/^c01052ed:	00 $/;"	l
c01052ee	obj/kernel.asm	/^c01052ee:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01052f5	obj/kernel.asm	/^c01052f5:	e8 3d b9 ff ff       	call   c0100c37 <__panic>$/;"	l
c01052fa	obj/kernel.asm	/^c01052fa:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c0105301	obj/kernel.asm	/^c0105301:	76 11                	jbe    c0105314 <copy_range+0x5c>$/;"	l
c0105303	obj/kernel.asm	/^c0105303:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105306	obj/kernel.asm	/^c0105306:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0105309	obj/kernel.asm	/^c0105309:	73 09                	jae    c0105314 <copy_range+0x5c>$/;"	l
c010530b	obj/kernel.asm	/^c010530b:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0105312	obj/kernel.asm	/^c0105312:	76 24                	jbe    c0105338 <copy_range+0x80>$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	c7 44 24 0c f5 7b 11 	movl   $0xc0117bf5,0xc(%esp)$/;"	l
c010531b	obj/kernel.asm	/^c010531b:	c0 $/;"	l
c010531c	obj/kernel.asm	/^c010531c:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105323	obj/kernel.asm	/^c0105323:	c0 $/;"	l
c0105324	obj/kernel.asm	/^c0105324:	c7 44 24 04 43 02 00 	movl   $0x243,0x4(%esp)$/;"	l
c010532b	obj/kernel.asm	/^c010532b:	00 $/;"	l
c010532c	obj/kernel.asm	/^c010532c:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105333	obj/kernel.asm	/^c0105333:	e8 ff b8 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010533f	obj/kernel.asm	/^c010533f:	00 $/;"	l
c0105340	obj/kernel.asm	/^c0105340:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105343	obj/kernel.asm	/^c0105343:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010534a	obj/kernel.asm	/^c010534a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010534d	obj/kernel.asm	/^c010534d:	e8 79 fb ff ff       	call   c0104ecb <get_pte>$/;"	l
c0105352	obj/kernel.asm	/^c0105352:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105355	obj/kernel.asm	/^c0105355:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105359	obj/kernel.asm	/^c0105359:	75 1b                	jne    c0105376 <copy_range+0xbe>$/;"	l
c010535b	obj/kernel.asm	/^c010535b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010535e	obj/kernel.asm	/^c010535e:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0105363	obj/kernel.asm	/^c0105363:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105366	obj/kernel.asm	/^c0105366:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105369	obj/kernel.asm	/^c0105369:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010536e	obj/kernel.asm	/^c010536e:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0105371	obj/kernel.asm	/^c0105371:	e9 4c 01 00 00       	jmp    c01054c2 <copy_range+0x20a>$/;"	l
c0105376	obj/kernel.asm	/^c0105376:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105379	obj/kernel.asm	/^c0105379:	8b 00                	mov    (%eax),%eax$/;"	l
c010537b	obj/kernel.asm	/^c010537b:	83 e0 01             	and    $0x1,%eax$/;"	l
c010537e	obj/kernel.asm	/^c010537e:	85 c0                	test   %eax,%eax$/;"	l
c0105380	obj/kernel.asm	/^c0105380:	0f 84 35 01 00 00    	je     c01054bb <copy_range+0x203>$/;"	l
c0105386	obj/kernel.asm	/^c0105386:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c010538d	obj/kernel.asm	/^c010538d:	00 $/;"	l
c010538e	obj/kernel.asm	/^c010538e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105391	obj/kernel.asm	/^c0105391:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105395	obj/kernel.asm	/^c0105395:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105398	obj/kernel.asm	/^c0105398:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010539b	obj/kernel.asm	/^c010539b:	e8 2b fb ff ff       	call   c0104ecb <get_pte>$/;"	l
c01053a0	obj/kernel.asm	/^c01053a0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01053a3	obj/kernel.asm	/^c01053a3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01053a7	obj/kernel.asm	/^c01053a7:	75 0a                	jne    c01053b3 <copy_range+0xfb>$/;"	l
c01053a9	obj/kernel.asm	/^c01053a9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01053ae	obj/kernel.asm	/^c01053ae:	e9 26 01 00 00       	jmp    c01054d9 <copy_range+0x221>$/;"	l
c01053b3	obj/kernel.asm	/^c01053b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053b6	obj/kernel.asm	/^c01053b6:	8b 00                	mov    (%eax),%eax$/;"	l
c01053b8	obj/kernel.asm	/^c01053b8:	83 e0 07             	and    $0x7,%eax$/;"	l
c01053bb	obj/kernel.asm	/^c01053bb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01053be	obj/kernel.asm	/^c01053be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053c1	obj/kernel.asm	/^c01053c1:	8b 00                	mov    (%eax),%eax$/;"	l
c01053c3	obj/kernel.asm	/^c01053c3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01053c6	obj/kernel.asm	/^c01053c6:	e8 1d eb ff ff       	call   c0103ee8 <pte2page>$/;"	l
c01053cb	obj/kernel.asm	/^c01053cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01053ce	obj/kernel.asm	/^c01053ce:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01053d5	obj/kernel.asm	/^c01053d5:	e8 b5 f2 ff ff       	call   c010468f <alloc_pages>$/;"	l
c01053da	obj/kernel.asm	/^c01053da:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01053dd	obj/kernel.asm	/^c01053dd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01053e1	obj/kernel.asm	/^c01053e1:	75 24                	jne    c0105407 <copy_range+0x14f>$/;"	l
c01053e3	obj/kernel.asm	/^c01053e3:	c7 44 24 0c 0d 7c 11 	movl   $0xc0117c0d,0xc(%esp)$/;"	l
c01053ea	obj/kernel.asm	/^c01053ea:	c0 $/;"	l
c01053eb	obj/kernel.asm	/^c01053eb:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01053f2	obj/kernel.asm	/^c01053f2:	c0 $/;"	l
c01053f3	obj/kernel.asm	/^c01053f3:	c7 44 24 04 56 02 00 	movl   $0x256,0x4(%esp)$/;"	l
c01053fa	obj/kernel.asm	/^c01053fa:	00 $/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105402	obj/kernel.asm	/^c0105402:	e8 30 b8 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105407	obj/kernel.asm	/^c0105407:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010540b	obj/kernel.asm	/^c010540b:	75 24                	jne    c0105431 <copy_range+0x179>$/;"	l
c010540d	obj/kernel.asm	/^c010540d:	c7 44 24 0c 18 7c 11 	movl   $0xc0117c18,0xc(%esp)$/;"	l
c0105414	obj/kernel.asm	/^c0105414:	c0 $/;"	l
c0105415	obj/kernel.asm	/^c0105415:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c010541c	obj/kernel.asm	/^c010541c:	c0 $/;"	l
c010541d	obj/kernel.asm	/^c010541d:	c7 44 24 04 57 02 00 	movl   $0x257,0x4(%esp)$/;"	l
c0105424	obj/kernel.asm	/^c0105424:	00 $/;"	l
c0105425	obj/kernel.asm	/^c0105425:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010542c	obj/kernel.asm	/^c010542c:	e8 06 b8 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105431	obj/kernel.asm	/^c0105431:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105438	obj/kernel.asm	/^c0105438:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010543b	obj/kernel.asm	/^c010543b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	e8 51 ea ff ff       	call   c0103e94 <page2kva>$/;"	l
c0105443	obj/kernel.asm	/^c0105443:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105446	obj/kernel.asm	/^c0105446:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105449	obj/kernel.asm	/^c0105449:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010544c	obj/kernel.asm	/^c010544c:	e8 43 ea ff ff       	call   c0103e94 <page2kva>$/;"	l
c0105451	obj/kernel.asm	/^c0105451:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105454	obj/kernel.asm	/^c0105454:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010545b	obj/kernel.asm	/^c010545b:	00 $/;"	l
c010545c	obj/kernel.asm	/^c010545c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010545f	obj/kernel.asm	/^c010545f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105463	obj/kernel.asm	/^c0105463:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105466	obj/kernel.asm	/^c0105466:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105469	obj/kernel.asm	/^c0105469:	e8 04 13 01 00       	call   c0116772 <memcpy>$/;"	l
c010546e	obj/kernel.asm	/^c010546e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105471	obj/kernel.asm	/^c0105471:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105475	obj/kernel.asm	/^c0105475:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105478	obj/kernel.asm	/^c0105478:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010547c	obj/kernel.asm	/^c010547c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010547f	obj/kernel.asm	/^c010547f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105483	obj/kernel.asm	/^c0105483:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105486	obj/kernel.asm	/^c0105486:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105489	obj/kernel.asm	/^c0105489:	e8 91 00 00 00       	call   c010551f <page_insert>$/;"	l
c010548e	obj/kernel.asm	/^c010548e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105491	obj/kernel.asm	/^c0105491:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105495	obj/kernel.asm	/^c0105495:	74 24                	je     c01054bb <copy_range+0x203>$/;"	l
c0105497	obj/kernel.asm	/^c0105497:	c7 44 24 0c 24 7c 11 	movl   $0xc0117c24,0xc(%esp)$/;"	l
c010549e	obj/kernel.asm	/^c010549e:	c0 $/;"	l
c010549f	obj/kernel.asm	/^c010549f:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01054a6	obj/kernel.asm	/^c01054a6:	c0 $/;"	l
c01054a7	obj/kernel.asm	/^c01054a7:	c7 44 24 04 6d 02 00 	movl   $0x26d,0x4(%esp)$/;"	l
c01054ae	obj/kernel.asm	/^c01054ae:	00 $/;"	l
c01054af	obj/kernel.asm	/^c01054af:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01054b6	obj/kernel.asm	/^c01054b6:	e8 7c b7 ff ff       	call   c0100c37 <__panic>$/;"	l
c01054bb	obj/kernel.asm	/^c01054bb:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c01054c2	obj/kernel.asm	/^c01054c2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01054c6	obj/kernel.asm	/^c01054c6:	74 0c                	je     c01054d4 <copy_range+0x21c>$/;"	l
c01054c8	obj/kernel.asm	/^c01054c8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01054cb	obj/kernel.asm	/^c01054cb:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01054ce	obj/kernel.asm	/^c01054ce:	0f 82 64 fe ff ff    	jb     c0105338 <copy_range+0x80>$/;"	l
c01054d4	obj/kernel.asm	/^c01054d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01054d9	obj/kernel.asm	/^c01054d9:	c9                   	leave  $/;"	l
c01054da	obj/kernel.asm	/^c01054da:	c3                   	ret    $/;"	l
c01054db	obj/kernel.asm	/^c01054db <page_remove>:$/;"	l
c01054db	obj/kernel.asm	/^c01054db:	55                   	push   %ebp$/;"	l
c01054dc	obj/kernel.asm	/^c01054dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01054de	obj/kernel.asm	/^c01054de:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01054e1	obj/kernel.asm	/^c01054e1:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01054e8	obj/kernel.asm	/^c01054e8:	00 $/;"	l
c01054e9	obj/kernel.asm	/^c01054e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054ec	obj/kernel.asm	/^c01054ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054f3	obj/kernel.asm	/^c01054f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01054f6	obj/kernel.asm	/^c01054f6:	e8 d0 f9 ff ff       	call   c0104ecb <get_pte>$/;"	l
c01054fb	obj/kernel.asm	/^c01054fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054fe	obj/kernel.asm	/^c01054fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105502	obj/kernel.asm	/^c0105502:	74 19                	je     c010551d <page_remove+0x42>$/;"	l
c0105504	obj/kernel.asm	/^c0105504:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105507	obj/kernel.asm	/^c0105507:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010550b	obj/kernel.asm	/^c010550b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010550e	obj/kernel.asm	/^c010550e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105512	obj/kernel.asm	/^c0105512:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105515	obj/kernel.asm	/^c0105515:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105518	obj/kernel.asm	/^c0105518:	e8 3f fb ff ff       	call   c010505c <page_remove_pte>$/;"	l
c010551d	obj/kernel.asm	/^c010551d:	c9                   	leave  $/;"	l
c010551e	obj/kernel.asm	/^c010551e:	c3                   	ret    $/;"	l
c010551f	obj/kernel.asm	/^c010551f <page_insert>:$/;"	l
c010551f	obj/kernel.asm	/^c010551f:	55                   	push   %ebp$/;"	l
c0105520	obj/kernel.asm	/^c0105520:	89 e5                	mov    %esp,%ebp$/;"	l
c0105522	obj/kernel.asm	/^c0105522:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105525	obj/kernel.asm	/^c0105525:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c010552c	obj/kernel.asm	/^c010552c:	00 $/;"	l
c010552d	obj/kernel.asm	/^c010552d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105530	obj/kernel.asm	/^c0105530:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105534	obj/kernel.asm	/^c0105534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105537	obj/kernel.asm	/^c0105537:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010553a	obj/kernel.asm	/^c010553a:	e8 8c f9 ff ff       	call   c0104ecb <get_pte>$/;"	l
c010553f	obj/kernel.asm	/^c010553f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105542	obj/kernel.asm	/^c0105542:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105546	obj/kernel.asm	/^c0105546:	75 0a                	jne    c0105552 <page_insert+0x33>$/;"	l
c0105548	obj/kernel.asm	/^c0105548:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010554d	obj/kernel.asm	/^c010554d:	e9 84 00 00 00       	jmp    c01055d6 <page_insert+0xb7>$/;"	l
c0105552	obj/kernel.asm	/^c0105552:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105555	obj/kernel.asm	/^c0105555:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105558	obj/kernel.asm	/^c0105558:	e8 f8 e9 ff ff       	call   c0103f55 <page_ref_inc>$/;"	l
c010555d	obj/kernel.asm	/^c010555d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105560	obj/kernel.asm	/^c0105560:	8b 00                	mov    (%eax),%eax$/;"	l
c0105562	obj/kernel.asm	/^c0105562:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105565	obj/kernel.asm	/^c0105565:	85 c0                	test   %eax,%eax$/;"	l
c0105567	obj/kernel.asm	/^c0105567:	74 3e                	je     c01055a7 <page_insert+0x88>$/;"	l
c0105569	obj/kernel.asm	/^c0105569:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010556c	obj/kernel.asm	/^c010556c:	8b 00                	mov    (%eax),%eax$/;"	l
c010556e	obj/kernel.asm	/^c010556e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105571	obj/kernel.asm	/^c0105571:	e8 72 e9 ff ff       	call   c0103ee8 <pte2page>$/;"	l
c0105576	obj/kernel.asm	/^c0105576:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105579	obj/kernel.asm	/^c0105579:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	75 0d                	jne    c010558e <page_insert+0x6f>$/;"	l
c0105581	obj/kernel.asm	/^c0105581:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105584	obj/kernel.asm	/^c0105584:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105587	obj/kernel.asm	/^c0105587:	e8 e0 e9 ff ff       	call   c0103f6c <page_ref_dec>$/;"	l
c010558c	obj/kernel.asm	/^c010558c:	eb 19                	jmp    c01055a7 <page_insert+0x88>$/;"	l
c010558e	obj/kernel.asm	/^c010558e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105591	obj/kernel.asm	/^c0105591:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105595	obj/kernel.asm	/^c0105595:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105598	obj/kernel.asm	/^c0105598:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010559c	obj/kernel.asm	/^c010559c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010559f	obj/kernel.asm	/^c010559f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01055a2	obj/kernel.asm	/^c01055a2:	e8 b5 fa ff ff       	call   c010505c <page_remove_pte>$/;"	l
c01055a7	obj/kernel.asm	/^c01055a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01055aa	obj/kernel.asm	/^c01055aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01055ad	obj/kernel.asm	/^c01055ad:	e8 7d e8 ff ff       	call   c0103e2f <page2pa>$/;"	l
c01055b2	obj/kernel.asm	/^c01055b2:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	83 c8 01             	or     $0x1,%eax$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	89 c2                	mov    %eax,%edx$/;"	l
c01055ba	obj/kernel.asm	/^c01055ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01055bd	obj/kernel.asm	/^c01055bd:	89 10                	mov    %edx,(%eax)$/;"	l
c01055bf	obj/kernel.asm	/^c01055bf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01055c2	obj/kernel.asm	/^c01055c2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01055c6	obj/kernel.asm	/^c01055c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055c9	obj/kernel.asm	/^c01055c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01055cc	obj/kernel.asm	/^c01055cc:	e8 07 00 00 00       	call   c01055d8 <tlb_invalidate>$/;"	l
c01055d1	obj/kernel.asm	/^c01055d1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01055d6	obj/kernel.asm	/^c01055d6:	c9                   	leave  $/;"	l
c01055d7	obj/kernel.asm	/^c01055d7:	c3                   	ret    $/;"	l
c01055d8	obj/kernel.asm	/^c01055d8 <tlb_invalidate>:$/;"	l
c01055d8	obj/kernel.asm	/^c01055d8:	55                   	push   %ebp$/;"	l
c01055d9	obj/kernel.asm	/^c01055d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01055db	obj/kernel.asm	/^c01055db:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01055de	obj/kernel.asm	/^c01055de:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c01055e1	obj/kernel.asm	/^c01055e1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01055e4	obj/kernel.asm	/^c01055e4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01055e7	obj/kernel.asm	/^c01055e7:	89 c2                	mov    %eax,%edx$/;"	l
c01055e9	obj/kernel.asm	/^c01055e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055ec	obj/kernel.asm	/^c01055ec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01055ef	obj/kernel.asm	/^c01055ef:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c01055f6	obj/kernel.asm	/^c01055f6:	77 23                	ja     c010561b <tlb_invalidate+0x43>$/;"	l
c01055f8	obj/kernel.asm	/^c01055f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01055fb	obj/kernel.asm	/^c01055fb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01055ff	obj/kernel.asm	/^c01055ff:	c7 44 24 08 30 7b 11 	movl   $0xc0117b30,0x8(%esp)$/;"	l
c0105606	obj/kernel.asm	/^c0105606:	c0 $/;"	l
c0105607	obj/kernel.asm	/^c0105607:	c7 44 24 04 9e 02 00 	movl   $0x29e,0x4(%esp)$/;"	l
c010560e	obj/kernel.asm	/^c010560e:	00 $/;"	l
c010560f	obj/kernel.asm	/^c010560f:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105616	obj/kernel.asm	/^c0105616:	e8 1c b6 ff ff       	call   c0100c37 <__panic>$/;"	l
c010561b	obj/kernel.asm	/^c010561b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010561e	obj/kernel.asm	/^c010561e:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105623	obj/kernel.asm	/^c0105623:	39 c2                	cmp    %eax,%edx$/;"	l
c0105625	obj/kernel.asm	/^c0105625:	75 0c                	jne    c0105633 <tlb_invalidate+0x5b>$/;"	l
c0105627	obj/kernel.asm	/^c0105627:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010562a	obj/kernel.asm	/^c010562a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010562d	obj/kernel.asm	/^c010562d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105630	obj/kernel.asm	/^c0105630:	0f 01 38             	invlpg (%eax)$/;"	l
c0105633	obj/kernel.asm	/^c0105633:	c9                   	leave  $/;"	l
c0105634	obj/kernel.asm	/^c0105634:	c3                   	ret    $/;"	l
c0105635	obj/kernel.asm	/^c0105635 <pgdir_alloc_page>:$/;"	l
c0105635	obj/kernel.asm	/^c0105635:	55                   	push   %ebp$/;"	l
c0105636	obj/kernel.asm	/^c0105636:	89 e5                	mov    %esp,%ebp$/;"	l
c0105638	obj/kernel.asm	/^c0105638:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010563b	obj/kernel.asm	/^c010563b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105642	obj/kernel.asm	/^c0105642:	e8 48 f0 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0105647	obj/kernel.asm	/^c0105647:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010564a	obj/kernel.asm	/^c010564a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010564e	obj/kernel.asm	/^c010564e:	0f 84 b0 00 00 00    	je     c0105704 <pgdir_alloc_page+0xcf>$/;"	l
c0105654	obj/kernel.asm	/^c0105654:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105657	obj/kernel.asm	/^c0105657:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010565b	obj/kernel.asm	/^c010565b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010565e	obj/kernel.asm	/^c010565e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0105662	obj/kernel.asm	/^c0105662:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105665	obj/kernel.asm	/^c0105665:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0105669	obj/kernel.asm	/^c0105669:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010566c	obj/kernel.asm	/^c010566c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010566f	obj/kernel.asm	/^c010566f:	e8 ab fe ff ff       	call   c010551f <page_insert>$/;"	l
c0105674	obj/kernel.asm	/^c0105674:	85 c0                	test   %eax,%eax$/;"	l
c0105676	obj/kernel.asm	/^c0105676:	74 1a                	je     c0105692 <pgdir_alloc_page+0x5d>$/;"	l
c0105678	obj/kernel.asm	/^c0105678:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010567f	obj/kernel.asm	/^c010567f:	00 $/;"	l
c0105680	obj/kernel.asm	/^c0105680:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105683	obj/kernel.asm	/^c0105683:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105686	obj/kernel.asm	/^c0105686:	e8 6f f0 ff ff       	call   c01046fa <free_pages>$/;"	l
c010568b	obj/kernel.asm	/^c010568b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105690	obj/kernel.asm	/^c0105690:	eb 75                	jmp    c0105707 <pgdir_alloc_page+0xd2>$/;"	l
c0105692	obj/kernel.asm	/^c0105692:	a1 54 7f 15 c0       	mov    0xc0157f54,%eax$/;"	l
c0105697	obj/kernel.asm	/^c0105697:	85 c0                	test   %eax,%eax$/;"	l
c0105699	obj/kernel.asm	/^c0105699:	74 69                	je     c0105704 <pgdir_alloc_page+0xcf>$/;"	l
c010569b	obj/kernel.asm	/^c010569b:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c01056a0	obj/kernel.asm	/^c01056a0:	85 c0                	test   %eax,%eax$/;"	l
c01056a2	obj/kernel.asm	/^c01056a2:	74 60                	je     c0105704 <pgdir_alloc_page+0xcf>$/;"	l
c01056a4	obj/kernel.asm	/^c01056a4:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c01056a9	obj/kernel.asm	/^c01056a9:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01056b0	obj/kernel.asm	/^c01056b0:	00 $/;"	l
c01056b1	obj/kernel.asm	/^c01056b1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01056b4	obj/kernel.asm	/^c01056b4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01056b8	obj/kernel.asm	/^c01056b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01056bb	obj/kernel.asm	/^c01056bb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01056bf	obj/kernel.asm	/^c01056bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01056c2	obj/kernel.asm	/^c01056c2:	e8 c5 2d 00 00       	call   c010848c <swap_map_swappable>$/;"	l
c01056c7	obj/kernel.asm	/^c01056c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01056ca	obj/kernel.asm	/^c01056ca:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01056cd	obj/kernel.asm	/^c01056cd:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c01056d0	obj/kernel.asm	/^c01056d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01056d3	obj/kernel.asm	/^c01056d3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01056d6	obj/kernel.asm	/^c01056d6:	e8 63 e8 ff ff       	call   c0103f3e <page_ref>$/;"	l
c01056db	obj/kernel.asm	/^c01056db:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01056de	obj/kernel.asm	/^c01056de:	74 24                	je     c0105704 <pgdir_alloc_page+0xcf>$/;"	l
c01056e0	obj/kernel.asm	/^c01056e0:	c7 44 24 0c 2d 7c 11 	movl   $0xc0117c2d,0xc(%esp)$/;"	l
c01056e7	obj/kernel.asm	/^c01056e7:	c0 $/;"	l
c01056e8	obj/kernel.asm	/^c01056e8:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01056ef	obj/kernel.asm	/^c01056ef:	c0 $/;"	l
c01056f0	obj/kernel.asm	/^c01056f0:	c7 44 24 04 b2 02 00 	movl   $0x2b2,0x4(%esp)$/;"	l
c01056f7	obj/kernel.asm	/^c01056f7:	00 $/;"	l
c01056f8	obj/kernel.asm	/^c01056f8:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01056ff	obj/kernel.asm	/^c01056ff:	e8 33 b5 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105704	obj/kernel.asm	/^c0105704:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105707	obj/kernel.asm	/^c0105707:	c9                   	leave  $/;"	l
c0105708	obj/kernel.asm	/^c0105708:	c3                   	ret    $/;"	l
c0105709	obj/kernel.asm	/^c0105709 <check_alloc_page>:$/;"	l
c0105709	obj/kernel.asm	/^c0105709:	55                   	push   %ebp$/;"	l
c010570a	obj/kernel.asm	/^c010570a:	89 e5                	mov    %esp,%ebp$/;"	l
c010570c	obj/kernel.asm	/^c010570c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010570f	obj/kernel.asm	/^c010570f:	a1 70 b6 15 c0       	mov    0xc015b670,%eax$/;"	l
c0105714	obj/kernel.asm	/^c0105714:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0105717	obj/kernel.asm	/^c0105717:	ff d0                	call   *%eax$/;"	l
c0105719	obj/kernel.asm	/^c0105719:	c7 04 24 44 7c 11 c0 	movl   $0xc0117c44,(%esp)$/;"	l
c0105720	obj/kernel.asm	/^c0105720:	e8 bb b3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0105725	obj/kernel.asm	/^c0105725:	c9                   	leave  $/;"	l
c0105726	obj/kernel.asm	/^c0105726:	c3                   	ret    $/;"	l
c0105727	obj/kernel.asm	/^c0105727 <check_pgdir>:$/;"	l
c0105727	obj/kernel.asm	/^c0105727:	55                   	push   %ebp$/;"	l
c0105728	obj/kernel.asm	/^c0105728:	89 e5                	mov    %esp,%ebp$/;"	l
c010572a	obj/kernel.asm	/^c010572a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010572d	obj/kernel.asm	/^c010572d:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0105732	obj/kernel.asm	/^c0105732:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c0105737	obj/kernel.asm	/^c0105737:	76 24                	jbe    c010575d <check_pgdir+0x36>$/;"	l
c0105739	obj/kernel.asm	/^c0105739:	c7 44 24 0c 63 7c 11 	movl   $0xc0117c63,0xc(%esp)$/;"	l
c0105740	obj/kernel.asm	/^c0105740:	c0 $/;"	l
c0105741	obj/kernel.asm	/^c0105741:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105748	obj/kernel.asm	/^c0105748:	c0 $/;"	l
c0105749	obj/kernel.asm	/^c0105749:	c7 44 24 04 ca 02 00 	movl   $0x2ca,0x4(%esp)$/;"	l
c0105750	obj/kernel.asm	/^c0105750:	00 $/;"	l
c0105751	obj/kernel.asm	/^c0105751:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105758	obj/kernel.asm	/^c0105758:	e8 da b4 ff ff       	call   c0100c37 <__panic>$/;"	l
c010575d	obj/kernel.asm	/^c010575d:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105762	obj/kernel.asm	/^c0105762:	85 c0                	test   %eax,%eax$/;"	l
c0105764	obj/kernel.asm	/^c0105764:	74 0e                	je     c0105774 <check_pgdir+0x4d>$/;"	l
c0105766	obj/kernel.asm	/^c0105766:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c010576b	obj/kernel.asm	/^c010576b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0105770	obj/kernel.asm	/^c0105770:	85 c0                	test   %eax,%eax$/;"	l
c0105772	obj/kernel.asm	/^c0105772:	74 24                	je     c0105798 <check_pgdir+0x71>$/;"	l
c0105774	obj/kernel.asm	/^c0105774:	c7 44 24 0c 80 7c 11 	movl   $0xc0117c80,0xc(%esp)$/;"	l
c010577b	obj/kernel.asm	/^c010577b:	c0 $/;"	l
c010577c	obj/kernel.asm	/^c010577c:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105783	obj/kernel.asm	/^c0105783:	c0 $/;"	l
c0105784	obj/kernel.asm	/^c0105784:	c7 44 24 04 cb 02 00 	movl   $0x2cb,0x4(%esp)$/;"	l
c010578b	obj/kernel.asm	/^c010578b:	00 $/;"	l
c010578c	obj/kernel.asm	/^c010578c:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105793	obj/kernel.asm	/^c0105793:	e8 9f b4 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105798	obj/kernel.asm	/^c0105798:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c010579d	obj/kernel.asm	/^c010579d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01057a4	obj/kernel.asm	/^c01057a4:	00 $/;"	l
c01057a5	obj/kernel.asm	/^c01057a5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01057ac	obj/kernel.asm	/^c01057ac:	00 $/;"	l
c01057ad	obj/kernel.asm	/^c01057ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01057b0	obj/kernel.asm	/^c01057b0:	e8 4e f8 ff ff       	call   c0105003 <get_page>$/;"	l
c01057b5	obj/kernel.asm	/^c01057b5:	85 c0                	test   %eax,%eax$/;"	l
c01057b7	obj/kernel.asm	/^c01057b7:	74 24                	je     c01057dd <check_pgdir+0xb6>$/;"	l
c01057b9	obj/kernel.asm	/^c01057b9:	c7 44 24 0c b8 7c 11 	movl   $0xc0117cb8,0xc(%esp)$/;"	l
c01057c0	obj/kernel.asm	/^c01057c0:	c0 $/;"	l
c01057c1	obj/kernel.asm	/^c01057c1:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01057c8	obj/kernel.asm	/^c01057c8:	c0 $/;"	l
c01057c9	obj/kernel.asm	/^c01057c9:	c7 44 24 04 cc 02 00 	movl   $0x2cc,0x4(%esp)$/;"	l
c01057d0	obj/kernel.asm	/^c01057d0:	00 $/;"	l
c01057d1	obj/kernel.asm	/^c01057d1:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01057d8	obj/kernel.asm	/^c01057d8:	e8 5a b4 ff ff       	call   c0100c37 <__panic>$/;"	l
c01057dd	obj/kernel.asm	/^c01057dd:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01057e4	obj/kernel.asm	/^c01057e4:	e8 a6 ee ff ff       	call   c010468f <alloc_pages>$/;"	l
c01057e9	obj/kernel.asm	/^c01057e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057ec	obj/kernel.asm	/^c01057ec:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c01057f1	obj/kernel.asm	/^c01057f1:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01057f8	obj/kernel.asm	/^c01057f8:	00 $/;"	l
c01057f9	obj/kernel.asm	/^c01057f9:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105800	obj/kernel.asm	/^c0105800:	00 $/;"	l
c0105801	obj/kernel.asm	/^c0105801:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105804	obj/kernel.asm	/^c0105804:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105808	obj/kernel.asm	/^c0105808:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010580b	obj/kernel.asm	/^c010580b:	e8 0f fd ff ff       	call   c010551f <page_insert>$/;"	l
c0105810	obj/kernel.asm	/^c0105810:	85 c0                	test   %eax,%eax$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	74 24                	je     c0105838 <check_pgdir+0x111>$/;"	l
c0105814	obj/kernel.asm	/^c0105814:	c7 44 24 0c e0 7c 11 	movl   $0xc0117ce0,0xc(%esp)$/;"	l
c010581b	obj/kernel.asm	/^c010581b:	c0 $/;"	l
c010581c	obj/kernel.asm	/^c010581c:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105823	obj/kernel.asm	/^c0105823:	c0 $/;"	l
c0105824	obj/kernel.asm	/^c0105824:	c7 44 24 04 d0 02 00 	movl   $0x2d0,0x4(%esp)$/;"	l
c010582b	obj/kernel.asm	/^c010582b:	00 $/;"	l
c010582c	obj/kernel.asm	/^c010582c:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105833	obj/kernel.asm	/^c0105833:	e8 ff b3 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105838	obj/kernel.asm	/^c0105838:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c010583d	obj/kernel.asm	/^c010583d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105844	obj/kernel.asm	/^c0105844:	00 $/;"	l
c0105845	obj/kernel.asm	/^c0105845:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010584c	obj/kernel.asm	/^c010584c:	00 $/;"	l
c010584d	obj/kernel.asm	/^c010584d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105850	obj/kernel.asm	/^c0105850:	e8 76 f6 ff ff       	call   c0104ecb <get_pte>$/;"	l
c0105855	obj/kernel.asm	/^c0105855:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105858	obj/kernel.asm	/^c0105858:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010585c	obj/kernel.asm	/^c010585c:	75 24                	jne    c0105882 <check_pgdir+0x15b>$/;"	l
c010585e	obj/kernel.asm	/^c010585e:	c7 44 24 0c 0c 7d 11 	movl   $0xc0117d0c,0xc(%esp)$/;"	l
c0105865	obj/kernel.asm	/^c0105865:	c0 $/;"	l
c0105866	obj/kernel.asm	/^c0105866:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c010586d	obj/kernel.asm	/^c010586d:	c0 $/;"	l
c010586e	obj/kernel.asm	/^c010586e:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
c0105875	obj/kernel.asm	/^c0105875:	00 $/;"	l
c0105876	obj/kernel.asm	/^c0105876:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010587d	obj/kernel.asm	/^c010587d:	e8 b5 b3 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105882	obj/kernel.asm	/^c0105882:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105885	obj/kernel.asm	/^c0105885:	8b 00                	mov    (%eax),%eax$/;"	l
c0105887	obj/kernel.asm	/^c0105887:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010588a	obj/kernel.asm	/^c010588a:	e8 b6 e5 ff ff       	call   c0103e45 <pa2page>$/;"	l
c010588f	obj/kernel.asm	/^c010588f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105892	obj/kernel.asm	/^c0105892:	74 24                	je     c01058b8 <check_pgdir+0x191>$/;"	l
c0105894	obj/kernel.asm	/^c0105894:	c7 44 24 0c 39 7d 11 	movl   $0xc0117d39,0xc(%esp)$/;"	l
c010589b	obj/kernel.asm	/^c010589b:	c0 $/;"	l
c010589c	obj/kernel.asm	/^c010589c:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01058a3	obj/kernel.asm	/^c01058a3:	c0 $/;"	l
c01058a4	obj/kernel.asm	/^c01058a4:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
c01058ab	obj/kernel.asm	/^c01058ab:	00 $/;"	l
c01058ac	obj/kernel.asm	/^c01058ac:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01058b3	obj/kernel.asm	/^c01058b3:	e8 7f b3 ff ff       	call   c0100c37 <__panic>$/;"	l
c01058b8	obj/kernel.asm	/^c01058b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058bb	obj/kernel.asm	/^c01058bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01058be	obj/kernel.asm	/^c01058be:	e8 7b e6 ff ff       	call   c0103f3e <page_ref>$/;"	l
c01058c3	obj/kernel.asm	/^c01058c3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01058c6	obj/kernel.asm	/^c01058c6:	74 24                	je     c01058ec <check_pgdir+0x1c5>$/;"	l
c01058c8	obj/kernel.asm	/^c01058c8:	c7 44 24 0c 4e 7d 11 	movl   $0xc0117d4e,0xc(%esp)$/;"	l
c01058cf	obj/kernel.asm	/^c01058cf:	c0 $/;"	l
c01058d0	obj/kernel.asm	/^c01058d0:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01058d7	obj/kernel.asm	/^c01058d7:	c0 $/;"	l
c01058d8	obj/kernel.asm	/^c01058d8:	c7 44 24 04 d5 02 00 	movl   $0x2d5,0x4(%esp)$/;"	l
c01058df	obj/kernel.asm	/^c01058df:	00 $/;"	l
c01058e0	obj/kernel.asm	/^c01058e0:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01058e7	obj/kernel.asm	/^c01058e7:	e8 4b b3 ff ff       	call   c0100c37 <__panic>$/;"	l
c01058ec	obj/kernel.asm	/^c01058ec:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c01058f1	obj/kernel.asm	/^c01058f1:	8b 00                	mov    (%eax),%eax$/;"	l
c01058f3	obj/kernel.asm	/^c01058f3:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01058f8	obj/kernel.asm	/^c01058f8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01058fb	obj/kernel.asm	/^c01058fb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01058fe	obj/kernel.asm	/^c01058fe:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105901	obj/kernel.asm	/^c0105901:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105904	obj/kernel.asm	/^c0105904:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0105909	obj/kernel.asm	/^c0105909:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010590c	obj/kernel.asm	/^c010590c:	72 23                	jb     c0105931 <check_pgdir+0x20a>$/;"	l
c010590e	obj/kernel.asm	/^c010590e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105911	obj/kernel.asm	/^c0105911:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105915	obj/kernel.asm	/^c0105915:	c7 44 24 08 80 7a 11 	movl   $0xc0117a80,0x8(%esp)$/;"	l
c010591c	obj/kernel.asm	/^c010591c:	c0 $/;"	l
c010591d	obj/kernel.asm	/^c010591d:	c7 44 24 04 d7 02 00 	movl   $0x2d7,0x4(%esp)$/;"	l
c0105924	obj/kernel.asm	/^c0105924:	00 $/;"	l
c0105925	obj/kernel.asm	/^c0105925:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010592c	obj/kernel.asm	/^c010592c:	e8 06 b3 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105931	obj/kernel.asm	/^c0105931:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105934	obj/kernel.asm	/^c0105934:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0105939	obj/kernel.asm	/^c0105939:	83 c0 04             	add    $0x4,%eax$/;"	l
c010593c	obj/kernel.asm	/^c010593c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010593f	obj/kernel.asm	/^c010593f:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105944	obj/kernel.asm	/^c0105944:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010594b	obj/kernel.asm	/^c010594b:	00 $/;"	l
c010594c	obj/kernel.asm	/^c010594c:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0105953	obj/kernel.asm	/^c0105953:	00 $/;"	l
c0105954	obj/kernel.asm	/^c0105954:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105957	obj/kernel.asm	/^c0105957:	e8 6f f5 ff ff       	call   c0104ecb <get_pte>$/;"	l
c010595c	obj/kernel.asm	/^c010595c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010595f	obj/kernel.asm	/^c010595f:	74 24                	je     c0105985 <check_pgdir+0x25e>$/;"	l
c0105961	obj/kernel.asm	/^c0105961:	c7 44 24 0c 60 7d 11 	movl   $0xc0117d60,0xc(%esp)$/;"	l
c0105968	obj/kernel.asm	/^c0105968:	c0 $/;"	l
c0105969	obj/kernel.asm	/^c0105969:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105970	obj/kernel.asm	/^c0105970:	c0 $/;"	l
c0105971	obj/kernel.asm	/^c0105971:	c7 44 24 04 d8 02 00 	movl   $0x2d8,0x4(%esp)$/;"	l
c0105978	obj/kernel.asm	/^c0105978:	00 $/;"	l
c0105979	obj/kernel.asm	/^c0105979:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105980	obj/kernel.asm	/^c0105980:	e8 b2 b2 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105985	obj/kernel.asm	/^c0105985:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010598c	obj/kernel.asm	/^c010598c:	e8 fe ec ff ff       	call   c010468f <alloc_pages>$/;"	l
c0105991	obj/kernel.asm	/^c0105991:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105994	obj/kernel.asm	/^c0105994:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105999	obj/kernel.asm	/^c0105999:	c7 44 24 0c 06 00 00 	movl   $0x6,0xc(%esp)$/;"	l
c01059a0	obj/kernel.asm	/^c01059a0:	00 $/;"	l
c01059a1	obj/kernel.asm	/^c01059a1:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c01059a8	obj/kernel.asm	/^c01059a8:	00 $/;"	l
c01059a9	obj/kernel.asm	/^c01059a9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01059ac	obj/kernel.asm	/^c01059ac:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059b3	obj/kernel.asm	/^c01059b3:	e8 67 fb ff ff       	call   c010551f <page_insert>$/;"	l
c01059b8	obj/kernel.asm	/^c01059b8:	85 c0                	test   %eax,%eax$/;"	l
c01059ba	obj/kernel.asm	/^c01059ba:	74 24                	je     c01059e0 <check_pgdir+0x2b9>$/;"	l
c01059bc	obj/kernel.asm	/^c01059bc:	c7 44 24 0c 88 7d 11 	movl   $0xc0117d88,0xc(%esp)$/;"	l
c01059c3	obj/kernel.asm	/^c01059c3:	c0 $/;"	l
c01059c4	obj/kernel.asm	/^c01059c4:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01059cb	obj/kernel.asm	/^c01059cb:	c0 $/;"	l
c01059cc	obj/kernel.asm	/^c01059cc:	c7 44 24 04 db 02 00 	movl   $0x2db,0x4(%esp)$/;"	l
c01059d3	obj/kernel.asm	/^c01059d3:	00 $/;"	l
c01059d4	obj/kernel.asm	/^c01059d4:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01059db	obj/kernel.asm	/^c01059db:	e8 57 b2 ff ff       	call   c0100c37 <__panic>$/;"	l
c01059e0	obj/kernel.asm	/^c01059e0:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c01059e5	obj/kernel.asm	/^c01059e5:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01059ec	obj/kernel.asm	/^c01059ec:	00 $/;"	l
c01059ed	obj/kernel.asm	/^c01059ed:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c01059f4	obj/kernel.asm	/^c01059f4:	00 $/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01059f8	obj/kernel.asm	/^c01059f8:	e8 ce f4 ff ff       	call   c0104ecb <get_pte>$/;"	l
c01059fd	obj/kernel.asm	/^c01059fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105a00	obj/kernel.asm	/^c0105a00:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105a04	obj/kernel.asm	/^c0105a04:	75 24                	jne    c0105a2a <check_pgdir+0x303>$/;"	l
c0105a06	obj/kernel.asm	/^c0105a06:	c7 44 24 0c c0 7d 11 	movl   $0xc0117dc0,0xc(%esp)$/;"	l
c0105a0d	obj/kernel.asm	/^c0105a0d:	c0 $/;"	l
c0105a0e	obj/kernel.asm	/^c0105a0e:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105a15	obj/kernel.asm	/^c0105a15:	c0 $/;"	l
c0105a16	obj/kernel.asm	/^c0105a16:	c7 44 24 04 dc 02 00 	movl   $0x2dc,0x4(%esp)$/;"	l
c0105a1d	obj/kernel.asm	/^c0105a1d:	00 $/;"	l
c0105a1e	obj/kernel.asm	/^c0105a1e:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105a25	obj/kernel.asm	/^c0105a25:	e8 0d b2 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105a2a	obj/kernel.asm	/^c0105a2a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105a2d	obj/kernel.asm	/^c0105a2d:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a2f	obj/kernel.asm	/^c0105a2f:	83 e0 04             	and    $0x4,%eax$/;"	l
c0105a32	obj/kernel.asm	/^c0105a32:	85 c0                	test   %eax,%eax$/;"	l
c0105a34	obj/kernel.asm	/^c0105a34:	75 24                	jne    c0105a5a <check_pgdir+0x333>$/;"	l
c0105a36	obj/kernel.asm	/^c0105a36:	c7 44 24 0c f0 7d 11 	movl   $0xc0117df0,0xc(%esp)$/;"	l
c0105a3d	obj/kernel.asm	/^c0105a3d:	c0 $/;"	l
c0105a3e	obj/kernel.asm	/^c0105a3e:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105a45	obj/kernel.asm	/^c0105a45:	c0 $/;"	l
c0105a46	obj/kernel.asm	/^c0105a46:	c7 44 24 04 dd 02 00 	movl   $0x2dd,0x4(%esp)$/;"	l
c0105a4d	obj/kernel.asm	/^c0105a4d:	00 $/;"	l
c0105a4e	obj/kernel.asm	/^c0105a4e:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105a55	obj/kernel.asm	/^c0105a55:	e8 dd b1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105a5a	obj/kernel.asm	/^c0105a5a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105a5d	obj/kernel.asm	/^c0105a5d:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a5f	obj/kernel.asm	/^c0105a5f:	83 e0 02             	and    $0x2,%eax$/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	85 c0                	test   %eax,%eax$/;"	l
c0105a64	obj/kernel.asm	/^c0105a64:	75 24                	jne    c0105a8a <check_pgdir+0x363>$/;"	l
c0105a66	obj/kernel.asm	/^c0105a66:	c7 44 24 0c fe 7d 11 	movl   $0xc0117dfe,0xc(%esp)$/;"	l
c0105a6d	obj/kernel.asm	/^c0105a6d:	c0 $/;"	l
c0105a6e	obj/kernel.asm	/^c0105a6e:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105a75	obj/kernel.asm	/^c0105a75:	c0 $/;"	l
c0105a76	obj/kernel.asm	/^c0105a76:	c7 44 24 04 de 02 00 	movl   $0x2de,0x4(%esp)$/;"	l
c0105a7d	obj/kernel.asm	/^c0105a7d:	00 $/;"	l
c0105a7e	obj/kernel.asm	/^c0105a7e:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105a85	obj/kernel.asm	/^c0105a85:	e8 ad b1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105a8a	obj/kernel.asm	/^c0105a8a:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105a8f	obj/kernel.asm	/^c0105a8f:	8b 00                	mov    (%eax),%eax$/;"	l
c0105a91	obj/kernel.asm	/^c0105a91:	83 e0 04             	and    $0x4,%eax$/;"	l
c0105a94	obj/kernel.asm	/^c0105a94:	85 c0                	test   %eax,%eax$/;"	l
c0105a96	obj/kernel.asm	/^c0105a96:	75 24                	jne    c0105abc <check_pgdir+0x395>$/;"	l
c0105a98	obj/kernel.asm	/^c0105a98:	c7 44 24 0c 0c 7e 11 	movl   $0xc0117e0c,0xc(%esp)$/;"	l
c0105a9f	obj/kernel.asm	/^c0105a9f:	c0 $/;"	l
c0105aa0	obj/kernel.asm	/^c0105aa0:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105aa7	obj/kernel.asm	/^c0105aa7:	c0 $/;"	l
c0105aa8	obj/kernel.asm	/^c0105aa8:	c7 44 24 04 df 02 00 	movl   $0x2df,0x4(%esp)$/;"	l
c0105aaf	obj/kernel.asm	/^c0105aaf:	00 $/;"	l
c0105ab0	obj/kernel.asm	/^c0105ab0:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105ab7	obj/kernel.asm	/^c0105ab7:	e8 7b b1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105abf	obj/kernel.asm	/^c0105abf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ac2	obj/kernel.asm	/^c0105ac2:	e8 77 e4 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105ac7	obj/kernel.asm	/^c0105ac7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105aca	obj/kernel.asm	/^c0105aca:	74 24                	je     c0105af0 <check_pgdir+0x3c9>$/;"	l
c0105acc	obj/kernel.asm	/^c0105acc:	c7 44 24 0c 22 7e 11 	movl   $0xc0117e22,0xc(%esp)$/;"	l
c0105ad3	obj/kernel.asm	/^c0105ad3:	c0 $/;"	l
c0105ad4	obj/kernel.asm	/^c0105ad4:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105adb	obj/kernel.asm	/^c0105adb:	c0 $/;"	l
c0105adc	obj/kernel.asm	/^c0105adc:	c7 44 24 04 e0 02 00 	movl   $0x2e0,0x4(%esp)$/;"	l
c0105ae3	obj/kernel.asm	/^c0105ae3:	00 $/;"	l
c0105ae4	obj/kernel.asm	/^c0105ae4:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105aeb	obj/kernel.asm	/^c0105aeb:	e8 47 b1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105af0	obj/kernel.asm	/^c0105af0:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105af5	obj/kernel.asm	/^c0105af5:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0105afc	obj/kernel.asm	/^c0105afc:	00 $/;"	l
c0105afd	obj/kernel.asm	/^c0105afd:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0105b04	obj/kernel.asm	/^c0105b04:	00 $/;"	l
c0105b05	obj/kernel.asm	/^c0105b05:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b08	obj/kernel.asm	/^c0105b08:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105b0c	obj/kernel.asm	/^c0105b0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b0f	obj/kernel.asm	/^c0105b0f:	e8 0b fa ff ff       	call   c010551f <page_insert>$/;"	l
c0105b14	obj/kernel.asm	/^c0105b14:	85 c0                	test   %eax,%eax$/;"	l
c0105b16	obj/kernel.asm	/^c0105b16:	74 24                	je     c0105b3c <check_pgdir+0x415>$/;"	l
c0105b18	obj/kernel.asm	/^c0105b18:	c7 44 24 0c 34 7e 11 	movl   $0xc0117e34,0xc(%esp)$/;"	l
c0105b1f	obj/kernel.asm	/^c0105b1f:	c0 $/;"	l
c0105b20	obj/kernel.asm	/^c0105b20:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	c0 $/;"	l
c0105b28	obj/kernel.asm	/^c0105b28:	c7 44 24 04 e2 02 00 	movl   $0x2e2,0x4(%esp)$/;"	l
c0105b2f	obj/kernel.asm	/^c0105b2f:	00 $/;"	l
c0105b30	obj/kernel.asm	/^c0105b30:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105b37	obj/kernel.asm	/^c0105b37:	e8 fb b0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105b3c	obj/kernel.asm	/^c0105b3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b3f	obj/kernel.asm	/^c0105b3f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b42	obj/kernel.asm	/^c0105b42:	e8 f7 e3 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105b47	obj/kernel.asm	/^c0105b47:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0105b4a	obj/kernel.asm	/^c0105b4a:	74 24                	je     c0105b70 <check_pgdir+0x449>$/;"	l
c0105b4c	obj/kernel.asm	/^c0105b4c:	c7 44 24 0c 60 7e 11 	movl   $0xc0117e60,0xc(%esp)$/;"	l
c0105b53	obj/kernel.asm	/^c0105b53:	c0 $/;"	l
c0105b54	obj/kernel.asm	/^c0105b54:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105b5b	obj/kernel.asm	/^c0105b5b:	c0 $/;"	l
c0105b5c	obj/kernel.asm	/^c0105b5c:	c7 44 24 04 e3 02 00 	movl   $0x2e3,0x4(%esp)$/;"	l
c0105b63	obj/kernel.asm	/^c0105b63:	00 $/;"	l
c0105b64	obj/kernel.asm	/^c0105b64:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105b6b	obj/kernel.asm	/^c0105b6b:	e8 c7 b0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105b70	obj/kernel.asm	/^c0105b70:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105b73	obj/kernel.asm	/^c0105b73:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105b76	obj/kernel.asm	/^c0105b76:	e8 c3 e3 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	85 c0                	test   %eax,%eax$/;"	l
c0105b7d	obj/kernel.asm	/^c0105b7d:	74 24                	je     c0105ba3 <check_pgdir+0x47c>$/;"	l
c0105b7f	obj/kernel.asm	/^c0105b7f:	c7 44 24 0c 72 7e 11 	movl   $0xc0117e72,0xc(%esp)$/;"	l
c0105b86	obj/kernel.asm	/^c0105b86:	c0 $/;"	l
c0105b87	obj/kernel.asm	/^c0105b87:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105b8e	obj/kernel.asm	/^c0105b8e:	c0 $/;"	l
c0105b8f	obj/kernel.asm	/^c0105b8f:	c7 44 24 04 e4 02 00 	movl   $0x2e4,0x4(%esp)$/;"	l
c0105b96	obj/kernel.asm	/^c0105b96:	00 $/;"	l
c0105b97	obj/kernel.asm	/^c0105b97:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105b9e	obj/kernel.asm	/^c0105b9e:	e8 94 b0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105ba3	obj/kernel.asm	/^c0105ba3:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105ba8	obj/kernel.asm	/^c0105ba8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105baf	obj/kernel.asm	/^c0105baf:	00 $/;"	l
c0105bb0	obj/kernel.asm	/^c0105bb0:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0105bb7	obj/kernel.asm	/^c0105bb7:	00 $/;"	l
c0105bb8	obj/kernel.asm	/^c0105bb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105bbb	obj/kernel.asm	/^c0105bbb:	e8 0b f3 ff ff       	call   c0104ecb <get_pte>$/;"	l
c0105bc0	obj/kernel.asm	/^c0105bc0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105bc3	obj/kernel.asm	/^c0105bc3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105bc7	obj/kernel.asm	/^c0105bc7:	75 24                	jne    c0105bed <check_pgdir+0x4c6>$/;"	l
c0105bc9	obj/kernel.asm	/^c0105bc9:	c7 44 24 0c c0 7d 11 	movl   $0xc0117dc0,0xc(%esp)$/;"	l
c0105bd0	obj/kernel.asm	/^c0105bd0:	c0 $/;"	l
c0105bd1	obj/kernel.asm	/^c0105bd1:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105bd8	obj/kernel.asm	/^c0105bd8:	c0 $/;"	l
c0105bd9	obj/kernel.asm	/^c0105bd9:	c7 44 24 04 e5 02 00 	movl   $0x2e5,0x4(%esp)$/;"	l
c0105be0	obj/kernel.asm	/^c0105be0:	00 $/;"	l
c0105be1	obj/kernel.asm	/^c0105be1:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105be8	obj/kernel.asm	/^c0105be8:	e8 4a b0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105bed	obj/kernel.asm	/^c0105bed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105bf0	obj/kernel.asm	/^c0105bf0:	8b 00                	mov    (%eax),%eax$/;"	l
c0105bf2	obj/kernel.asm	/^c0105bf2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105bf5	obj/kernel.asm	/^c0105bf5:	e8 4b e2 ff ff       	call   c0103e45 <pa2page>$/;"	l
c0105bfa	obj/kernel.asm	/^c0105bfa:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105bfd	obj/kernel.asm	/^c0105bfd:	74 24                	je     c0105c23 <check_pgdir+0x4fc>$/;"	l
c0105bff	obj/kernel.asm	/^c0105bff:	c7 44 24 0c 39 7d 11 	movl   $0xc0117d39,0xc(%esp)$/;"	l
c0105c06	obj/kernel.asm	/^c0105c06:	c0 $/;"	l
c0105c07	obj/kernel.asm	/^c0105c07:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105c0e	obj/kernel.asm	/^c0105c0e:	c0 $/;"	l
c0105c0f	obj/kernel.asm	/^c0105c0f:	c7 44 24 04 e6 02 00 	movl   $0x2e6,0x4(%esp)$/;"	l
c0105c16	obj/kernel.asm	/^c0105c16:	00 $/;"	l
c0105c17	obj/kernel.asm	/^c0105c17:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105c1e	obj/kernel.asm	/^c0105c1e:	e8 14 b0 ff ff       	call   c0100c37 <__panic>$/;"	l
c0105c23	obj/kernel.asm	/^c0105c23:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105c26	obj/kernel.asm	/^c0105c26:	8b 00                	mov    (%eax),%eax$/;"	l
c0105c28	obj/kernel.asm	/^c0105c28:	83 e0 04             	and    $0x4,%eax$/;"	l
c0105c2b	obj/kernel.asm	/^c0105c2b:	85 c0                	test   %eax,%eax$/;"	l
c0105c2d	obj/kernel.asm	/^c0105c2d:	74 24                	je     c0105c53 <check_pgdir+0x52c>$/;"	l
c0105c2f	obj/kernel.asm	/^c0105c2f:	c7 44 24 0c 84 7e 11 	movl   $0xc0117e84,0xc(%esp)$/;"	l
c0105c36	obj/kernel.asm	/^c0105c36:	c0 $/;"	l
c0105c37	obj/kernel.asm	/^c0105c37:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105c3e	obj/kernel.asm	/^c0105c3e:	c0 $/;"	l
c0105c3f	obj/kernel.asm	/^c0105c3f:	c7 44 24 04 e7 02 00 	movl   $0x2e7,0x4(%esp)$/;"	l
c0105c46	obj/kernel.asm	/^c0105c46:	00 $/;"	l
c0105c47	obj/kernel.asm	/^c0105c47:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105c4e	obj/kernel.asm	/^c0105c4e:	e8 e4 af ff ff       	call   c0100c37 <__panic>$/;"	l
c0105c53	obj/kernel.asm	/^c0105c53:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105c58	obj/kernel.asm	/^c0105c58:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0105c5f	obj/kernel.asm	/^c0105c5f:	00 $/;"	l
c0105c60	obj/kernel.asm	/^c0105c60:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c63	obj/kernel.asm	/^c0105c63:	e8 73 f8 ff ff       	call   c01054db <page_remove>$/;"	l
c0105c68	obj/kernel.asm	/^c0105c68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c6b	obj/kernel.asm	/^c0105c6b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105c6e	obj/kernel.asm	/^c0105c6e:	e8 cb e2 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105c76	obj/kernel.asm	/^c0105c76:	74 24                	je     c0105c9c <check_pgdir+0x575>$/;"	l
c0105c78	obj/kernel.asm	/^c0105c78:	c7 44 24 0c 4e 7d 11 	movl   $0xc0117d4e,0xc(%esp)$/;"	l
c0105c7f	obj/kernel.asm	/^c0105c7f:	c0 $/;"	l
c0105c80	obj/kernel.asm	/^c0105c80:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105c87	obj/kernel.asm	/^c0105c87:	c0 $/;"	l
c0105c88	obj/kernel.asm	/^c0105c88:	c7 44 24 04 ea 02 00 	movl   $0x2ea,0x4(%esp)$/;"	l
c0105c8f	obj/kernel.asm	/^c0105c8f:	00 $/;"	l
c0105c90	obj/kernel.asm	/^c0105c90:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105c97	obj/kernel.asm	/^c0105c97:	e8 9b af ff ff       	call   c0100c37 <__panic>$/;"	l
c0105c9c	obj/kernel.asm	/^c0105c9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105c9f	obj/kernel.asm	/^c0105c9f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105ca2	obj/kernel.asm	/^c0105ca2:	e8 97 e2 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105ca7	obj/kernel.asm	/^c0105ca7:	85 c0                	test   %eax,%eax$/;"	l
c0105ca9	obj/kernel.asm	/^c0105ca9:	74 24                	je     c0105ccf <check_pgdir+0x5a8>$/;"	l
c0105cab	obj/kernel.asm	/^c0105cab:	c7 44 24 0c 72 7e 11 	movl   $0xc0117e72,0xc(%esp)$/;"	l
c0105cb2	obj/kernel.asm	/^c0105cb2:	c0 $/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105cba	obj/kernel.asm	/^c0105cba:	c0 $/;"	l
c0105cbb	obj/kernel.asm	/^c0105cbb:	c7 44 24 04 eb 02 00 	movl   $0x2eb,0x4(%esp)$/;"	l
c0105cc2	obj/kernel.asm	/^c0105cc2:	00 $/;"	l
c0105cc3	obj/kernel.asm	/^c0105cc3:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105cca	obj/kernel.asm	/^c0105cca:	e8 68 af ff ff       	call   c0100c37 <__panic>$/;"	l
c0105ccf	obj/kernel.asm	/^c0105ccf:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105cd4	obj/kernel.asm	/^c0105cd4:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0105cdb	obj/kernel.asm	/^c0105cdb:	00 $/;"	l
c0105cdc	obj/kernel.asm	/^c0105cdc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105cdf	obj/kernel.asm	/^c0105cdf:	e8 f7 f7 ff ff       	call   c01054db <page_remove>$/;"	l
c0105ce4	obj/kernel.asm	/^c0105ce4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ce7	obj/kernel.asm	/^c0105ce7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105cea	obj/kernel.asm	/^c0105cea:	e8 4f e2 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105cef	obj/kernel.asm	/^c0105cef:	85 c0                	test   %eax,%eax$/;"	l
c0105cf1	obj/kernel.asm	/^c0105cf1:	74 24                	je     c0105d17 <check_pgdir+0x5f0>$/;"	l
c0105cf3	obj/kernel.asm	/^c0105cf3:	c7 44 24 0c 99 7e 11 	movl   $0xc0117e99,0xc(%esp)$/;"	l
c0105cfa	obj/kernel.asm	/^c0105cfa:	c0 $/;"	l
c0105cfb	obj/kernel.asm	/^c0105cfb:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105d02	obj/kernel.asm	/^c0105d02:	c0 $/;"	l
c0105d03	obj/kernel.asm	/^c0105d03:	c7 44 24 04 ee 02 00 	movl   $0x2ee,0x4(%esp)$/;"	l
c0105d0a	obj/kernel.asm	/^c0105d0a:	00 $/;"	l
c0105d0b	obj/kernel.asm	/^c0105d0b:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105d12	obj/kernel.asm	/^c0105d12:	e8 20 af ff ff       	call   c0100c37 <__panic>$/;"	l
c0105d17	obj/kernel.asm	/^c0105d17:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105d1a	obj/kernel.asm	/^c0105d1a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d1d	obj/kernel.asm	/^c0105d1d:	e8 1c e2 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105d22	obj/kernel.asm	/^c0105d22:	85 c0                	test   %eax,%eax$/;"	l
c0105d24	obj/kernel.asm	/^c0105d24:	74 24                	je     c0105d4a <check_pgdir+0x623>$/;"	l
c0105d26	obj/kernel.asm	/^c0105d26:	c7 44 24 0c 72 7e 11 	movl   $0xc0117e72,0xc(%esp)$/;"	l
c0105d2d	obj/kernel.asm	/^c0105d2d:	c0 $/;"	l
c0105d2e	obj/kernel.asm	/^c0105d2e:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105d35	obj/kernel.asm	/^c0105d35:	c0 $/;"	l
c0105d36	obj/kernel.asm	/^c0105d36:	c7 44 24 04 ef 02 00 	movl   $0x2ef,0x4(%esp)$/;"	l
c0105d3d	obj/kernel.asm	/^c0105d3d:	00 $/;"	l
c0105d3e	obj/kernel.asm	/^c0105d3e:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105d45	obj/kernel.asm	/^c0105d45:	e8 ed ae ff ff       	call   c0100c37 <__panic>$/;"	l
c0105d4a	obj/kernel.asm	/^c0105d4a:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105d4f	obj/kernel.asm	/^c0105d4f:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d51	obj/kernel.asm	/^c0105d51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d54	obj/kernel.asm	/^c0105d54:	e8 ec e0 ff ff       	call   c0103e45 <pa2page>$/;"	l
c0105d59	obj/kernel.asm	/^c0105d59:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d5c	obj/kernel.asm	/^c0105d5c:	e8 dd e1 ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105d61	obj/kernel.asm	/^c0105d61:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105d64	obj/kernel.asm	/^c0105d64:	74 24                	je     c0105d8a <check_pgdir+0x663>$/;"	l
c0105d66	obj/kernel.asm	/^c0105d66:	c7 44 24 0c ac 7e 11 	movl   $0xc0117eac,0xc(%esp)$/;"	l
c0105d6d	obj/kernel.asm	/^c0105d6d:	c0 $/;"	l
c0105d6e	obj/kernel.asm	/^c0105d6e:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105d75	obj/kernel.asm	/^c0105d75:	c0 $/;"	l
c0105d76	obj/kernel.asm	/^c0105d76:	c7 44 24 04 f1 02 00 	movl   $0x2f1,0x4(%esp)$/;"	l
c0105d7d	obj/kernel.asm	/^c0105d7d:	00 $/;"	l
c0105d7e	obj/kernel.asm	/^c0105d7e:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105d85	obj/kernel.asm	/^c0105d85:	e8 ad ae ff ff       	call   c0100c37 <__panic>$/;"	l
c0105d8a	obj/kernel.asm	/^c0105d8a:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105d8f	obj/kernel.asm	/^c0105d8f:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d91	obj/kernel.asm	/^c0105d91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105d94	obj/kernel.asm	/^c0105d94:	e8 ac e0 ff ff       	call   c0103e45 <pa2page>$/;"	l
c0105d99	obj/kernel.asm	/^c0105d99:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0105da0	obj/kernel.asm	/^c0105da0:	00 $/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105da4	obj/kernel.asm	/^c0105da4:	e8 51 e9 ff ff       	call   c01046fa <free_pages>$/;"	l
c0105da9	obj/kernel.asm	/^c0105da9:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105dae	obj/kernel.asm	/^c0105dae:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105db4	obj/kernel.asm	/^c0105db4:	c7 04 24 d2 7e 11 c0 	movl   $0xc0117ed2,(%esp)$/;"	l
c0105dbb	obj/kernel.asm	/^c0105dbb:	e8 20 ad ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0105dc0	obj/kernel.asm	/^c0105dc0:	c9                   	leave  $/;"	l
c0105dc1	obj/kernel.asm	/^c0105dc1:	c3                   	ret    $/;"	l
c0105dc2	obj/kernel.asm	/^c0105dc2 <check_boot_pgdir>:$/;"	l
c0105dc2	obj/kernel.asm	/^c0105dc2:	55                   	push   %ebp$/;"	l
c0105dc3	obj/kernel.asm	/^c0105dc3:	89 e5                	mov    %esp,%ebp$/;"	l
c0105dc5	obj/kernel.asm	/^c0105dc5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105dc8	obj/kernel.asm	/^c0105dc8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105dcf	obj/kernel.asm	/^c0105dcf:	e9 ca 00 00 00       	jmp    c0105e9e <check_boot_pgdir+0xdc>$/;"	l
c0105dd4	obj/kernel.asm	/^c0105dd4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105dd7	obj/kernel.asm	/^c0105dd7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105dda	obj/kernel.asm	/^c0105dda:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105ddd	obj/kernel.asm	/^c0105ddd:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105de0	obj/kernel.asm	/^c0105de0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105de3	obj/kernel.asm	/^c0105de3:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0105de8	obj/kernel.asm	/^c0105de8:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0105deb	obj/kernel.asm	/^c0105deb:	72 23                	jb     c0105e10 <check_boot_pgdir+0x4e>$/;"	l
c0105ded	obj/kernel.asm	/^c0105ded:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105df0	obj/kernel.asm	/^c0105df0:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105df4	obj/kernel.asm	/^c0105df4:	c7 44 24 08 80 7a 11 	movl   $0xc0117a80,0x8(%esp)$/;"	l
c0105dfb	obj/kernel.asm	/^c0105dfb:	c0 $/;"	l
c0105dfc	obj/kernel.asm	/^c0105dfc:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
c0105e03	obj/kernel.asm	/^c0105e03:	00 $/;"	l
c0105e04	obj/kernel.asm	/^c0105e04:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105e0b	obj/kernel.asm	/^c0105e0b:	e8 27 ae ff ff       	call   c0100c37 <__panic>$/;"	l
c0105e10	obj/kernel.asm	/^c0105e10:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105e13	obj/kernel.asm	/^c0105e13:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0105e18	obj/kernel.asm	/^c0105e18:	89 c2                	mov    %eax,%edx$/;"	l
c0105e1a	obj/kernel.asm	/^c0105e1a:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105e1f	obj/kernel.asm	/^c0105e1f:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0105e26	obj/kernel.asm	/^c0105e26:	00 $/;"	l
c0105e27	obj/kernel.asm	/^c0105e27:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105e2b	obj/kernel.asm	/^c0105e2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105e2e	obj/kernel.asm	/^c0105e2e:	e8 98 f0 ff ff       	call   c0104ecb <get_pte>$/;"	l
c0105e33	obj/kernel.asm	/^c0105e33:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105e36	obj/kernel.asm	/^c0105e36:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	75 24                	jne    c0105e60 <check_boot_pgdir+0x9e>$/;"	l
c0105e3c	obj/kernel.asm	/^c0105e3c:	c7 44 24 0c ec 7e 11 	movl   $0xc0117eec,0xc(%esp)$/;"	l
c0105e43	obj/kernel.asm	/^c0105e43:	c0 $/;"	l
c0105e44	obj/kernel.asm	/^c0105e44:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105e4b	obj/kernel.asm	/^c0105e4b:	c0 $/;"	l
c0105e4c	obj/kernel.asm	/^c0105e4c:	c7 44 24 04 fd 02 00 	movl   $0x2fd,0x4(%esp)$/;"	l
c0105e53	obj/kernel.asm	/^c0105e53:	00 $/;"	l
c0105e54	obj/kernel.asm	/^c0105e54:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105e5b	obj/kernel.asm	/^c0105e5b:	e8 d7 ad ff ff       	call   c0100c37 <__panic>$/;"	l
c0105e60	obj/kernel.asm	/^c0105e60:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e63	obj/kernel.asm	/^c0105e63:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e65	obj/kernel.asm	/^c0105e65:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105e6a	obj/kernel.asm	/^c0105e6a:	89 c2                	mov    %eax,%edx$/;"	l
c0105e6c	obj/kernel.asm	/^c0105e6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105e6f	obj/kernel.asm	/^c0105e6f:	39 c2                	cmp    %eax,%edx$/;"	l
c0105e71	obj/kernel.asm	/^c0105e71:	74 24                	je     c0105e97 <check_boot_pgdir+0xd5>$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	c7 44 24 0c 29 7f 11 	movl   $0xc0117f29,0xc(%esp)$/;"	l
c0105e7a	obj/kernel.asm	/^c0105e7a:	c0 $/;"	l
c0105e7b	obj/kernel.asm	/^c0105e7b:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105e82	obj/kernel.asm	/^c0105e82:	c0 $/;"	l
c0105e83	obj/kernel.asm	/^c0105e83:	c7 44 24 04 fe 02 00 	movl   $0x2fe,0x4(%esp)$/;"	l
c0105e8a	obj/kernel.asm	/^c0105e8a:	00 $/;"	l
c0105e8b	obj/kernel.asm	/^c0105e8b:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105e92	obj/kernel.asm	/^c0105e92:	e8 a0 ad ff ff       	call   c0100c37 <__panic>$/;"	l
c0105e97	obj/kernel.asm	/^c0105e97:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0105e9e	obj/kernel.asm	/^c0105e9e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ea1	obj/kernel.asm	/^c0105ea1:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0105ea6	obj/kernel.asm	/^c0105ea6:	39 c2                	cmp    %eax,%edx$/;"	l
c0105ea8	obj/kernel.asm	/^c0105ea8:	0f 82 26 ff ff ff    	jb     c0105dd4 <check_boot_pgdir+0x12>$/;"	l
c0105eae	obj/kernel.asm	/^c0105eae:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105eb3	obj/kernel.asm	/^c0105eb3:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0105eb8	obj/kernel.asm	/^c0105eb8:	8b 00                	mov    (%eax),%eax$/;"	l
c0105eba	obj/kernel.asm	/^c0105eba:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105ebf	obj/kernel.asm	/^c0105ebf:	89 c2                	mov    %eax,%edx$/;"	l
c0105ec1	obj/kernel.asm	/^c0105ec1:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105ec6	obj/kernel.asm	/^c0105ec6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105ec9	obj/kernel.asm	/^c0105ec9:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0105ed0	obj/kernel.asm	/^c0105ed0:	77 23                	ja     c0105ef5 <check_boot_pgdir+0x133>$/;"	l
c0105ed2	obj/kernel.asm	/^c0105ed2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105ed5	obj/kernel.asm	/^c0105ed5:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0105ed9	obj/kernel.asm	/^c0105ed9:	c7 44 24 08 30 7b 11 	movl   $0xc0117b30,0x8(%esp)$/;"	l
c0105ee0	obj/kernel.asm	/^c0105ee0:	c0 $/;"	l
c0105ee1	obj/kernel.asm	/^c0105ee1:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
c0105ee8	obj/kernel.asm	/^c0105ee8:	00 $/;"	l
c0105ee9	obj/kernel.asm	/^c0105ee9:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105ef0	obj/kernel.asm	/^c0105ef0:	e8 42 ad ff ff       	call   c0100c37 <__panic>$/;"	l
c0105ef5	obj/kernel.asm	/^c0105ef5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105ef8	obj/kernel.asm	/^c0105ef8:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0105efd	obj/kernel.asm	/^c0105efd:	39 c2                	cmp    %eax,%edx$/;"	l
c0105eff	obj/kernel.asm	/^c0105eff:	74 24                	je     c0105f25 <check_boot_pgdir+0x163>$/;"	l
c0105f01	obj/kernel.asm	/^c0105f01:	c7 44 24 0c 40 7f 11 	movl   $0xc0117f40,0xc(%esp)$/;"	l
c0105f08	obj/kernel.asm	/^c0105f08:	c0 $/;"	l
c0105f09	obj/kernel.asm	/^c0105f09:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105f10	obj/kernel.asm	/^c0105f10:	c0 $/;"	l
c0105f11	obj/kernel.asm	/^c0105f11:	c7 44 24 04 01 03 00 	movl   $0x301,0x4(%esp)$/;"	l
c0105f18	obj/kernel.asm	/^c0105f18:	00 $/;"	l
c0105f19	obj/kernel.asm	/^c0105f19:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105f20	obj/kernel.asm	/^c0105f20:	e8 12 ad ff ff       	call   c0100c37 <__panic>$/;"	l
c0105f25	obj/kernel.asm	/^c0105f25:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105f2a	obj/kernel.asm	/^c0105f2a:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f2c	obj/kernel.asm	/^c0105f2c:	85 c0                	test   %eax,%eax$/;"	l
c0105f2e	obj/kernel.asm	/^c0105f2e:	74 24                	je     c0105f54 <check_boot_pgdir+0x192>$/;"	l
c0105f30	obj/kernel.asm	/^c0105f30:	c7 44 24 0c 74 7f 11 	movl   $0xc0117f74,0xc(%esp)$/;"	l
c0105f37	obj/kernel.asm	/^c0105f37:	c0 $/;"	l
c0105f38	obj/kernel.asm	/^c0105f38:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105f3f	obj/kernel.asm	/^c0105f3f:	c0 $/;"	l
c0105f40	obj/kernel.asm	/^c0105f40:	c7 44 24 04 03 03 00 	movl   $0x303,0x4(%esp)$/;"	l
c0105f47	obj/kernel.asm	/^c0105f47:	00 $/;"	l
c0105f48	obj/kernel.asm	/^c0105f48:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105f4f	obj/kernel.asm	/^c0105f4f:	e8 e3 ac ff ff       	call   c0100c37 <__panic>$/;"	l
c0105f54	obj/kernel.asm	/^c0105f54:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0105f5b	obj/kernel.asm	/^c0105f5b:	e8 2f e7 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0105f60	obj/kernel.asm	/^c0105f60:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105f63	obj/kernel.asm	/^c0105f63:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105f68	obj/kernel.asm	/^c0105f68:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c0105f6f	obj/kernel.asm	/^c0105f6f:	00 $/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c0105f77	obj/kernel.asm	/^c0105f77:	00 $/;"	l
c0105f78	obj/kernel.asm	/^c0105f78:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105f7b	obj/kernel.asm	/^c0105f7b:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105f7f	obj/kernel.asm	/^c0105f7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105f82	obj/kernel.asm	/^c0105f82:	e8 98 f5 ff ff       	call   c010551f <page_insert>$/;"	l
c0105f87	obj/kernel.asm	/^c0105f87:	85 c0                	test   %eax,%eax$/;"	l
c0105f89	obj/kernel.asm	/^c0105f89:	74 24                	je     c0105faf <check_boot_pgdir+0x1ed>$/;"	l
c0105f8b	obj/kernel.asm	/^c0105f8b:	c7 44 24 0c 88 7f 11 	movl   $0xc0117f88,0xc(%esp)$/;"	l
c0105f92	obj/kernel.asm	/^c0105f92:	c0 $/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105f9a	obj/kernel.asm	/^c0105f9a:	c0 $/;"	l
c0105f9b	obj/kernel.asm	/^c0105f9b:	c7 44 24 04 07 03 00 	movl   $0x307,0x4(%esp)$/;"	l
c0105fa2	obj/kernel.asm	/^c0105fa2:	00 $/;"	l
c0105fa3	obj/kernel.asm	/^c0105fa3:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105faa	obj/kernel.asm	/^c0105faa:	e8 88 ac ff ff       	call   c0100c37 <__panic>$/;"	l
c0105faf	obj/kernel.asm	/^c0105faf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0105fb5	obj/kernel.asm	/^c0105fb5:	e8 84 df ff ff       	call   c0103f3e <page_ref>$/;"	l
c0105fba	obj/kernel.asm	/^c0105fba:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105fbd	obj/kernel.asm	/^c0105fbd:	74 24                	je     c0105fe3 <check_boot_pgdir+0x221>$/;"	l
c0105fbf	obj/kernel.asm	/^c0105fbf:	c7 44 24 0c b6 7f 11 	movl   $0xc0117fb6,0xc(%esp)$/;"	l
c0105fc6	obj/kernel.asm	/^c0105fc6:	c0 $/;"	l
c0105fc7	obj/kernel.asm	/^c0105fc7:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c0105fce	obj/kernel.asm	/^c0105fce:	c0 $/;"	l
c0105fcf	obj/kernel.asm	/^c0105fcf:	c7 44 24 04 08 03 00 	movl   $0x308,0x4(%esp)$/;"	l
c0105fd6	obj/kernel.asm	/^c0105fd6:	00 $/;"	l
c0105fd7	obj/kernel.asm	/^c0105fd7:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c0105fde	obj/kernel.asm	/^c0105fde:	e8 54 ac ff ff       	call   c0100c37 <__panic>$/;"	l
c0105fe3	obj/kernel.asm	/^c0105fe3:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0105fe8	obj/kernel.asm	/^c0105fe8:	c7 44 24 0c 02 00 00 	movl   $0x2,0xc(%esp)$/;"	l
c0105fef	obj/kernel.asm	/^c0105fef:	00 $/;"	l
c0105ff0	obj/kernel.asm	/^c0105ff0:	c7 44 24 08 00 11 00 	movl   $0x1100,0x8(%esp)$/;"	l
c0105ff7	obj/kernel.asm	/^c0105ff7:	00 $/;"	l
c0105ff8	obj/kernel.asm	/^c0105ff8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105ffb	obj/kernel.asm	/^c0105ffb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0105fff	obj/kernel.asm	/^c0105fff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106002	obj/kernel.asm	/^c0106002:	e8 18 f5 ff ff       	call   c010551f <page_insert>$/;"	l
c0106007	obj/kernel.asm	/^c0106007:	85 c0                	test   %eax,%eax$/;"	l
c0106009	obj/kernel.asm	/^c0106009:	74 24                	je     c010602f <check_boot_pgdir+0x26d>$/;"	l
c010600b	obj/kernel.asm	/^c010600b:	c7 44 24 0c c8 7f 11 	movl   $0xc0117fc8,0xc(%esp)$/;"	l
c0106012	obj/kernel.asm	/^c0106012:	c0 $/;"	l
c0106013	obj/kernel.asm	/^c0106013:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c010601a	obj/kernel.asm	/^c010601a:	c0 $/;"	l
c010601b	obj/kernel.asm	/^c010601b:	c7 44 24 04 09 03 00 	movl   $0x309,0x4(%esp)$/;"	l
c0106022	obj/kernel.asm	/^c0106022:	00 $/;"	l
c0106023	obj/kernel.asm	/^c0106023:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010602a	obj/kernel.asm	/^c010602a:	e8 08 ac ff ff       	call   c0100c37 <__panic>$/;"	l
c010602f	obj/kernel.asm	/^c010602f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106032	obj/kernel.asm	/^c0106032:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106035	obj/kernel.asm	/^c0106035:	e8 04 df ff ff       	call   c0103f3e <page_ref>$/;"	l
c010603a	obj/kernel.asm	/^c010603a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010603d	obj/kernel.asm	/^c010603d:	74 24                	je     c0106063 <check_boot_pgdir+0x2a1>$/;"	l
c010603f	obj/kernel.asm	/^c010603f:	c7 44 24 0c ff 7f 11 	movl   $0xc0117fff,0xc(%esp)$/;"	l
c0106046	obj/kernel.asm	/^c0106046:	c0 $/;"	l
c0106047	obj/kernel.asm	/^c0106047:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c010604e	obj/kernel.asm	/^c010604e:	c0 $/;"	l
c010604f	obj/kernel.asm	/^c010604f:	c7 44 24 04 0a 03 00 	movl   $0x30a,0x4(%esp)$/;"	l
c0106056	obj/kernel.asm	/^c0106056:	00 $/;"	l
c0106057	obj/kernel.asm	/^c0106057:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c010605e	obj/kernel.asm	/^c010605e:	e8 d4 ab ff ff       	call   c0100c37 <__panic>$/;"	l
c0106063	obj/kernel.asm	/^c0106063:	c7 45 dc 10 80 11 c0 	movl   $0xc0118010,-0x24(%ebp)$/;"	l
c010606a	obj/kernel.asm	/^c010606a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010606d	obj/kernel.asm	/^c010606d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106071	obj/kernel.asm	/^c0106071:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c0106078	obj/kernel.asm	/^c0106078:	e8 3c 03 01 00       	call   c01163b9 <strcpy>$/;"	l
c010607d	obj/kernel.asm	/^c010607d:	c7 44 24 04 00 11 00 	movl   $0x1100,0x4(%esp)$/;"	l
c0106084	obj/kernel.asm	/^c0106084:	00 $/;"	l
c0106085	obj/kernel.asm	/^c0106085:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c010608c	obj/kernel.asm	/^c010608c:	e8 a1 03 01 00       	call   c0116432 <strcmp>$/;"	l
c0106091	obj/kernel.asm	/^c0106091:	85 c0                	test   %eax,%eax$/;"	l
c0106093	obj/kernel.asm	/^c0106093:	74 24                	je     c01060b9 <check_boot_pgdir+0x2f7>$/;"	l
c0106095	obj/kernel.asm	/^c0106095:	c7 44 24 0c 28 80 11 	movl   $0xc0118028,0xc(%esp)$/;"	l
c010609c	obj/kernel.asm	/^c010609c:	c0 $/;"	l
c010609d	obj/kernel.asm	/^c010609d:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01060a4	obj/kernel.asm	/^c01060a4:	c0 $/;"	l
c01060a5	obj/kernel.asm	/^c01060a5:	c7 44 24 04 0e 03 00 	movl   $0x30e,0x4(%esp)$/;"	l
c01060ac	obj/kernel.asm	/^c01060ac:	00 $/;"	l
c01060ad	obj/kernel.asm	/^c01060ad:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01060b4	obj/kernel.asm	/^c01060b4:	e8 7e ab ff ff       	call   c0100c37 <__panic>$/;"	l
c01060b9	obj/kernel.asm	/^c01060b9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01060bc	obj/kernel.asm	/^c01060bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01060bf	obj/kernel.asm	/^c01060bf:	e8 d0 dd ff ff       	call   c0103e94 <page2kva>$/;"	l
c01060c4	obj/kernel.asm	/^c01060c4:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c01060c9	obj/kernel.asm	/^c01060c9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01060cc	obj/kernel.asm	/^c01060cc:	c7 04 24 00 01 00 00 	movl   $0x100,(%esp)$/;"	l
c01060d3	obj/kernel.asm	/^c01060d3:	e8 62 02 01 00       	call   c011633a <strlen>$/;"	l
c01060d8	obj/kernel.asm	/^c01060d8:	85 c0                	test   %eax,%eax$/;"	l
c01060da	obj/kernel.asm	/^c01060da:	74 24                	je     c0106100 <check_boot_pgdir+0x33e>$/;"	l
c01060dc	obj/kernel.asm	/^c01060dc:	c7 44 24 0c 60 80 11 	movl   $0xc0118060,0xc(%esp)$/;"	l
c01060e3	obj/kernel.asm	/^c01060e3:	c0 $/;"	l
c01060e4	obj/kernel.asm	/^c01060e4:	c7 44 24 08 79 7b 11 	movl   $0xc0117b79,0x8(%esp)$/;"	l
c01060eb	obj/kernel.asm	/^c01060eb:	c0 $/;"	l
c01060ec	obj/kernel.asm	/^c01060ec:	c7 44 24 04 11 03 00 	movl   $0x311,0x4(%esp)$/;"	l
c01060f3	obj/kernel.asm	/^c01060f3:	00 $/;"	l
c01060f4	obj/kernel.asm	/^c01060f4:	c7 04 24 54 7b 11 c0 	movl   $0xc0117b54,(%esp)$/;"	l
c01060fb	obj/kernel.asm	/^c01060fb:	e8 37 ab ff ff       	call   c0100c37 <__panic>$/;"	l
c0106100	obj/kernel.asm	/^c0106100:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106107	obj/kernel.asm	/^c0106107:	00 $/;"	l
c0106108	obj/kernel.asm	/^c0106108:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010610b	obj/kernel.asm	/^c010610b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010610e	obj/kernel.asm	/^c010610e:	e8 e7 e5 ff ff       	call   c01046fa <free_pages>$/;"	l
c0106113	obj/kernel.asm	/^c0106113:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c0106118	obj/kernel.asm	/^c0106118:	8b 00                	mov    (%eax),%eax$/;"	l
c010611a	obj/kernel.asm	/^c010611a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010611f	obj/kernel.asm	/^c010611f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106122	obj/kernel.asm	/^c0106122:	e8 1e dd ff ff       	call   c0103e45 <pa2page>$/;"	l
c0106127	obj/kernel.asm	/^c0106127:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010612e	obj/kernel.asm	/^c010612e:	00 $/;"	l
c010612f	obj/kernel.asm	/^c010612f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106132	obj/kernel.asm	/^c0106132:	e8 c3 e5 ff ff       	call   c01046fa <free_pages>$/;"	l
c0106137	obj/kernel.asm	/^c0106137:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c010613c	obj/kernel.asm	/^c010613c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106142	obj/kernel.asm	/^c0106142:	c7 04 24 84 80 11 c0 	movl   $0xc0118084,(%esp)$/;"	l
c0106149	obj/kernel.asm	/^c0106149:	e8 92 a9 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010614e	obj/kernel.asm	/^c010614e:	c9                   	leave  $/;"	l
c010614f	obj/kernel.asm	/^c010614f:	c3                   	ret    $/;"	l
c0106150	obj/kernel.asm	/^c0106150 <perm2str>:$/;"	l
c0106150	obj/kernel.asm	/^c0106150:	55                   	push   %ebp$/;"	l
c0106151	obj/kernel.asm	/^c0106151:	89 e5                	mov    %esp,%ebp$/;"	l
c0106153	obj/kernel.asm	/^c0106153:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106156	obj/kernel.asm	/^c0106156:	83 e0 04             	and    $0x4,%eax$/;"	l
c0106159	obj/kernel.asm	/^c0106159:	85 c0                	test   %eax,%eax$/;"	l
c010615b	obj/kernel.asm	/^c010615b:	74 07                	je     c0106164 <perm2str+0x14>$/;"	l
c010615d	obj/kernel.asm	/^c010615d:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0106162	obj/kernel.asm	/^c0106162:	eb 05                	jmp    c0106169 <perm2str+0x19>$/;"	l
c0106164	obj/kernel.asm	/^c0106164:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0106169	obj/kernel.asm	/^c0106169:	a2 48 7f 15 c0       	mov    %al,0xc0157f48$/;"	l
c010616e	obj/kernel.asm	/^c010616e:	c6 05 49 7f 15 c0 72 	movb   $0x72,0xc0157f49$/;"	l
c0106175	obj/kernel.asm	/^c0106175:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106178	obj/kernel.asm	/^c0106178:	83 e0 02             	and    $0x2,%eax$/;"	l
c010617b	obj/kernel.asm	/^c010617b:	85 c0                	test   %eax,%eax$/;"	l
c010617d	obj/kernel.asm	/^c010617d:	74 07                	je     c0106186 <perm2str+0x36>$/;"	l
c010617f	obj/kernel.asm	/^c010617f:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0106184	obj/kernel.asm	/^c0106184:	eb 05                	jmp    c010618b <perm2str+0x3b>$/;"	l
c0106186	obj/kernel.asm	/^c0106186:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c010618b	obj/kernel.asm	/^c010618b:	a2 4a 7f 15 c0       	mov    %al,0xc0157f4a$/;"	l
c0106190	obj/kernel.asm	/^c0106190:	c6 05 4b 7f 15 c0 00 	movb   $0x0,0xc0157f4b$/;"	l
c0106197	obj/kernel.asm	/^c0106197:	b8 48 7f 15 c0       	mov    $0xc0157f48,%eax$/;"	l
c010619c	obj/kernel.asm	/^c010619c:	5d                   	pop    %ebp$/;"	l
c010619d	obj/kernel.asm	/^c010619d:	c3                   	ret    $/;"	l
c010619e	obj/kernel.asm	/^c010619e <get_pgtable_items>:$/;"	l
c010619e	obj/kernel.asm	/^c010619e:	55                   	push   %ebp$/;"	l
c010619f	obj/kernel.asm	/^c010619f:	89 e5                	mov    %esp,%ebp$/;"	l
c01061a1	obj/kernel.asm	/^c01061a1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01061a4	obj/kernel.asm	/^c01061a4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01061a7	obj/kernel.asm	/^c01061a7:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01061aa	obj/kernel.asm	/^c01061aa:	72 0a                	jb     c01061b6 <get_pgtable_items+0x18>$/;"	l
c01061ac	obj/kernel.asm	/^c01061ac:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01061b1	obj/kernel.asm	/^c01061b1:	e9 9c 00 00 00       	jmp    c0106252 <get_pgtable_items+0xb4>$/;"	l
c01061b6	obj/kernel.asm	/^c01061b6:	eb 04                	jmp    c01061bc <get_pgtable_items+0x1e>$/;"	l
c01061b8	obj/kernel.asm	/^c01061b8:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01061bc	obj/kernel.asm	/^c01061bc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01061bf	obj/kernel.asm	/^c01061bf:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01061c2	obj/kernel.asm	/^c01061c2:	73 18                	jae    c01061dc <get_pgtable_items+0x3e>$/;"	l
c01061c4	obj/kernel.asm	/^c01061c4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01061c7	obj/kernel.asm	/^c01061c7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01061ce	obj/kernel.asm	/^c01061ce:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01061d1	obj/kernel.asm	/^c01061d1:	01 d0                	add    %edx,%eax$/;"	l
c01061d3	obj/kernel.asm	/^c01061d3:	8b 00                	mov    (%eax),%eax$/;"	l
c01061d5	obj/kernel.asm	/^c01061d5:	83 e0 01             	and    $0x1,%eax$/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	85 c0                	test   %eax,%eax$/;"	l
c01061da	obj/kernel.asm	/^c01061da:	74 dc                	je     c01061b8 <get_pgtable_items+0x1a>$/;"	l
c01061dc	obj/kernel.asm	/^c01061dc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01061df	obj/kernel.asm	/^c01061df:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01061e2	obj/kernel.asm	/^c01061e2:	73 69                	jae    c010624d <get_pgtable_items+0xaf>$/;"	l
c01061e4	obj/kernel.asm	/^c01061e4:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c01061e8	obj/kernel.asm	/^c01061e8:	74 08                	je     c01061f2 <get_pgtable_items+0x54>$/;"	l
c01061ea	obj/kernel.asm	/^c01061ea:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01061ed	obj/kernel.asm	/^c01061ed:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01061f0	obj/kernel.asm	/^c01061f0:	89 10                	mov    %edx,(%eax)$/;"	l
c01061f2	obj/kernel.asm	/^c01061f2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01061f5	obj/kernel.asm	/^c01061f5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01061f8	obj/kernel.asm	/^c01061f8:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01061fb	obj/kernel.asm	/^c01061fb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106202	obj/kernel.asm	/^c0106202:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106205	obj/kernel.asm	/^c0106205:	01 d0                	add    %edx,%eax$/;"	l
c0106207	obj/kernel.asm	/^c0106207:	8b 00                	mov    (%eax),%eax$/;"	l
c0106209	obj/kernel.asm	/^c0106209:	83 e0 07             	and    $0x7,%eax$/;"	l
c010620c	obj/kernel.asm	/^c010620c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010620f	obj/kernel.asm	/^c010620f:	eb 04                	jmp    c0106215 <get_pgtable_items+0x77>$/;"	l
c0106211	obj/kernel.asm	/^c0106211:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0106215	obj/kernel.asm	/^c0106215:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106218	obj/kernel.asm	/^c0106218:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010621b	obj/kernel.asm	/^c010621b:	73 1d                	jae    c010623a <get_pgtable_items+0x9c>$/;"	l
c010621d	obj/kernel.asm	/^c010621d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106220	obj/kernel.asm	/^c0106220:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0106227	obj/kernel.asm	/^c0106227:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010622a	obj/kernel.asm	/^c010622a:	01 d0                	add    %edx,%eax$/;"	l
c010622c	obj/kernel.asm	/^c010622c:	8b 00                	mov    (%eax),%eax$/;"	l
c010622e	obj/kernel.asm	/^c010622e:	83 e0 07             	and    $0x7,%eax$/;"	l
c0106231	obj/kernel.asm	/^c0106231:	89 c2                	mov    %eax,%edx$/;"	l
c0106233	obj/kernel.asm	/^c0106233:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106236	obj/kernel.asm	/^c0106236:	39 c2                	cmp    %eax,%edx$/;"	l
c0106238	obj/kernel.asm	/^c0106238:	74 d7                	je     c0106211 <get_pgtable_items+0x73>$/;"	l
c010623a	obj/kernel.asm	/^c010623a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010623e	obj/kernel.asm	/^c010623e:	74 08                	je     c0106248 <get_pgtable_items+0xaa>$/;"	l
c0106240	obj/kernel.asm	/^c0106240:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0106243	obj/kernel.asm	/^c0106243:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106246	obj/kernel.asm	/^c0106246:	89 10                	mov    %edx,(%eax)$/;"	l
c0106248	obj/kernel.asm	/^c0106248:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010624b	obj/kernel.asm	/^c010624b:	eb 05                	jmp    c0106252 <get_pgtable_items+0xb4>$/;"	l
c010624d	obj/kernel.asm	/^c010624d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106252	obj/kernel.asm	/^c0106252:	c9                   	leave  $/;"	l
c0106253	obj/kernel.asm	/^c0106253:	c3                   	ret    $/;"	l
c0106254	obj/kernel.asm	/^c0106254 <print_pgdir>:$/;"	l
c0106254	obj/kernel.asm	/^c0106254:	55                   	push   %ebp$/;"	l
c0106255	obj/kernel.asm	/^c0106255:	89 e5                	mov    %esp,%ebp$/;"	l
c0106257	obj/kernel.asm	/^c0106257:	57                   	push   %edi$/;"	l
c0106258	obj/kernel.asm	/^c0106258:	56                   	push   %esi$/;"	l
c0106259	obj/kernel.asm	/^c0106259:	53                   	push   %ebx$/;"	l
c010625a	obj/kernel.asm	/^c010625a:	83 ec 4c             	sub    $0x4c,%esp$/;"	l
c010625d	obj/kernel.asm	/^c010625d:	c7 04 24 a4 80 11 c0 	movl   $0xc01180a4,(%esp)$/;"	l
c0106264	obj/kernel.asm	/^c0106264:	e8 77 a8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0106269	obj/kernel.asm	/^c0106269:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106270	obj/kernel.asm	/^c0106270:	e9 fa 00 00 00       	jmp    c010636f <print_pgdir+0x11b>$/;"	l
c0106275	obj/kernel.asm	/^c0106275:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106278	obj/kernel.asm	/^c0106278:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010627b	obj/kernel.asm	/^c010627b:	e8 d0 fe ff ff       	call   c0106150 <perm2str>$/;"	l
c0106280	obj/kernel.asm	/^c0106280:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106283	obj/kernel.asm	/^c0106283:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106286	obj/kernel.asm	/^c0106286:	29 d1                	sub    %edx,%ecx$/;"	l
c0106288	obj/kernel.asm	/^c0106288:	89 ca                	mov    %ecx,%edx$/;"	l
c010628a	obj/kernel.asm	/^c010628a:	89 d6                	mov    %edx,%esi$/;"	l
c010628c	obj/kernel.asm	/^c010628c:	c1 e6 16             	shl    $0x16,%esi$/;"	l
c010628f	obj/kernel.asm	/^c010628f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106292	obj/kernel.asm	/^c0106292:	89 d3                	mov    %edx,%ebx$/;"	l
c0106294	obj/kernel.asm	/^c0106294:	c1 e3 16             	shl    $0x16,%ebx$/;"	l
c0106297	obj/kernel.asm	/^c0106297:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010629a	obj/kernel.asm	/^c010629a:	89 d1                	mov    %edx,%ecx$/;"	l
c010629c	obj/kernel.asm	/^c010629c:	c1 e1 16             	shl    $0x16,%ecx$/;"	l
c010629f	obj/kernel.asm	/^c010629f:	8b 7d dc             	mov    -0x24(%ebp),%edi$/;"	l
c01062a2	obj/kernel.asm	/^c01062a2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01062a5	obj/kernel.asm	/^c01062a5:	29 d7                	sub    %edx,%edi$/;"	l
c01062a7	obj/kernel.asm	/^c01062a7:	89 fa                	mov    %edi,%edx$/;"	l
c01062a9	obj/kernel.asm	/^c01062a9:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c01062ad	obj/kernel.asm	/^c01062ad:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c01062b1	obj/kernel.asm	/^c01062b1:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01062b5	obj/kernel.asm	/^c01062b5:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c01062b9	obj/kernel.asm	/^c01062b9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01062bd	obj/kernel.asm	/^c01062bd:	c7 04 24 d5 80 11 c0 	movl   $0xc01180d5,(%esp)$/;"	l
c01062c4	obj/kernel.asm	/^c01062c4:	e8 17 a8 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01062c9	obj/kernel.asm	/^c01062c9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01062cc	obj/kernel.asm	/^c01062cc:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c01062cf	obj/kernel.asm	/^c01062cf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01062d2	obj/kernel.asm	/^c01062d2:	eb 54                	jmp    c0106328 <print_pgdir+0xd4>$/;"	l
c01062d4	obj/kernel.asm	/^c01062d4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01062d7	obj/kernel.asm	/^c01062d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01062da	obj/kernel.asm	/^c01062da:	e8 71 fe ff ff       	call   c0106150 <perm2str>$/;"	l
c01062df	obj/kernel.asm	/^c01062df:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c01062e2	obj/kernel.asm	/^c01062e2:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01062e5	obj/kernel.asm	/^c01062e5:	29 d1                	sub    %edx,%ecx$/;"	l
c01062e7	obj/kernel.asm	/^c01062e7:	89 ca                	mov    %ecx,%edx$/;"	l
c01062e9	obj/kernel.asm	/^c01062e9:	89 d6                	mov    %edx,%esi$/;"	l
c01062eb	obj/kernel.asm	/^c01062eb:	c1 e6 0c             	shl    $0xc,%esi$/;"	l
c01062ee	obj/kernel.asm	/^c01062ee:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01062f1	obj/kernel.asm	/^c01062f1:	89 d3                	mov    %edx,%ebx$/;"	l
c01062f3	obj/kernel.asm	/^c01062f3:	c1 e3 0c             	shl    $0xc,%ebx$/;"	l
c01062f6	obj/kernel.asm	/^c01062f6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01062f9	obj/kernel.asm	/^c01062f9:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c01062fc	obj/kernel.asm	/^c01062fc:	89 d1                	mov    %edx,%ecx$/;"	l
c01062fe	obj/kernel.asm	/^c01062fe:	8b 7d d4             	mov    -0x2c(%ebp),%edi$/;"	l
c0106301	obj/kernel.asm	/^c0106301:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106304	obj/kernel.asm	/^c0106304:	29 d7                	sub    %edx,%edi$/;"	l
c0106306	obj/kernel.asm	/^c0106306:	89 fa                	mov    %edi,%edx$/;"	l
c0106308	obj/kernel.asm	/^c0106308:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c010630c	obj/kernel.asm	/^c010630c:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106310	obj/kernel.asm	/^c0106310:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106314	obj/kernel.asm	/^c0106314:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106318	obj/kernel.asm	/^c0106318:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010631c	obj/kernel.asm	/^c010631c:	c7 04 24 f4 80 11 c0 	movl   $0xc01180f4,(%esp)$/;"	l
c0106323	obj/kernel.asm	/^c0106323:	e8 b8 a7 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0106328	obj/kernel.asm	/^c0106328:	ba 00 00 c0 fa       	mov    $0xfac00000,%edx$/;"	l
c010632d	obj/kernel.asm	/^c010632d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0106330	obj/kernel.asm	/^c0106330:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0106333	obj/kernel.asm	/^c0106333:	89 ce                	mov    %ecx,%esi$/;"	l
c0106335	obj/kernel.asm	/^c0106335:	c1 e6 0a             	shl    $0xa,%esi$/;"	l
c0106338	obj/kernel.asm	/^c0106338:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c010633b	obj/kernel.asm	/^c010633b:	89 cb                	mov    %ecx,%ebx$/;"	l
c010633d	obj/kernel.asm	/^c010633d:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c0106340	obj/kernel.asm	/^c0106340:	8d 4d d4             	lea    -0x2c(%ebp),%ecx$/;"	l
c0106343	obj/kernel.asm	/^c0106343:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0106347	obj/kernel.asm	/^c0106347:	8d 4d d8             	lea    -0x28(%ebp),%ecx$/;"	l
c010634a	obj/kernel.asm	/^c010634a:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c010634e	obj/kernel.asm	/^c010634e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106352	obj/kernel.asm	/^c0106352:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106356	obj/kernel.asm	/^c0106356:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c010635a	obj/kernel.asm	/^c010635a:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c010635d	obj/kernel.asm	/^c010635d:	e8 3c fe ff ff       	call   c010619e <get_pgtable_items>$/;"	l
c0106362	obj/kernel.asm	/^c0106362:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106365	obj/kernel.asm	/^c0106365:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0106369	obj/kernel.asm	/^c0106369:	0f 85 65 ff ff ff    	jne    c01062d4 <print_pgdir+0x80>$/;"	l
c010636f	obj/kernel.asm	/^c010636f:	ba 00 b0 fe fa       	mov    $0xfafeb000,%edx$/;"	l
c0106374	obj/kernel.asm	/^c0106374:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106377	obj/kernel.asm	/^c0106377:	8d 4d dc             	lea    -0x24(%ebp),%ecx$/;"	l
c010637a	obj/kernel.asm	/^c010637a:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c010637e	obj/kernel.asm	/^c010637e:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0106381	obj/kernel.asm	/^c0106381:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0106385	obj/kernel.asm	/^c0106385:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106389	obj/kernel.asm	/^c0106389:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010638d	obj/kernel.asm	/^c010638d:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0106394	obj/kernel.asm	/^c0106394:	00 $/;"	l
c0106395	obj/kernel.asm	/^c0106395:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010639c	obj/kernel.asm	/^c010639c:	e8 fd fd ff ff       	call   c010619e <get_pgtable_items>$/;"	l
c01063a1	obj/kernel.asm	/^c01063a1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01063a4	obj/kernel.asm	/^c01063a4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01063a8	obj/kernel.asm	/^c01063a8:	0f 85 c7 fe ff ff    	jne    c0106275 <print_pgdir+0x21>$/;"	l
c01063ae	obj/kernel.asm	/^c01063ae:	c7 04 24 18 81 11 c0 	movl   $0xc0118118,(%esp)$/;"	l
c01063b5	obj/kernel.asm	/^c01063b5:	e8 26 a7 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01063ba	obj/kernel.asm	/^c01063ba:	83 c4 4c             	add    $0x4c,%esp$/;"	l
c01063bd	obj/kernel.asm	/^c01063bd:	5b                   	pop    %ebx$/;"	l
c01063be	obj/kernel.asm	/^c01063be:	5e                   	pop    %esi$/;"	l
c01063bf	obj/kernel.asm	/^c01063bf:	5f                   	pop    %edi$/;"	l
c01063c0	obj/kernel.asm	/^c01063c0:	5d                   	pop    %ebp$/;"	l
c01063c1	obj/kernel.asm	/^c01063c1:	c3                   	ret    $/;"	l
c01063c2	obj/kernel.asm	/^c01063c2 <_fifo_init_mm>:$/;"	l
c01063c2	obj/kernel.asm	/^c01063c2:	55                   	push   %ebp$/;"	l
c01063c3	obj/kernel.asm	/^c01063c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01063c5	obj/kernel.asm	/^c01063c5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01063c8	obj/kernel.asm	/^c01063c8:	c7 45 fc 7c b6 15 c0 	movl   $0xc015b67c,-0x4(%ebp)$/;"	l
c01063cf	obj/kernel.asm	/^c01063cf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01063d2	obj/kernel.asm	/^c01063d2:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01063d5	obj/kernel.asm	/^c01063d5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01063d8	obj/kernel.asm	/^c01063d8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01063db	obj/kernel.asm	/^c01063db:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01063de	obj/kernel.asm	/^c01063de:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01063e1	obj/kernel.asm	/^c01063e1:	89 10                	mov    %edx,(%eax)$/;"	l
c01063e3	obj/kernel.asm	/^c01063e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01063e6	obj/kernel.asm	/^c01063e6:	c7 40 14 7c b6 15 c0 	movl   $0xc015b67c,0x14(%eax)$/;"	l
c01063ed	obj/kernel.asm	/^c01063ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01063f2	obj/kernel.asm	/^c01063f2:	c9                   	leave  $/;"	l
c01063f3	obj/kernel.asm	/^c01063f3:	c3                   	ret    $/;"	l
c01063f4	obj/kernel.asm	/^c01063f4 <_fifo_map_swappable>:$/;"	l
c01063f4	obj/kernel.asm	/^c01063f4:	55                   	push   %ebp$/;"	l
c01063f5	obj/kernel.asm	/^c01063f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01063f7	obj/kernel.asm	/^c01063f7:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01063fa	obj/kernel.asm	/^c01063fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01063fd	obj/kernel.asm	/^c01063fd:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106400	obj/kernel.asm	/^c0106400:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106403	obj/kernel.asm	/^c0106403:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106406	obj/kernel.asm	/^c0106406:	83 c0 18             	add    $0x18,%eax$/;"	l
c0106409	obj/kernel.asm	/^c0106409:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010640c	obj/kernel.asm	/^c010640c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106410	obj/kernel.asm	/^c0106410:	74 06                	je     c0106418 <_fifo_map_swappable+0x24>$/;"	l
c0106412	obj/kernel.asm	/^c0106412:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106416	obj/kernel.asm	/^c0106416:	75 24                	jne    c010643c <_fifo_map_swappable+0x48>$/;"	l
c0106418	obj/kernel.asm	/^c0106418:	c7 44 24 0c 4c 81 11 	movl   $0xc011814c,0xc(%esp)$/;"	l
c010641f	obj/kernel.asm	/^c010641f:	c0 $/;"	l
c0106420	obj/kernel.asm	/^c0106420:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c0106427	obj/kernel.asm	/^c0106427:	c0 $/;"	l
c0106428	obj/kernel.asm	/^c0106428:	c7 44 24 04 32 00 00 	movl   $0x32,0x4(%esp)$/;"	l
c010642f	obj/kernel.asm	/^c010642f:	00 $/;"	l
c0106430	obj/kernel.asm	/^c0106430:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c0106437	obj/kernel.asm	/^c0106437:	e8 fb a7 ff ff       	call   c0100c37 <__panic>$/;"	l
c010643c	obj/kernel.asm	/^c010643c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010643f	obj/kernel.asm	/^c010643f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106442	obj/kernel.asm	/^c0106442:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106445	obj/kernel.asm	/^c0106445:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106448	obj/kernel.asm	/^c0106448:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010644b	obj/kernel.asm	/^c010644b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010644e	obj/kernel.asm	/^c010644e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106451	obj/kernel.asm	/^c0106451:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106454	obj/kernel.asm	/^c0106454:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106457	obj/kernel.asm	/^c0106457:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010645a	obj/kernel.asm	/^c010645a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010645d	obj/kernel.asm	/^c010645d:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c0106460	obj/kernel.asm	/^c0106460:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106463	obj/kernel.asm	/^c0106463:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0106466	obj/kernel.asm	/^c0106466:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0106469	obj/kernel.asm	/^c0106469:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010646c	obj/kernel.asm	/^c010646c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010646f	obj/kernel.asm	/^c010646f:	89 10                	mov    %edx,(%eax)$/;"	l
c0106471	obj/kernel.asm	/^c0106471:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0106474	obj/kernel.asm	/^c0106474:	8b 10                	mov    (%eax),%edx$/;"	l
c0106476	obj/kernel.asm	/^c0106476:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0106479	obj/kernel.asm	/^c0106479:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010647c	obj/kernel.asm	/^c010647c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010647f	obj/kernel.asm	/^c010647f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0106482	obj/kernel.asm	/^c0106482:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106485	obj/kernel.asm	/^c0106485:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106488	obj/kernel.asm	/^c0106488:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010648b	obj/kernel.asm	/^c010648b:	89 10                	mov    %edx,(%eax)$/;"	l
c010648d	obj/kernel.asm	/^c010648d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106492	obj/kernel.asm	/^c0106492:	c9                   	leave  $/;"	l
c0106493	obj/kernel.asm	/^c0106493:	c3                   	ret    $/;"	l
c0106494	obj/kernel.asm	/^c0106494 <_fifo_swap_out_victim>:$/;"	l
c0106494	obj/kernel.asm	/^c0106494:	55                   	push   %ebp$/;"	l
c0106495	obj/kernel.asm	/^c0106495:	89 e5                	mov    %esp,%ebp$/;"	l
c0106497	obj/kernel.asm	/^c0106497:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010649a	obj/kernel.asm	/^c010649a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010649d	obj/kernel.asm	/^c010649d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01064a0	obj/kernel.asm	/^c01064a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01064a3	obj/kernel.asm	/^c01064a3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01064a7	obj/kernel.asm	/^c01064a7:	75 24                	jne    c01064cd <_fifo_swap_out_victim+0x39>$/;"	l
c01064a9	obj/kernel.asm	/^c01064a9:	c7 44 24 0c 93 81 11 	movl   $0xc0118193,0xc(%esp)$/;"	l
c01064b0	obj/kernel.asm	/^c01064b0:	c0 $/;"	l
c01064b1	obj/kernel.asm	/^c01064b1:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c01064b8	obj/kernel.asm	/^c01064b8:	c0 $/;"	l
c01064b9	obj/kernel.asm	/^c01064b9:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c01064c0	obj/kernel.asm	/^c01064c0:	00 $/;"	l
c01064c1	obj/kernel.asm	/^c01064c1:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c01064c8	obj/kernel.asm	/^c01064c8:	e8 6a a7 ff ff       	call   c0100c37 <__panic>$/;"	l
c01064cd	obj/kernel.asm	/^c01064cd:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01064d1	obj/kernel.asm	/^c01064d1:	74 24                	je     c01064f7 <_fifo_swap_out_victim+0x63>$/;"	l
c01064d3	obj/kernel.asm	/^c01064d3:	c7 44 24 0c a0 81 11 	movl   $0xc01181a0,0xc(%esp)$/;"	l
c01064da	obj/kernel.asm	/^c01064da:	c0 $/;"	l
c01064db	obj/kernel.asm	/^c01064db:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c01064e2	obj/kernel.asm	/^c01064e2:	c0 $/;"	l
c01064e3	obj/kernel.asm	/^c01064e3:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c01064ea	obj/kernel.asm	/^c01064ea:	00 $/;"	l
c01064eb	obj/kernel.asm	/^c01064eb:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c01064f2	obj/kernel.asm	/^c01064f2:	e8 40 a7 ff ff       	call   c0100c37 <__panic>$/;"	l
c01064f7	obj/kernel.asm	/^c01064f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01064fa	obj/kernel.asm	/^c01064fa:	8b 00                	mov    (%eax),%eax$/;"	l
c01064fc	obj/kernel.asm	/^c01064fc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01064ff	obj/kernel.asm	/^c01064ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106502	obj/kernel.asm	/^c0106502:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0106505	obj/kernel.asm	/^c0106505:	75 24                	jne    c010652b <_fifo_swap_out_victim+0x97>$/;"	l
c0106507	obj/kernel.asm	/^c0106507:	c7 44 24 0c ab 81 11 	movl   $0xc01181ab,0xc(%esp)$/;"	l
c010650e	obj/kernel.asm	/^c010650e:	c0 $/;"	l
c010650f	obj/kernel.asm	/^c010650f:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c0106516	obj/kernel.asm	/^c0106516:	c0 $/;"	l
c0106517	obj/kernel.asm	/^c0106517:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c010651e	obj/kernel.asm	/^c010651e:	00 $/;"	l
c010651f	obj/kernel.asm	/^c010651f:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c0106526	obj/kernel.asm	/^c0106526:	e8 0c a7 ff ff       	call   c0100c37 <__panic>$/;"	l
c010652b	obj/kernel.asm	/^c010652b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010652e	obj/kernel.asm	/^c010652e:	83 e8 18             	sub    $0x18,%eax$/;"	l
c0106531	obj/kernel.asm	/^c0106531:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106534	obj/kernel.asm	/^c0106534:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106537	obj/kernel.asm	/^c0106537:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010653a	obj/kernel.asm	/^c010653a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010653d	obj/kernel.asm	/^c010653d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106540	obj/kernel.asm	/^c0106540:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0106543	obj/kernel.asm	/^c0106543:	8b 12                	mov    (%edx),%edx$/;"	l
c0106545	obj/kernel.asm	/^c0106545:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0106548	obj/kernel.asm	/^c0106548:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010654b	obj/kernel.asm	/^c010654b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010654e	obj/kernel.asm	/^c010654e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0106551	obj/kernel.asm	/^c0106551:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106554	obj/kernel.asm	/^c0106554:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106557	obj/kernel.asm	/^c0106557:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010655a	obj/kernel.asm	/^c010655a:	89 10                	mov    %edx,(%eax)$/;"	l
c010655c	obj/kernel.asm	/^c010655c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106560	obj/kernel.asm	/^c0106560:	75 24                	jne    c0106586 <_fifo_swap_out_victim+0xf2>$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	c7 44 24 0c b4 81 11 	movl   $0xc01181b4,0xc(%esp)$/;"	l
c0106569	obj/kernel.asm	/^c0106569:	c0 $/;"	l
c010656a	obj/kernel.asm	/^c010656a:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c0106571	obj/kernel.asm	/^c0106571:	c0 $/;"	l
c0106572	obj/kernel.asm	/^c0106572:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c0106579	obj/kernel.asm	/^c0106579:	00 $/;"	l
c010657a	obj/kernel.asm	/^c010657a:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c0106581	obj/kernel.asm	/^c0106581:	e8 b1 a6 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106586	obj/kernel.asm	/^c0106586:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106589	obj/kernel.asm	/^c0106589:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010658c	obj/kernel.asm	/^c010658c:	89 10                	mov    %edx,(%eax)$/;"	l
c010658e	obj/kernel.asm	/^c010658e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106593	obj/kernel.asm	/^c0106593:	c9                   	leave  $/;"	l
c0106594	obj/kernel.asm	/^c0106594:	c3                   	ret    $/;"	l
c0106595	obj/kernel.asm	/^c0106595 <_fifo_check_swap>:$/;"	l
c0106595	obj/kernel.asm	/^c0106595:	55                   	push   %ebp$/;"	l
c0106596	obj/kernel.asm	/^c0106596:	89 e5                	mov    %esp,%ebp$/;"	l
c0106598	obj/kernel.asm	/^c0106598:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010659b	obj/kernel.asm	/^c010659b:	c7 04 24 c0 81 11 c0 	movl   $0xc01181c0,(%esp)$/;"	l
c01065a2	obj/kernel.asm	/^c01065a2:	e8 39 a5 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01065a7	obj/kernel.asm	/^c01065a7:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01065ac	obj/kernel.asm	/^c01065ac:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01065af	obj/kernel.asm	/^c01065af:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01065b4	obj/kernel.asm	/^c01065b4:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01065b7	obj/kernel.asm	/^c01065b7:	74 24                	je     c01065dd <_fifo_check_swap+0x48>$/;"	l
c01065b9	obj/kernel.asm	/^c01065b9:	c7 44 24 0c e6 81 11 	movl   $0xc01181e6,0xc(%esp)$/;"	l
c01065c0	obj/kernel.asm	/^c01065c0:	c0 $/;"	l
c01065c1	obj/kernel.asm	/^c01065c1:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c01065c8	obj/kernel.asm	/^c01065c8:	c0 $/;"	l
c01065c9	obj/kernel.asm	/^c01065c9:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c01065d0	obj/kernel.asm	/^c01065d0:	00 $/;"	l
c01065d1	obj/kernel.asm	/^c01065d1:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c01065d8	obj/kernel.asm	/^c01065d8:	e8 5a a6 ff ff       	call   c0100c37 <__panic>$/;"	l
c01065dd	obj/kernel.asm	/^c01065dd:	c7 04 24 f8 81 11 c0 	movl   $0xc01181f8,(%esp)$/;"	l
c01065e4	obj/kernel.asm	/^c01065e4:	e8 f7 a4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01065e9	obj/kernel.asm	/^c01065e9:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01065ee	obj/kernel.asm	/^c01065ee:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01065f6	obj/kernel.asm	/^c01065f6:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01065f9	obj/kernel.asm	/^c01065f9:	74 24                	je     c010661f <_fifo_check_swap+0x8a>$/;"	l
c01065fb	obj/kernel.asm	/^c01065fb:	c7 44 24 0c e6 81 11 	movl   $0xc01181e6,0xc(%esp)$/;"	l
c0106602	obj/kernel.asm	/^c0106602:	c0 $/;"	l
c0106603	obj/kernel.asm	/^c0106603:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c010660a	obj/kernel.asm	/^c010660a:	c0 $/;"	l
c010660b	obj/kernel.asm	/^c010660b:	c7 44 24 04 58 00 00 	movl   $0x58,0x4(%esp)$/;"	l
c0106612	obj/kernel.asm	/^c0106612:	00 $/;"	l
c0106613	obj/kernel.asm	/^c0106613:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c010661a	obj/kernel.asm	/^c010661a:	e8 18 a6 ff ff       	call   c0100c37 <__panic>$/;"	l
c010661f	obj/kernel.asm	/^c010661f:	c7 04 24 20 82 11 c0 	movl   $0xc0118220,(%esp)$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	e8 b5 a4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010662b	obj/kernel.asm	/^c010662b:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0106630	obj/kernel.asm	/^c0106630:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0106633	obj/kernel.asm	/^c0106633:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0106638	obj/kernel.asm	/^c0106638:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010663b	obj/kernel.asm	/^c010663b:	74 24                	je     c0106661 <_fifo_check_swap+0xcc>$/;"	l
c010663d	obj/kernel.asm	/^c010663d:	c7 44 24 0c e6 81 11 	movl   $0xc01181e6,0xc(%esp)$/;"	l
c0106644	obj/kernel.asm	/^c0106644:	c0 $/;"	l
c0106645	obj/kernel.asm	/^c0106645:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c010664c	obj/kernel.asm	/^c010664c:	c0 $/;"	l
c010664d	obj/kernel.asm	/^c010664d:	c7 44 24 04 5b 00 00 	movl   $0x5b,0x4(%esp)$/;"	l
c0106654	obj/kernel.asm	/^c0106654:	00 $/;"	l
c0106655	obj/kernel.asm	/^c0106655:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c010665c	obj/kernel.asm	/^c010665c:	e8 d6 a5 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106661	obj/kernel.asm	/^c0106661:	c7 04 24 48 82 11 c0 	movl   $0xc0118248,(%esp)$/;"	l
c0106668	obj/kernel.asm	/^c0106668:	e8 73 a4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010666d	obj/kernel.asm	/^c010666d:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0106672	obj/kernel.asm	/^c0106672:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0106675	obj/kernel.asm	/^c0106675:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c010667a	obj/kernel.asm	/^c010667a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010667d	obj/kernel.asm	/^c010667d:	74 24                	je     c01066a3 <_fifo_check_swap+0x10e>$/;"	l
c010667f	obj/kernel.asm	/^c010667f:	c7 44 24 0c e6 81 11 	movl   $0xc01181e6,0xc(%esp)$/;"	l
c0106686	obj/kernel.asm	/^c0106686:	c0 $/;"	l
c0106687	obj/kernel.asm	/^c0106687:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c010668e	obj/kernel.asm	/^c010668e:	c0 $/;"	l
c010668f	obj/kernel.asm	/^c010668f:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0106696	obj/kernel.asm	/^c0106696:	00 $/;"	l
c0106697	obj/kernel.asm	/^c0106697:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c010669e	obj/kernel.asm	/^c010669e:	e8 94 a5 ff ff       	call   c0100c37 <__panic>$/;"	l
c01066a3	obj/kernel.asm	/^c01066a3:	c7 04 24 70 82 11 c0 	movl   $0xc0118270,(%esp)$/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	e8 31 a4 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01066af	obj/kernel.asm	/^c01066af:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c01066b4	obj/kernel.asm	/^c01066b4:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01066bc	obj/kernel.asm	/^c01066bc:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c01066bf	obj/kernel.asm	/^c01066bf:	74 24                	je     c01066e5 <_fifo_check_swap+0x150>$/;"	l
c01066c1	obj/kernel.asm	/^c01066c1:	c7 44 24 0c 96 82 11 	movl   $0xc0118296,0xc(%esp)$/;"	l
c01066c8	obj/kernel.asm	/^c01066c8:	c0 $/;"	l
c01066c9	obj/kernel.asm	/^c01066c9:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c01066d0	obj/kernel.asm	/^c01066d0:	c0 $/;"	l
c01066d1	obj/kernel.asm	/^c01066d1:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c01066d8	obj/kernel.asm	/^c01066d8:	00 $/;"	l
c01066d9	obj/kernel.asm	/^c01066d9:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c01066e0	obj/kernel.asm	/^c01066e0:	e8 52 a5 ff ff       	call   c0100c37 <__panic>$/;"	l
c01066e5	obj/kernel.asm	/^c01066e5:	c7 04 24 48 82 11 c0 	movl   $0xc0118248,(%esp)$/;"	l
c01066ec	obj/kernel.asm	/^c01066ec:	e8 ef a3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01066f1	obj/kernel.asm	/^c01066f1:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01066f6	obj/kernel.asm	/^c01066f6:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01066f9	obj/kernel.asm	/^c01066f9:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01066fe	obj/kernel.asm	/^c01066fe:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0106701	obj/kernel.asm	/^c0106701:	74 24                	je     c0106727 <_fifo_check_swap+0x192>$/;"	l
c0106703	obj/kernel.asm	/^c0106703:	c7 44 24 0c 96 82 11 	movl   $0xc0118296,0xc(%esp)$/;"	l
c010670a	obj/kernel.asm	/^c010670a:	c0 $/;"	l
c010670b	obj/kernel.asm	/^c010670b:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c0106712	obj/kernel.asm	/^c0106712:	c0 $/;"	l
c0106713	obj/kernel.asm	/^c0106713:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c010671a	obj/kernel.asm	/^c010671a:	00 $/;"	l
c010671b	obj/kernel.asm	/^c010671b:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c0106722	obj/kernel.asm	/^c0106722:	e8 10 a5 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106727	obj/kernel.asm	/^c0106727:	c7 04 24 f8 81 11 c0 	movl   $0xc01181f8,(%esp)$/;"	l
c010672e	obj/kernel.asm	/^c010672e:	e8 ad a3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0106733	obj/kernel.asm	/^c0106733:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0106738	obj/kernel.asm	/^c0106738:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010673b	obj/kernel.asm	/^c010673b:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0106740	obj/kernel.asm	/^c0106740:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0106743	obj/kernel.asm	/^c0106743:	74 24                	je     c0106769 <_fifo_check_swap+0x1d4>$/;"	l
c0106745	obj/kernel.asm	/^c0106745:	c7 44 24 0c a5 82 11 	movl   $0xc01182a5,0xc(%esp)$/;"	l
c010674c	obj/kernel.asm	/^c010674c:	c0 $/;"	l
c010674d	obj/kernel.asm	/^c010674d:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c0106754	obj/kernel.asm	/^c0106754:	c0 $/;"	l
c0106755	obj/kernel.asm	/^c0106755:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c010675c	obj/kernel.asm	/^c010675c:	00 $/;"	l
c010675d	obj/kernel.asm	/^c010675d:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c0106764	obj/kernel.asm	/^c0106764:	e8 ce a4 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106769	obj/kernel.asm	/^c0106769:	c7 04 24 48 82 11 c0 	movl   $0xc0118248,(%esp)$/;"	l
c0106770	obj/kernel.asm	/^c0106770:	e8 6b a3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0106775	obj/kernel.asm	/^c0106775:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010677a	obj/kernel.asm	/^c010677a:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010677d	obj/kernel.asm	/^c010677d:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0106782	obj/kernel.asm	/^c0106782:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0106785	obj/kernel.asm	/^c0106785:	74 24                	je     c01067ab <_fifo_check_swap+0x216>$/;"	l
c0106787	obj/kernel.asm	/^c0106787:	c7 44 24 0c b4 82 11 	movl   $0xc01182b4,0xc(%esp)$/;"	l
c010678e	obj/kernel.asm	/^c010678e:	c0 $/;"	l
c010678f	obj/kernel.asm	/^c010678f:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c0106796	obj/kernel.asm	/^c0106796:	c0 $/;"	l
c0106797	obj/kernel.asm	/^c0106797:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010679e	obj/kernel.asm	/^c010679e:	00 $/;"	l
c010679f	obj/kernel.asm	/^c010679f:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c01067a6	obj/kernel.asm	/^c01067a6:	e8 8c a4 ff ff       	call   c0100c37 <__panic>$/;"	l
c01067ab	obj/kernel.asm	/^c01067ab:	c7 04 24 c0 81 11 c0 	movl   $0xc01181c0,(%esp)$/;"	l
c01067b2	obj/kernel.asm	/^c01067b2:	e8 29 a3 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01067b7	obj/kernel.asm	/^c01067b7:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01067bc	obj/kernel.asm	/^c01067bc:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01067bf	obj/kernel.asm	/^c01067bf:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01067c4	obj/kernel.asm	/^c01067c4:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c01067c7	obj/kernel.asm	/^c01067c7:	74 24                	je     c01067ed <_fifo_check_swap+0x258>$/;"	l
c01067c9	obj/kernel.asm	/^c01067c9:	c7 44 24 0c c3 82 11 	movl   $0xc01182c3,0xc(%esp)$/;"	l
c01067d0	obj/kernel.asm	/^c01067d0:	c0 $/;"	l
c01067d1	obj/kernel.asm	/^c01067d1:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c01067d8	obj/kernel.asm	/^c01067d8:	c0 $/;"	l
c01067d9	obj/kernel.asm	/^c01067d9:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c01067e0	obj/kernel.asm	/^c01067e0:	00 $/;"	l
c01067e1	obj/kernel.asm	/^c01067e1:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c01067e8	obj/kernel.asm	/^c01067e8:	e8 4a a4 ff ff       	call   c0100c37 <__panic>$/;"	l
c01067ed	obj/kernel.asm	/^c01067ed:	c7 04 24 20 82 11 c0 	movl   $0xc0118220,(%esp)$/;"	l
c01067f4	obj/kernel.asm	/^c01067f4:	e8 e7 a2 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01067f9	obj/kernel.asm	/^c01067f9:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01067fe	obj/kernel.asm	/^c01067fe:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0106801	obj/kernel.asm	/^c0106801:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0106806	obj/kernel.asm	/^c0106806:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0106809	obj/kernel.asm	/^c0106809:	74 24                	je     c010682f <_fifo_check_swap+0x29a>$/;"	l
c010680b	obj/kernel.asm	/^c010680b:	c7 44 24 0c d2 82 11 	movl   $0xc01182d2,0xc(%esp)$/;"	l
c0106812	obj/kernel.asm	/^c0106812:	c0 $/;"	l
c0106813	obj/kernel.asm	/^c0106813:	c7 44 24 08 6a 81 11 	movl   $0xc011816a,0x8(%esp)$/;"	l
c010681a	obj/kernel.asm	/^c010681a:	c0 $/;"	l
c010681b	obj/kernel.asm	/^c010681b:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c0106822	obj/kernel.asm	/^c0106822:	00 $/;"	l
c0106823	obj/kernel.asm	/^c0106823:	c7 04 24 7f 81 11 c0 	movl   $0xc011817f,(%esp)$/;"	l
c010682a	obj/kernel.asm	/^c010682a:	e8 08 a4 ff ff       	call   c0100c37 <__panic>$/;"	l
c010682f	obj/kernel.asm	/^c010682f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106834	obj/kernel.asm	/^c0106834:	c9                   	leave  $/;"	l
c0106835	obj/kernel.asm	/^c0106835:	c3                   	ret    $/;"	l
c0106836	obj/kernel.asm	/^c0106836 <_fifo_init>:$/;"	l
c0106836	obj/kernel.asm	/^c0106836:	55                   	push   %ebp$/;"	l
c0106837	obj/kernel.asm	/^c0106837:	89 e5                	mov    %esp,%ebp$/;"	l
c0106839	obj/kernel.asm	/^c0106839:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010683e	obj/kernel.asm	/^c010683e:	5d                   	pop    %ebp$/;"	l
c010683f	obj/kernel.asm	/^c010683f:	c3                   	ret    $/;"	l
c0106840	obj/kernel.asm	/^c0106840 <_fifo_set_unswappable>:$/;"	l
c0106840	obj/kernel.asm	/^c0106840:	55                   	push   %ebp$/;"	l
c0106841	obj/kernel.asm	/^c0106841:	89 e5                	mov    %esp,%ebp$/;"	l
c0106843	obj/kernel.asm	/^c0106843:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106848	obj/kernel.asm	/^c0106848:	5d                   	pop    %ebp$/;"	l
c0106849	obj/kernel.asm	/^c0106849:	c3                   	ret    $/;"	l
c010684a	obj/kernel.asm	/^c010684a <_fifo_tick_event>:$/;"	l
c010684a	obj/kernel.asm	/^c010684a:	55                   	push   %ebp$/;"	l
c010684b	obj/kernel.asm	/^c010684b:	89 e5                	mov    %esp,%ebp$/;"	l
c010684d	obj/kernel.asm	/^c010684d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106852	obj/kernel.asm	/^c0106852:	5d                   	pop    %ebp$/;"	l
c0106853	obj/kernel.asm	/^c0106853:	c3                   	ret    $/;"	l
c0106854	obj/kernel.asm	/^c0106854 <mm_count>:$/;"	l
c0106854	obj/kernel.asm	/^c0106854:	55                   	push   %ebp$/;"	l
c0106855	obj/kernel.asm	/^c0106855:	89 e5                	mov    %esp,%ebp$/;"	l
c0106857	obj/kernel.asm	/^c0106857:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010685a	obj/kernel.asm	/^c010685a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010685d	obj/kernel.asm	/^c010685d:	5d                   	pop    %ebp$/;"	l
c010685e	obj/kernel.asm	/^c010685e:	c3                   	ret    $/;"	l
c010685f	obj/kernel.asm	/^c010685f <set_mm_count>:$/;"	l
c010685f	obj/kernel.asm	/^c010685f:	55                   	push   %ebp$/;"	l
c0106860	obj/kernel.asm	/^c0106860:	89 e5                	mov    %esp,%ebp$/;"	l
c0106862	obj/kernel.asm	/^c0106862:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106865	obj/kernel.asm	/^c0106865:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106868	obj/kernel.asm	/^c0106868:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010686b	obj/kernel.asm	/^c010686b:	5d                   	pop    %ebp$/;"	l
c010686c	obj/kernel.asm	/^c010686c:	c3                   	ret    $/;"	l
c010686d	obj/kernel.asm	/^c010686d <pa2page>:$/;"	l
c010686d	obj/kernel.asm	/^c010686d:	55                   	push   %ebp$/;"	l
c010686e	obj/kernel.asm	/^c010686e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106870	obj/kernel.asm	/^c0106870:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106873	obj/kernel.asm	/^c0106873:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106876	obj/kernel.asm	/^c0106876:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106879	obj/kernel.asm	/^c0106879:	89 c2                	mov    %eax,%edx$/;"	l
c010687b	obj/kernel.asm	/^c010687b:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0106880	obj/kernel.asm	/^c0106880:	39 c2                	cmp    %eax,%edx$/;"	l
c0106882	obj/kernel.asm	/^c0106882:	72 1c                	jb     c01068a0 <pa2page+0x33>$/;"	l
c0106884	obj/kernel.asm	/^c0106884:	c7 44 24 08 f4 82 11 	movl   $0xc01182f4,0x8(%esp)$/;"	l
c010688b	obj/kernel.asm	/^c010688b:	c0 $/;"	l
c010688c	obj/kernel.asm	/^c010688c:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0106893	obj/kernel.asm	/^c0106893:	00 $/;"	l
c0106894	obj/kernel.asm	/^c0106894:	c7 04 24 13 83 11 c0 	movl   $0xc0118313,(%esp)$/;"	l
c010689b	obj/kernel.asm	/^c010689b:	e8 97 a3 ff ff       	call   c0100c37 <__panic>$/;"	l
c01068a0	obj/kernel.asm	/^c01068a0:	8b 0d 78 b6 15 c0    	mov    0xc015b678,%ecx$/;"	l
c01068a6	obj/kernel.asm	/^c01068a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01068a9	obj/kernel.asm	/^c01068a9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01068ac	obj/kernel.asm	/^c01068ac:	89 c2                	mov    %eax,%edx$/;"	l
c01068ae	obj/kernel.asm	/^c01068ae:	89 d0                	mov    %edx,%eax$/;"	l
c01068b0	obj/kernel.asm	/^c01068b0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01068b3	obj/kernel.asm	/^c01068b3:	01 d0                	add    %edx,%eax$/;"	l
c01068b5	obj/kernel.asm	/^c01068b5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01068b8	obj/kernel.asm	/^c01068b8:	01 c8                	add    %ecx,%eax$/;"	l
c01068ba	obj/kernel.asm	/^c01068ba:	c9                   	leave  $/;"	l
c01068bb	obj/kernel.asm	/^c01068bb:	c3                   	ret    $/;"	l
c01068bc	obj/kernel.asm	/^c01068bc <mm_create>:$/;"	l
c01068bc	obj/kernel.asm	/^c01068bc:	55                   	push   %ebp$/;"	l
c01068bd	obj/kernel.asm	/^c01068bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01068bf	obj/kernel.asm	/^c01068bf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01068c2	obj/kernel.asm	/^c01068c2:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
c01068c9	obj/kernel.asm	/^c01068c9:	e8 1a 19 00 00       	call   c01081e8 <kmalloc>$/;"	l
c01068ce	obj/kernel.asm	/^c01068ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01068d1	obj/kernel.asm	/^c01068d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01068d5	obj/kernel.asm	/^c01068d5:	0f 84 81 00 00 00    	je     c010695c <mm_create+0xa0>$/;"	l
c01068db	obj/kernel.asm	/^c01068db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01068de	obj/kernel.asm	/^c01068de:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01068e1	obj/kernel.asm	/^c01068e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01068e4	obj/kernel.asm	/^c01068e4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01068e7	obj/kernel.asm	/^c01068e7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01068ea	obj/kernel.asm	/^c01068ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01068ed	obj/kernel.asm	/^c01068ed:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01068f0	obj/kernel.asm	/^c01068f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01068f3	obj/kernel.asm	/^c01068f3:	89 10                	mov    %edx,(%eax)$/;"	l
c01068f5	obj/kernel.asm	/^c01068f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01068f8	obj/kernel.asm	/^c01068f8:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01068ff	obj/kernel.asm	/^c01068ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106902	obj/kernel.asm	/^c0106902:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0106909	obj/kernel.asm	/^c0106909:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010690c	obj/kernel.asm	/^c010690c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0106913	obj/kernel.asm	/^c0106913:	a1 54 7f 15 c0       	mov    0xc0157f54,%eax$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	85 c0                	test   %eax,%eax$/;"	l
c010691a	obj/kernel.asm	/^c010691a:	74 0d                	je     c0106929 <mm_create+0x6d>$/;"	l
c010691c	obj/kernel.asm	/^c010691c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010691f	obj/kernel.asm	/^c010691f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106922	obj/kernel.asm	/^c0106922:	e8 35 1b 00 00       	call   c010845c <swap_init_mm>$/;"	l
c0106927	obj/kernel.asm	/^c0106927:	eb 0a                	jmp    c0106933 <mm_create+0x77>$/;"	l
c0106929	obj/kernel.asm	/^c0106929:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010692c	obj/kernel.asm	/^c010692c:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0106933	obj/kernel.asm	/^c0106933:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010693a	obj/kernel.asm	/^c010693a:	00 $/;"	l
c010693b	obj/kernel.asm	/^c010693b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010693e	obj/kernel.asm	/^c010693e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106941	obj/kernel.asm	/^c0106941:	e8 19 ff ff ff       	call   c010685f <set_mm_count>$/;"	l
c0106946	obj/kernel.asm	/^c0106946:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106949	obj/kernel.asm	/^c0106949:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010694c	obj/kernel.asm	/^c010694c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0106953	obj/kernel.asm	/^c0106953:	00 $/;"	l
c0106954	obj/kernel.asm	/^c0106954:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106957	obj/kernel.asm	/^c0106957:	e8 9a 42 00 00       	call   c010abf6 <sem_init>$/;"	l
c010695c	obj/kernel.asm	/^c010695c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010695f	obj/kernel.asm	/^c010695f:	c9                   	leave  $/;"	l
c0106960	obj/kernel.asm	/^c0106960:	c3                   	ret    $/;"	l
c0106961	obj/kernel.asm	/^c0106961 <vma_create>:$/;"	l
c0106961	obj/kernel.asm	/^c0106961:	55                   	push   %ebp$/;"	l
c0106962	obj/kernel.asm	/^c0106962:	89 e5                	mov    %esp,%ebp$/;"	l
c0106964	obj/kernel.asm	/^c0106964:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106967	obj/kernel.asm	/^c0106967:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c010696e	obj/kernel.asm	/^c010696e:	e8 75 18 00 00       	call   c01081e8 <kmalloc>$/;"	l
c0106973	obj/kernel.asm	/^c0106973:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106976	obj/kernel.asm	/^c0106976:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010697a	obj/kernel.asm	/^c010697a:	74 1b                	je     c0106997 <vma_create+0x36>$/;"	l
c010697c	obj/kernel.asm	/^c010697c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010697f	obj/kernel.asm	/^c010697f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106982	obj/kernel.asm	/^c0106982:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106985	obj/kernel.asm	/^c0106985:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106988	obj/kernel.asm	/^c0106988:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010698b	obj/kernel.asm	/^c010698b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010698e	obj/kernel.asm	/^c010698e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106991	obj/kernel.asm	/^c0106991:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106994	obj/kernel.asm	/^c0106994:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0106997	obj/kernel.asm	/^c0106997:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010699a	obj/kernel.asm	/^c010699a:	c9                   	leave  $/;"	l
c010699b	obj/kernel.asm	/^c010699b:	c3                   	ret    $/;"	l
c010699c	obj/kernel.asm	/^c010699c <find_vma>:$/;"	l
c010699c	obj/kernel.asm	/^c010699c:	55                   	push   %ebp$/;"	l
c010699d	obj/kernel.asm	/^c010699d:	89 e5                	mov    %esp,%ebp$/;"	l
c010699f	obj/kernel.asm	/^c010699f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01069a2	obj/kernel.asm	/^c01069a2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01069a9	obj/kernel.asm	/^c01069a9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01069ad	obj/kernel.asm	/^c01069ad:	0f 84 95 00 00 00    	je     c0106a48 <find_vma+0xac>$/;"	l
c01069b3	obj/kernel.asm	/^c01069b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01069b6	obj/kernel.asm	/^c01069b6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01069b9	obj/kernel.asm	/^c01069b9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01069bc	obj/kernel.asm	/^c01069bc:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01069c0	obj/kernel.asm	/^c01069c0:	74 16                	je     c01069d8 <find_vma+0x3c>$/;"	l
c01069c2	obj/kernel.asm	/^c01069c2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01069c5	obj/kernel.asm	/^c01069c5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01069c8	obj/kernel.asm	/^c01069c8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01069cb	obj/kernel.asm	/^c01069cb:	77 0b                	ja     c01069d8 <find_vma+0x3c>$/;"	l
c01069cd	obj/kernel.asm	/^c01069cd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01069d0	obj/kernel.asm	/^c01069d0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01069d3	obj/kernel.asm	/^c01069d3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01069d6	obj/kernel.asm	/^c01069d6:	77 61                	ja     c0106a39 <find_vma+0x9d>$/;"	l
c01069d8	obj/kernel.asm	/^c01069d8:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c01069df	obj/kernel.asm	/^c01069df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01069e2	obj/kernel.asm	/^c01069e2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01069e5	obj/kernel.asm	/^c01069e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01069e8	obj/kernel.asm	/^c01069e8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01069eb	obj/kernel.asm	/^c01069eb:	eb 28                	jmp    c0106a15 <find_vma+0x79>$/;"	l
c01069ed	obj/kernel.asm	/^c01069ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01069f0	obj/kernel.asm	/^c01069f0:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01069f3	obj/kernel.asm	/^c01069f3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01069f6	obj/kernel.asm	/^c01069f6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01069f9	obj/kernel.asm	/^c01069f9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01069fc	obj/kernel.asm	/^c01069fc:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01069ff	obj/kernel.asm	/^c01069ff:	77 14                	ja     c0106a15 <find_vma+0x79>$/;"	l
c0106a01	obj/kernel.asm	/^c0106a01:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106a04	obj/kernel.asm	/^c0106a04:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106a07	obj/kernel.asm	/^c0106a07:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106a0a	obj/kernel.asm	/^c0106a0a:	76 09                	jbe    c0106a15 <find_vma+0x79>$/;"	l
c0106a0c	obj/kernel.asm	/^c0106a0c:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c0106a13	obj/kernel.asm	/^c0106a13:	eb 17                	jmp    c0106a2c <find_vma+0x90>$/;"	l
c0106a15	obj/kernel.asm	/^c0106a15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106a18	obj/kernel.asm	/^c0106a18:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106a1b	obj/kernel.asm	/^c0106a1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a1e	obj/kernel.asm	/^c0106a1e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106a21	obj/kernel.asm	/^c0106a21:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106a24	obj/kernel.asm	/^c0106a24:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106a27	obj/kernel.asm	/^c0106a27:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a:	75 c1                	jne    c01069ed <find_vma+0x51>$/;"	l
c0106a2c	obj/kernel.asm	/^c0106a2c:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0106a30	obj/kernel.asm	/^c0106a30:	75 07                	jne    c0106a39 <find_vma+0x9d>$/;"	l
c0106a32	obj/kernel.asm	/^c0106a32:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0106a39	obj/kernel.asm	/^c0106a39:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0106a3d	obj/kernel.asm	/^c0106a3d:	74 09                	je     c0106a48 <find_vma+0xac>$/;"	l
c0106a3f	obj/kernel.asm	/^c0106a3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106a42	obj/kernel.asm	/^c0106a42:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0106a45	obj/kernel.asm	/^c0106a45:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0106a48	obj/kernel.asm	/^c0106a48:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0106a4b	obj/kernel.asm	/^c0106a4b:	c9                   	leave  $/;"	l
c0106a4c	obj/kernel.asm	/^c0106a4c:	c3                   	ret    $/;"	l
c0106a4d	obj/kernel.asm	/^c0106a4d <check_vma_overlap>:$/;"	l
c0106a4d	obj/kernel.asm	/^c0106a4d:	55                   	push   %ebp$/;"	l
c0106a4e	obj/kernel.asm	/^c0106a4e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106a50	obj/kernel.asm	/^c0106a50:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106a53	obj/kernel.asm	/^c0106a53:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106a56	obj/kernel.asm	/^c0106a56:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106a59	obj/kernel.asm	/^c0106a59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106a5c	obj/kernel.asm	/^c0106a5c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106a5f	obj/kernel.asm	/^c0106a5f:	39 c2                	cmp    %eax,%edx$/;"	l
c0106a61	obj/kernel.asm	/^c0106a61:	72 24                	jb     c0106a87 <check_vma_overlap+0x3a>$/;"	l
c0106a63	obj/kernel.asm	/^c0106a63:	c7 44 24 0c 21 83 11 	movl   $0xc0118321,0xc(%esp)$/;"	l
c0106a6a	obj/kernel.asm	/^c0106a6a:	c0 $/;"	l
c0106a6b	obj/kernel.asm	/^c0106a6b:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106a72	obj/kernel.asm	/^c0106a72:	c0 $/;"	l
c0106a73	obj/kernel.asm	/^c0106a73:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c0106a7a	obj/kernel.asm	/^c0106a7a:	00 $/;"	l
c0106a7b	obj/kernel.asm	/^c0106a7b:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106a82	obj/kernel.asm	/^c0106a82:	e8 b0 a1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106a87	obj/kernel.asm	/^c0106a87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106a8a	obj/kernel.asm	/^c0106a8a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106a8d	obj/kernel.asm	/^c0106a8d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106a90	obj/kernel.asm	/^c0106a90:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106a93	obj/kernel.asm	/^c0106a93:	39 c2                	cmp    %eax,%edx$/;"	l
c0106a95	obj/kernel.asm	/^c0106a95:	76 24                	jbe    c0106abb <check_vma_overlap+0x6e>$/;"	l
c0106a97	obj/kernel.asm	/^c0106a97:	c7 44 24 0c 64 83 11 	movl   $0xc0118364,0xc(%esp)$/;"	l
c0106a9e	obj/kernel.asm	/^c0106a9e:	c0 $/;"	l
c0106a9f	obj/kernel.asm	/^c0106a9f:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106aa6	obj/kernel.asm	/^c0106aa6:	c0 $/;"	l
c0106aa7	obj/kernel.asm	/^c0106aa7:	c7 44 24 04 6c 00 00 	movl   $0x6c,0x4(%esp)$/;"	l
c0106aae	obj/kernel.asm	/^c0106aae:	00 $/;"	l
c0106aaf	obj/kernel.asm	/^c0106aaf:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106ab6	obj/kernel.asm	/^c0106ab6:	e8 7c a1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106abb	obj/kernel.asm	/^c0106abb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106abe	obj/kernel.asm	/^c0106abe:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106ac1	obj/kernel.asm	/^c0106ac1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106ac4	obj/kernel.asm	/^c0106ac4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106ac7	obj/kernel.asm	/^c0106ac7:	39 c2                	cmp    %eax,%edx$/;"	l
c0106ac9	obj/kernel.asm	/^c0106ac9:	72 24                	jb     c0106aef <check_vma_overlap+0xa2>$/;"	l
c0106acb	obj/kernel.asm	/^c0106acb:	c7 44 24 0c 83 83 11 	movl   $0xc0118383,0xc(%esp)$/;"	l
c0106ad2	obj/kernel.asm	/^c0106ad2:	c0 $/;"	l
c0106ad3	obj/kernel.asm	/^c0106ad3:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106ada	obj/kernel.asm	/^c0106ada:	c0 $/;"	l
c0106adb	obj/kernel.asm	/^c0106adb:	c7 44 24 04 6d 00 00 	movl   $0x6d,0x4(%esp)$/;"	l
c0106ae2	obj/kernel.asm	/^c0106ae2:	00 $/;"	l
c0106ae3	obj/kernel.asm	/^c0106ae3:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106aea	obj/kernel.asm	/^c0106aea:	e8 48 a1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106aef	obj/kernel.asm	/^c0106aef:	c9                   	leave  $/;"	l
c0106af0	obj/kernel.asm	/^c0106af0:	c3                   	ret    $/;"	l
c0106af1	obj/kernel.asm	/^c0106af1 <insert_vma_struct>:$/;"	l
c0106af1	obj/kernel.asm	/^c0106af1:	55                   	push   %ebp$/;"	l
c0106af2	obj/kernel.asm	/^c0106af2:	89 e5                	mov    %esp,%ebp$/;"	l
c0106af4	obj/kernel.asm	/^c0106af4:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0106af7	obj/kernel.asm	/^c0106af7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106afa	obj/kernel.asm	/^c0106afa:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106afd	obj/kernel.asm	/^c0106afd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106b00	obj/kernel.asm	/^c0106b00:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106b03	obj/kernel.asm	/^c0106b03:	39 c2                	cmp    %eax,%edx$/;"	l
c0106b05	obj/kernel.asm	/^c0106b05:	72 24                	jb     c0106b2b <insert_vma_struct+0x3a>$/;"	l
c0106b07	obj/kernel.asm	/^c0106b07:	c7 44 24 0c a1 83 11 	movl   $0xc01183a1,0xc(%esp)$/;"	l
c0106b0e	obj/kernel.asm	/^c0106b0e:	c0 $/;"	l
c0106b0f	obj/kernel.asm	/^c0106b0f:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106b16	obj/kernel.asm	/^c0106b16:	c0 $/;"	l
c0106b17	obj/kernel.asm	/^c0106b17:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	00 $/;"	l
c0106b1f	obj/kernel.asm	/^c0106b1f:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106b26	obj/kernel.asm	/^c0106b26:	e8 0c a1 ff ff       	call   c0100c37 <__panic>$/;"	l
c0106b2b	obj/kernel.asm	/^c0106b2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106b2e	obj/kernel.asm	/^c0106b2e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106b31	obj/kernel.asm	/^c0106b31:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b34	obj/kernel.asm	/^c0106b34:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106b37	obj/kernel.asm	/^c0106b37:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b3a	obj/kernel.asm	/^c0106b3a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106b3d	obj/kernel.asm	/^c0106b3d:	eb 21                	jmp    c0106b60 <insert_vma_struct+0x6f>$/;"	l
c0106b3f	obj/kernel.asm	/^c0106b3f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106b42	obj/kernel.asm	/^c0106b42:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106b45	obj/kernel.asm	/^c0106b45:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106b48	obj/kernel.asm	/^c0106b48:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106b4b	obj/kernel.asm	/^c0106b4b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106b4e	obj/kernel.asm	/^c0106b4e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106b51	obj/kernel.asm	/^c0106b51:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106b54	obj/kernel.asm	/^c0106b54:	39 c2                	cmp    %eax,%edx$/;"	l
c0106b56	obj/kernel.asm	/^c0106b56:	76 02                	jbe    c0106b5a <insert_vma_struct+0x69>$/;"	l
c0106b58	obj/kernel.asm	/^c0106b58:	eb 1d                	jmp    c0106b77 <insert_vma_struct+0x86>$/;"	l
c0106b5a	obj/kernel.asm	/^c0106b5a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106b5d	obj/kernel.asm	/^c0106b5d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106b60	obj/kernel.asm	/^c0106b60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106b63	obj/kernel.asm	/^c0106b63:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106b66	obj/kernel.asm	/^c0106b66:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106b69	obj/kernel.asm	/^c0106b69:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106b6c	obj/kernel.asm	/^c0106b6c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106b6f	obj/kernel.asm	/^c0106b6f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106b72	obj/kernel.asm	/^c0106b72:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0106b75	obj/kernel.asm	/^c0106b75:	75 c8                	jne    c0106b3f <insert_vma_struct+0x4e>$/;"	l
c0106b77	obj/kernel.asm	/^c0106b77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106b7a	obj/kernel.asm	/^c0106b7a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106b7d	obj/kernel.asm	/^c0106b7d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106b80	obj/kernel.asm	/^c0106b80:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106b83	obj/kernel.asm	/^c0106b83:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106b86	obj/kernel.asm	/^c0106b86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106b89	obj/kernel.asm	/^c0106b89:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0106b8c	obj/kernel.asm	/^c0106b8c:	74 15                	je     c0106ba3 <insert_vma_struct+0xb2>$/;"	l
c0106b8e	obj/kernel.asm	/^c0106b8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106b91	obj/kernel.asm	/^c0106b91:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0106b94	obj/kernel.asm	/^c0106b94:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106b97	obj/kernel.asm	/^c0106b97:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106b9b	obj/kernel.asm	/^c0106b9b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0106b9e	obj/kernel.asm	/^c0106b9e:	e8 aa fe ff ff       	call   c0106a4d <check_vma_overlap>$/;"	l
c0106ba3	obj/kernel.asm	/^c0106ba3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106ba6	obj/kernel.asm	/^c0106ba6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0106ba9	obj/kernel.asm	/^c0106ba9:	74 15                	je     c0106bc0 <insert_vma_struct+0xcf>$/;"	l
c0106bab	obj/kernel.asm	/^c0106bab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106bae	obj/kernel.asm	/^c0106bae:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106bb1	obj/kernel.asm	/^c0106bb1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106bb5	obj/kernel.asm	/^c0106bb5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106bb8	obj/kernel.asm	/^c0106bb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106bbb	obj/kernel.asm	/^c0106bbb:	e8 8d fe ff ff       	call   c0106a4d <check_vma_overlap>$/;"	l
c0106bc0	obj/kernel.asm	/^c0106bc0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106bc3	obj/kernel.asm	/^c0106bc3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106bc6	obj/kernel.asm	/^c0106bc6:	89 10                	mov    %edx,(%eax)$/;"	l
c0106bc8	obj/kernel.asm	/^c0106bc8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106bcb	obj/kernel.asm	/^c0106bcb:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c0106bce	obj/kernel.asm	/^c0106bce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106bd1	obj/kernel.asm	/^c0106bd1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0106bd4	obj/kernel.asm	/^c0106bd4:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0106bd7	obj/kernel.asm	/^c0106bd7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0106bda	obj/kernel.asm	/^c0106bda:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106bdd	obj/kernel.asm	/^c0106bdd:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0106be0	obj/kernel.asm	/^c0106be0:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c0106be3	obj/kernel.asm	/^c0106be3:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0106be6	obj/kernel.asm	/^c0106be6:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0106be9	obj/kernel.asm	/^c0106be9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0106bec	obj/kernel.asm	/^c0106bec:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106bef	obj/kernel.asm	/^c0106bef:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0106bf2	obj/kernel.asm	/^c0106bf2:	89 10                	mov    %edx,(%eax)$/;"	l
c0106bf4	obj/kernel.asm	/^c0106bf4:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106bf7	obj/kernel.asm	/^c0106bf7:	8b 10                	mov    (%eax),%edx$/;"	l
c0106bf9	obj/kernel.asm	/^c0106bf9:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0106bfc	obj/kernel.asm	/^c0106bfc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106bff	obj/kernel.asm	/^c0106bff:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106c02	obj/kernel.asm	/^c0106c02:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0106c05	obj/kernel.asm	/^c0106c05:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106c08	obj/kernel.asm	/^c0106c08:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106c0b	obj/kernel.asm	/^c0106c0b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0106c0e	obj/kernel.asm	/^c0106c0e:	89 10                	mov    %edx,(%eax)$/;"	l
c0106c10	obj/kernel.asm	/^c0106c10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106c13	obj/kernel.asm	/^c0106c13:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106c16	obj/kernel.asm	/^c0106c16:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0106c19	obj/kernel.asm	/^c0106c19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106c1c	obj/kernel.asm	/^c0106c1c:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0106c1f	obj/kernel.asm	/^c0106c1f:	c9                   	leave  $/;"	l
c0106c20	obj/kernel.asm	/^c0106c20:	c3                   	ret    $/;"	l
c0106c21	obj/kernel.asm	/^c0106c21 <mm_destroy>:$/;"	l
c0106c21	obj/kernel.asm	/^c0106c21:	55                   	push   %ebp$/;"	l
c0106c22	obj/kernel.asm	/^c0106c22:	89 e5                	mov    %esp,%ebp$/;"	l
c0106c24	obj/kernel.asm	/^c0106c24:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106c27	obj/kernel.asm	/^c0106c27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106c2a	obj/kernel.asm	/^c0106c2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106c2d	obj/kernel.asm	/^c0106c2d:	e8 22 fc ff ff       	call   c0106854 <mm_count>$/;"	l
c0106c32	obj/kernel.asm	/^c0106c32:	85 c0                	test   %eax,%eax$/;"	l
c0106c34	obj/kernel.asm	/^c0106c34:	74 24                	je     c0106c5a <mm_destroy+0x39>$/;"	l
c0106c36	obj/kernel.asm	/^c0106c36:	c7 44 24 0c bd 83 11 	movl   $0xc01183bd,0xc(%esp)$/;"	l
c0106c3d	obj/kernel.asm	/^c0106c3d:	c0 $/;"	l
c0106c3e	obj/kernel.asm	/^c0106c3e:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106c45	obj/kernel.asm	/^c0106c45:	c0 $/;"	l
c0106c46	obj/kernel.asm	/^c0106c46:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0106c4d	obj/kernel.asm	/^c0106c4d:	00 $/;"	l
c0106c4e	obj/kernel.asm	/^c0106c4e:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106c55	obj/kernel.asm	/^c0106c55:	e8 dd 9f ff ff       	call   c0100c37 <__panic>$/;"	l
c0106c5a	obj/kernel.asm	/^c0106c5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106c5d	obj/kernel.asm	/^c0106c5d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106c60	obj/kernel.asm	/^c0106c60:	eb 36                	jmp    c0106c98 <mm_destroy+0x77>$/;"	l
c0106c62	obj/kernel.asm	/^c0106c62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106c65	obj/kernel.asm	/^c0106c65:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106c68	obj/kernel.asm	/^c0106c68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c6b	obj/kernel.asm	/^c0106c6b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106c6e	obj/kernel.asm	/^c0106c6e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106c71	obj/kernel.asm	/^c0106c71:	8b 12                	mov    (%edx),%edx$/;"	l
c0106c73	obj/kernel.asm	/^c0106c73:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0106c76	obj/kernel.asm	/^c0106c76:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106c79	obj/kernel.asm	/^c0106c79:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106c7c	obj/kernel.asm	/^c0106c7c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106c7f	obj/kernel.asm	/^c0106c7f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106c82	obj/kernel.asm	/^c0106c82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106c85	obj/kernel.asm	/^c0106c85:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0106c88	obj/kernel.asm	/^c0106c88:	89 10                	mov    %edx,(%eax)$/;"	l
c0106c8a	obj/kernel.asm	/^c0106c8a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106c8d	obj/kernel.asm	/^c0106c8d:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106c90	obj/kernel.asm	/^c0106c90:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106c93	obj/kernel.asm	/^c0106c93:	e8 6b 15 00 00       	call   c0108203 <kfree>$/;"	l
c0106c98	obj/kernel.asm	/^c0106c98:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106c9b	obj/kernel.asm	/^c0106c9b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106c9e	obj/kernel.asm	/^c0106c9e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106ca1	obj/kernel.asm	/^c0106ca1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106ca4	obj/kernel.asm	/^c0106ca4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106ca7	obj/kernel.asm	/^c0106ca7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106caa	obj/kernel.asm	/^c0106caa:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0106cad	obj/kernel.asm	/^c0106cad:	75 b3                	jne    c0106c62 <mm_destroy+0x41>$/;"	l
c0106caf	obj/kernel.asm	/^c0106caf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106cb2	obj/kernel.asm	/^c0106cb2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106cb5	obj/kernel.asm	/^c0106cb5:	e8 49 15 00 00       	call   c0108203 <kfree>$/;"	l
c0106cba	obj/kernel.asm	/^c0106cba:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c0106cc1	obj/kernel.asm	/^c0106cc1:	c9                   	leave  $/;"	l
c0106cc2	obj/kernel.asm	/^c0106cc2:	c3                   	ret    $/;"	l
c0106cc3	obj/kernel.asm	/^c0106cc3 <mm_map>:$/;"	l
c0106cc3	obj/kernel.asm	/^c0106cc3:	55                   	push   %ebp$/;"	l
c0106cc4	obj/kernel.asm	/^c0106cc4:	89 e5                	mov    %esp,%ebp$/;"	l
c0106cc6	obj/kernel.asm	/^c0106cc6:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106cc9	obj/kernel.asm	/^c0106cc9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106ccc	obj/kernel.asm	/^c0106ccc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106ccf	obj/kernel.asm	/^c0106ccf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106cd2	obj/kernel.asm	/^c0106cd2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106cd7	obj/kernel.asm	/^c0106cd7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106cda	obj/kernel.asm	/^c0106cda:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c0106ce1	obj/kernel.asm	/^c0106ce1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106ce4	obj/kernel.asm	/^c0106ce4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106ce7	obj/kernel.asm	/^c0106ce7:	01 c2                	add    %eax,%edx$/;"	l
c0106ce9	obj/kernel.asm	/^c0106ce9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106cec	obj/kernel.asm	/^c0106cec:	01 d0                	add    %edx,%eax$/;"	l
c0106cee	obj/kernel.asm	/^c0106cee:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0106cf1	obj/kernel.asm	/^c0106cf1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106cf4	obj/kernel.asm	/^c0106cf4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106cf7	obj/kernel.asm	/^c0106cf7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0106cfc	obj/kernel.asm	/^c0106cfc:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c0106cff	obj/kernel.asm	/^c0106cff:	89 d0                	mov    %edx,%eax$/;"	l
c0106d01	obj/kernel.asm	/^c0106d01:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106d04	obj/kernel.asm	/^c0106d04:	29 c2                	sub    %eax,%edx$/;"	l
c0106d06	obj/kernel.asm	/^c0106d06:	89 d0                	mov    %edx,%eax$/;"	l
c0106d08	obj/kernel.asm	/^c0106d08:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106d0b	obj/kernel.asm	/^c0106d0b:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c0106d12	obj/kernel.asm	/^c0106d12:	76 11                	jbe    c0106d25 <mm_map+0x62>$/;"	l
c0106d14	obj/kernel.asm	/^c0106d14:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d17	obj/kernel.asm	/^c0106d17:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0106d1a	obj/kernel.asm	/^c0106d1a:	73 09                	jae    c0106d25 <mm_map+0x62>$/;"	l
c0106d1c	obj/kernel.asm	/^c0106d1c:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c0106d23	obj/kernel.asm	/^c0106d23:	76 0a                	jbe    c0106d2f <mm_map+0x6c>$/;"	l
c0106d25	obj/kernel.asm	/^c0106d25:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0106d2a	obj/kernel.asm	/^c0106d2a:	e9 ae 00 00 00       	jmp    c0106ddd <mm_map+0x11a>$/;"	l
c0106d2f	obj/kernel.asm	/^c0106d2f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106d33	obj/kernel.asm	/^c0106d33:	75 24                	jne    c0106d59 <mm_map+0x96>$/;"	l
c0106d35	obj/kernel.asm	/^c0106d35:	c7 44 24 0c cf 83 11 	movl   $0xc01183cf,0xc(%esp)$/;"	l
c0106d3c	obj/kernel.asm	/^c0106d3c:	c0 $/;"	l
c0106d3d	obj/kernel.asm	/^c0106d3d:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106d44	obj/kernel.asm	/^c0106d44:	c0 $/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	c7 44 24 04 a7 00 00 	movl   $0xa7,0x4(%esp)$/;"	l
c0106d4c	obj/kernel.asm	/^c0106d4c:	00 $/;"	l
c0106d4d	obj/kernel.asm	/^c0106d4d:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106d54	obj/kernel.asm	/^c0106d54:	e8 de 9e ff ff       	call   c0100c37 <__panic>$/;"	l
c0106d59	obj/kernel.asm	/^c0106d59:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0106d60	obj/kernel.asm	/^c0106d60:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d63	obj/kernel.asm	/^c0106d63:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106d67	obj/kernel.asm	/^c0106d67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106d6a	obj/kernel.asm	/^c0106d6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106d6d	obj/kernel.asm	/^c0106d6d:	e8 2a fc ff ff       	call   c010699c <find_vma>$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106d75	obj/kernel.asm	/^c0106d75:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0106d79	obj/kernel.asm	/^c0106d79:	74 0d                	je     c0106d88 <mm_map+0xc5>$/;"	l
c0106d7b	obj/kernel.asm	/^c0106d7b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d7e	obj/kernel.asm	/^c0106d7e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106d81	obj/kernel.asm	/^c0106d81:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	73 02                	jae    c0106d88 <mm_map+0xc5>$/;"	l
c0106d86	obj/kernel.asm	/^c0106d86:	eb 52                	jmp    c0106dda <mm_map+0x117>$/;"	l
c0106d88	obj/kernel.asm	/^c0106d88:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0106d8f	obj/kernel.asm	/^c0106d8f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106d92	obj/kernel.asm	/^c0106d92:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106d96	obj/kernel.asm	/^c0106d96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106d99	obj/kernel.asm	/^c0106d99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106d9d	obj/kernel.asm	/^c0106d9d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106da0	obj/kernel.asm	/^c0106da0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106da3	obj/kernel.asm	/^c0106da3:	e8 b9 fb ff ff       	call   c0106961 <vma_create>$/;"	l
c0106da8	obj/kernel.asm	/^c0106da8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106dab	obj/kernel.asm	/^c0106dab:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	75 02                	jne    c0106db3 <mm_map+0xf0>$/;"	l
c0106db1	obj/kernel.asm	/^c0106db1:	eb 27                	jmp    c0106dda <mm_map+0x117>$/;"	l
c0106db3	obj/kernel.asm	/^c0106db3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106db6	obj/kernel.asm	/^c0106db6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106dba	obj/kernel.asm	/^c0106dba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106dbd	obj/kernel.asm	/^c0106dbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106dc0	obj/kernel.asm	/^c0106dc0:	e8 2c fd ff ff       	call   c0106af1 <insert_vma_struct>$/;"	l
c0106dc5	obj/kernel.asm	/^c0106dc5:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	74 08                	je     c0106dd3 <mm_map+0x110>$/;"	l
c0106dcb	obj/kernel.asm	/^c0106dcb:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0106dce	obj/kernel.asm	/^c0106dce:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106dd1	obj/kernel.asm	/^c0106dd1:	89 10                	mov    %edx,(%eax)$/;"	l
c0106dd3	obj/kernel.asm	/^c0106dd3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106dda	obj/kernel.asm	/^c0106dda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ddd	obj/kernel.asm	/^c0106ddd:	c9                   	leave  $/;"	l
c0106dde	obj/kernel.asm	/^c0106dde:	c3                   	ret    $/;"	l
c0106ddf	obj/kernel.asm	/^c0106ddf <dup_mmap>:$/;"	l
c0106ddf	obj/kernel.asm	/^c0106ddf:	55                   	push   %ebp$/;"	l
c0106de0	obj/kernel.asm	/^c0106de0:	89 e5                	mov    %esp,%ebp$/;"	l
c0106de2	obj/kernel.asm	/^c0106de2:	56                   	push   %esi$/;"	l
c0106de3	obj/kernel.asm	/^c0106de3:	53                   	push   %ebx$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0106de7	obj/kernel.asm	/^c0106de7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106deb	obj/kernel.asm	/^c0106deb:	74 06                	je     c0106df3 <dup_mmap+0x14>$/;"	l
c0106ded	obj/kernel.asm	/^c0106ded:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0106df1	obj/kernel.asm	/^c0106df1:	75 24                	jne    c0106e17 <dup_mmap+0x38>$/;"	l
c0106df3	obj/kernel.asm	/^c0106df3:	c7 44 24 0c da 83 11 	movl   $0xc01183da,0xc(%esp)$/;"	l
c0106dfa	obj/kernel.asm	/^c0106dfa:	c0 $/;"	l
c0106dfb	obj/kernel.asm	/^c0106dfb:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106e02	obj/kernel.asm	/^c0106e02:	c0 $/;"	l
c0106e03	obj/kernel.asm	/^c0106e03:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c0106e0a	obj/kernel.asm	/^c0106e0a:	00 $/;"	l
c0106e0b	obj/kernel.asm	/^c0106e0b:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106e12	obj/kernel.asm	/^c0106e12:	e8 20 9e ff ff       	call   c0100c37 <__panic>$/;"	l
c0106e17	obj/kernel.asm	/^c0106e17:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106e1a	obj/kernel.asm	/^c0106e1a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106e1d	obj/kernel.asm	/^c0106e1d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106e20	obj/kernel.asm	/^c0106e20:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106e23	obj/kernel.asm	/^c0106e23:	e9 92 00 00 00       	jmp    c0106eba <dup_mmap+0xdb>$/;"	l
c0106e28	obj/kernel.asm	/^c0106e28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e2b	obj/kernel.asm	/^c0106e2b:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106e2e	obj/kernel.asm	/^c0106e2e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106e31	obj/kernel.asm	/^c0106e31:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0106e37	obj/kernel.asm	/^c0106e37:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106e40	obj/kernel.asm	/^c0106e40:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106e43	obj/kernel.asm	/^c0106e43:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106e4b	obj/kernel.asm	/^c0106e4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106e4e	obj/kernel.asm	/^c0106e4e:	e8 0e fb ff ff       	call   c0106961 <vma_create>$/;"	l
c0106e53	obj/kernel.asm	/^c0106e53:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106e56	obj/kernel.asm	/^c0106e56:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	75 07                	jne    c0106e63 <dup_mmap+0x84>$/;"	l
c0106e5c	obj/kernel.asm	/^c0106e5c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0106e61	obj/kernel.asm	/^c0106e61:	eb 76                	jmp    c0106ed9 <dup_mmap+0xfa>$/;"	l
c0106e63	obj/kernel.asm	/^c0106e63:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106e66	obj/kernel.asm	/^c0106e66:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106e6a	obj/kernel.asm	/^c0106e6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e6d	obj/kernel.asm	/^c0106e6d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106e70	obj/kernel.asm	/^c0106e70:	e8 7c fc ff ff       	call   c0106af1 <insert_vma_struct>$/;"	l
c0106e75	obj/kernel.asm	/^c0106e75:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0106e7c	obj/kernel.asm	/^c0106e7c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106e7f	obj/kernel.asm	/^c0106e7f:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0106e82	obj/kernel.asm	/^c0106e82:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106e85	obj/kernel.asm	/^c0106e85:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0106e88	obj/kernel.asm	/^c0106e88:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106e8b	obj/kernel.asm	/^c0106e8b:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0106e8e	obj/kernel.asm	/^c0106e8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e91	obj/kernel.asm	/^c0106e91:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106e94	obj/kernel.asm	/^c0106e94:	8b 75 e4             	mov    -0x1c(%ebp),%esi$/;"	l
c0106e97	obj/kernel.asm	/^c0106e97:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0106e9b	obj/kernel.asm	/^c0106e9b:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c0106e9f	obj/kernel.asm	/^c0106e9f:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0106ea3	obj/kernel.asm	/^c0106ea3:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	e8 09 e4 ff ff       	call   c01052b8 <copy_range>$/;"	l
c0106eaf	obj/kernel.asm	/^c0106eaf:	85 c0                	test   %eax,%eax$/;"	l
c0106eb1	obj/kernel.asm	/^c0106eb1:	74 07                	je     c0106eba <dup_mmap+0xdb>$/;"	l
c0106eb3	obj/kernel.asm	/^c0106eb3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0106eb8	obj/kernel.asm	/^c0106eb8:	eb 1f                	jmp    c0106ed9 <dup_mmap+0xfa>$/;"	l
c0106eba	obj/kernel.asm	/^c0106eba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106ec3	obj/kernel.asm	/^c0106ec3:	8b 00                	mov    (%eax),%eax$/;"	l
c0106ec5	obj/kernel.asm	/^c0106ec5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ec8	obj/kernel.asm	/^c0106ec8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ecb	obj/kernel.asm	/^c0106ecb:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0106ece	obj/kernel.asm	/^c0106ece:	0f 85 54 ff ff ff    	jne    c0106e28 <dup_mmap+0x49>$/;"	l
c0106ed4	obj/kernel.asm	/^c0106ed4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106ed9	obj/kernel.asm	/^c0106ed9:	83 c4 40             	add    $0x40,%esp$/;"	l
c0106edc	obj/kernel.asm	/^c0106edc:	5b                   	pop    %ebx$/;"	l
c0106edd	obj/kernel.asm	/^c0106edd:	5e                   	pop    %esi$/;"	l
c0106ede	obj/kernel.asm	/^c0106ede:	5d                   	pop    %ebp$/;"	l
c0106edf	obj/kernel.asm	/^c0106edf:	c3                   	ret    $/;"	l
c0106ee0	obj/kernel.asm	/^c0106ee0 <exit_mmap>:$/;"	l
c0106ee0	obj/kernel.asm	/^c0106ee0:	55                   	push   %ebp$/;"	l
c0106ee1	obj/kernel.asm	/^c0106ee1:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ee3	obj/kernel.asm	/^c0106ee3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0106ee6	obj/kernel.asm	/^c0106ee6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106eea	obj/kernel.asm	/^c0106eea:	74 0f                	je     c0106efb <exit_mmap+0x1b>$/;"	l
c0106eec	obj/kernel.asm	/^c0106eec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106eef	obj/kernel.asm	/^c0106eef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ef2	obj/kernel.asm	/^c0106ef2:	e8 5d f9 ff ff       	call   c0106854 <mm_count>$/;"	l
c0106ef7	obj/kernel.asm	/^c0106ef7:	85 c0                	test   %eax,%eax$/;"	l
c0106ef9	obj/kernel.asm	/^c0106ef9:	74 24                	je     c0106f1f <exit_mmap+0x3f>$/;"	l
c0106efb	obj/kernel.asm	/^c0106efb:	c7 44 24 0c f8 83 11 	movl   $0xc01183f8,0xc(%esp)$/;"	l
c0106f02	obj/kernel.asm	/^c0106f02:	c0 $/;"	l
c0106f03	obj/kernel.asm	/^c0106f03:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0106f0a	obj/kernel.asm	/^c0106f0a:	c0 $/;"	l
c0106f0b	obj/kernel.asm	/^c0106f0b:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c0106f12	obj/kernel.asm	/^c0106f12:	00 $/;"	l
c0106f13	obj/kernel.asm	/^c0106f13:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	e8 18 9d ff ff       	call   c0100c37 <__panic>$/;"	l
c0106f1f	obj/kernel.asm	/^c0106f1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f22	obj/kernel.asm	/^c0106f22:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106f25	obj/kernel.asm	/^c0106f25:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106f2e	obj/kernel.asm	/^c0106f2e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106f31	obj/kernel.asm	/^c0106f31:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f34	obj/kernel.asm	/^c0106f34:	eb 28                	jmp    c0106f5e <exit_mmap+0x7e>$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f39	obj/kernel.asm	/^c0106f39:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106f3c	obj/kernel.asm	/^c0106f3c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106f3f	obj/kernel.asm	/^c0106f3f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106f42	obj/kernel.asm	/^c0106f42:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106f45	obj/kernel.asm	/^c0106f45:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106f48	obj/kernel.asm	/^c0106f48:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106f4b	obj/kernel.asm	/^c0106f4b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106f4f	obj/kernel.asm	/^c0106f4f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106f53	obj/kernel.asm	/^c0106f53:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106f56	obj/kernel.asm	/^c0106f56:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106f59	obj/kernel.asm	/^c0106f59:	e8 5f e1 ff ff       	call   c01050bd <unmap_range>$/;"	l
c0106f5e	obj/kernel.asm	/^c0106f5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f61	obj/kernel.asm	/^c0106f61:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106f64	obj/kernel.asm	/^c0106f64:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106f67	obj/kernel.asm	/^c0106f67:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106f6a	obj/kernel.asm	/^c0106f6a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0106f73	obj/kernel.asm	/^c0106f73:	75 c1                	jne    c0106f36 <exit_mmap+0x56>$/;"	l
c0106f75	obj/kernel.asm	/^c0106f75:	eb 28                	jmp    c0106f9f <exit_mmap+0xbf>$/;"	l
c0106f77	obj/kernel.asm	/^c0106f77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f7a	obj/kernel.asm	/^c0106f7a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106f7d	obj/kernel.asm	/^c0106f7d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106f80	obj/kernel.asm	/^c0106f80:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f83	obj/kernel.asm	/^c0106f83:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106f86	obj/kernel.asm	/^c0106f86:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106f89	obj/kernel.asm	/^c0106f89:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106f8c	obj/kernel.asm	/^c0106f8c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106f90	obj/kernel.asm	/^c0106f90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106f94	obj/kernel.asm	/^c0106f94:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106f97	obj/kernel.asm	/^c0106f97:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106f9a	obj/kernel.asm	/^c0106f9a:	e8 12 e2 ff ff       	call   c01051b1 <exit_range>$/;"	l
c0106f9f	obj/kernel.asm	/^c0106f9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fa2	obj/kernel.asm	/^c0106fa2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106fa5	obj/kernel.asm	/^c0106fa5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106fa8	obj/kernel.asm	/^c0106fa8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106fab	obj/kernel.asm	/^c0106fab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106fae	obj/kernel.asm	/^c0106fae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fb1	obj/kernel.asm	/^c0106fb1:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0106fb4	obj/kernel.asm	/^c0106fb4:	75 c1                	jne    c0106f77 <exit_mmap+0x97>$/;"	l
c0106fb6	obj/kernel.asm	/^c0106fb6:	c9                   	leave  $/;"	l
c0106fb7	obj/kernel.asm	/^c0106fb7:	c3                   	ret    $/;"	l
c0106fb8	obj/kernel.asm	/^c0106fb8 <copy_from_user>:$/;"	l
c0106fb8	obj/kernel.asm	/^c0106fb8:	55                   	push   %ebp$/;"	l
c0106fb9	obj/kernel.asm	/^c0106fb9:	89 e5                	mov    %esp,%ebp$/;"	l
c0106fbb	obj/kernel.asm	/^c0106fbb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106fbe	obj/kernel.asm	/^c0106fbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106fc1	obj/kernel.asm	/^c0106fc1:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0106fc4	obj/kernel.asm	/^c0106fc4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0106fc8	obj/kernel.asm	/^c0106fc8:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0106fcb	obj/kernel.asm	/^c0106fcb:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0106fcf	obj/kernel.asm	/^c0106fcf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106fd3	obj/kernel.asm	/^c0106fd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fd6	obj/kernel.asm	/^c0106fd6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106fd9	obj/kernel.asm	/^c0106fd9:	e8 dc 09 00 00       	call   c01079ba <user_mem_check>$/;"	l
c0106fde	obj/kernel.asm	/^c0106fde:	85 c0                	test   %eax,%eax$/;"	l
c0106fe0	obj/kernel.asm	/^c0106fe0:	75 07                	jne    c0106fe9 <copy_from_user+0x31>$/;"	l
c0106fe2	obj/kernel.asm	/^c0106fe2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106fe7	obj/kernel.asm	/^c0106fe7:	eb 1e                	jmp    c0107007 <copy_from_user+0x4f>$/;"	l
c0106fe9	obj/kernel.asm	/^c0106fe9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106fec	obj/kernel.asm	/^c0106fec:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0106ff0	obj/kernel.asm	/^c0106ff0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106ff3	obj/kernel.asm	/^c0106ff3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0106ff7	obj/kernel.asm	/^c0106ff7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106ffa	obj/kernel.asm	/^c0106ffa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0106ffd	obj/kernel.asm	/^c0106ffd:	e8 70 f7 00 00       	call   c0116772 <memcpy>$/;"	l
c0107002	obj/kernel.asm	/^c0107002:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107007	obj/kernel.asm	/^c0107007:	c9                   	leave  $/;"	l
c0107008	obj/kernel.asm	/^c0107008:	c3                   	ret    $/;"	l
c0107009	obj/kernel.asm	/^c0107009 <copy_to_user>:$/;"	l
c0107009	obj/kernel.asm	/^c0107009:	55                   	push   %ebp$/;"	l
c010700a	obj/kernel.asm	/^c010700a:	89 e5                	mov    %esp,%ebp$/;"	l
c010700c	obj/kernel.asm	/^c010700c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010700f	obj/kernel.asm	/^c010700f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107012	obj/kernel.asm	/^c0107012:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0107019	obj/kernel.asm	/^c0107019:	00 $/;"	l
c010701a	obj/kernel.asm	/^c010701a:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010701d	obj/kernel.asm	/^c010701d:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0107021	obj/kernel.asm	/^c0107021:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107025	obj/kernel.asm	/^c0107025:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107028	obj/kernel.asm	/^c0107028:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010702b	obj/kernel.asm	/^c010702b:	e8 8a 09 00 00       	call   c01079ba <user_mem_check>$/;"	l
c0107030	obj/kernel.asm	/^c0107030:	85 c0                	test   %eax,%eax$/;"	l
c0107032	obj/kernel.asm	/^c0107032:	75 07                	jne    c010703b <copy_to_user+0x32>$/;"	l
c0107034	obj/kernel.asm	/^c0107034:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107039	obj/kernel.asm	/^c0107039:	eb 1e                	jmp    c0107059 <copy_to_user+0x50>$/;"	l
c010703b	obj/kernel.asm	/^c010703b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107042	obj/kernel.asm	/^c0107042:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107045	obj/kernel.asm	/^c0107045:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107049	obj/kernel.asm	/^c0107049:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010704c	obj/kernel.asm	/^c010704c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	e8 1e f7 00 00       	call   c0116772 <memcpy>$/;"	l
c0107054	obj/kernel.asm	/^c0107054:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107059	obj/kernel.asm	/^c0107059:	c9                   	leave  $/;"	l
c010705a	obj/kernel.asm	/^c010705a:	c3                   	ret    $/;"	l
c010705b	obj/kernel.asm	/^c010705b <vmm_init>:$/;"	l
c010705b	obj/kernel.asm	/^c010705b:	55                   	push   %ebp$/;"	l
c010705c	obj/kernel.asm	/^c010705c:	89 e5                	mov    %esp,%ebp$/;"	l
c010705e	obj/kernel.asm	/^c010705e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107061	obj/kernel.asm	/^c0107061:	e8 02 00 00 00       	call   c0107068 <check_vmm>$/;"	l
c0107066	obj/kernel.asm	/^c0107066:	c9                   	leave  $/;"	l
c0107067	obj/kernel.asm	/^c0107067:	c3                   	ret    $/;"	l
c0107068	obj/kernel.asm	/^c0107068 <check_vmm>:$/;"	l
c0107068	obj/kernel.asm	/^c0107068:	55                   	push   %ebp$/;"	l
c0107069	obj/kernel.asm	/^c0107069:	89 e5                	mov    %esp,%ebp$/;"	l
c010706b	obj/kernel.asm	/^c010706b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010706e	obj/kernel.asm	/^c010706e:	e8 b9 d6 ff ff       	call   c010472c <nr_free_pages>$/;"	l
c0107073	obj/kernel.asm	/^c0107073:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107076	obj/kernel.asm	/^c0107076:	e8 13 00 00 00       	call   c010708e <check_vma_struct>$/;"	l
c010707b	obj/kernel.asm	/^c010707b:	e8 a7 04 00 00       	call   c0107527 <check_pgfault>$/;"	l
c0107080	obj/kernel.asm	/^c0107080:	c7 04 24 18 84 11 c0 	movl   $0xc0118418,(%esp)$/;"	l
c0107087	obj/kernel.asm	/^c0107087:	e8 54 9a ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010708c	obj/kernel.asm	/^c010708c:	c9                   	leave  $/;"	l
c010708d	obj/kernel.asm	/^c010708d:	c3                   	ret    $/;"	l
c010708e	obj/kernel.asm	/^c010708e <check_vma_struct>:$/;"	l
c010708e	obj/kernel.asm	/^c010708e:	55                   	push   %ebp$/;"	l
c010708f	obj/kernel.asm	/^c010708f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107091	obj/kernel.asm	/^c0107091:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0107094	obj/kernel.asm	/^c0107094:	e8 93 d6 ff ff       	call   c010472c <nr_free_pages>$/;"	l
c0107099	obj/kernel.asm	/^c0107099:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010709c	obj/kernel.asm	/^c010709c:	e8 1b f8 ff ff       	call   c01068bc <mm_create>$/;"	l
c01070a1	obj/kernel.asm	/^c01070a1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01070a4	obj/kernel.asm	/^c01070a4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01070a8	obj/kernel.asm	/^c01070a8:	75 24                	jne    c01070ce <check_vma_struct+0x40>$/;"	l
c01070aa	obj/kernel.asm	/^c01070aa:	c7 44 24 0c cf 83 11 	movl   $0xc01183cf,0xc(%esp)$/;"	l
c01070b1	obj/kernel.asm	/^c01070b1:	c0 $/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01070b9	obj/kernel.asm	/^c01070b9:	c0 $/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c01070c1	obj/kernel.asm	/^c01070c1:	00 $/;"	l
c01070c2	obj/kernel.asm	/^c01070c2:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01070c9	obj/kernel.asm	/^c01070c9:	e8 69 9b ff ff       	call   c0100c37 <__panic>$/;"	l
c01070ce	obj/kernel.asm	/^c01070ce:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c01070d5	obj/kernel.asm	/^c01070d5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01070d8	obj/kernel.asm	/^c01070d8:	89 d0                	mov    %edx,%eax$/;"	l
c01070da	obj/kernel.asm	/^c01070da:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01070dd	obj/kernel.asm	/^c01070dd:	01 d0                	add    %edx,%eax$/;"	l
c01070df	obj/kernel.asm	/^c01070df:	01 c0                	add    %eax,%eax$/;"	l
c01070e1	obj/kernel.asm	/^c01070e1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01070e4	obj/kernel.asm	/^c01070e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070e7	obj/kernel.asm	/^c01070e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	eb 70                	jmp    c010715c <check_vma_struct+0xce>$/;"	l
c01070ec	obj/kernel.asm	/^c01070ec:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01070ef	obj/kernel.asm	/^c01070ef:	89 d0                	mov    %edx,%eax$/;"	l
c01070f1	obj/kernel.asm	/^c01070f1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01070f4	obj/kernel.asm	/^c01070f4:	01 d0                	add    %edx,%eax$/;"	l
c01070f6	obj/kernel.asm	/^c01070f6:	83 c0 02             	add    $0x2,%eax$/;"	l
c01070f9	obj/kernel.asm	/^c01070f9:	89 c1                	mov    %eax,%ecx$/;"	l
c01070fb	obj/kernel.asm	/^c01070fb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01070fe	obj/kernel.asm	/^c01070fe:	89 d0                	mov    %edx,%eax$/;"	l
c0107100	obj/kernel.asm	/^c0107100:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107103	obj/kernel.asm	/^c0107103:	01 d0                	add    %edx,%eax$/;"	l
c0107105	obj/kernel.asm	/^c0107105:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010710c	obj/kernel.asm	/^c010710c:	00 $/;"	l
c010710d	obj/kernel.asm	/^c010710d:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0107111	obj/kernel.asm	/^c0107111:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107114	obj/kernel.asm	/^c0107114:	e8 48 f8 ff ff       	call   c0106961 <vma_create>$/;"	l
c0107119	obj/kernel.asm	/^c0107119:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010711c	obj/kernel.asm	/^c010711c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0107120	obj/kernel.asm	/^c0107120:	75 24                	jne    c0107146 <check_vma_struct+0xb8>$/;"	l
c0107122	obj/kernel.asm	/^c0107122:	c7 44 24 0c 30 84 11 	movl   $0xc0118430,0xc(%esp)$/;"	l
c0107129	obj/kernel.asm	/^c0107129:	c0 $/;"	l
c010712a	obj/kernel.asm	/^c010712a:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0107131	obj/kernel.asm	/^c0107131:	c0 $/;"	l
c0107132	obj/kernel.asm	/^c0107132:	c7 44 24 04 15 01 00 	movl   $0x115,0x4(%esp)$/;"	l
c0107139	obj/kernel.asm	/^c0107139:	00 $/;"	l
c010713a	obj/kernel.asm	/^c010713a:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107141	obj/kernel.asm	/^c0107141:	e8 f1 9a ff ff       	call   c0100c37 <__panic>$/;"	l
c0107146	obj/kernel.asm	/^c0107146:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107149	obj/kernel.asm	/^c0107149:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010714d	obj/kernel.asm	/^c010714d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107150	obj/kernel.asm	/^c0107150:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107153	obj/kernel.asm	/^c0107153:	e8 99 f9 ff ff       	call   c0106af1 <insert_vma_struct>$/;"	l
c0107158	obj/kernel.asm	/^c0107158:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010715c	obj/kernel.asm	/^c010715c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107160	obj/kernel.asm	/^c0107160:	7f 8a                	jg     c01070ec <check_vma_struct+0x5e>$/;"	l
c0107162	obj/kernel.asm	/^c0107162:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107165	obj/kernel.asm	/^c0107165:	83 c0 01             	add    $0x1,%eax$/;"	l
c0107168	obj/kernel.asm	/^c0107168:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010716b	obj/kernel.asm	/^c010716b:	eb 70                	jmp    c01071dd <check_vma_struct+0x14f>$/;"	l
c010716d	obj/kernel.asm	/^c010716d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107170	obj/kernel.asm	/^c0107170:	89 d0                	mov    %edx,%eax$/;"	l
c0107172	obj/kernel.asm	/^c0107172:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107175	obj/kernel.asm	/^c0107175:	01 d0                	add    %edx,%eax$/;"	l
c0107177	obj/kernel.asm	/^c0107177:	83 c0 02             	add    $0x2,%eax$/;"	l
c010717a	obj/kernel.asm	/^c010717a:	89 c1                	mov    %eax,%ecx$/;"	l
c010717c	obj/kernel.asm	/^c010717c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010717f	obj/kernel.asm	/^c010717f:	89 d0                	mov    %edx,%eax$/;"	l
c0107181	obj/kernel.asm	/^c0107181:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107184	obj/kernel.asm	/^c0107184:	01 d0                	add    %edx,%eax$/;"	l
c0107186	obj/kernel.asm	/^c0107186:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010718d	obj/kernel.asm	/^c010718d:	00 $/;"	l
c010718e	obj/kernel.asm	/^c010718e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0107192	obj/kernel.asm	/^c0107192:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107195	obj/kernel.asm	/^c0107195:	e8 c7 f7 ff ff       	call   c0106961 <vma_create>$/;"	l
c010719a	obj/kernel.asm	/^c010719a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010719d	obj/kernel.asm	/^c010719d:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c01071a1	obj/kernel.asm	/^c01071a1:	75 24                	jne    c01071c7 <check_vma_struct+0x139>$/;"	l
c01071a3	obj/kernel.asm	/^c01071a3:	c7 44 24 0c 30 84 11 	movl   $0xc0118430,0xc(%esp)$/;"	l
c01071aa	obj/kernel.asm	/^c01071aa:	c0 $/;"	l
c01071ab	obj/kernel.asm	/^c01071ab:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01071b2	obj/kernel.asm	/^c01071b2:	c0 $/;"	l
c01071b3	obj/kernel.asm	/^c01071b3:	c7 44 24 04 1b 01 00 	movl   $0x11b,0x4(%esp)$/;"	l
c01071ba	obj/kernel.asm	/^c01071ba:	00 $/;"	l
c01071bb	obj/kernel.asm	/^c01071bb:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01071c2	obj/kernel.asm	/^c01071c2:	e8 70 9a ff ff       	call   c0100c37 <__panic>$/;"	l
c01071c7	obj/kernel.asm	/^c01071c7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01071ca	obj/kernel.asm	/^c01071ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01071ce	obj/kernel.asm	/^c01071ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01071d1	obj/kernel.asm	/^c01071d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01071d4	obj/kernel.asm	/^c01071d4:	e8 18 f9 ff ff       	call   c0106af1 <insert_vma_struct>$/;"	l
c01071d9	obj/kernel.asm	/^c01071d9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01071dd	obj/kernel.asm	/^c01071dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071e0	obj/kernel.asm	/^c01071e0:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01071e3	obj/kernel.asm	/^c01071e3:	7e 88                	jle    c010716d <check_vma_struct+0xdf>$/;"	l
c01071e5	obj/kernel.asm	/^c01071e5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01071e8	obj/kernel.asm	/^c01071e8:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01071eb	obj/kernel.asm	/^c01071eb:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01071ee	obj/kernel.asm	/^c01071ee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071f1	obj/kernel.asm	/^c01071f1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01071f4	obj/kernel.asm	/^c01071f4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c01071fb	obj/kernel.asm	/^c01071fb:	e9 97 00 00 00       	jmp    c0107297 <check_vma_struct+0x209>$/;"	l
c0107200	obj/kernel.asm	/^c0107200:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107203	obj/kernel.asm	/^c0107203:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107206	obj/kernel.asm	/^c0107206:	75 24                	jne    c010722c <check_vma_struct+0x19e>$/;"	l
c0107208	obj/kernel.asm	/^c0107208:	c7 44 24 0c 3c 84 11 	movl   $0xc011843c,0xc(%esp)$/;"	l
c010720f	obj/kernel.asm	/^c010720f:	c0 $/;"	l
c0107210	obj/kernel.asm	/^c0107210:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0107217	obj/kernel.asm	/^c0107217:	c0 $/;"	l
c0107218	obj/kernel.asm	/^c0107218:	c7 44 24 04 22 01 00 	movl   $0x122,0x4(%esp)$/;"	l
c010721f	obj/kernel.asm	/^c010721f:	00 $/;"	l
c0107220	obj/kernel.asm	/^c0107220:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107227	obj/kernel.asm	/^c0107227:	e8 0b 9a ff ff       	call   c0100c37 <__panic>$/;"	l
c010722c	obj/kernel.asm	/^c010722c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010722f	obj/kernel.asm	/^c010722f:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107232	obj/kernel.asm	/^c0107232:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107235	obj/kernel.asm	/^c0107235:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107238	obj/kernel.asm	/^c0107238:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010723b	obj/kernel.asm	/^c010723b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010723e	obj/kernel.asm	/^c010723e:	89 d0                	mov    %edx,%eax$/;"	l
c0107240	obj/kernel.asm	/^c0107240:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107243	obj/kernel.asm	/^c0107243:	01 d0                	add    %edx,%eax$/;"	l
c0107245	obj/kernel.asm	/^c0107245:	39 c1                	cmp    %eax,%ecx$/;"	l
c0107247	obj/kernel.asm	/^c0107247:	75 17                	jne    c0107260 <check_vma_struct+0x1d2>$/;"	l
c0107249	obj/kernel.asm	/^c0107249:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010724c	obj/kernel.asm	/^c010724c:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c010724f	obj/kernel.asm	/^c010724f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107252	obj/kernel.asm	/^c0107252:	89 d0                	mov    %edx,%eax$/;"	l
c0107254	obj/kernel.asm	/^c0107254:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107257	obj/kernel.asm	/^c0107257:	01 d0                	add    %edx,%eax$/;"	l
c0107259	obj/kernel.asm	/^c0107259:	83 c0 02             	add    $0x2,%eax$/;"	l
c010725c	obj/kernel.asm	/^c010725c:	39 c1                	cmp    %eax,%ecx$/;"	l
c010725e	obj/kernel.asm	/^c010725e:	74 24                	je     c0107284 <check_vma_struct+0x1f6>$/;"	l
c0107260	obj/kernel.asm	/^c0107260:	c7 44 24 0c 54 84 11 	movl   $0xc0118454,0xc(%esp)$/;"	l
c0107267	obj/kernel.asm	/^c0107267:	c0 $/;"	l
c0107268	obj/kernel.asm	/^c0107268:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c010726f	obj/kernel.asm	/^c010726f:	c0 $/;"	l
c0107270	obj/kernel.asm	/^c0107270:	c7 44 24 04 24 01 00 	movl   $0x124,0x4(%esp)$/;"	l
c0107277	obj/kernel.asm	/^c0107277:	00 $/;"	l
c0107278	obj/kernel.asm	/^c0107278:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c010727f	obj/kernel.asm	/^c010727f:	e8 b3 99 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107284	obj/kernel.asm	/^c0107284:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107287	obj/kernel.asm	/^c0107287:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010728a	obj/kernel.asm	/^c010728a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010728d	obj/kernel.asm	/^c010728d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107290	obj/kernel.asm	/^c0107290:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107293	obj/kernel.asm	/^c0107293:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0107297	obj/kernel.asm	/^c0107297:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010729a	obj/kernel.asm	/^c010729a:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010729d	obj/kernel.asm	/^c010729d:	0f 8e 5d ff ff ff    	jle    c0107200 <check_vma_struct+0x172>$/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c01072aa	obj/kernel.asm	/^c01072aa:	e9 cd 01 00 00       	jmp    c010747c <check_vma_struct+0x3ee>$/;"	l
c01072af	obj/kernel.asm	/^c01072af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072b2	obj/kernel.asm	/^c01072b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01072b6	obj/kernel.asm	/^c01072b6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01072b9	obj/kernel.asm	/^c01072b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01072bc	obj/kernel.asm	/^c01072bc:	e8 db f6 ff ff       	call   c010699c <find_vma>$/;"	l
c01072c1	obj/kernel.asm	/^c01072c1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01072c4	obj/kernel.asm	/^c01072c4:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	75 24                	jne    c01072ee <check_vma_struct+0x260>$/;"	l
c01072ca	obj/kernel.asm	/^c01072ca:	c7 44 24 0c 89 84 11 	movl   $0xc0118489,0xc(%esp)$/;"	l
c01072d1	obj/kernel.asm	/^c01072d1:	c0 $/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01072d9	obj/kernel.asm	/^c01072d9:	c0 $/;"	l
c01072da	obj/kernel.asm	/^c01072da:	c7 44 24 04 2a 01 00 	movl   $0x12a,0x4(%esp)$/;"	l
c01072e1	obj/kernel.asm	/^c01072e1:	00 $/;"	l
c01072e2	obj/kernel.asm	/^c01072e2:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01072e9	obj/kernel.asm	/^c01072e9:	e8 49 99 ff ff       	call   c0100c37 <__panic>$/;"	l
c01072ee	obj/kernel.asm	/^c01072ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072f1	obj/kernel.asm	/^c01072f1:	83 c0 01             	add    $0x1,%eax$/;"	l
c01072f4	obj/kernel.asm	/^c01072f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01072f8	obj/kernel.asm	/^c01072f8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01072fb	obj/kernel.asm	/^c01072fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01072fe	obj/kernel.asm	/^c01072fe:	e8 99 f6 ff ff       	call   c010699c <find_vma>$/;"	l
c0107303	obj/kernel.asm	/^c0107303:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107306	obj/kernel.asm	/^c0107306:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c010730a	obj/kernel.asm	/^c010730a:	75 24                	jne    c0107330 <check_vma_struct+0x2a2>$/;"	l
c010730c	obj/kernel.asm	/^c010730c:	c7 44 24 0c 96 84 11 	movl   $0xc0118496,0xc(%esp)$/;"	l
c0107313	obj/kernel.asm	/^c0107313:	c0 $/;"	l
c0107314	obj/kernel.asm	/^c0107314:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c010731b	obj/kernel.asm	/^c010731b:	c0 $/;"	l
c010731c	obj/kernel.asm	/^c010731c:	c7 44 24 04 2c 01 00 	movl   $0x12c,0x4(%esp)$/;"	l
c0107323	obj/kernel.asm	/^c0107323:	00 $/;"	l
c0107324	obj/kernel.asm	/^c0107324:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c010732b	obj/kernel.asm	/^c010732b:	e8 07 99 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107330	obj/kernel.asm	/^c0107330:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107333	obj/kernel.asm	/^c0107333:	83 c0 02             	add    $0x2,%eax$/;"	l
c0107336	obj/kernel.asm	/^c0107336:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010733a	obj/kernel.asm	/^c010733a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010733d	obj/kernel.asm	/^c010733d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107340	obj/kernel.asm	/^c0107340:	e8 57 f6 ff ff       	call   c010699c <find_vma>$/;"	l
c0107345	obj/kernel.asm	/^c0107345:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107348	obj/kernel.asm	/^c0107348:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010734c	obj/kernel.asm	/^c010734c:	74 24                	je     c0107372 <check_vma_struct+0x2e4>$/;"	l
c010734e	obj/kernel.asm	/^c010734e:	c7 44 24 0c a3 84 11 	movl   $0xc01184a3,0xc(%esp)$/;"	l
c0107355	obj/kernel.asm	/^c0107355:	c0 $/;"	l
c0107356	obj/kernel.asm	/^c0107356:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c010735d	obj/kernel.asm	/^c010735d:	c0 $/;"	l
c010735e	obj/kernel.asm	/^c010735e:	c7 44 24 04 2e 01 00 	movl   $0x12e,0x4(%esp)$/;"	l
c0107365	obj/kernel.asm	/^c0107365:	00 $/;"	l
c0107366	obj/kernel.asm	/^c0107366:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c010736d	obj/kernel.asm	/^c010736d:	e8 c5 98 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107372	obj/kernel.asm	/^c0107372:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107375	obj/kernel.asm	/^c0107375:	83 c0 03             	add    $0x3,%eax$/;"	l
c0107378	obj/kernel.asm	/^c0107378:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010737c	obj/kernel.asm	/^c010737c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010737f	obj/kernel.asm	/^c010737f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107382	obj/kernel.asm	/^c0107382:	e8 15 f6 ff ff       	call   c010699c <find_vma>$/;"	l
c0107387	obj/kernel.asm	/^c0107387:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010738a	obj/kernel.asm	/^c010738a:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c010738e	obj/kernel.asm	/^c010738e:	74 24                	je     c01073b4 <check_vma_struct+0x326>$/;"	l
c0107390	obj/kernel.asm	/^c0107390:	c7 44 24 0c b0 84 11 	movl   $0xc01184b0,0xc(%esp)$/;"	l
c0107397	obj/kernel.asm	/^c0107397:	c0 $/;"	l
c0107398	obj/kernel.asm	/^c0107398:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c010739f	obj/kernel.asm	/^c010739f:	c0 $/;"	l
c01073a0	obj/kernel.asm	/^c01073a0:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c01073a7	obj/kernel.asm	/^c01073a7:	00 $/;"	l
c01073a8	obj/kernel.asm	/^c01073a8:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01073af	obj/kernel.asm	/^c01073af:	e8 83 98 ff ff       	call   c0100c37 <__panic>$/;"	l
c01073b4	obj/kernel.asm	/^c01073b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01073b7	obj/kernel.asm	/^c01073b7:	83 c0 04             	add    $0x4,%eax$/;"	l
c01073ba	obj/kernel.asm	/^c01073ba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01073be	obj/kernel.asm	/^c01073be:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01073c1	obj/kernel.asm	/^c01073c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01073c4	obj/kernel.asm	/^c01073c4:	e8 d3 f5 ff ff       	call   c010699c <find_vma>$/;"	l
c01073c9	obj/kernel.asm	/^c01073c9:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01073cc	obj/kernel.asm	/^c01073cc:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c01073d0	obj/kernel.asm	/^c01073d0:	74 24                	je     c01073f6 <check_vma_struct+0x368>$/;"	l
c01073d2	obj/kernel.asm	/^c01073d2:	c7 44 24 0c bd 84 11 	movl   $0xc01184bd,0xc(%esp)$/;"	l
c01073d9	obj/kernel.asm	/^c01073d9:	c0 $/;"	l
c01073da	obj/kernel.asm	/^c01073da:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01073e1	obj/kernel.asm	/^c01073e1:	c0 $/;"	l
c01073e2	obj/kernel.asm	/^c01073e2:	c7 44 24 04 32 01 00 	movl   $0x132,0x4(%esp)$/;"	l
c01073e9	obj/kernel.asm	/^c01073e9:	00 $/;"	l
c01073ea	obj/kernel.asm	/^c01073ea:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01073f1	obj/kernel.asm	/^c01073f1:	e8 41 98 ff ff       	call   c0100c37 <__panic>$/;"	l
c01073f6	obj/kernel.asm	/^c01073f6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01073f9	obj/kernel.asm	/^c01073f9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01073fc	obj/kernel.asm	/^c01073fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01073ff	obj/kernel.asm	/^c01073ff:	39 c2                	cmp    %eax,%edx$/;"	l
c0107401	obj/kernel.asm	/^c0107401:	75 10                	jne    c0107413 <check_vma_struct+0x385>$/;"	l
c0107403	obj/kernel.asm	/^c0107403:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107406	obj/kernel.asm	/^c0107406:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107409	obj/kernel.asm	/^c0107409:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010740c	obj/kernel.asm	/^c010740c:	83 c0 02             	add    $0x2,%eax$/;"	l
c010740f	obj/kernel.asm	/^c010740f:	39 c2                	cmp    %eax,%edx$/;"	l
c0107411	obj/kernel.asm	/^c0107411:	74 24                	je     c0107437 <check_vma_struct+0x3a9>$/;"	l
c0107413	obj/kernel.asm	/^c0107413:	c7 44 24 0c cc 84 11 	movl   $0xc01184cc,0xc(%esp)$/;"	l
c010741a	obj/kernel.asm	/^c010741a:	c0 $/;"	l
c010741b	obj/kernel.asm	/^c010741b:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0107422	obj/kernel.asm	/^c0107422:	c0 $/;"	l
c0107423	obj/kernel.asm	/^c0107423:	c7 44 24 04 34 01 00 	movl   $0x134,0x4(%esp)$/;"	l
c010742a	obj/kernel.asm	/^c010742a:	00 $/;"	l
c010742b	obj/kernel.asm	/^c010742b:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107432	obj/kernel.asm	/^c0107432:	e8 00 98 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107437	obj/kernel.asm	/^c0107437:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010743a	obj/kernel.asm	/^c010743a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010743d	obj/kernel.asm	/^c010743d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107440	obj/kernel.asm	/^c0107440:	39 c2                	cmp    %eax,%edx$/;"	l
c0107442	obj/kernel.asm	/^c0107442:	75 10                	jne    c0107454 <check_vma_struct+0x3c6>$/;"	l
c0107444	obj/kernel.asm	/^c0107444:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107447	obj/kernel.asm	/^c0107447:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010744a	obj/kernel.asm	/^c010744a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010744d	obj/kernel.asm	/^c010744d:	83 c0 02             	add    $0x2,%eax$/;"	l
c0107450	obj/kernel.asm	/^c0107450:	39 c2                	cmp    %eax,%edx$/;"	l
c0107452	obj/kernel.asm	/^c0107452:	74 24                	je     c0107478 <check_vma_struct+0x3ea>$/;"	l
c0107454	obj/kernel.asm	/^c0107454:	c7 44 24 0c fc 84 11 	movl   $0xc01184fc,0xc(%esp)$/;"	l
c010745b	obj/kernel.asm	/^c010745b:	c0 $/;"	l
c010745c	obj/kernel.asm	/^c010745c:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0107463	obj/kernel.asm	/^c0107463:	c0 $/;"	l
c0107464	obj/kernel.asm	/^c0107464:	c7 44 24 04 35 01 00 	movl   $0x135,0x4(%esp)$/;"	l
c010746b	obj/kernel.asm	/^c010746b:	00 $/;"	l
c010746c	obj/kernel.asm	/^c010746c:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107473	obj/kernel.asm	/^c0107473:	e8 bf 97 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107478	obj/kernel.asm	/^c0107478:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c010747c	obj/kernel.asm	/^c010747c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010747f	obj/kernel.asm	/^c010747f:	89 d0                	mov    %edx,%eax$/;"	l
c0107481	obj/kernel.asm	/^c0107481:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107484	obj/kernel.asm	/^c0107484:	01 d0                	add    %edx,%eax$/;"	l
c0107486	obj/kernel.asm	/^c0107486:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107489	obj/kernel.asm	/^c0107489:	0f 8d 20 fe ff ff    	jge    c01072af <check_vma_struct+0x221>$/;"	l
c010748f	obj/kernel.asm	/^c010748f:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0107496	obj/kernel.asm	/^c0107496:	eb 70                	jmp    c0107508 <check_vma_struct+0x47a>$/;"	l
c0107498	obj/kernel.asm	/^c0107498:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010749b	obj/kernel.asm	/^c010749b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010749f	obj/kernel.asm	/^c010749f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01074a2	obj/kernel.asm	/^c01074a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01074a5	obj/kernel.asm	/^c01074a5:	e8 f2 f4 ff ff       	call   c010699c <find_vma>$/;"	l
c01074aa	obj/kernel.asm	/^c01074aa:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01074ad	obj/kernel.asm	/^c01074ad:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01074b1	obj/kernel.asm	/^c01074b1:	74 27                	je     c01074da <check_vma_struct+0x44c>$/;"	l
c01074b3	obj/kernel.asm	/^c01074b3:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01074b6	obj/kernel.asm	/^c01074b6:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01074b9	obj/kernel.asm	/^c01074b9:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01074bc	obj/kernel.asm	/^c01074bc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01074bf	obj/kernel.asm	/^c01074bf:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01074c3	obj/kernel.asm	/^c01074c3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01074c7	obj/kernel.asm	/^c01074c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074ca	obj/kernel.asm	/^c01074ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01074ce	obj/kernel.asm	/^c01074ce:	c7 04 24 2c 85 11 c0 	movl   $0xc011852c,(%esp)$/;"	l
c01074d5	obj/kernel.asm	/^c01074d5:	e8 06 96 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01074da	obj/kernel.asm	/^c01074da:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01074de	obj/kernel.asm	/^c01074de:	74 24                	je     c0107504 <check_vma_struct+0x476>$/;"	l
c01074e0	obj/kernel.asm	/^c01074e0:	c7 44 24 0c 51 85 11 	movl   $0xc0118551,0xc(%esp)$/;"	l
c01074e7	obj/kernel.asm	/^c01074e7:	c0 $/;"	l
c01074e8	obj/kernel.asm	/^c01074e8:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01074ef	obj/kernel.asm	/^c01074ef:	c0 $/;"	l
c01074f0	obj/kernel.asm	/^c01074f0:	c7 44 24 04 3d 01 00 	movl   $0x13d,0x4(%esp)$/;"	l
c01074f7	obj/kernel.asm	/^c01074f7:	00 $/;"	l
c01074f8	obj/kernel.asm	/^c01074f8:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01074ff	obj/kernel.asm	/^c01074ff:	e8 33 97 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107504	obj/kernel.asm	/^c0107504:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0107508	obj/kernel.asm	/^c0107508:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010750c	obj/kernel.asm	/^c010750c:	79 8a                	jns    c0107498 <check_vma_struct+0x40a>$/;"	l
c010750e	obj/kernel.asm	/^c010750e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107511	obj/kernel.asm	/^c0107511:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107514	obj/kernel.asm	/^c0107514:	e8 08 f7 ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c0107519	obj/kernel.asm	/^c0107519:	c7 04 24 68 85 11 c0 	movl   $0xc0118568,(%esp)$/;"	l
c0107520	obj/kernel.asm	/^c0107520:	e8 bb 95 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0107525	obj/kernel.asm	/^c0107525:	c9                   	leave  $/;"	l
c0107526	obj/kernel.asm	/^c0107526:	c3                   	ret    $/;"	l
c0107527	obj/kernel.asm	/^c0107527 <check_pgfault>:$/;"	l
c0107527	obj/kernel.asm	/^c0107527:	55                   	push   %ebp$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	89 e5                	mov    %esp,%ebp$/;"	l
c010752a	obj/kernel.asm	/^c010752a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010752d	obj/kernel.asm	/^c010752d:	e8 fa d1 ff ff       	call   c010472c <nr_free_pages>$/;"	l
c0107532	obj/kernel.asm	/^c0107532:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107535	obj/kernel.asm	/^c0107535:	e8 82 f3 ff ff       	call   c01068bc <mm_create>$/;"	l
c010753a	obj/kernel.asm	/^c010753a:	a3 84 b6 15 c0       	mov    %eax,0xc015b684$/;"	l
c010753f	obj/kernel.asm	/^c010753f:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c0107544	obj/kernel.asm	/^c0107544:	85 c0                	test   %eax,%eax$/;"	l
c0107546	obj/kernel.asm	/^c0107546:	75 24                	jne    c010756c <check_pgfault+0x45>$/;"	l
c0107548	obj/kernel.asm	/^c0107548:	c7 44 24 0c 87 85 11 	movl   $0xc0118587,0xc(%esp)$/;"	l
c010754f	obj/kernel.asm	/^c010754f:	c0 $/;"	l
c0107550	obj/kernel.asm	/^c0107550:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0107557	obj/kernel.asm	/^c0107557:	c0 $/;"	l
c0107558	obj/kernel.asm	/^c0107558:	c7 44 24 04 4f 01 00 	movl   $0x14f,0x4(%esp)$/;"	l
c010755f	obj/kernel.asm	/^c010755f:	00 $/;"	l
c0107560	obj/kernel.asm	/^c0107560:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107567	obj/kernel.asm	/^c0107567:	e8 cb 96 ff ff       	call   c0100c37 <__panic>$/;"	l
c010756c	obj/kernel.asm	/^c010756c:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c0107571	obj/kernel.asm	/^c0107571:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107574	obj/kernel.asm	/^c0107574:	8b 15 c4 7e 15 c0    	mov    0xc0157ec4,%edx$/;"	l
c010757a	obj/kernel.asm	/^c010757a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010757d	obj/kernel.asm	/^c010757d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0107580	obj/kernel.asm	/^c0107580:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107583	obj/kernel.asm	/^c0107583:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107586	obj/kernel.asm	/^c0107586:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107589	obj/kernel.asm	/^c0107589:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010758c	obj/kernel.asm	/^c010758c:	8b 00                	mov    (%eax),%eax$/;"	l
c010758e	obj/kernel.asm	/^c010758e:	85 c0                	test   %eax,%eax$/;"	l
c0107590	obj/kernel.asm	/^c0107590:	74 24                	je     c01075b6 <check_pgfault+0x8f>$/;"	l
c0107592	obj/kernel.asm	/^c0107592:	c7 44 24 0c 9f 85 11 	movl   $0xc011859f,0xc(%esp)$/;"	l
c0107599	obj/kernel.asm	/^c0107599:	c0 $/;"	l
c010759a	obj/kernel.asm	/^c010759a:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01075a1	obj/kernel.asm	/^c01075a1:	c0 $/;"	l
c01075a2	obj/kernel.asm	/^c01075a2:	c7 44 24 04 53 01 00 	movl   $0x153,0x4(%esp)$/;"	l
c01075a9	obj/kernel.asm	/^c01075a9:	00 $/;"	l
c01075aa	obj/kernel.asm	/^c01075aa:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01075b1	obj/kernel.asm	/^c01075b1:	e8 81 96 ff ff       	call   c0100c37 <__panic>$/;"	l
c01075b6	obj/kernel.asm	/^c01075b6:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c01075bd	obj/kernel.asm	/^c01075bd:	00 $/;"	l
c01075be	obj/kernel.asm	/^c01075be:	c7 44 24 04 00 00 40 	movl   $0x400000,0x4(%esp)$/;"	l
c01075c5	obj/kernel.asm	/^c01075c5:	00 $/;"	l
c01075c6	obj/kernel.asm	/^c01075c6:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01075cd	obj/kernel.asm	/^c01075cd:	e8 8f f3 ff ff       	call   c0106961 <vma_create>$/;"	l
c01075d2	obj/kernel.asm	/^c01075d2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01075d5	obj/kernel.asm	/^c01075d5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01075d9	obj/kernel.asm	/^c01075d9:	75 24                	jne    c01075ff <check_pgfault+0xd8>$/;"	l
c01075db	obj/kernel.asm	/^c01075db:	c7 44 24 0c 30 84 11 	movl   $0xc0118430,0xc(%esp)$/;"	l
c01075e2	obj/kernel.asm	/^c01075e2:	c0 $/;"	l
c01075e3	obj/kernel.asm	/^c01075e3:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01075ea	obj/kernel.asm	/^c01075ea:	c0 $/;"	l
c01075eb	obj/kernel.asm	/^c01075eb:	c7 44 24 04 56 01 00 	movl   $0x156,0x4(%esp)$/;"	l
c01075f2	obj/kernel.asm	/^c01075f2:	00 $/;"	l
c01075f3	obj/kernel.asm	/^c01075f3:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01075fa	obj/kernel.asm	/^c01075fa:	e8 38 96 ff ff       	call   c0100c37 <__panic>$/;"	l
c01075ff	obj/kernel.asm	/^c01075ff:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107602	obj/kernel.asm	/^c0107602:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107606	obj/kernel.asm	/^c0107606:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107609	obj/kernel.asm	/^c0107609:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010760c	obj/kernel.asm	/^c010760c:	e8 e0 f4 ff ff       	call   c0106af1 <insert_vma_struct>$/;"	l
c0107611	obj/kernel.asm	/^c0107611:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0107618	obj/kernel.asm	/^c0107618:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010761b	obj/kernel.asm	/^c010761b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010761f	obj/kernel.asm	/^c010761f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107622	obj/kernel.asm	/^c0107622:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107625	obj/kernel.asm	/^c0107625:	e8 72 f3 ff ff       	call   c010699c <find_vma>$/;"	l
c010762a	obj/kernel.asm	/^c010762a:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010762d	obj/kernel.asm	/^c010762d:	74 24                	je     c0107653 <check_pgfault+0x12c>$/;"	l
c010762f	obj/kernel.asm	/^c010762f:	c7 44 24 0c ad 85 11 	movl   $0xc01185ad,0xc(%esp)$/;"	l
c0107636	obj/kernel.asm	/^c0107636:	c0 $/;"	l
c0107637	obj/kernel.asm	/^c0107637:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c010763e	obj/kernel.asm	/^c010763e:	c0 $/;"	l
c010763f	obj/kernel.asm	/^c010763f:	c7 44 24 04 5b 01 00 	movl   $0x15b,0x4(%esp)$/;"	l
c0107646	obj/kernel.asm	/^c0107646:	00 $/;"	l
c0107647	obj/kernel.asm	/^c0107647:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c010764e	obj/kernel.asm	/^c010764e:	e8 e4 95 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107653	obj/kernel.asm	/^c0107653:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010765a	obj/kernel.asm	/^c010765a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107661	obj/kernel.asm	/^c0107661:	eb 17                	jmp    c010767a <check_pgfault+0x153>$/;"	l
c0107663	obj/kernel.asm	/^c0107663:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107666	obj/kernel.asm	/^c0107666:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107669	obj/kernel.asm	/^c0107669:	01 d0                	add    %edx,%eax$/;"	l
c010766b	obj/kernel.asm	/^c010766b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010766e	obj/kernel.asm	/^c010766e:	88 10                	mov    %dl,(%eax)$/;"	l
c0107670	obj/kernel.asm	/^c0107670:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107673	obj/kernel.asm	/^c0107673:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0107676	obj/kernel.asm	/^c0107676:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010767a	obj/kernel.asm	/^c010767a:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c010767e	obj/kernel.asm	/^c010767e:	7e e3                	jle    c0107663 <check_pgfault+0x13c>$/;"	l
c0107680	obj/kernel.asm	/^c0107680:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107687	obj/kernel.asm	/^c0107687:	eb 15                	jmp    c010769e <check_pgfault+0x177>$/;"	l
c0107689	obj/kernel.asm	/^c0107689:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010768c	obj/kernel.asm	/^c010768c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010768f	obj/kernel.asm	/^c010768f:	01 d0                	add    %edx,%eax$/;"	l
c0107691	obj/kernel.asm	/^c0107691:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0107694	obj/kernel.asm	/^c0107694:	0f be c0             	movsbl %al,%eax$/;"	l
c0107697	obj/kernel.asm	/^c0107697:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c010769a	obj/kernel.asm	/^c010769a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010769e	obj/kernel.asm	/^c010769e:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c01076a2	obj/kernel.asm	/^c01076a2:	7e e5                	jle    c0107689 <check_pgfault+0x162>$/;"	l
c01076a4	obj/kernel.asm	/^c01076a4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01076a8	obj/kernel.asm	/^c01076a8:	74 24                	je     c01076ce <check_pgfault+0x1a7>$/;"	l
c01076aa	obj/kernel.asm	/^c01076aa:	c7 44 24 0c c7 85 11 	movl   $0xc01185c7,0xc(%esp)$/;"	l
c01076b1	obj/kernel.asm	/^c01076b1:	c0 $/;"	l
c01076b2	obj/kernel.asm	/^c01076b2:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c01076b9	obj/kernel.asm	/^c01076b9:	c0 $/;"	l
c01076ba	obj/kernel.asm	/^c01076ba:	c7 44 24 04 65 01 00 	movl   $0x165,0x4(%esp)$/;"	l
c01076c1	obj/kernel.asm	/^c01076c1:	00 $/;"	l
c01076c2	obj/kernel.asm	/^c01076c2:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c01076c9	obj/kernel.asm	/^c01076c9:	e8 69 95 ff ff       	call   c0100c37 <__panic>$/;"	l
c01076ce	obj/kernel.asm	/^c01076ce:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01076d1	obj/kernel.asm	/^c01076d1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01076d4	obj/kernel.asm	/^c01076d4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01076d7	obj/kernel.asm	/^c01076d7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01076dc	obj/kernel.asm	/^c01076dc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01076e0	obj/kernel.asm	/^c01076e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01076e3	obj/kernel.asm	/^c01076e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01076e6	obj/kernel.asm	/^c01076e6:	e8 f0 dd ff ff       	call   c01054db <page_remove>$/;"	l
c01076eb	obj/kernel.asm	/^c01076eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01076ee	obj/kernel.asm	/^c01076ee:	8b 00                	mov    (%eax),%eax$/;"	l
c01076f0	obj/kernel.asm	/^c01076f0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01076f3	obj/kernel.asm	/^c01076f3:	e8 75 f1 ff ff       	call   c010686d <pa2page>$/;"	l
c01076f8	obj/kernel.asm	/^c01076f8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01076ff	obj/kernel.asm	/^c01076ff:	00 $/;"	l
c0107700	obj/kernel.asm	/^c0107700:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107703	obj/kernel.asm	/^c0107703:	e8 f2 cf ff ff       	call   c01046fa <free_pages>$/;"	l
c0107708	obj/kernel.asm	/^c0107708:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010770b	obj/kernel.asm	/^c010770b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0107711	obj/kernel.asm	/^c0107711:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107714	obj/kernel.asm	/^c0107714:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010771b	obj/kernel.asm	/^c010771b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010771e	obj/kernel.asm	/^c010771e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107721	obj/kernel.asm	/^c0107721:	e8 fb f4 ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c0107726	obj/kernel.asm	/^c0107726:	c7 05 84 b6 15 c0 00 	movl   $0x0,0xc015b684$/;"	l
c010772d	obj/kernel.asm	/^c010772d:	00 00 00 $/;"	l
c0107730	obj/kernel.asm	/^c0107730:	e8 f7 cf ff ff       	call   c010472c <nr_free_pages>$/;"	l
c0107735	obj/kernel.asm	/^c0107735:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0107738	obj/kernel.asm	/^c0107738:	74 24                	je     c010775e <check_pgfault+0x237>$/;"	l
c010773a	obj/kernel.asm	/^c010773a:	c7 44 24 0c d0 85 11 	movl   $0xc01185d0,0xc(%esp)$/;"	l
c0107741	obj/kernel.asm	/^c0107741:	c0 $/;"	l
c0107742	obj/kernel.asm	/^c0107742:	c7 44 24 08 3f 83 11 	movl   $0xc011833f,0x8(%esp)$/;"	l
c0107749	obj/kernel.asm	/^c0107749:	c0 $/;"	l
c010774a	obj/kernel.asm	/^c010774a:	c7 44 24 04 6f 01 00 	movl   $0x16f,0x4(%esp)$/;"	l
c0107751	obj/kernel.asm	/^c0107751:	00 $/;"	l
c0107752	obj/kernel.asm	/^c0107752:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107759	obj/kernel.asm	/^c0107759:	e8 d9 94 ff ff       	call   c0100c37 <__panic>$/;"	l
c010775e	obj/kernel.asm	/^c010775e:	c7 04 24 f7 85 11 c0 	movl   $0xc01185f7,(%esp)$/;"	l
c0107765	obj/kernel.asm	/^c0107765:	e8 76 93 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010776a	obj/kernel.asm	/^c010776a:	c9                   	leave  $/;"	l
c010776b	obj/kernel.asm	/^c010776b:	c3                   	ret    $/;"	l
c010776c	obj/kernel.asm	/^c010776c <do_pgfault>:$/;"	l
c010776c	obj/kernel.asm	/^c010776c:	55                   	push   %ebp$/;"	l
c010776d	obj/kernel.asm	/^c010776d:	89 e5                	mov    %esp,%ebp$/;"	l
c010776f	obj/kernel.asm	/^c010776f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107772	obj/kernel.asm	/^c0107772:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0107779	obj/kernel.asm	/^c0107779:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010777c	obj/kernel.asm	/^c010777c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107780	obj/kernel.asm	/^c0107780:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107783	obj/kernel.asm	/^c0107783:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107786	obj/kernel.asm	/^c0107786:	e8 11 f2 ff ff       	call   c010699c <find_vma>$/;"	l
c010778b	obj/kernel.asm	/^c010778b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010778e	obj/kernel.asm	/^c010778e:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0107793	obj/kernel.asm	/^c0107793:	83 c0 01             	add    $0x1,%eax$/;"	l
c0107796	obj/kernel.asm	/^c0107796:	a3 4c 7f 15 c0       	mov    %eax,0xc0157f4c$/;"	l
c010779b	obj/kernel.asm	/^c010779b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010779f	obj/kernel.asm	/^c010779f:	74 0b                	je     c01077ac <do_pgfault+0x40>$/;"	l
c01077a1	obj/kernel.asm	/^c01077a1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077a4	obj/kernel.asm	/^c01077a4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01077a7	obj/kernel.asm	/^c01077a7:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01077aa	obj/kernel.asm	/^c01077aa:	76 18                	jbe    c01077c4 <do_pgfault+0x58>$/;"	l
c01077ac	obj/kernel.asm	/^c01077ac:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01077af	obj/kernel.asm	/^c01077af:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01077b3	obj/kernel.asm	/^c01077b3:	c7 04 24 14 86 11 c0 	movl   $0xc0118614,(%esp)$/;"	l
c01077ba	obj/kernel.asm	/^c01077ba:	e8 21 93 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01077bf	obj/kernel.asm	/^c01077bf:	e9 f1 01 00 00       	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c01077c4	obj/kernel.asm	/^c01077c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01077c7	obj/kernel.asm	/^c01077c7:	83 e0 03             	and    $0x3,%eax$/;"	l
c01077ca	obj/kernel.asm	/^c01077ca:	85 c0                	test   %eax,%eax$/;"	l
c01077cc	obj/kernel.asm	/^c01077cc:	74 36                	je     c0107804 <do_pgfault+0x98>$/;"	l
c01077ce	obj/kernel.asm	/^c01077ce:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01077d1	obj/kernel.asm	/^c01077d1:	74 20                	je     c01077f3 <do_pgfault+0x87>$/;"	l
c01077d3	obj/kernel.asm	/^c01077d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01077d6	obj/kernel.asm	/^c01077d6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01077d9	obj/kernel.asm	/^c01077d9:	83 e0 02             	and    $0x2,%eax$/;"	l
c01077dc	obj/kernel.asm	/^c01077dc:	85 c0                	test   %eax,%eax$/;"	l
c01077de	obj/kernel.asm	/^c01077de:	75 11                	jne    c01077f1 <do_pgfault+0x85>$/;"	l
c01077e0	obj/kernel.asm	/^c01077e0:	c7 04 24 44 86 11 c0 	movl   $0xc0118644,(%esp)$/;"	l
c01077e7	obj/kernel.asm	/^c01077e7:	e8 f4 92 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01077ec	obj/kernel.asm	/^c01077ec:	e9 c4 01 00 00       	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c01077f1	obj/kernel.asm	/^c01077f1:	eb 2f                	jmp    c0107822 <do_pgfault+0xb6>$/;"	l
c01077f3	obj/kernel.asm	/^c01077f3:	c7 04 24 a4 86 11 c0 	movl   $0xc01186a4,(%esp)$/;"	l
c01077fa	obj/kernel.asm	/^c01077fa:	e8 e1 92 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01077ff	obj/kernel.asm	/^c01077ff:	e9 b1 01 00 00       	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c0107804	obj/kernel.asm	/^c0107804:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107807	obj/kernel.asm	/^c0107807:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010780a	obj/kernel.asm	/^c010780a:	83 e0 05             	and    $0x5,%eax$/;"	l
c010780d	obj/kernel.asm	/^c010780d:	85 c0                	test   %eax,%eax$/;"	l
c010780f	obj/kernel.asm	/^c010780f:	75 11                	jne    c0107822 <do_pgfault+0xb6>$/;"	l
c0107811	obj/kernel.asm	/^c0107811:	c7 04 24 dc 86 11 c0 	movl   $0xc01186dc,(%esp)$/;"	l
c0107818	obj/kernel.asm	/^c0107818:	e8 c3 92 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010781d	obj/kernel.asm	/^c010781d:	e9 93 01 00 00       	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c0107822	obj/kernel.asm	/^c0107822:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0107829	obj/kernel.asm	/^c0107829:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010782c	obj/kernel.asm	/^c010782c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010782f	obj/kernel.asm	/^c010782f:	83 e0 02             	and    $0x2,%eax$/;"	l
c0107832	obj/kernel.asm	/^c0107832:	85 c0                	test   %eax,%eax$/;"	l
c0107834	obj/kernel.asm	/^c0107834:	74 04                	je     c010783a <do_pgfault+0xce>$/;"	l
c0107836	obj/kernel.asm	/^c0107836:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c010783a	obj/kernel.asm	/^c010783a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107840	obj/kernel.asm	/^c0107840:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107843	obj/kernel.asm	/^c0107843:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0107848	obj/kernel.asm	/^c0107848:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c010784b	obj/kernel.asm	/^c010784b:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0107852	obj/kernel.asm	/^c0107852:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0107859	obj/kernel.asm	/^c0107859:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010785c	obj/kernel.asm	/^c010785c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010785f	obj/kernel.asm	/^c010785f:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0107866	obj/kernel.asm	/^c0107866:	00 $/;"	l
c0107867	obj/kernel.asm	/^c0107867:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010786a	obj/kernel.asm	/^c010786a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010786e	obj/kernel.asm	/^c010786e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107871	obj/kernel.asm	/^c0107871:	e8 55 d6 ff ff       	call   c0104ecb <get_pte>$/;"	l
c0107876	obj/kernel.asm	/^c0107876:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107879	obj/kernel.asm	/^c0107879:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010787d	obj/kernel.asm	/^c010787d:	75 11                	jne    c0107890 <do_pgfault+0x124>$/;"	l
c010787f	obj/kernel.asm	/^c010787f:	c7 04 24 3f 87 11 c0 	movl   $0xc011873f,(%esp)$/;"	l
c0107886	obj/kernel.asm	/^c0107886:	e8 55 92 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010788b	obj/kernel.asm	/^c010788b:	e9 25 01 00 00       	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c0107890	obj/kernel.asm	/^c0107890:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107893	obj/kernel.asm	/^c0107893:	8b 00                	mov    (%eax),%eax$/;"	l
c0107895	obj/kernel.asm	/^c0107895:	85 c0                	test   %eax,%eax$/;"	l
c0107897	obj/kernel.asm	/^c0107897:	75 35                	jne    c01078ce <do_pgfault+0x162>$/;"	l
c0107899	obj/kernel.asm	/^c0107899:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010789c	obj/kernel.asm	/^c010789c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010789f	obj/kernel.asm	/^c010789f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01078a2	obj/kernel.asm	/^c01078a2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01078a6	obj/kernel.asm	/^c01078a6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01078a9	obj/kernel.asm	/^c01078a9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01078b0	obj/kernel.asm	/^c01078b0:	e8 80 dd ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c01078b5	obj/kernel.asm	/^c01078b5:	85 c0                	test   %eax,%eax$/;"	l
c01078b7	obj/kernel.asm	/^c01078b7:	0f 85 f1 00 00 00    	jne    c01079ae <do_pgfault+0x242>$/;"	l
c01078bd	obj/kernel.asm	/^c01078bd:	c7 04 24 60 87 11 c0 	movl   $0xc0118760,(%esp)$/;"	l
c01078c4	obj/kernel.asm	/^c01078c4:	e8 17 92 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01078c9	obj/kernel.asm	/^c01078c9:	e9 e7 00 00 00       	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c01078ce	obj/kernel.asm	/^c01078ce:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c01078d5	obj/kernel.asm	/^c01078d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01078d8	obj/kernel.asm	/^c01078d8:	8b 00                	mov    (%eax),%eax$/;"	l
c01078da	obj/kernel.asm	/^c01078da:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01078de	obj/kernel.asm	/^c01078de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01078e1	obj/kernel.asm	/^c01078e1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01078e5	obj/kernel.asm	/^c01078e5:	c7 04 24 87 87 11 c0 	movl   $0xc0118787,(%esp)$/;"	l
c01078ec	obj/kernel.asm	/^c01078ec:	e8 ef 91 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01078f1	obj/kernel.asm	/^c01078f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01078f4	obj/kernel.asm	/^c01078f4:	8b 00                	mov    (%eax),%eax$/;"	l
c01078f6	obj/kernel.asm	/^c01078f6:	83 e0 01             	and    $0x1,%eax$/;"	l
c01078f9	obj/kernel.asm	/^c01078f9:	85 c0                	test   %eax,%eax$/;"	l
c01078fb	obj/kernel.asm	/^c01078fb:	74 1c                	je     c0107919 <do_pgfault+0x1ad>$/;"	l
c01078fd	obj/kernel.asm	/^c01078fd:	c7 44 24 08 a4 87 11 	movl   $0xc01187a4,0x8(%esp)$/;"	l
c0107904	obj/kernel.asm	/^c0107904:	c0 $/;"	l
c0107905	obj/kernel.asm	/^c0107905:	c7 44 24 04 08 02 00 	movl   $0x208,0x4(%esp)$/;"	l
c010790c	obj/kernel.asm	/^c010790c:	00 $/;"	l
c010790d	obj/kernel.asm	/^c010790d:	c7 04 24 54 83 11 c0 	movl   $0xc0118354,(%esp)$/;"	l
c0107914	obj/kernel.asm	/^c0107914:	e8 1e 93 ff ff       	call   c0100c37 <__panic>$/;"	l
c0107919	obj/kernel.asm	/^c0107919:	a1 54 7f 15 c0       	mov    0xc0157f54,%eax$/;"	l
c010791e	obj/kernel.asm	/^c010791e:	85 c0                	test   %eax,%eax$/;"	l
c0107920	obj/kernel.asm	/^c0107920:	74 30                	je     c0107952 <do_pgfault+0x1e6>$/;"	l
c0107922	obj/kernel.asm	/^c0107922:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107929	obj/kernel.asm	/^c0107929:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010792c	obj/kernel.asm	/^c010792c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107930	obj/kernel.asm	/^c0107930:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107933	obj/kernel.asm	/^c0107933:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107936	obj/kernel.asm	/^c0107936:	e8 1a 0d 00 00       	call   c0108655 <swap_in>$/;"	l
c010793b	obj/kernel.asm	/^c010793b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010793e	obj/kernel.asm	/^c010793e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107942	obj/kernel.asm	/^c0107942:	74 26                	je     c010796a <do_pgfault+0x1fe>$/;"	l
c0107944	obj/kernel.asm	/^c0107944:	c7 04 24 c3 87 11 c0 	movl   $0xc01187c3,(%esp)$/;"	l
c010794b	obj/kernel.asm	/^c010794b:	e8 90 91 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0107950	obj/kernel.asm	/^c0107950:	eb 63                	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c0107952	obj/kernel.asm	/^c0107952:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107955	obj/kernel.asm	/^c0107955:	8b 00                	mov    (%eax),%eax$/;"	l
c0107957	obj/kernel.asm	/^c0107957:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010795b	obj/kernel.asm	/^c010795b:	c7 04 24 e4 87 11 c0 	movl   $0xc01187e4,(%esp)$/;"	l
c0107962	obj/kernel.asm	/^c0107962:	e8 79 91 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0107967	obj/kernel.asm	/^c0107967:	90                   	nop$/;"	l
c0107968	obj/kernel.asm	/^c0107968:	eb 4b                	jmp    c01079b5 <do_pgfault+0x249>$/;"	l
c010796a	obj/kernel.asm	/^c010796a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010796d	obj/kernel.asm	/^c010796d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107970	obj/kernel.asm	/^c0107970:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107973	obj/kernel.asm	/^c0107973:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c0107976	obj/kernel.asm	/^c0107976:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010797a	obj/kernel.asm	/^c010797a:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c010797d	obj/kernel.asm	/^c010797d:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0107981	obj/kernel.asm	/^c0107981:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0107985	obj/kernel.asm	/^c0107985:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107988	obj/kernel.asm	/^c0107988:	e8 92 db ff ff       	call   c010551f <page_insert>$/;"	l
c010798d	obj/kernel.asm	/^c010798d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107990	obj/kernel.asm	/^c0107990:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0107997	obj/kernel.asm	/^c0107997:	00 $/;"	l
c0107998	obj/kernel.asm	/^c0107998:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010799c	obj/kernel.asm	/^c010799c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010799f	obj/kernel.asm	/^c010799f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01079a3	obj/kernel.asm	/^c01079a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079a6	obj/kernel.asm	/^c01079a6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01079a9	obj/kernel.asm	/^c01079a9:	e8 de 0a 00 00       	call   c010848c <swap_map_swappable>$/;"	l
c01079ae	obj/kernel.asm	/^c01079ae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01079b5	obj/kernel.asm	/^c01079b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079b8	obj/kernel.asm	/^c01079b8:	c9                   	leave  $/;"	l
c01079b9	obj/kernel.asm	/^c01079b9:	c3                   	ret    $/;"	l
c01079ba	obj/kernel.asm	/^c01079ba <user_mem_check>:$/;"	l
c01079ba	obj/kernel.asm	/^c01079ba:	55                   	push   %ebp$/;"	l
c01079bb	obj/kernel.asm	/^c01079bb:	89 e5                	mov    %esp,%ebp$/;"	l
c01079bd	obj/kernel.asm	/^c01079bd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01079c0	obj/kernel.asm	/^c01079c0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01079c4	obj/kernel.asm	/^c01079c4:	0f 84 e0 00 00 00    	je     c0107aaa <user_mem_check+0xf0>$/;"	l
c01079ca	obj/kernel.asm	/^c01079ca:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01079d1	obj/kernel.asm	/^c01079d1:	76 1c                	jbe    c01079ef <user_mem_check+0x35>$/;"	l
c01079d3	obj/kernel.asm	/^c01079d3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01079d6	obj/kernel.asm	/^c01079d6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01079d9	obj/kernel.asm	/^c01079d9:	01 d0                	add    %edx,%eax$/;"	l
c01079db	obj/kernel.asm	/^c01079db:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01079de	obj/kernel.asm	/^c01079de:	76 0f                	jbe    c01079ef <user_mem_check+0x35>$/;"	l
c01079e0	obj/kernel.asm	/^c01079e0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01079e3	obj/kernel.asm	/^c01079e3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01079e6	obj/kernel.asm	/^c01079e6:	01 d0                	add    %edx,%eax$/;"	l
c01079e8	obj/kernel.asm	/^c01079e8:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c01079ed	obj/kernel.asm	/^c01079ed:	76 0a                	jbe    c01079f9 <user_mem_check+0x3f>$/;"	l
c01079ef	obj/kernel.asm	/^c01079ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01079f4	obj/kernel.asm	/^c01079f4:	e9 e2 00 00 00       	jmp    c0107adb <user_mem_check+0x121>$/;"	l
c01079f9	obj/kernel.asm	/^c01079f9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01079fc	obj/kernel.asm	/^c01079fc:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01079ff	obj/kernel.asm	/^c01079ff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107a02	obj/kernel.asm	/^c0107a02:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107a05	obj/kernel.asm	/^c0107a05:	01 d0                	add    %edx,%eax$/;"	l
c0107a07	obj/kernel.asm	/^c0107a07:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0107a0a	obj/kernel.asm	/^c0107a0a:	e9 88 00 00 00       	jmp    c0107a97 <user_mem_check+0xdd>$/;"	l
c0107a0f	obj/kernel.asm	/^c0107a0f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a12	obj/kernel.asm	/^c0107a12:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107a16	obj/kernel.asm	/^c0107a16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a19	obj/kernel.asm	/^c0107a19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107a1c	obj/kernel.asm	/^c0107a1c:	e8 7b ef ff ff       	call   c010699c <find_vma>$/;"	l
c0107a21	obj/kernel.asm	/^c0107a21:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107a24	obj/kernel.asm	/^c0107a24:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107a28	obj/kernel.asm	/^c0107a28:	74 0b                	je     c0107a35 <user_mem_check+0x7b>$/;"	l
c0107a2a	obj/kernel.asm	/^c0107a2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a2d	obj/kernel.asm	/^c0107a2d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107a30	obj/kernel.asm	/^c0107a30:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0107a33	obj/kernel.asm	/^c0107a33:	76 0a                	jbe    c0107a3f <user_mem_check+0x85>$/;"	l
c0107a35	obj/kernel.asm	/^c0107a35:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a3a	obj/kernel.asm	/^c0107a3a:	e9 9c 00 00 00       	jmp    c0107adb <user_mem_check+0x121>$/;"	l
c0107a3f	obj/kernel.asm	/^c0107a3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a42	obj/kernel.asm	/^c0107a42:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0107a45	obj/kernel.asm	/^c0107a45:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0107a49	obj/kernel.asm	/^c0107a49:	74 07                	je     c0107a52 <user_mem_check+0x98>$/;"	l
c0107a4b	obj/kernel.asm	/^c0107a4b:	b8 02 00 00 00       	mov    $0x2,%eax$/;"	l
c0107a50	obj/kernel.asm	/^c0107a50:	eb 05                	jmp    c0107a57 <user_mem_check+0x9d>$/;"	l
c0107a52	obj/kernel.asm	/^c0107a52:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107a57	obj/kernel.asm	/^c0107a57:	21 d0                	and    %edx,%eax$/;"	l
c0107a59	obj/kernel.asm	/^c0107a59:	85 c0                	test   %eax,%eax$/;"	l
c0107a5b	obj/kernel.asm	/^c0107a5b:	75 07                	jne    c0107a64 <user_mem_check+0xaa>$/;"	l
c0107a5d	obj/kernel.asm	/^c0107a5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a62	obj/kernel.asm	/^c0107a62:	eb 77                	jmp    c0107adb <user_mem_check+0x121>$/;"	l
c0107a64	obj/kernel.asm	/^c0107a64:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0107a68	obj/kernel.asm	/^c0107a68:	74 24                	je     c0107a8e <user_mem_check+0xd4>$/;"	l
c0107a6a	obj/kernel.asm	/^c0107a6a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a6d	obj/kernel.asm	/^c0107a6d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107a70	obj/kernel.asm	/^c0107a70:	83 e0 08             	and    $0x8,%eax$/;"	l
c0107a73	obj/kernel.asm	/^c0107a73:	85 c0                	test   %eax,%eax$/;"	l
c0107a75	obj/kernel.asm	/^c0107a75:	74 17                	je     c0107a8e <user_mem_check+0xd4>$/;"	l
c0107a77	obj/kernel.asm	/^c0107a77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a7a	obj/kernel.asm	/^c0107a7a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107a7d	obj/kernel.asm	/^c0107a7d:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0107a82	obj/kernel.asm	/^c0107a82:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0107a85	obj/kernel.asm	/^c0107a85:	76 07                	jbe    c0107a8e <user_mem_check+0xd4>$/;"	l
c0107a87	obj/kernel.asm	/^c0107a87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107a8c	obj/kernel.asm	/^c0107a8c:	eb 4d                	jmp    c0107adb <user_mem_check+0x121>$/;"	l
c0107a8e	obj/kernel.asm	/^c0107a8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a91	obj/kernel.asm	/^c0107a91:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107a94	obj/kernel.asm	/^c0107a94:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0107a97	obj/kernel.asm	/^c0107a97:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a9a	obj/kernel.asm	/^c0107a9a:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0107a9d	obj/kernel.asm	/^c0107a9d:	0f 82 6c ff ff ff    	jb     c0107a0f <user_mem_check+0x55>$/;"	l
c0107aa3	obj/kernel.asm	/^c0107aa3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107aa8	obj/kernel.asm	/^c0107aa8:	eb 31                	jmp    c0107adb <user_mem_check+0x121>$/;"	l
c0107aaa	obj/kernel.asm	/^c0107aaa:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0107ab1	obj/kernel.asm	/^c0107ab1:	76 23                	jbe    c0107ad6 <user_mem_check+0x11c>$/;"	l
c0107ab3	obj/kernel.asm	/^c0107ab3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107ab6	obj/kernel.asm	/^c0107ab6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107ab9	obj/kernel.asm	/^c0107ab9:	01 d0                	add    %edx,%eax$/;"	l
c0107abb	obj/kernel.asm	/^c0107abb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0107abe	obj/kernel.asm	/^c0107abe:	76 16                	jbe    c0107ad6 <user_mem_check+0x11c>$/;"	l
c0107ac0	obj/kernel.asm	/^c0107ac0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107ac3	obj/kernel.asm	/^c0107ac3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107ac6	obj/kernel.asm	/^c0107ac6:	01 d0                	add    %edx,%eax$/;"	l
c0107ac8	obj/kernel.asm	/^c0107ac8:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0107acd	obj/kernel.asm	/^c0107acd:	77 07                	ja     c0107ad6 <user_mem_check+0x11c>$/;"	l
c0107acf	obj/kernel.asm	/^c0107acf:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107ad4	obj/kernel.asm	/^c0107ad4:	eb 05                	jmp    c0107adb <user_mem_check+0x121>$/;"	l
c0107ad6	obj/kernel.asm	/^c0107ad6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107adb	obj/kernel.asm	/^c0107adb:	c9                   	leave  $/;"	l
c0107adc	obj/kernel.asm	/^c0107adc:	c3                   	ret    $/;"	l
c0107add	obj/kernel.asm	/^c0107add <copy_string>:$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	55                   	push   %ebp$/;"	l
c0107ade	obj/kernel.asm	/^c0107ade:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ae0	obj/kernel.asm	/^c0107ae0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107ae3	obj/kernel.asm	/^c0107ae3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107ae6	obj/kernel.asm	/^c0107ae6:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0107aeb	obj/kernel.asm	/^c0107aeb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107aee	obj/kernel.asm	/^c0107aee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107af1	obj/kernel.asm	/^c0107af1:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	89 c2                	mov    %eax,%edx$/;"	l
c0107af8	obj/kernel.asm	/^c0107af8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107afb	obj/kernel.asm	/^c0107afb:	29 c2                	sub    %eax,%edx$/;"	l
c0107afd	obj/kernel.asm	/^c0107afd:	89 d0                	mov    %edx,%eax$/;"	l
c0107aff	obj/kernel.asm	/^c0107aff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107b02	obj/kernel.asm	/^c0107b02:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b05	obj/kernel.asm	/^c0107b05:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0107b08	obj/kernel.asm	/^c0107b08:	76 06                	jbe    c0107b10 <copy_string+0x33>$/;"	l
c0107b0a	obj/kernel.asm	/^c0107b0a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0107b0d	obj/kernel.asm	/^c0107b0d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107b10	obj/kernel.asm	/^c0107b10:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107b13	obj/kernel.asm	/^c0107b13:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0107b1a	obj/kernel.asm	/^c0107b1a:	00 $/;"	l
c0107b1b	obj/kernel.asm	/^c0107b1b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0107b1e	obj/kernel.asm	/^c0107b1e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0107b22	obj/kernel.asm	/^c0107b22:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107b26	obj/kernel.asm	/^c0107b26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107b29	obj/kernel.asm	/^c0107b29:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107b2c	obj/kernel.asm	/^c0107b2c:	e8 89 fe ff ff       	call   c01079ba <user_mem_check>$/;"	l
c0107b31	obj/kernel.asm	/^c0107b31:	85 c0                	test   %eax,%eax$/;"	l
c0107b33	obj/kernel.asm	/^c0107b33:	75 0a                	jne    c0107b3f <copy_string+0x62>$/;"	l
c0107b35	obj/kernel.asm	/^c0107b35:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b3a	obj/kernel.asm	/^c0107b3a:	e9 86 00 00 00       	jmp    c0107bc5 <copy_string+0xe8>$/;"	l
c0107b3f	obj/kernel.asm	/^c0107b3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b42	obj/kernel.asm	/^c0107b42:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107b46	obj/kernel.asm	/^c0107b46:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107b49	obj/kernel.asm	/^c0107b49:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107b4c	obj/kernel.asm	/^c0107b4c:	e8 11 e8 00 00       	call   c0116362 <strnlen>$/;"	l
c0107b51	obj/kernel.asm	/^c0107b51:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107b54	obj/kernel.asm	/^c0107b54:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107b57	obj/kernel.asm	/^c0107b57:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107b5a	obj/kernel.asm	/^c0107b5a:	73 23                	jae    c0107b7f <copy_string+0xa2>$/;"	l
c0107b5c	obj/kernel.asm	/^c0107b5c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107b5f	obj/kernel.asm	/^c0107b5f:	83 c0 01             	add    $0x1,%eax$/;"	l
c0107b62	obj/kernel.asm	/^c0107b62:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107b66	obj/kernel.asm	/^c0107b66:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107b69	obj/kernel.asm	/^c0107b69:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107b6d	obj/kernel.asm	/^c0107b6d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107b70	obj/kernel.asm	/^c0107b70:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107b73	obj/kernel.asm	/^c0107b73:	e8 fa eb 00 00       	call   c0116772 <memcpy>$/;"	l
c0107b78	obj/kernel.asm	/^c0107b78:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107b7d	obj/kernel.asm	/^c0107b7d:	eb 46                	jmp    c0107bc5 <copy_string+0xe8>$/;"	l
c0107b7f	obj/kernel.asm	/^c0107b7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b82	obj/kernel.asm	/^c0107b82:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0107b85	obj/kernel.asm	/^c0107b85:	75 07                	jne    c0107b8e <copy_string+0xb1>$/;"	l
c0107b87	obj/kernel.asm	/^c0107b87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b8c	obj/kernel.asm	/^c0107b8c:	eb 37                	jmp    c0107bc5 <copy_string+0xe8>$/;"	l
c0107b8e	obj/kernel.asm	/^c0107b8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b91	obj/kernel.asm	/^c0107b91:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0107b95	obj/kernel.asm	/^c0107b95:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107b98	obj/kernel.asm	/^c0107b98:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0107b9c	obj/kernel.asm	/^c0107b9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107b9f	obj/kernel.asm	/^c0107b9f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107ba2	obj/kernel.asm	/^c0107ba2:	e8 cb eb 00 00       	call   c0116772 <memcpy>$/;"	l
c0107ba7	obj/kernel.asm	/^c0107ba7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107baa	obj/kernel.asm	/^c0107baa:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0107bad	obj/kernel.asm	/^c0107bad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bb0	obj/kernel.asm	/^c0107bb0:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c0107bb3	obj/kernel.asm	/^c0107bb3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bb6	obj/kernel.asm	/^c0107bb6:	29 45 14             	sub    %eax,0x14(%ebp)$/;"	l
c0107bb9	obj/kernel.asm	/^c0107bb9:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
c0107bc0	obj/kernel.asm	/^c0107bc0:	e9 3d ff ff ff       	jmp    c0107b02 <copy_string+0x25>$/;"	l
c0107bc5	obj/kernel.asm	/^c0107bc5:	c9                   	leave  $/;"	l
c0107bc6	obj/kernel.asm	/^c0107bc6:	c3                   	ret    $/;"	l
c0107bc7	obj/kernel.asm	/^c0107bc7 <__intr_save>:$/;"	l
c0107bc7	obj/kernel.asm	/^c0107bc7:	55                   	push   %ebp$/;"	l
c0107bc8	obj/kernel.asm	/^c0107bc8:	89 e5                	mov    %esp,%ebp$/;"	l
c0107bca	obj/kernel.asm	/^c0107bca:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107bcd	obj/kernel.asm	/^c0107bcd:	9c                   	pushf  $/;"	l
c0107bce	obj/kernel.asm	/^c0107bce:	58                   	pop    %eax$/;"	l
c0107bcf	obj/kernel.asm	/^c0107bcf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107bd2	obj/kernel.asm	/^c0107bd2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bd5	obj/kernel.asm	/^c0107bd5:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0107bda	obj/kernel.asm	/^c0107bda:	85 c0                	test   %eax,%eax$/;"	l
c0107bdc	obj/kernel.asm	/^c0107bdc:	74 0c                	je     c0107bea <__intr_save+0x23>$/;"	l
c0107bde	obj/kernel.asm	/^c0107bde:	e8 ab ae ff ff       	call   c0102a8e <intr_disable>$/;"	l
c0107be3	obj/kernel.asm	/^c0107be3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0107be8	obj/kernel.asm	/^c0107be8:	eb 05                	jmp    c0107bef <__intr_save+0x28>$/;"	l
c0107bea	obj/kernel.asm	/^c0107bea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107bef	obj/kernel.asm	/^c0107bef:	c9                   	leave  $/;"	l
c0107bf0	obj/kernel.asm	/^c0107bf0:	c3                   	ret    $/;"	l
c0107bf1	obj/kernel.asm	/^c0107bf1 <__intr_restore>:$/;"	l
c0107bf1	obj/kernel.asm	/^c0107bf1:	55                   	push   %ebp$/;"	l
c0107bf2	obj/kernel.asm	/^c0107bf2:	89 e5                	mov    %esp,%ebp$/;"	l
c0107bf4	obj/kernel.asm	/^c0107bf4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107bfb	obj/kernel.asm	/^c0107bfb:	74 05                	je     c0107c02 <__intr_restore+0x11>$/;"	l
c0107bfd	obj/kernel.asm	/^c0107bfd:	e8 86 ae ff ff       	call   c0102a88 <intr_enable>$/;"	l
c0107c02	obj/kernel.asm	/^c0107c02:	c9                   	leave  $/;"	l
c0107c03	obj/kernel.asm	/^c0107c03:	c3                   	ret    $/;"	l
c0107c04	obj/kernel.asm	/^c0107c04 <page2ppn>:$/;"	l
c0107c04	obj/kernel.asm	/^c0107c04:	55                   	push   %ebp$/;"	l
c0107c05	obj/kernel.asm	/^c0107c05:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c07	obj/kernel.asm	/^c0107c07:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0107c0a	obj/kernel.asm	/^c0107c0a:	a1 78 b6 15 c0       	mov    0xc015b678,%eax$/;"	l
c0107c0f	obj/kernel.asm	/^c0107c0f:	29 c2                	sub    %eax,%edx$/;"	l
c0107c11	obj/kernel.asm	/^c0107c11:	89 d0                	mov    %edx,%eax$/;"	l
c0107c13	obj/kernel.asm	/^c0107c13:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0107c16	obj/kernel.asm	/^c0107c16:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0107c1c	obj/kernel.asm	/^c0107c1c:	5d                   	pop    %ebp$/;"	l
c0107c1d	obj/kernel.asm	/^c0107c1d:	c3                   	ret    $/;"	l
c0107c1e	obj/kernel.asm	/^c0107c1e <page2pa>:$/;"	l
c0107c1e	obj/kernel.asm	/^c0107c1e:	55                   	push   %ebp$/;"	l
c0107c1f	obj/kernel.asm	/^c0107c1f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c21	obj/kernel.asm	/^c0107c21:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0107c24	obj/kernel.asm	/^c0107c24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c27	obj/kernel.asm	/^c0107c27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107c2a	obj/kernel.asm	/^c0107c2a:	e8 d5 ff ff ff       	call   c0107c04 <page2ppn>$/;"	l
c0107c2f	obj/kernel.asm	/^c0107c2f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0107c32	obj/kernel.asm	/^c0107c32:	c9                   	leave  $/;"	l
c0107c33	obj/kernel.asm	/^c0107c33:	c3                   	ret    $/;"	l
c0107c34	obj/kernel.asm	/^c0107c34 <pa2page>:$/;"	l
c0107c34	obj/kernel.asm	/^c0107c34:	55                   	push   %ebp$/;"	l
c0107c35	obj/kernel.asm	/^c0107c35:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c37	obj/kernel.asm	/^c0107c37:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107c3a	obj/kernel.asm	/^c0107c3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107c40	obj/kernel.asm	/^c0107c40:	89 c2                	mov    %eax,%edx$/;"	l
c0107c42	obj/kernel.asm	/^c0107c42:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0107c47	obj/kernel.asm	/^c0107c47:	39 c2                	cmp    %eax,%edx$/;"	l
c0107c49	obj/kernel.asm	/^c0107c49:	72 1c                	jb     c0107c67 <pa2page+0x33>$/;"	l
c0107c4b	obj/kernel.asm	/^c0107c4b:	c7 44 24 08 0c 88 11 	movl   $0xc011880c,0x8(%esp)$/;"	l
c0107c52	obj/kernel.asm	/^c0107c52:	c0 $/;"	l
c0107c53	obj/kernel.asm	/^c0107c53:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0107c5a	obj/kernel.asm	/^c0107c5a:	00 $/;"	l
c0107c5b	obj/kernel.asm	/^c0107c5b:	c7 04 24 2b 88 11 c0 	movl   $0xc011882b,(%esp)$/;"	l
c0107c62	obj/kernel.asm	/^c0107c62:	e8 d0 8f ff ff       	call   c0100c37 <__panic>$/;"	l
c0107c67	obj/kernel.asm	/^c0107c67:	8b 0d 78 b6 15 c0    	mov    0xc015b678,%ecx$/;"	l
c0107c6d	obj/kernel.asm	/^c0107c6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c70	obj/kernel.asm	/^c0107c70:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107c73	obj/kernel.asm	/^c0107c73:	89 c2                	mov    %eax,%edx$/;"	l
c0107c75	obj/kernel.asm	/^c0107c75:	89 d0                	mov    %edx,%eax$/;"	l
c0107c77	obj/kernel.asm	/^c0107c77:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107c7a	obj/kernel.asm	/^c0107c7a:	01 d0                	add    %edx,%eax$/;"	l
c0107c7c	obj/kernel.asm	/^c0107c7c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107c7f	obj/kernel.asm	/^c0107c7f:	01 c8                	add    %ecx,%eax$/;"	l
c0107c81	obj/kernel.asm	/^c0107c81:	c9                   	leave  $/;"	l
c0107c82	obj/kernel.asm	/^c0107c82:	c3                   	ret    $/;"	l
c0107c83	obj/kernel.asm	/^c0107c83 <page2kva>:$/;"	l
c0107c83	obj/kernel.asm	/^c0107c83:	55                   	push   %ebp$/;"	l
c0107c84	obj/kernel.asm	/^c0107c84:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c86	obj/kernel.asm	/^c0107c86:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107c89	obj/kernel.asm	/^c0107c89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c8c	obj/kernel.asm	/^c0107c8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107c8f	obj/kernel.asm	/^c0107c8f:	e8 8a ff ff ff       	call   c0107c1e <page2pa>$/;"	l
c0107c94	obj/kernel.asm	/^c0107c94:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107c97	obj/kernel.asm	/^c0107c97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c9a	obj/kernel.asm	/^c0107c9a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0107c9d	obj/kernel.asm	/^c0107c9d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ca0	obj/kernel.asm	/^c0107ca0:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0107ca5	obj/kernel.asm	/^c0107ca5:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0107ca8	obj/kernel.asm	/^c0107ca8:	72 23                	jb     c0107ccd <page2kva+0x4a>$/;"	l
c0107caa	obj/kernel.asm	/^c0107caa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cad	obj/kernel.asm	/^c0107cad:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0107cb1	obj/kernel.asm	/^c0107cb1:	c7 44 24 08 3c 88 11 	movl   $0xc011883c,0x8(%esp)$/;"	l
c0107cb8	obj/kernel.asm	/^c0107cb8:	c0 $/;"	l
c0107cb9	obj/kernel.asm	/^c0107cb9:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c0107cc0	obj/kernel.asm	/^c0107cc0:	00 $/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	c7 04 24 2b 88 11 c0 	movl   $0xc011882b,(%esp)$/;"	l
c0107cc8	obj/kernel.asm	/^c0107cc8:	e8 6a 8f ff ff       	call   c0100c37 <__panic>$/;"	l
c0107ccd	obj/kernel.asm	/^c0107ccd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cd0	obj/kernel.asm	/^c0107cd0:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0107cd5	obj/kernel.asm	/^c0107cd5:	c9                   	leave  $/;"	l
c0107cd6	obj/kernel.asm	/^c0107cd6:	c3                   	ret    $/;"	l
c0107cd7	obj/kernel.asm	/^c0107cd7 <kva2page>:$/;"	l
c0107cd7	obj/kernel.asm	/^c0107cd7:	55                   	push   %ebp$/;"	l
c0107cd8	obj/kernel.asm	/^c0107cd8:	89 e5                	mov    %esp,%ebp$/;"	l
c0107cda	obj/kernel.asm	/^c0107cda:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107cdd	obj/kernel.asm	/^c0107cdd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ce0	obj/kernel.asm	/^c0107ce0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107ce3	obj/kernel.asm	/^c0107ce3:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0107cea	obj/kernel.asm	/^c0107cea:	77 23                	ja     c0107d0f <kva2page+0x38>$/;"	l
c0107cec	obj/kernel.asm	/^c0107cec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cef	obj/kernel.asm	/^c0107cef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0107cf3	obj/kernel.asm	/^c0107cf3:	c7 44 24 08 60 88 11 	movl   $0xc0118860,0x8(%esp)$/;"	l
c0107cfa	obj/kernel.asm	/^c0107cfa:	c0 $/;"	l
c0107cfb	obj/kernel.asm	/^c0107cfb:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0107d02	obj/kernel.asm	/^c0107d02:	00 $/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	c7 04 24 2b 88 11 c0 	movl   $0xc011882b,(%esp)$/;"	l
c0107d0a	obj/kernel.asm	/^c0107d0a:	e8 28 8f ff ff       	call   c0100c37 <__panic>$/;"	l
c0107d0f	obj/kernel.asm	/^c0107d0f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d12	obj/kernel.asm	/^c0107d12:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0107d17	obj/kernel.asm	/^c0107d17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107d1a	obj/kernel.asm	/^c0107d1a:	e8 15 ff ff ff       	call   c0107c34 <pa2page>$/;"	l
c0107d1f	obj/kernel.asm	/^c0107d1f:	c9                   	leave  $/;"	l
c0107d20	obj/kernel.asm	/^c0107d20:	c3                   	ret    $/;"	l
c0107d21	obj/kernel.asm	/^c0107d21 <__slob_get_free_pages>:$/;"	l
c0107d21	obj/kernel.asm	/^c0107d21:	55                   	push   %ebp$/;"	l
c0107d22	obj/kernel.asm	/^c0107d22:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107d27	obj/kernel.asm	/^c0107d27:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107d2a	obj/kernel.asm	/^c0107d2a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0107d2f	obj/kernel.asm	/^c0107d2f:	89 c1                	mov    %eax,%ecx$/;"	l
c0107d31	obj/kernel.asm	/^c0107d31:	d3 e2                	shl    %cl,%edx$/;"	d
c0107d33	obj/kernel.asm	/^c0107d33:	89 d0                	mov    %edx,%eax$/;"	l
c0107d35	obj/kernel.asm	/^c0107d35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107d38	obj/kernel.asm	/^c0107d38:	e8 52 c9 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0107d3d	obj/kernel.asm	/^c0107d3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107d40	obj/kernel.asm	/^c0107d40:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107d44	obj/kernel.asm	/^c0107d44:	75 07                	jne    c0107d4d <__slob_get_free_pages+0x2c>$/;"	l
c0107d46	obj/kernel.asm	/^c0107d46:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107d4b	obj/kernel.asm	/^c0107d4b:	eb 0b                	jmp    c0107d58 <__slob_get_free_pages+0x37>$/;"	l
c0107d4d	obj/kernel.asm	/^c0107d4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d50	obj/kernel.asm	/^c0107d50:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107d53	obj/kernel.asm	/^c0107d53:	e8 2b ff ff ff       	call   c0107c83 <page2kva>$/;"	l
c0107d58	obj/kernel.asm	/^c0107d58:	c9                   	leave  $/;"	l
c0107d59	obj/kernel.asm	/^c0107d59:	c3                   	ret    $/;"	l
c0107d5a	obj/kernel.asm	/^c0107d5a <__slob_free_pages>:$/;"	l
c0107d5a	obj/kernel.asm	/^c0107d5a:	55                   	push   %ebp$/;"	l
c0107d5b	obj/kernel.asm	/^c0107d5b:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d5d	obj/kernel.asm	/^c0107d5d:	53                   	push   %ebx$/;"	l
c0107d5e	obj/kernel.asm	/^c0107d5e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0107d61	obj/kernel.asm	/^c0107d61:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107d64	obj/kernel.asm	/^c0107d64:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0107d69	obj/kernel.asm	/^c0107d69:	89 c1                	mov    %eax,%ecx$/;"	l
c0107d6b	obj/kernel.asm	/^c0107d6b:	d3 e2                	shl    %cl,%edx$/;"	d
c0107d6d	obj/kernel.asm	/^c0107d6d:	89 d0                	mov    %edx,%eax$/;"	l
c0107d6f	obj/kernel.asm	/^c0107d6f:	89 c3                	mov    %eax,%ebx$/;"	l
c0107d71	obj/kernel.asm	/^c0107d71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d74	obj/kernel.asm	/^c0107d74:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107d77	obj/kernel.asm	/^c0107d77:	e8 5b ff ff ff       	call   c0107cd7 <kva2page>$/;"	l
c0107d7c	obj/kernel.asm	/^c0107d7c:	89 5c 24 04          	mov    %ebx,0x4(%esp)$/;"	l
c0107d80	obj/kernel.asm	/^c0107d80:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107d83	obj/kernel.asm	/^c0107d83:	e8 72 c9 ff ff       	call   c01046fa <free_pages>$/;"	l
c0107d88	obj/kernel.asm	/^c0107d88:	83 c4 14             	add    $0x14,%esp$/;"	l
c0107d8b	obj/kernel.asm	/^c0107d8b:	5b                   	pop    %ebx$/;"	l
c0107d8c	obj/kernel.asm	/^c0107d8c:	5d                   	pop    %ebp$/;"	l
c0107d8d	obj/kernel.asm	/^c0107d8d:	c3                   	ret    $/;"	l
c0107d8e	obj/kernel.asm	/^c0107d8e <slob_alloc>:$/;"	l
c0107d8e	obj/kernel.asm	/^c0107d8e:	55                   	push   %ebp$/;"	l
c0107d8f	obj/kernel.asm	/^c0107d8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d91	obj/kernel.asm	/^c0107d91:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107d94	obj/kernel.asm	/^c0107d94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d97	obj/kernel.asm	/^c0107d97:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107d9a	obj/kernel.asm	/^c0107d9a:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	76 24                	jbe    c0107dc5 <slob_alloc+0x37>$/;"	l
c0107da1	obj/kernel.asm	/^c0107da1:	c7 44 24 0c 84 88 11 	movl   $0xc0118884,0xc(%esp)$/;"	l
c0107da8	obj/kernel.asm	/^c0107da8:	c0 $/;"	l
c0107da9	obj/kernel.asm	/^c0107da9:	c7 44 24 08 a3 88 11 	movl   $0xc01188a3,0x8(%esp)$/;"	l
c0107db0	obj/kernel.asm	/^c0107db0:	c0 $/;"	l
c0107db1	obj/kernel.asm	/^c0107db1:	c7 44 24 04 64 00 00 	movl   $0x64,0x4(%esp)$/;"	l
c0107db8	obj/kernel.asm	/^c0107db8:	00 $/;"	l
c0107db9	obj/kernel.asm	/^c0107db9:	c7 04 24 b8 88 11 c0 	movl   $0xc01188b8,(%esp)$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	e8 72 8e ff ff       	call   c0100c37 <__panic>$/;"	l
c0107dc5	obj/kernel.asm	/^c0107dc5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0107dd3	obj/kernel.asm	/^c0107dd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107dd6	obj/kernel.asm	/^c0107dd6:	83 c0 07             	add    $0x7,%eax$/;"	l
c0107dd9	obj/kernel.asm	/^c0107dd9:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0107ddc	obj/kernel.asm	/^c0107ddc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107ddf	obj/kernel.asm	/^c0107ddf:	e8 e3 fd ff ff       	call   c0107bc7 <__intr_save>$/;"	l
c0107de4	obj/kernel.asm	/^c0107de4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107de7	obj/kernel.asm	/^c0107de7:	a1 68 6a 15 c0       	mov    0xc0156a68,%eax$/;"	l
c0107dec	obj/kernel.asm	/^c0107dec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107def	obj/kernel.asm	/^c0107def:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107df2	obj/kernel.asm	/^c0107df2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107df5	obj/kernel.asm	/^c0107df5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107df8	obj/kernel.asm	/^c0107df8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107dfc	obj/kernel.asm	/^c0107dfc:	74 25                	je     c0107e23 <slob_alloc+0x95>$/;"	l
c0107dfe	obj/kernel.asm	/^c0107dfe:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107e01	obj/kernel.asm	/^c0107e01:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107e04	obj/kernel.asm	/^c0107e04:	01 d0                	add    %edx,%eax$/;"	l
c0107e06	obj/kernel.asm	/^c0107e06:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0107e09	obj/kernel.asm	/^c0107e09:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107e0c	obj/kernel.asm	/^c0107e0c:	f7 d8                	neg    %eax$/;"	l
c0107e0e	obj/kernel.asm	/^c0107e0e:	21 d0                	and    %edx,%eax$/;"	l
c0107e10	obj/kernel.asm	/^c0107e10:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107e13	obj/kernel.asm	/^c0107e13:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107e16	obj/kernel.asm	/^c0107e16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e19	obj/kernel.asm	/^c0107e19:	29 c2                	sub    %eax,%edx$/;"	l
c0107e1b	obj/kernel.asm	/^c0107e1b:	89 d0                	mov    %edx,%eax$/;"	l
c0107e1d	obj/kernel.asm	/^c0107e1d:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0107e20	obj/kernel.asm	/^c0107e20:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107e23	obj/kernel.asm	/^c0107e23:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e26	obj/kernel.asm	/^c0107e26:	8b 00                	mov    (%eax),%eax$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107e2b	obj/kernel.asm	/^c0107e2b:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0107e2e	obj/kernel.asm	/^c0107e2e:	01 ca                	add    %ecx,%edx$/;"	l
c0107e30	obj/kernel.asm	/^c0107e30:	39 d0                	cmp    %edx,%eax$/;"	l
c0107e32	obj/kernel.asm	/^c0107e32:	0f 8c aa 00 00 00    	jl     c0107ee2 <slob_alloc+0x154>$/;"	l
c0107e38	obj/kernel.asm	/^c0107e38:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107e3c	obj/kernel.asm	/^c0107e3c:	74 38                	je     c0107e76 <slob_alloc+0xe8>$/;"	l
c0107e3e	obj/kernel.asm	/^c0107e3e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e41	obj/kernel.asm	/^c0107e41:	8b 00                	mov    (%eax),%eax$/;"	l
c0107e43	obj/kernel.asm	/^c0107e43:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0107e46	obj/kernel.asm	/^c0107e46:	89 c2                	mov    %eax,%edx$/;"	l
c0107e48	obj/kernel.asm	/^c0107e48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107e4b	obj/kernel.asm	/^c0107e4b:	89 10                	mov    %edx,(%eax)$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e50	obj/kernel.asm	/^c0107e50:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107e53	obj/kernel.asm	/^c0107e53:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107e56	obj/kernel.asm	/^c0107e56:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e59	obj/kernel.asm	/^c0107e59:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e5c	obj/kernel.asm	/^c0107e5c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107e5f	obj/kernel.asm	/^c0107e5f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e62	obj/kernel.asm	/^c0107e62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e65	obj/kernel.asm	/^c0107e65:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107e68	obj/kernel.asm	/^c0107e68:	89 10                	mov    %edx,(%eax)$/;"	l
c0107e6a	obj/kernel.asm	/^c0107e6a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e6d	obj/kernel.asm	/^c0107e6d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107e70	obj/kernel.asm	/^c0107e70:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107e73	obj/kernel.asm	/^c0107e73:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e79	obj/kernel.asm	/^c0107e79:	8b 00                	mov    (%eax),%eax$/;"	l
c0107e7b	obj/kernel.asm	/^c0107e7b:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0107e7e	obj/kernel.asm	/^c0107e7e:	75 0e                	jne    c0107e8e <slob_alloc+0x100>$/;"	l
c0107e80	obj/kernel.asm	/^c0107e80:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e83	obj/kernel.asm	/^c0107e83:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107e86	obj/kernel.asm	/^c0107e86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e89	obj/kernel.asm	/^c0107e89:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e8c	obj/kernel.asm	/^c0107e8c:	eb 3c                	jmp    c0107eca <slob_alloc+0x13c>$/;"	l
c0107e8e	obj/kernel.asm	/^c0107e8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107e91	obj/kernel.asm	/^c0107e91:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107e98	obj/kernel.asm	/^c0107e98:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e9b	obj/kernel.asm	/^c0107e9b:	01 c2                	add    %eax,%edx$/;"	l
c0107e9d	obj/kernel.asm	/^c0107e9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ea0	obj/kernel.asm	/^c0107ea0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ea3	obj/kernel.asm	/^c0107ea3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ea6	obj/kernel.asm	/^c0107ea6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ea9	obj/kernel.asm	/^c0107ea9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107eac	obj/kernel.asm	/^c0107eac:	8b 12                	mov    (%edx),%edx$/;"	l
c0107eae	obj/kernel.asm	/^c0107eae:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c0107eb1	obj/kernel.asm	/^c0107eb1:	89 10                	mov    %edx,(%eax)$/;"	l
c0107eb3	obj/kernel.asm	/^c0107eb3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eb6	obj/kernel.asm	/^c0107eb6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107eb9	obj/kernel.asm	/^c0107eb9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ec2	obj/kernel.asm	/^c0107ec2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ec5	obj/kernel.asm	/^c0107ec5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107ec8	obj/kernel.asm	/^c0107ec8:	89 10                	mov    %edx,(%eax)$/;"	l
c0107eca	obj/kernel.asm	/^c0107eca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ecd	obj/kernel.asm	/^c0107ecd:	a3 68 6a 15 c0       	mov    %eax,0xc0156a68$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107ed8	obj/kernel.asm	/^c0107ed8:	e8 14 fd ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c0107edd	obj/kernel.asm	/^c0107edd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ee0	obj/kernel.asm	/^c0107ee0:	eb 7f                	jmp    c0107f61 <slob_alloc+0x1d3>$/;"	l
c0107ee2	obj/kernel.asm	/^c0107ee2:	a1 68 6a 15 c0       	mov    0xc0156a68,%eax$/;"	l
c0107ee7	obj/kernel.asm	/^c0107ee7:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0107eea	obj/kernel.asm	/^c0107eea:	75 61                	jne    c0107f4d <slob_alloc+0x1bf>$/;"	l
c0107eec	obj/kernel.asm	/^c0107eec:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107eef	obj/kernel.asm	/^c0107eef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107ef2	obj/kernel.asm	/^c0107ef2:	e8 fa fc ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c0107ef7	obj/kernel.asm	/^c0107ef7:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0107efe	obj/kernel.asm	/^c0107efe:	75 07                	jne    c0107f07 <slob_alloc+0x179>$/;"	l
c0107f00	obj/kernel.asm	/^c0107f00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107f05	obj/kernel.asm	/^c0107f05:	eb 5a                	jmp    c0107f61 <slob_alloc+0x1d3>$/;"	l
c0107f07	obj/kernel.asm	/^c0107f07:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0107f0e	obj/kernel.asm	/^c0107f0e:	00 $/;"	l
c0107f0f	obj/kernel.asm	/^c0107f0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107f12	obj/kernel.asm	/^c0107f12:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107f15	obj/kernel.asm	/^c0107f15:	e8 07 fe ff ff       	call   c0107d21 <__slob_get_free_pages>$/;"	l
c0107f1a	obj/kernel.asm	/^c0107f1a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f1d	obj/kernel.asm	/^c0107f1d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107f21	obj/kernel.asm	/^c0107f21:	75 07                	jne    c0107f2a <slob_alloc+0x19c>$/;"	l
c0107f23	obj/kernel.asm	/^c0107f23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107f28	obj/kernel.asm	/^c0107f28:	eb 37                	jmp    c0107f61 <slob_alloc+0x1d3>$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0107f31	obj/kernel.asm	/^c0107f31:	00 $/;"	l
c0107f32	obj/kernel.asm	/^c0107f32:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f35	obj/kernel.asm	/^c0107f35:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0107f38	obj/kernel.asm	/^c0107f38:	e8 26 00 00 00       	call   c0107f63 <slob_free>$/;"	l
c0107f3d	obj/kernel.asm	/^c0107f3d:	e8 85 fc ff ff       	call   c0107bc7 <__intr_save>$/;"	l
c0107f42	obj/kernel.asm	/^c0107f42:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107f45	obj/kernel.asm	/^c0107f45:	a1 68 6a 15 c0       	mov    0xc0156a68,%eax$/;"	l
c0107f4a	obj/kernel.asm	/^c0107f4a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f4d	obj/kernel.asm	/^c0107f4d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f50	obj/kernel.asm	/^c0107f50:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f53	obj/kernel.asm	/^c0107f53:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f56	obj/kernel.asm	/^c0107f56:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f59	obj/kernel.asm	/^c0107f59:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f5c	obj/kernel.asm	/^c0107f5c:	e9 97 fe ff ff       	jmp    c0107df8 <slob_alloc+0x6a>$/;"	l
c0107f61	obj/kernel.asm	/^c0107f61:	c9                   	leave  $/;"	l
c0107f62	obj/kernel.asm	/^c0107f62:	c3                   	ret    $/;"	l
c0107f63	obj/kernel.asm	/^c0107f63 <slob_free>:$/;"	l
c0107f63	obj/kernel.asm	/^c0107f63:	55                   	push   %ebp$/;"	l
c0107f64	obj/kernel.asm	/^c0107f64:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107f69	obj/kernel.asm	/^c0107f69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f6c	obj/kernel.asm	/^c0107f6c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f6f	obj/kernel.asm	/^c0107f6f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107f73	obj/kernel.asm	/^c0107f73:	75 05                	jne    c0107f7a <slob_free+0x17>$/;"	l
c0107f75	obj/kernel.asm	/^c0107f75:	e9 ff 00 00 00       	jmp    c0108079 <slob_free+0x116>$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107f7e	obj/kernel.asm	/^c0107f7e:	74 10                	je     c0107f90 <slob_free+0x2d>$/;"	l
c0107f80	obj/kernel.asm	/^c0107f80:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107f83	obj/kernel.asm	/^c0107f83:	83 c0 07             	add    $0x7,%eax$/;"	l
c0107f86	obj/kernel.asm	/^c0107f86:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0107f89	obj/kernel.asm	/^c0107f89:	89 c2                	mov    %eax,%edx$/;"	l
c0107f8b	obj/kernel.asm	/^c0107f8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f8e	obj/kernel.asm	/^c0107f8e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f90	obj/kernel.asm	/^c0107f90:	e8 32 fc ff ff       	call   c0107bc7 <__intr_save>$/;"	l
c0107f95	obj/kernel.asm	/^c0107f95:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f98	obj/kernel.asm	/^c0107f98:	a1 68 6a 15 c0       	mov    0xc0156a68,%eax$/;"	l
c0107f9d	obj/kernel.asm	/^c0107f9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107fa0	obj/kernel.asm	/^c0107fa0:	eb 27                	jmp    c0107fc9 <slob_free+0x66>$/;"	l
c0107fa2	obj/kernel.asm	/^c0107fa2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fa5	obj/kernel.asm	/^c0107fa5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107fa8	obj/kernel.asm	/^c0107fa8:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107fab	obj/kernel.asm	/^c0107fab:	77 13                	ja     c0107fc0 <slob_free+0x5d>$/;"	l
c0107fad	obj/kernel.asm	/^c0107fad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107fb0	obj/kernel.asm	/^c0107fb0:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107fb3	obj/kernel.asm	/^c0107fb3:	77 27                	ja     c0107fdc <slob_free+0x79>$/;"	l
c0107fb5	obj/kernel.asm	/^c0107fb5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fb8	obj/kernel.asm	/^c0107fb8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107fbb	obj/kernel.asm	/^c0107fbb:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107fbe	obj/kernel.asm	/^c0107fbe:	77 1c                	ja     c0107fdc <slob_free+0x79>$/;"	l
c0107fc0	obj/kernel.asm	/^c0107fc0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fc3	obj/kernel.asm	/^c0107fc3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107fc6	obj/kernel.asm	/^c0107fc6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107fc9	obj/kernel.asm	/^c0107fc9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107fcc	obj/kernel.asm	/^c0107fcc:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107fcf	obj/kernel.asm	/^c0107fcf:	76 d1                	jbe    c0107fa2 <slob_free+0x3f>$/;"	l
c0107fd1	obj/kernel.asm	/^c0107fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fd4	obj/kernel.asm	/^c0107fd4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107fd7	obj/kernel.asm	/^c0107fd7:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107fda	obj/kernel.asm	/^c0107fda:	76 c6                	jbe    c0107fa2 <slob_free+0x3f>$/;"	l
c0107fdc	obj/kernel.asm	/^c0107fdc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107fdf	obj/kernel.asm	/^c0107fdf:	8b 00                	mov    (%eax),%eax$/;"	l
c0107fe1	obj/kernel.asm	/^c0107fe1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107fe8	obj/kernel.asm	/^c0107fe8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107feb	obj/kernel.asm	/^c0107feb:	01 c2                	add    %eax,%edx$/;"	l
c0107fed	obj/kernel.asm	/^c0107fed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ff0	obj/kernel.asm	/^c0107ff0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ff3	obj/kernel.asm	/^c0107ff3:	39 c2                	cmp    %eax,%edx$/;"	l
c0107ff5	obj/kernel.asm	/^c0107ff5:	75 25                	jne    c010801c <slob_free+0xb9>$/;"	l
c0107ff7	obj/kernel.asm	/^c0107ff7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ffa	obj/kernel.asm	/^c0107ffa:	8b 10                	mov    (%eax),%edx$/;"	l
c0107ffc	obj/kernel.asm	/^c0107ffc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fff	obj/kernel.asm	/^c0107fff:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108002	obj/kernel.asm	/^c0108002:	8b 00                	mov    (%eax),%eax$/;"	l
c0108004	obj/kernel.asm	/^c0108004:	01 c2                	add    %eax,%edx$/;"	l
c0108006	obj/kernel.asm	/^c0108006:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108009	obj/kernel.asm	/^c0108009:	89 10                	mov    %edx,(%eax)$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010800e	obj/kernel.asm	/^c010800e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108014	obj/kernel.asm	/^c0108014:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010801a	obj/kernel.asm	/^c010801a:	eb 0c                	jmp    c0108028 <slob_free+0xc5>$/;"	l
c010801c	obj/kernel.asm	/^c010801c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108025	obj/kernel.asm	/^c0108025:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108028	obj/kernel.asm	/^c0108028:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010802b	obj/kernel.asm	/^c010802b:	8b 00                	mov    (%eax),%eax$/;"	l
c010802d	obj/kernel.asm	/^c010802d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0108034	obj/kernel.asm	/^c0108034:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108037	obj/kernel.asm	/^c0108037:	01 d0                	add    %edx,%eax$/;"	l
c0108039	obj/kernel.asm	/^c0108039:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010803c	obj/kernel.asm	/^c010803c:	75 1f                	jne    c010805d <slob_free+0xfa>$/;"	l
c010803e	obj/kernel.asm	/^c010803e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108041	obj/kernel.asm	/^c0108041:	8b 10                	mov    (%eax),%edx$/;"	l
c0108043	obj/kernel.asm	/^c0108043:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108046	obj/kernel.asm	/^c0108046:	8b 00                	mov    (%eax),%eax$/;"	l
c0108048	obj/kernel.asm	/^c0108048:	01 c2                	add    %eax,%edx$/;"	l
c010804a	obj/kernel.asm	/^c010804a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010804d	obj/kernel.asm	/^c010804d:	89 10                	mov    %edx,(%eax)$/;"	l
c010804f	obj/kernel.asm	/^c010804f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108052	obj/kernel.asm	/^c0108052:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108055	obj/kernel.asm	/^c0108055:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108058	obj/kernel.asm	/^c0108058:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010805b	obj/kernel.asm	/^c010805b:	eb 09                	jmp    c0108066 <slob_free+0x103>$/;"	l
c010805d	obj/kernel.asm	/^c010805d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108060	obj/kernel.asm	/^c0108060:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108063	obj/kernel.asm	/^c0108063:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108066	obj/kernel.asm	/^c0108066:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108069	obj/kernel.asm	/^c0108069:	a3 68 6a 15 c0       	mov    %eax,0xc0156a68$/;"	l
c010806e	obj/kernel.asm	/^c010806e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108071	obj/kernel.asm	/^c0108071:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108074	obj/kernel.asm	/^c0108074:	e8 78 fb ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c0108079	obj/kernel.asm	/^c0108079:	c9                   	leave  $/;"	l
c010807a	obj/kernel.asm	/^c010807a:	c3                   	ret    $/;"	l
c010807b	obj/kernel.asm	/^c010807b <check_slab>:$/;"	l
c010807b	obj/kernel.asm	/^c010807b:	55                   	push   %ebp$/;"	l
c010807c	obj/kernel.asm	/^c010807c:	89 e5                	mov    %esp,%ebp$/;"	l
c010807e	obj/kernel.asm	/^c010807e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108081	obj/kernel.asm	/^c0108081:	c7 04 24 ca 88 11 c0 	movl   $0xc01188ca,(%esp)$/;"	l
c0108088	obj/kernel.asm	/^c0108088:	e8 53 8a ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010808d	obj/kernel.asm	/^c010808d:	c9                   	leave  $/;"	l
c010808e	obj/kernel.asm	/^c010808e:	c3                   	ret    $/;"	l
c010808f	obj/kernel.asm	/^c010808f <slab_init>:$/;"	l
c010808f	obj/kernel.asm	/^c010808f:	55                   	push   %ebp$/;"	l
c0108090	obj/kernel.asm	/^c0108090:	89 e5                	mov    %esp,%ebp$/;"	l
c0108092	obj/kernel.asm	/^c0108092:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108095	obj/kernel.asm	/^c0108095:	c7 04 24 e0 88 11 c0 	movl   $0xc01188e0,(%esp)$/;"	l
c010809c	obj/kernel.asm	/^c010809c:	e8 3f 8a ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01080a1	obj/kernel.asm	/^c01080a1:	e8 d5 ff ff ff       	call   c010807b <check_slab>$/;"	l
c01080a6	obj/kernel.asm	/^c01080a6:	c9                   	leave  $/;"	l
c01080a7	obj/kernel.asm	/^c01080a7:	c3                   	ret    $/;"	l
c01080a8	obj/kernel.asm	/^c01080a8 <kmalloc_init>:$/;"	l
c01080a8	obj/kernel.asm	/^c01080a8:	55                   	push   %ebp$/;"	l
c01080a9	obj/kernel.asm	/^c01080a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01080ab	obj/kernel.asm	/^c01080ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01080ae	obj/kernel.asm	/^c01080ae:	e8 dc ff ff ff       	call   c010808f <slab_init>$/;"	l
c01080b3	obj/kernel.asm	/^c01080b3:	c7 04 24 f4 88 11 c0 	movl   $0xc01188f4,(%esp)$/;"	l
c01080ba	obj/kernel.asm	/^c01080ba:	e8 21 8a ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01080bf	obj/kernel.asm	/^c01080bf:	c9                   	leave  $/;"	l
c01080c0	obj/kernel.asm	/^c01080c0:	c3                   	ret    $/;"	l
c01080c1	obj/kernel.asm	/^c01080c1 <slab_allocated>:$/;"	l
c01080c1	obj/kernel.asm	/^c01080c1:	55                   	push   %ebp$/;"	l
c01080c2	obj/kernel.asm	/^c01080c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01080c4	obj/kernel.asm	/^c01080c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01080c9	obj/kernel.asm	/^c01080c9:	5d                   	pop    %ebp$/;"	l
c01080ca	obj/kernel.asm	/^c01080ca:	c3                   	ret    $/;"	l
c01080cb	obj/kernel.asm	/^c01080cb <kallocated>:$/;"	l
c01080cb	obj/kernel.asm	/^c01080cb:	55                   	push   %ebp$/;"	l
c01080cc	obj/kernel.asm	/^c01080cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01080ce	obj/kernel.asm	/^c01080ce:	e8 ee ff ff ff       	call   c01080c1 <slab_allocated>$/;"	l
c01080d3	obj/kernel.asm	/^c01080d3:	5d                   	pop    %ebp$/;"	l
c01080d4	obj/kernel.asm	/^c01080d4:	c3                   	ret    $/;"	l
c01080d5	obj/kernel.asm	/^c01080d5 <find_order>:$/;"	l
c01080d5	obj/kernel.asm	/^c01080d5:	55                   	push   %ebp$/;"	l
c01080d6	obj/kernel.asm	/^c01080d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01080d8	obj/kernel.asm	/^c01080d8:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01080db	obj/kernel.asm	/^c01080db:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01080e2	obj/kernel.asm	/^c01080e2:	eb 07                	jmp    c01080eb <find_order+0x16>$/;"	l
c01080e4	obj/kernel.asm	/^c01080e4:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01080e8	obj/kernel.asm	/^c01080e8:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c01080eb	obj/kernel.asm	/^c01080eb:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01080f2	obj/kernel.asm	/^c01080f2:	7f f0                	jg     c01080e4 <find_order+0xf>$/;"	l
c01080f4	obj/kernel.asm	/^c01080f4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01080f7	obj/kernel.asm	/^c01080f7:	c9                   	leave  $/;"	l
c01080f8	obj/kernel.asm	/^c01080f8:	c3                   	ret    $/;"	l
c01080f9	obj/kernel.asm	/^c01080f9 <__kmalloc>:$/;"	l
c01080f9	obj/kernel.asm	/^c01080f9:	55                   	push   %ebp$/;"	l
c01080fa	obj/kernel.asm	/^c01080fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01080fc	obj/kernel.asm	/^c01080fc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01080ff	obj/kernel.asm	/^c01080ff:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c0108106	obj/kernel.asm	/^c0108106:	77 38                	ja     c0108140 <__kmalloc+0x47>$/;"	l
c0108108	obj/kernel.asm	/^c0108108:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010810b	obj/kernel.asm	/^c010810b:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010810e	obj/kernel.asm	/^c010810e:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108115	obj/kernel.asm	/^c0108115:	00 $/;"	l
c0108116	obj/kernel.asm	/^c0108116:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108119	obj/kernel.asm	/^c0108119:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010811d	obj/kernel.asm	/^c010811d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108120	obj/kernel.asm	/^c0108120:	e8 69 fc ff ff       	call   c0107d8e <slob_alloc>$/;"	l
c0108125	obj/kernel.asm	/^c0108125:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108128	obj/kernel.asm	/^c0108128:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010812c	obj/kernel.asm	/^c010812c:	74 08                	je     c0108136 <__kmalloc+0x3d>$/;"	l
c010812e	obj/kernel.asm	/^c010812e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108131	obj/kernel.asm	/^c0108131:	83 c0 08             	add    $0x8,%eax$/;"	l
c0108134	obj/kernel.asm	/^c0108134:	eb 05                	jmp    c010813b <__kmalloc+0x42>$/;"	l
c0108136	obj/kernel.asm	/^c0108136:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010813b	obj/kernel.asm	/^c010813b:	e9 a6 00 00 00       	jmp    c01081e6 <__kmalloc+0xed>$/;"	l
c0108140	obj/kernel.asm	/^c0108140:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108147	obj/kernel.asm	/^c0108147:	00 $/;"	l
c0108148	obj/kernel.asm	/^c0108148:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010814b	obj/kernel.asm	/^c010814b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0108156	obj/kernel.asm	/^c0108156:	e8 33 fc ff ff       	call   c0107d8e <slob_alloc>$/;"	l
c010815b	obj/kernel.asm	/^c010815b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108162	obj/kernel.asm	/^c0108162:	75 07                	jne    c010816b <__kmalloc+0x72>$/;"	l
c0108164	obj/kernel.asm	/^c0108164:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108169	obj/kernel.asm	/^c0108169:	eb 7b                	jmp    c01081e6 <__kmalloc+0xed>$/;"	l
c010816b	obj/kernel.asm	/^c010816b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010816e	obj/kernel.asm	/^c010816e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108171	obj/kernel.asm	/^c0108171:	e8 5f ff ff ff       	call   c01080d5 <find_order>$/;"	l
c0108176	obj/kernel.asm	/^c0108176:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108179	obj/kernel.asm	/^c0108179:	89 02                	mov    %eax,(%edx)$/;"	l
c010817b	obj/kernel.asm	/^c010817b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010817e	obj/kernel.asm	/^c010817e:	8b 00                	mov    (%eax),%eax$/;"	l
c0108180	obj/kernel.asm	/^c0108180:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108184	obj/kernel.asm	/^c0108184:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108187	obj/kernel.asm	/^c0108187:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010818a	obj/kernel.asm	/^c010818a:	e8 92 fb ff ff       	call   c0107d21 <__slob_get_free_pages>$/;"	l
c010818f	obj/kernel.asm	/^c010818f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108192	obj/kernel.asm	/^c0108192:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0108195	obj/kernel.asm	/^c0108195:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108198	obj/kernel.asm	/^c0108198:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010819b	obj/kernel.asm	/^c010819b:	85 c0                	test   %eax,%eax$/;"	l
c010819d	obj/kernel.asm	/^c010819d:	74 2f                	je     c01081ce <__kmalloc+0xd5>$/;"	l
c010819f	obj/kernel.asm	/^c010819f:	e8 23 fa ff ff       	call   c0107bc7 <__intr_save>$/;"	l
c01081a4	obj/kernel.asm	/^c01081a4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01081a7	obj/kernel.asm	/^c01081a7:	8b 15 50 7f 15 c0    	mov    0xc0157f50,%edx$/;"	l
c01081ad	obj/kernel.asm	/^c01081ad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081b0	obj/kernel.asm	/^c01081b0:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01081b3	obj/kernel.asm	/^c01081b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081b6	obj/kernel.asm	/^c01081b6:	a3 50 7f 15 c0       	mov    %eax,0xc0157f50$/;"	l
c01081bb	obj/kernel.asm	/^c01081bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01081be	obj/kernel.asm	/^c01081be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01081c1	obj/kernel.asm	/^c01081c1:	e8 2b fa ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c01081c6	obj/kernel.asm	/^c01081c6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081c9	obj/kernel.asm	/^c01081c9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01081cc	obj/kernel.asm	/^c01081cc:	eb 18                	jmp    c01081e6 <__kmalloc+0xed>$/;"	l
c01081ce	obj/kernel.asm	/^c01081ce:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c01081d5	obj/kernel.asm	/^c01081d5:	00 $/;"	l
c01081d6	obj/kernel.asm	/^c01081d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01081d9	obj/kernel.asm	/^c01081d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01081dc	obj/kernel.asm	/^c01081dc:	e8 82 fd ff ff       	call   c0107f63 <slob_free>$/;"	l
c01081e1	obj/kernel.asm	/^c01081e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	c9                   	leave  $/;"	l
c01081e7	obj/kernel.asm	/^c01081e7:	c3                   	ret    $/;"	l
c01081e8	obj/kernel.asm	/^c01081e8 <kmalloc>:$/;"	l
c01081e8	obj/kernel.asm	/^c01081e8:	55                   	push   %ebp$/;"	l
c01081e9	obj/kernel.asm	/^c01081e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01081eb	obj/kernel.asm	/^c01081eb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01081ee	obj/kernel.asm	/^c01081ee:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01081f5	obj/kernel.asm	/^c01081f5:	00 $/;"	l
c01081f6	obj/kernel.asm	/^c01081f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01081f9	obj/kernel.asm	/^c01081f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01081fc	obj/kernel.asm	/^c01081fc:	e8 f8 fe ff ff       	call   c01080f9 <__kmalloc>$/;"	l
c0108201	obj/kernel.asm	/^c0108201:	c9                   	leave  $/;"	l
c0108202	obj/kernel.asm	/^c0108202:	c3                   	ret    $/;"	l
c0108203	obj/kernel.asm	/^c0108203 <kfree>:$/;"	l
c0108203	obj/kernel.asm	/^c0108203:	55                   	push   %ebp$/;"	l
c0108204	obj/kernel.asm	/^c0108204:	89 e5                	mov    %esp,%ebp$/;"	l
c0108206	obj/kernel.asm	/^c0108206:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108209	obj/kernel.asm	/^c0108209:	c7 45 f0 50 7f 15 c0 	movl   $0xc0157f50,-0x10(%ebp)$/;"	l
c0108210	obj/kernel.asm	/^c0108210:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108214	obj/kernel.asm	/^c0108214:	75 05                	jne    c010821b <kfree+0x18>$/;"	l
c0108216	obj/kernel.asm	/^c0108216:	e9 a2 00 00 00       	jmp    c01082bd <kfree+0xba>$/;"	l
c010821b	obj/kernel.asm	/^c010821b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010821e	obj/kernel.asm	/^c010821e:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0108223	obj/kernel.asm	/^c0108223:	85 c0                	test   %eax,%eax$/;"	l
c0108225	obj/kernel.asm	/^c0108225:	75 7f                	jne    c01082a6 <kfree+0xa3>$/;"	l
c0108227	obj/kernel.asm	/^c0108227:	e8 9b f9 ff ff       	call   c0107bc7 <__intr_save>$/;"	l
c010822c	obj/kernel.asm	/^c010822c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010822f	obj/kernel.asm	/^c010822f:	a1 50 7f 15 c0       	mov    0xc0157f50,%eax$/;"	l
c0108234	obj/kernel.asm	/^c0108234:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108237	obj/kernel.asm	/^c0108237:	eb 5c                	jmp    c0108295 <kfree+0x92>$/;"	l
c0108239	obj/kernel.asm	/^c0108239:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010823c	obj/kernel.asm	/^c010823c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010823f	obj/kernel.asm	/^c010823f:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0108242	obj/kernel.asm	/^c0108242:	75 3f                	jne    c0108283 <kfree+0x80>$/;"	l
c0108244	obj/kernel.asm	/^c0108244:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108247	obj/kernel.asm	/^c0108247:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010824a	obj/kernel.asm	/^c010824a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010824d	obj/kernel.asm	/^c010824d:	89 10                	mov    %edx,(%eax)$/;"	l
c010824f	obj/kernel.asm	/^c010824f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108252	obj/kernel.asm	/^c0108252:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	e8 97 f9 ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c010825a	obj/kernel.asm	/^c010825a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010825d	obj/kernel.asm	/^c010825d:	8b 10                	mov    (%eax),%edx$/;"	l
c010825f	obj/kernel.asm	/^c010825f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108262	obj/kernel.asm	/^c0108262:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108266	obj/kernel.asm	/^c0108266:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108269	obj/kernel.asm	/^c0108269:	e8 ec fa ff ff       	call   c0107d5a <__slob_free_pages>$/;"	l
c010826e	obj/kernel.asm	/^c010826e:	c7 44 24 04 0c 00 00 	movl   $0xc,0x4(%esp)$/;"	l
c0108275	obj/kernel.asm	/^c0108275:	00 $/;"	l
c0108276	obj/kernel.asm	/^c0108276:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108279	obj/kernel.asm	/^c0108279:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010827c	obj/kernel.asm	/^c010827c:	e8 e2 fc ff ff       	call   c0107f63 <slob_free>$/;"	l
c0108281	obj/kernel.asm	/^c0108281:	eb 3a                	jmp    c01082bd <kfree+0xba>$/;"	l
c0108283	obj/kernel.asm	/^c0108283:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108286	obj/kernel.asm	/^c0108286:	83 c0 08             	add    $0x8,%eax$/;"	l
c0108289	obj/kernel.asm	/^c0108289:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010828c	obj/kernel.asm	/^c010828c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010828f	obj/kernel.asm	/^c010828f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108292	obj/kernel.asm	/^c0108292:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108295	obj/kernel.asm	/^c0108295:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108299	obj/kernel.asm	/^c0108299:	75 9e                	jne    c0108239 <kfree+0x36>$/;"	l
c010829b	obj/kernel.asm	/^c010829b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010829e	obj/kernel.asm	/^c010829e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01082a1	obj/kernel.asm	/^c01082a1:	e8 4b f9 ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c01082a6	obj/kernel.asm	/^c01082a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082a9	obj/kernel.asm	/^c01082a9:	83 e8 08             	sub    $0x8,%eax$/;"	l
c01082ac	obj/kernel.asm	/^c01082ac:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01082b3	obj/kernel.asm	/^c01082b3:	00 $/;"	l
c01082b4	obj/kernel.asm	/^c01082b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01082b7	obj/kernel.asm	/^c01082b7:	e8 a7 fc ff ff       	call   c0107f63 <slob_free>$/;"	l
c01082bc	obj/kernel.asm	/^c01082bc:	90                   	nop$/;"	l
c01082bd	obj/kernel.asm	/^c01082bd:	c9                   	leave  $/;"	l
c01082be	obj/kernel.asm	/^c01082be:	c3                   	ret    $/;"	l
c01082bf	obj/kernel.asm	/^c01082bf <ksize>:$/;"	l
c01082bf	obj/kernel.asm	/^c01082bf:	55                   	push   %ebp$/;"	l
c01082c0	obj/kernel.asm	/^c01082c0:	89 e5                	mov    %esp,%ebp$/;"	l
c01082c2	obj/kernel.asm	/^c01082c2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01082c5	obj/kernel.asm	/^c01082c5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01082c9	obj/kernel.asm	/^c01082c9:	75 07                	jne    c01082d2 <ksize+0x13>$/;"	l
c01082cb	obj/kernel.asm	/^c01082cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01082d0	obj/kernel.asm	/^c01082d0:	eb 6b                	jmp    c010833d <ksize+0x7e>$/;"	l
c01082d2	obj/kernel.asm	/^c01082d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01082d5	obj/kernel.asm	/^c01082d5:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01082da	obj/kernel.asm	/^c01082da:	85 c0                	test   %eax,%eax$/;"	l
c01082dc	obj/kernel.asm	/^c01082dc:	75 54                	jne    c0108332 <ksize+0x73>$/;"	l
c01082de	obj/kernel.asm	/^c01082de:	e8 e4 f8 ff ff       	call   c0107bc7 <__intr_save>$/;"	l
c01082e3	obj/kernel.asm	/^c01082e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01082e6	obj/kernel.asm	/^c01082e6:	a1 50 7f 15 c0       	mov    0xc0157f50,%eax$/;"	l
c01082eb	obj/kernel.asm	/^c01082eb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01082ee	obj/kernel.asm	/^c01082ee:	eb 31                	jmp    c0108321 <ksize+0x62>$/;"	l
c01082f0	obj/kernel.asm	/^c01082f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01082f3	obj/kernel.asm	/^c01082f3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01082f6	obj/kernel.asm	/^c01082f6:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01082f9	obj/kernel.asm	/^c01082f9:	75 1d                	jne    c0108318 <ksize+0x59>$/;"	l
c01082fb	obj/kernel.asm	/^c01082fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01082fe	obj/kernel.asm	/^c01082fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108301	obj/kernel.asm	/^c0108301:	e8 eb f8 ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c0108306	obj/kernel.asm	/^c0108306:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108309	obj/kernel.asm	/^c0108309:	8b 00                	mov    (%eax),%eax$/;"	l
c010830b	obj/kernel.asm	/^c010830b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0108310	obj/kernel.asm	/^c0108310:	89 c1                	mov    %eax,%ecx$/;"	l
c0108312	obj/kernel.asm	/^c0108312:	d3 e2                	shl    %cl,%edx$/;"	d
c0108314	obj/kernel.asm	/^c0108314:	89 d0                	mov    %edx,%eax$/;"	l
c0108316	obj/kernel.asm	/^c0108316:	eb 25                	jmp    c010833d <ksize+0x7e>$/;"	l
c0108318	obj/kernel.asm	/^c0108318:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010831b	obj/kernel.asm	/^c010831b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010831e	obj/kernel.asm	/^c010831e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108321	obj/kernel.asm	/^c0108321:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108325	obj/kernel.asm	/^c0108325:	75 c9                	jne    c01082f0 <ksize+0x31>$/;"	l
c0108327	obj/kernel.asm	/^c0108327:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010832a	obj/kernel.asm	/^c010832a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010832d	obj/kernel.asm	/^c010832d:	e8 bf f8 ff ff       	call   c0107bf1 <__intr_restore>$/;"	l
c0108332	obj/kernel.asm	/^c0108332:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108335	obj/kernel.asm	/^c0108335:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0108338	obj/kernel.asm	/^c0108338:	8b 00                	mov    (%eax),%eax$/;"	l
c010833a	obj/kernel.asm	/^c010833a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010833d	obj/kernel.asm	/^c010833d:	c9                   	leave  $/;"	l
c010833e	obj/kernel.asm	/^c010833e:	c3                   	ret    $/;"	l
c010833f	obj/kernel.asm	/^c010833f <pa2page>:$/;"	l
c010833f	obj/kernel.asm	/^c010833f:	55                   	push   %ebp$/;"	l
c0108340	obj/kernel.asm	/^c0108340:	89 e5                	mov    %esp,%ebp$/;"	l
c0108342	obj/kernel.asm	/^c0108342:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108345	obj/kernel.asm	/^c0108345:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108348	obj/kernel.asm	/^c0108348:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010834b	obj/kernel.asm	/^c010834b:	89 c2                	mov    %eax,%edx$/;"	l
c010834d	obj/kernel.asm	/^c010834d:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c0108352	obj/kernel.asm	/^c0108352:	39 c2                	cmp    %eax,%edx$/;"	l
c0108354	obj/kernel.asm	/^c0108354:	72 1c                	jb     c0108372 <pa2page+0x33>$/;"	l
c0108356	obj/kernel.asm	/^c0108356:	c7 44 24 08 10 89 11 	movl   $0xc0118910,0x8(%esp)$/;"	l
c010835d	obj/kernel.asm	/^c010835d:	c0 $/;"	l
c010835e	obj/kernel.asm	/^c010835e:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c0108365	obj/kernel.asm	/^c0108365:	00 $/;"	l
c0108366	obj/kernel.asm	/^c0108366:	c7 04 24 2f 89 11 c0 	movl   $0xc011892f,(%esp)$/;"	l
c010836d	obj/kernel.asm	/^c010836d:	e8 c5 88 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108372	obj/kernel.asm	/^c0108372:	8b 0d 78 b6 15 c0    	mov    0xc015b678,%ecx$/;"	l
c0108378	obj/kernel.asm	/^c0108378:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010837b	obj/kernel.asm	/^c010837b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010837e	obj/kernel.asm	/^c010837e:	89 c2                	mov    %eax,%edx$/;"	l
c0108380	obj/kernel.asm	/^c0108380:	89 d0                	mov    %edx,%eax$/;"	l
c0108382	obj/kernel.asm	/^c0108382:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0108385	obj/kernel.asm	/^c0108385:	01 d0                	add    %edx,%eax$/;"	l
c0108387	obj/kernel.asm	/^c0108387:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010838a	obj/kernel.asm	/^c010838a:	01 c8                	add    %ecx,%eax$/;"	l
c010838c	obj/kernel.asm	/^c010838c:	c9                   	leave  $/;"	l
c010838d	obj/kernel.asm	/^c010838d:	c3                   	ret    $/;"	l
c010838e	obj/kernel.asm	/^c010838e <pte2page>:$/;"	l
c010838e	obj/kernel.asm	/^c010838e:	55                   	push   %ebp$/;"	l
c010838f	obj/kernel.asm	/^c010838f:	89 e5                	mov    %esp,%ebp$/;"	l
c0108391	obj/kernel.asm	/^c0108391:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108394	obj/kernel.asm	/^c0108394:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108397	obj/kernel.asm	/^c0108397:	83 e0 01             	and    $0x1,%eax$/;"	l
c010839a	obj/kernel.asm	/^c010839a:	85 c0                	test   %eax,%eax$/;"	l
c010839c	obj/kernel.asm	/^c010839c:	75 1c                	jne    c01083ba <pte2page+0x2c>$/;"	l
c010839e	obj/kernel.asm	/^c010839e:	c7 44 24 08 40 89 11 	movl   $0xc0118940,0x8(%esp)$/;"	l
c01083a5	obj/kernel.asm	/^c01083a5:	c0 $/;"	l
c01083a6	obj/kernel.asm	/^c01083a6:	c7 44 24 04 70 00 00 	movl   $0x70,0x4(%esp)$/;"	l
c01083ad	obj/kernel.asm	/^c01083ad:	00 $/;"	l
c01083ae	obj/kernel.asm	/^c01083ae:	c7 04 24 2f 89 11 c0 	movl   $0xc011892f,(%esp)$/;"	l
c01083b5	obj/kernel.asm	/^c01083b5:	e8 7d 88 ff ff       	call   c0100c37 <__panic>$/;"	l
c01083ba	obj/kernel.asm	/^c01083ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01083bd	obj/kernel.asm	/^c01083bd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01083c2	obj/kernel.asm	/^c01083c2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01083c5	obj/kernel.asm	/^c01083c5:	e8 75 ff ff ff       	call   c010833f <pa2page>$/;"	l
c01083ca	obj/kernel.asm	/^c01083ca:	c9                   	leave  $/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	c3                   	ret    $/;"	l
c01083cc	obj/kernel.asm	/^c01083cc <swap_init>:$/;"	l
c01083cc	obj/kernel.asm	/^c01083cc:	55                   	push   %ebp$/;"	l
c01083cd	obj/kernel.asm	/^c01083cd:	89 e5                	mov    %esp,%ebp$/;"	l
c01083cf	obj/kernel.asm	/^c01083cf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01083d2	obj/kernel.asm	/^c01083d2:	e8 7c 79 00 00       	call   c010fd53 <swapfs_init>$/;"	l
c01083d7	obj/kernel.asm	/^c01083d7:	a1 3c b7 15 c0       	mov    0xc015b73c,%eax$/;"	l
c01083dc	obj/kernel.asm	/^c01083dc:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c01083e1	obj/kernel.asm	/^c01083e1:	76 0c                	jbe    c01083ef <swap_init+0x23>$/;"	l
c01083e3	obj/kernel.asm	/^c01083e3:	a1 3c b7 15 c0       	mov    0xc015b73c,%eax$/;"	l
c01083e8	obj/kernel.asm	/^c01083e8:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c01083ed	obj/kernel.asm	/^c01083ed:	76 25                	jbe    c0108414 <swap_init+0x48>$/;"	l
c01083ef	obj/kernel.asm	/^c01083ef:	a1 3c b7 15 c0       	mov    0xc015b73c,%eax$/;"	l
c01083f4	obj/kernel.asm	/^c01083f4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01083f8	obj/kernel.asm	/^c01083f8:	c7 44 24 08 61 89 11 	movl   $0xc0118961,0x8(%esp)$/;"	l
c01083ff	obj/kernel.asm	/^c01083ff:	c0 $/;"	l
c0108400	obj/kernel.asm	/^c0108400:	c7 44 24 04 27 00 00 	movl   $0x27,0x4(%esp)$/;"	l
c0108407	obj/kernel.asm	/^c0108407:	00 $/;"	l
c0108408	obj/kernel.asm	/^c0108408:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c010840f	obj/kernel.asm	/^c010840f:	e8 23 88 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108414	obj/kernel.asm	/^c0108414:	c7 05 5c 7f 15 c0 40 	movl   $0xc0156a40,0xc0157f5c$/;"	l
c010841b	obj/kernel.asm	/^c010841b:	6a 15 c0 $/;"	l
c010841e	obj/kernel.asm	/^c010841e:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c0108423	obj/kernel.asm	/^c0108423:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108426	obj/kernel.asm	/^c0108426:	ff d0                	call   *%eax$/;"	l
c0108428	obj/kernel.asm	/^c0108428:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010842b	obj/kernel.asm	/^c010842b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010842f	obj/kernel.asm	/^c010842f:	75 26                	jne    c0108457 <swap_init+0x8b>$/;"	l
c0108431	obj/kernel.asm	/^c0108431:	c7 05 54 7f 15 c0 01 	movl   $0x1,0xc0157f54$/;"	l
c0108438	obj/kernel.asm	/^c0108438:	00 00 00 $/;"	l
c010843b	obj/kernel.asm	/^c010843b:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c0108440	obj/kernel.asm	/^c0108440:	8b 00                	mov    (%eax),%eax$/;"	l
c0108442	obj/kernel.asm	/^c0108442:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108446	obj/kernel.asm	/^c0108446:	c7 04 24 8b 89 11 c0 	movl   $0xc011898b,(%esp)$/;"	l
c010844d	obj/kernel.asm	/^c010844d:	e8 8e 86 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108452	obj/kernel.asm	/^c0108452:	e8 a4 04 00 00       	call   c01088fb <check_swap>$/;"	l
c0108457	obj/kernel.asm	/^c0108457:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010845a	obj/kernel.asm	/^c010845a:	c9                   	leave  $/;"	l
c010845b	obj/kernel.asm	/^c010845b:	c3                   	ret    $/;"	l
c010845c	obj/kernel.asm	/^c010845c <swap_init_mm>:$/;"	l
c010845c	obj/kernel.asm	/^c010845c:	55                   	push   %ebp$/;"	l
c010845d	obj/kernel.asm	/^c010845d:	89 e5                	mov    %esp,%ebp$/;"	l
c010845f	obj/kernel.asm	/^c010845f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108462	obj/kernel.asm	/^c0108462:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c0108467	obj/kernel.asm	/^c0108467:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010846a	obj/kernel.asm	/^c010846a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010846d	obj/kernel.asm	/^c010846d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108470	obj/kernel.asm	/^c0108470:	ff d0                	call   *%eax$/;"	l
c0108472	obj/kernel.asm	/^c0108472:	c9                   	leave  $/;"	l
c0108473	obj/kernel.asm	/^c0108473:	c3                   	ret    $/;"	l
c0108474	obj/kernel.asm	/^c0108474 <swap_tick_event>:$/;"	l
c0108474	obj/kernel.asm	/^c0108474:	55                   	push   %ebp$/;"	l
c0108475	obj/kernel.asm	/^c0108475:	89 e5                	mov    %esp,%ebp$/;"	l
c0108477	obj/kernel.asm	/^c0108477:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010847a	obj/kernel.asm	/^c010847a:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c010847f	obj/kernel.asm	/^c010847f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108485	obj/kernel.asm	/^c0108485:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108488	obj/kernel.asm	/^c0108488:	ff d0                	call   *%eax$/;"	l
c010848a	obj/kernel.asm	/^c010848a:	c9                   	leave  $/;"	l
c010848b	obj/kernel.asm	/^c010848b:	c3                   	ret    $/;"	l
c010848c	obj/kernel.asm	/^c010848c <swap_map_swappable>:$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	55                   	push   %ebp$/;"	l
c010848d	obj/kernel.asm	/^c010848d:	89 e5                	mov    %esp,%ebp$/;"	l
c010848f	obj/kernel.asm	/^c010848f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108492	obj/kernel.asm	/^c0108492:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c0108497	obj/kernel.asm	/^c0108497:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010849a	obj/kernel.asm	/^c010849a:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010849d	obj/kernel.asm	/^c010849d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01084a1	obj/kernel.asm	/^c01084a1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01084a4	obj/kernel.asm	/^c01084a4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01084a8	obj/kernel.asm	/^c01084a8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01084ab	obj/kernel.asm	/^c01084ab:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01084af	obj/kernel.asm	/^c01084af:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01084b2	obj/kernel.asm	/^c01084b2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01084b5	obj/kernel.asm	/^c01084b5:	ff d0                	call   *%eax$/;"	l
c01084b7	obj/kernel.asm	/^c01084b7:	c9                   	leave  $/;"	l
c01084b8	obj/kernel.asm	/^c01084b8:	c3                   	ret    $/;"	l
c01084b9	obj/kernel.asm	/^c01084b9 <swap_set_unswappable>:$/;"	l
c01084b9	obj/kernel.asm	/^c01084b9:	55                   	push   %ebp$/;"	l
c01084ba	obj/kernel.asm	/^c01084ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01084bc	obj/kernel.asm	/^c01084bc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01084bf	obj/kernel.asm	/^c01084bf:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c01084c4	obj/kernel.asm	/^c01084c4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01084c7	obj/kernel.asm	/^c01084c7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01084ca	obj/kernel.asm	/^c01084ca:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01084ce	obj/kernel.asm	/^c01084ce:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01084d1	obj/kernel.asm	/^c01084d1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01084d4	obj/kernel.asm	/^c01084d4:	ff d0                	call   *%eax$/;"	l
c01084d6	obj/kernel.asm	/^c01084d6:	c9                   	leave  $/;"	l
c01084d7	obj/kernel.asm	/^c01084d7:	c3                   	ret    $/;"	l
c01084d8	obj/kernel.asm	/^c01084d8 <swap_out>:$/;"	l
c01084d8	obj/kernel.asm	/^c01084d8:	55                   	push   %ebp$/;"	l
c01084d9	obj/kernel.asm	/^c01084d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01084db	obj/kernel.asm	/^c01084db:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01084de	obj/kernel.asm	/^c01084de:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01084e5	obj/kernel.asm	/^c01084e5:	e9 5a 01 00 00       	jmp    c0108644 <swap_out+0x16c>$/;"	l
c01084ea	obj/kernel.asm	/^c01084ea:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c01084ef	obj/kernel.asm	/^c01084ef:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01084f2	obj/kernel.asm	/^c01084f2:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01084f5	obj/kernel.asm	/^c01084f5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01084f9	obj/kernel.asm	/^c01084f9:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c01084fc	obj/kernel.asm	/^c01084fc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108500	obj/kernel.asm	/^c0108500:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108503	obj/kernel.asm	/^c0108503:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0108506	obj/kernel.asm	/^c0108506:	ff d0                	call   *%eax$/;"	l
c0108508	obj/kernel.asm	/^c0108508:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010850b	obj/kernel.asm	/^c010850b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	74 18                	je     c0108529 <swap_out+0x51>$/;"	l
c0108511	obj/kernel.asm	/^c0108511:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108514	obj/kernel.asm	/^c0108514:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108518	obj/kernel.asm	/^c0108518:	c7 04 24 a0 89 11 c0 	movl   $0xc01189a0,(%esp)$/;"	l
c010851f	obj/kernel.asm	/^c010851f:	e8 bc 85 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108524	obj/kernel.asm	/^c0108524:	e9 27 01 00 00       	jmp    c0108650 <swap_out+0x178>$/;"	l
c0108529	obj/kernel.asm	/^c0108529:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010852c	obj/kernel.asm	/^c010852c:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010852f	obj/kernel.asm	/^c010852f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108532	obj/kernel.asm	/^c0108532:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108535	obj/kernel.asm	/^c0108535:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108538	obj/kernel.asm	/^c0108538:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010853f	obj/kernel.asm	/^c010853f:	00 $/;"	l
c0108540	obj/kernel.asm	/^c0108540:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108543	obj/kernel.asm	/^c0108543:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108547	obj/kernel.asm	/^c0108547:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010854a	obj/kernel.asm	/^c010854a:	e8 7c c9 ff ff       	call   c0104ecb <get_pte>$/;"	l
c010854f	obj/kernel.asm	/^c010854f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108552	obj/kernel.asm	/^c0108552:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108555	obj/kernel.asm	/^c0108555:	8b 00                	mov    (%eax),%eax$/;"	l
c0108557	obj/kernel.asm	/^c0108557:	83 e0 01             	and    $0x1,%eax$/;"	l
c010855a	obj/kernel.asm	/^c010855a:	85 c0                	test   %eax,%eax$/;"	l
c010855c	obj/kernel.asm	/^c010855c:	75 24                	jne    c0108582 <swap_out+0xaa>$/;"	l
c010855e	obj/kernel.asm	/^c010855e:	c7 44 24 0c cd 89 11 	movl   $0xc01189cd,0xc(%esp)$/;"	l
c0108565	obj/kernel.asm	/^c0108565:	c0 $/;"	l
c0108566	obj/kernel.asm	/^c0108566:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c010856d	obj/kernel.asm	/^c010856d:	c0 $/;"	l
c010856e	obj/kernel.asm	/^c010856e:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c0108575	obj/kernel.asm	/^c0108575:	00 $/;"	l
c0108576	obj/kernel.asm	/^c0108576:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c010857d	obj/kernel.asm	/^c010857d:	e8 b5 86 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108582	obj/kernel.asm	/^c0108582:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108585	obj/kernel.asm	/^c0108585:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108588	obj/kernel.asm	/^c0108588:	8b 52 20             	mov    0x20(%edx),%edx$/;"	l
c010858b	obj/kernel.asm	/^c010858b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010858e	obj/kernel.asm	/^c010858e:	83 c2 01             	add    $0x1,%edx$/;"	l
c0108591	obj/kernel.asm	/^c0108591:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0108594	obj/kernel.asm	/^c0108594:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108598	obj/kernel.asm	/^c0108598:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010859b	obj/kernel.asm	/^c010859b:	e8 6d 78 00 00       	call   c010fe0d <swapfs_write>$/;"	l
c01085a0	obj/kernel.asm	/^c01085a0:	85 c0                	test   %eax,%eax$/;"	l
c01085a2	obj/kernel.asm	/^c01085a2:	74 34                	je     c01085d8 <swap_out+0x100>$/;"	l
c01085a4	obj/kernel.asm	/^c01085a4:	c7 04 24 f7 89 11 c0 	movl   $0xc01189f7,(%esp)$/;"	l
c01085ab	obj/kernel.asm	/^c01085ab:	e8 30 85 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01085b0	obj/kernel.asm	/^c01085b0:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c01085b5	obj/kernel.asm	/^c01085b5:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01085b8	obj/kernel.asm	/^c01085b8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01085bb	obj/kernel.asm	/^c01085bb:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01085c2	obj/kernel.asm	/^c01085c2:	00 $/;"	l
c01085c3	obj/kernel.asm	/^c01085c3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01085c7	obj/kernel.asm	/^c01085c7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01085ca	obj/kernel.asm	/^c01085ca:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01085ce	obj/kernel.asm	/^c01085ce:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01085d1	obj/kernel.asm	/^c01085d1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01085d4	obj/kernel.asm	/^c01085d4:	ff d0                	call   *%eax$/;"	l
c01085d6	obj/kernel.asm	/^c01085d6:	eb 68                	jmp    c0108640 <swap_out+0x168>$/;"	l
c01085d8	obj/kernel.asm	/^c01085d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085db	obj/kernel.asm	/^c01085db:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c01085de	obj/kernel.asm	/^c01085de:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01085e1	obj/kernel.asm	/^c01085e1:	83 c0 01             	add    $0x1,%eax$/;"	l
c01085e4	obj/kernel.asm	/^c01085e4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01085e8	obj/kernel.asm	/^c01085e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01085ef	obj/kernel.asm	/^c01085ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01085f2	obj/kernel.asm	/^c01085f2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01085f6	obj/kernel.asm	/^c01085f6:	c7 04 24 10 8a 11 c0 	movl   $0xc0118a10,(%esp)$/;"	l
c01085fd	obj/kernel.asm	/^c01085fd:	e8 de 84 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108602	obj/kernel.asm	/^c0108602:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108605	obj/kernel.asm	/^c0108605:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c0108608	obj/kernel.asm	/^c0108608:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010860b	obj/kernel.asm	/^c010860b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010860e	obj/kernel.asm	/^c010860e:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0108611	obj/kernel.asm	/^c0108611:	89 c2                	mov    %eax,%edx$/;"	l
c0108613	obj/kernel.asm	/^c0108613:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108616	obj/kernel.asm	/^c0108616:	89 10                	mov    %edx,(%eax)$/;"	l
c0108618	obj/kernel.asm	/^c0108618:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010861b	obj/kernel.asm	/^c010861b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108622	obj/kernel.asm	/^c0108622:	00 $/;"	l
c0108623	obj/kernel.asm	/^c0108623:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108626	obj/kernel.asm	/^c0108626:	e8 cf c0 ff ff       	call   c01046fa <free_pages>$/;"	l
c010862b	obj/kernel.asm	/^c010862b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010862e	obj/kernel.asm	/^c010862e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108631	obj/kernel.asm	/^c0108631:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108634	obj/kernel.asm	/^c0108634:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108638	obj/kernel.asm	/^c0108638:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010863b	obj/kernel.asm	/^c010863b:	e8 98 cf ff ff       	call   c01055d8 <tlb_invalidate>$/;"	l
c0108640	obj/kernel.asm	/^c0108640:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108644	obj/kernel.asm	/^c0108644:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108647	obj/kernel.asm	/^c0108647:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010864a	obj/kernel.asm	/^c010864a:	0f 85 9a fe ff ff    	jne    c01084ea <swap_out+0x12>$/;"	l
c0108650	obj/kernel.asm	/^c0108650:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108653	obj/kernel.asm	/^c0108653:	c9                   	leave  $/;"	l
c0108654	obj/kernel.asm	/^c0108654:	c3                   	ret    $/;"	l
c0108655	obj/kernel.asm	/^c0108655 <swap_in>:$/;"	l
c0108655	obj/kernel.asm	/^c0108655:	55                   	push   %ebp$/;"	l
c0108656	obj/kernel.asm	/^c0108656:	89 e5                	mov    %esp,%ebp$/;"	l
c0108658	obj/kernel.asm	/^c0108658:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010865b	obj/kernel.asm	/^c010865b:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0108662	obj/kernel.asm	/^c0108662:	e8 28 c0 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0108667	obj/kernel.asm	/^c0108667:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010866a	obj/kernel.asm	/^c010866a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010866e	obj/kernel.asm	/^c010866e:	75 24                	jne    c0108694 <swap_in+0x3f>$/;"	l
c0108670	obj/kernel.asm	/^c0108670:	c7 44 24 0c 50 8a 11 	movl   $0xc0118a50,0xc(%esp)$/;"	l
c0108677	obj/kernel.asm	/^c0108677:	c0 $/;"	l
c0108678	obj/kernel.asm	/^c0108678:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c010867f	obj/kernel.asm	/^c010867f:	c0 $/;"	l
c0108680	obj/kernel.asm	/^c0108680:	c7 44 24 04 7d 00 00 	movl   $0x7d,0x4(%esp)$/;"	l
c0108687	obj/kernel.asm	/^c0108687:	00 $/;"	l
c0108688	obj/kernel.asm	/^c0108688:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c010868f	obj/kernel.asm	/^c010868f:	e8 a3 85 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108694	obj/kernel.asm	/^c0108694:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108697	obj/kernel.asm	/^c0108697:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010869a	obj/kernel.asm	/^c010869a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01086a1	obj/kernel.asm	/^c01086a1:	00 $/;"	l
c01086a2	obj/kernel.asm	/^c01086a2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01086a5	obj/kernel.asm	/^c01086a5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01086a9	obj/kernel.asm	/^c01086a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01086ac	obj/kernel.asm	/^c01086ac:	e8 1a c8 ff ff       	call   c0104ecb <get_pte>$/;"	l
c01086b1	obj/kernel.asm	/^c01086b1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01086b4	obj/kernel.asm	/^c01086b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01086b7	obj/kernel.asm	/^c01086b7:	8b 00                	mov    (%eax),%eax$/;"	l
c01086b9	obj/kernel.asm	/^c01086b9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01086bc	obj/kernel.asm	/^c01086bc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01086c0	obj/kernel.asm	/^c01086c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01086c3	obj/kernel.asm	/^c01086c3:	e8 d3 76 00 00       	call   c010fd9b <swapfs_read>$/;"	l
c01086c8	obj/kernel.asm	/^c01086c8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01086cb	obj/kernel.asm	/^c01086cb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01086cf	obj/kernel.asm	/^c01086cf:	74 2a                	je     c01086fb <swap_in+0xa6>$/;"	l
c01086d1	obj/kernel.asm	/^c01086d1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01086d5	obj/kernel.asm	/^c01086d5:	75 24                	jne    c01086fb <swap_in+0xa6>$/;"	l
c01086d7	obj/kernel.asm	/^c01086d7:	c7 44 24 0c 5d 8a 11 	movl   $0xc0118a5d,0xc(%esp)$/;"	l
c01086de	obj/kernel.asm	/^c01086de:	c0 $/;"	l
c01086df	obj/kernel.asm	/^c01086df:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c01086e6	obj/kernel.asm	/^c01086e6:	c0 $/;"	l
c01086e7	obj/kernel.asm	/^c01086e7:	c7 44 24 04 85 00 00 	movl   $0x85,0x4(%esp)$/;"	l
c01086ee	obj/kernel.asm	/^c01086ee:	00 $/;"	l
c01086ef	obj/kernel.asm	/^c01086ef:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c01086f6	obj/kernel.asm	/^c01086f6:	e8 3c 85 ff ff       	call   c0100c37 <__panic>$/;"	l
c01086fb	obj/kernel.asm	/^c01086fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01086fe	obj/kernel.asm	/^c01086fe:	8b 00                	mov    (%eax),%eax$/;"	l
c0108700	obj/kernel.asm	/^c0108700:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0108703	obj/kernel.asm	/^c0108703:	89 c2                	mov    %eax,%edx$/;"	l
c0108705	obj/kernel.asm	/^c0108705:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108708	obj/kernel.asm	/^c0108708:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010870c	obj/kernel.asm	/^c010870c:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0108710	obj/kernel.asm	/^c0108710:	c7 04 24 64 8a 11 c0 	movl   $0xc0118a64,(%esp)$/;"	l
c0108717	obj/kernel.asm	/^c0108717:	e8 c4 83 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010871c	obj/kernel.asm	/^c010871c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010871f	obj/kernel.asm	/^c010871f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108722	obj/kernel.asm	/^c0108722:	89 10                	mov    %edx,(%eax)$/;"	l
c0108724	obj/kernel.asm	/^c0108724:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108729	obj/kernel.asm	/^c0108729:	c9                   	leave  $/;"	l
c010872a	obj/kernel.asm	/^c010872a:	c3                   	ret    $/;"	l
c010872b	obj/kernel.asm	/^c010872b <check_content_set>:$/;"	l
c010872b	obj/kernel.asm	/^c010872b:	55                   	push   %ebp$/;"	l
c010872c	obj/kernel.asm	/^c010872c:	89 e5                	mov    %esp,%ebp$/;"	l
c010872e	obj/kernel.asm	/^c010872e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108731	obj/kernel.asm	/^c0108731:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0108736	obj/kernel.asm	/^c0108736:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0108739	obj/kernel.asm	/^c0108739:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c010873e	obj/kernel.asm	/^c010873e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108741	obj/kernel.asm	/^c0108741:	74 24                	je     c0108767 <check_content_set+0x3c>$/;"	l
c0108743	obj/kernel.asm	/^c0108743:	c7 44 24 0c a2 8a 11 	movl   $0xc0118aa2,0xc(%esp)$/;"	l
c010874a	obj/kernel.asm	/^c010874a:	c0 $/;"	l
c010874b	obj/kernel.asm	/^c010874b:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108752	obj/kernel.asm	/^c0108752:	c0 $/;"	l
c0108753	obj/kernel.asm	/^c0108753:	c7 44 24 04 92 00 00 	movl   $0x92,0x4(%esp)$/;"	l
c010875a	obj/kernel.asm	/^c010875a:	00 $/;"	l
c010875b	obj/kernel.asm	/^c010875b:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108762	obj/kernel.asm	/^c0108762:	e8 d0 84 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108767	obj/kernel.asm	/^c0108767:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c010876c	obj/kernel.asm	/^c010876c:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010876f	obj/kernel.asm	/^c010876f:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0108774	obj/kernel.asm	/^c0108774:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108777	obj/kernel.asm	/^c0108777:	74 24                	je     c010879d <check_content_set+0x72>$/;"	l
c0108779	obj/kernel.asm	/^c0108779:	c7 44 24 0c a2 8a 11 	movl   $0xc0118aa2,0xc(%esp)$/;"	l
c0108780	obj/kernel.asm	/^c0108780:	c0 $/;"	l
c0108781	obj/kernel.asm	/^c0108781:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108788	obj/kernel.asm	/^c0108788:	c0 $/;"	l
c0108789	obj/kernel.asm	/^c0108789:	c7 44 24 04 94 00 00 	movl   $0x94,0x4(%esp)$/;"	l
c0108790	obj/kernel.asm	/^c0108790:	00 $/;"	l
c0108791	obj/kernel.asm	/^c0108791:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108798	obj/kernel.asm	/^c0108798:	e8 9a 84 ff ff       	call   c0100c37 <__panic>$/;"	l
c010879d	obj/kernel.asm	/^c010879d:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01087a2	obj/kernel.asm	/^c01087a2:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01087a5	obj/kernel.asm	/^c01087a5:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01087aa	obj/kernel.asm	/^c01087aa:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01087ad	obj/kernel.asm	/^c01087ad:	74 24                	je     c01087d3 <check_content_set+0xa8>$/;"	l
c01087af	obj/kernel.asm	/^c01087af:	c7 44 24 0c b1 8a 11 	movl   $0xc0118ab1,0xc(%esp)$/;"	l
c01087b6	obj/kernel.asm	/^c01087b6:	c0 $/;"	l
c01087b7	obj/kernel.asm	/^c01087b7:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c01087be	obj/kernel.asm	/^c01087be:	c0 $/;"	l
c01087bf	obj/kernel.asm	/^c01087bf:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c01087c6	obj/kernel.asm	/^c01087c6:	00 $/;"	l
c01087c7	obj/kernel.asm	/^c01087c7:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c01087ce	obj/kernel.asm	/^c01087ce:	e8 64 84 ff ff       	call   c0100c37 <__panic>$/;"	l
c01087d3	obj/kernel.asm	/^c01087d3:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c01087d8	obj/kernel.asm	/^c01087d8:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01087db	obj/kernel.asm	/^c01087db:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01087e0	obj/kernel.asm	/^c01087e0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01087e3	obj/kernel.asm	/^c01087e3:	74 24                	je     c0108809 <check_content_set+0xde>$/;"	l
c01087e5	obj/kernel.asm	/^c01087e5:	c7 44 24 0c b1 8a 11 	movl   $0xc0118ab1,0xc(%esp)$/;"	l
c01087ec	obj/kernel.asm	/^c01087ec:	c0 $/;"	l
c01087ed	obj/kernel.asm	/^c01087ed:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c01087f4	obj/kernel.asm	/^c01087f4:	c0 $/;"	l
c01087f5	obj/kernel.asm	/^c01087f5:	c7 44 24 04 98 00 00 	movl   $0x98,0x4(%esp)$/;"	l
c01087fc	obj/kernel.asm	/^c01087fc:	00 $/;"	l
c01087fd	obj/kernel.asm	/^c01087fd:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108804	obj/kernel.asm	/^c0108804:	e8 2e 84 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108809	obj/kernel.asm	/^c0108809:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c010880e	obj/kernel.asm	/^c010880e:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0108811	obj/kernel.asm	/^c0108811:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0108816	obj/kernel.asm	/^c0108816:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108819	obj/kernel.asm	/^c0108819:	74 24                	je     c010883f <check_content_set+0x114>$/;"	l
c010881b	obj/kernel.asm	/^c010881b:	c7 44 24 0c c0 8a 11 	movl   $0xc0118ac0,0xc(%esp)$/;"	l
c0108822	obj/kernel.asm	/^c0108822:	c0 $/;"	l
c0108823	obj/kernel.asm	/^c0108823:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c010882a	obj/kernel.asm	/^c010882a:	c0 $/;"	l
c010882b	obj/kernel.asm	/^c010882b:	c7 44 24 04 9a 00 00 	movl   $0x9a,0x4(%esp)$/;"	l
c0108832	obj/kernel.asm	/^c0108832:	00 $/;"	l
c0108833	obj/kernel.asm	/^c0108833:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c010883a	obj/kernel.asm	/^c010883a:	e8 f8 83 ff ff       	call   c0100c37 <__panic>$/;"	l
c010883f	obj/kernel.asm	/^c010883f:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0108844	obj/kernel.asm	/^c0108844:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0108847	obj/kernel.asm	/^c0108847:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c010884c	obj/kernel.asm	/^c010884c:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010884f	obj/kernel.asm	/^c010884f:	74 24                	je     c0108875 <check_content_set+0x14a>$/;"	l
c0108851	obj/kernel.asm	/^c0108851:	c7 44 24 0c c0 8a 11 	movl   $0xc0118ac0,0xc(%esp)$/;"	l
c0108858	obj/kernel.asm	/^c0108858:	c0 $/;"	l
c0108859	obj/kernel.asm	/^c0108859:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108860	obj/kernel.asm	/^c0108860:	c0 $/;"	l
c0108861	obj/kernel.asm	/^c0108861:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c0108868	obj/kernel.asm	/^c0108868:	00 $/;"	l
c0108869	obj/kernel.asm	/^c0108869:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108870	obj/kernel.asm	/^c0108870:	e8 c2 83 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108875	obj/kernel.asm	/^c0108875:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c010887a	obj/kernel.asm	/^c010887a:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c010887d	obj/kernel.asm	/^c010887d:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c0108882	obj/kernel.asm	/^c0108882:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0108885	obj/kernel.asm	/^c0108885:	74 24                	je     c01088ab <check_content_set+0x180>$/;"	l
c0108887	obj/kernel.asm	/^c0108887:	c7 44 24 0c cf 8a 11 	movl   $0xc0118acf,0xc(%esp)$/;"	l
c010888e	obj/kernel.asm	/^c010888e:	c0 $/;"	l
c010888f	obj/kernel.asm	/^c010888f:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108896	obj/kernel.asm	/^c0108896:	c0 $/;"	l
c0108897	obj/kernel.asm	/^c0108897:	c7 44 24 04 9e 00 00 	movl   $0x9e,0x4(%esp)$/;"	l
c010889e	obj/kernel.asm	/^c010889e:	00 $/;"	l
c010889f	obj/kernel.asm	/^c010889f:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c01088a6	obj/kernel.asm	/^c01088a6:	e8 8c 83 ff ff       	call   c0100c37 <__panic>$/;"	l
c01088ab	obj/kernel.asm	/^c01088ab:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01088b0	obj/kernel.asm	/^c01088b0:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01088b3	obj/kernel.asm	/^c01088b3:	a1 4c 7f 15 c0       	mov    0xc0157f4c,%eax$/;"	l
c01088b8	obj/kernel.asm	/^c01088b8:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01088bb	obj/kernel.asm	/^c01088bb:	74 24                	je     c01088e1 <check_content_set+0x1b6>$/;"	l
c01088bd	obj/kernel.asm	/^c01088bd:	c7 44 24 0c cf 8a 11 	movl   $0xc0118acf,0xc(%esp)$/;"	l
c01088c4	obj/kernel.asm	/^c01088c4:	c0 $/;"	l
c01088c5	obj/kernel.asm	/^c01088c5:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c01088cc	obj/kernel.asm	/^c01088cc:	c0 $/;"	l
c01088cd	obj/kernel.asm	/^c01088cd:	c7 44 24 04 a0 00 00 	movl   $0xa0,0x4(%esp)$/;"	l
c01088d4	obj/kernel.asm	/^c01088d4:	00 $/;"	l
c01088d5	obj/kernel.asm	/^c01088d5:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c01088dc	obj/kernel.asm	/^c01088dc:	e8 56 83 ff ff       	call   c0100c37 <__panic>$/;"	l
c01088e1	obj/kernel.asm	/^c01088e1:	c9                   	leave  $/;"	l
c01088e2	obj/kernel.asm	/^c01088e2:	c3                   	ret    $/;"	l
c01088e3	obj/kernel.asm	/^c01088e3 <check_content_access>:$/;"	l
c01088e3	obj/kernel.asm	/^c01088e3:	55                   	push   %ebp$/;"	l
c01088e4	obj/kernel.asm	/^c01088e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01088e6	obj/kernel.asm	/^c01088e6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01088e9	obj/kernel.asm	/^c01088e9:	a1 5c 7f 15 c0       	mov    0xc0157f5c,%eax$/;"	l
c01088ee	obj/kernel.asm	/^c01088ee:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01088f1	obj/kernel.asm	/^c01088f1:	ff d0                	call   *%eax$/;"	l
c01088f3	obj/kernel.asm	/^c01088f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01088f6	obj/kernel.asm	/^c01088f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01088f9	obj/kernel.asm	/^c01088f9:	c9                   	leave  $/;"	l
c01088fa	obj/kernel.asm	/^c01088fa:	c3                   	ret    $/;"	l
c01088fb	obj/kernel.asm	/^c01088fb <check_swap>:$/;"	l
c01088fb	obj/kernel.asm	/^c01088fb:	55                   	push   %ebp$/;"	l
c01088fc	obj/kernel.asm	/^c01088fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01088fe	obj/kernel.asm	/^c01088fe:	53                   	push   %ebx$/;"	l
c01088ff	obj/kernel.asm	/^c01088ff:	83 ec 74             	sub    $0x74,%esp$/;"	l
c0108902	obj/kernel.asm	/^c0108902:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108909	obj/kernel.asm	/^c0108909:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0108910	obj/kernel.asm	/^c0108910:	c7 45 e8 64 b7 15 c0 	movl   $0xc015b764,-0x18(%ebp)$/;"	l
c0108917	obj/kernel.asm	/^c0108917:	eb 6b                	jmp    c0108984 <check_swap+0x89>$/;"	l
c0108919	obj/kernel.asm	/^c0108919:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010891c	obj/kernel.asm	/^c010891c:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010891f	obj/kernel.asm	/^c010891f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108922	obj/kernel.asm	/^c0108922:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108925	obj/kernel.asm	/^c0108925:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108928	obj/kernel.asm	/^c0108928:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c010892f	obj/kernel.asm	/^c010892f:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0108932	obj/kernel.asm	/^c0108932:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0108935	obj/kernel.asm	/^c0108935:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0108938	obj/kernel.asm	/^c0108938:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010893b	obj/kernel.asm	/^c010893b:	19 c0                	sbb    %eax,%eax$/;"	l
c010893d	obj/kernel.asm	/^c010893d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108940	obj/kernel.asm	/^c0108940:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0108944	obj/kernel.asm	/^c0108944:	0f 95 c0             	setne  %al$/;"	l
c0108947	obj/kernel.asm	/^c0108947:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010894a	obj/kernel.asm	/^c010894a:	85 c0                	test   %eax,%eax$/;"	l
c010894c	obj/kernel.asm	/^c010894c:	75 24                	jne    c0108972 <check_swap+0x77>$/;"	l
c010894e	obj/kernel.asm	/^c010894e:	c7 44 24 0c de 8a 11 	movl   $0xc0118ade,0xc(%esp)$/;"	l
c0108955	obj/kernel.asm	/^c0108955:	c0 $/;"	l
c0108956	obj/kernel.asm	/^c0108956:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c010895d	obj/kernel.asm	/^c010895d:	c0 $/;"	l
c010895e	obj/kernel.asm	/^c010895e:	c7 44 24 04 bb 00 00 	movl   $0xbb,0x4(%esp)$/;"	l
c0108965	obj/kernel.asm	/^c0108965:	00 $/;"	l
c0108966	obj/kernel.asm	/^c0108966:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c010896d	obj/kernel.asm	/^c010896d:	e8 c5 82 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108972	obj/kernel.asm	/^c0108972:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108976	obj/kernel.asm	/^c0108976:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108979	obj/kernel.asm	/^c0108979:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010897c	obj/kernel.asm	/^c010897c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010897f	obj/kernel.asm	/^c010897f:	01 d0                	add    %edx,%eax$/;"	l
c0108981	obj/kernel.asm	/^c0108981:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108984	obj/kernel.asm	/^c0108984:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108987	obj/kernel.asm	/^c0108987:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010898a	obj/kernel.asm	/^c010898a:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108993	obj/kernel.asm	/^c0108993:	81 7d e8 64 b7 15 c0 	cmpl   $0xc015b764,-0x18(%ebp)$/;"	l
c010899a	obj/kernel.asm	/^c010899a:	0f 85 79 ff ff ff    	jne    c0108919 <check_swap+0x1e>$/;"	l
c01089a0	obj/kernel.asm	/^c01089a0:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01089a3	obj/kernel.asm	/^c01089a3:	e8 84 bd ff ff       	call   c010472c <nr_free_pages>$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	39 c3                	cmp    %eax,%ebx$/;"	l
c01089aa	obj/kernel.asm	/^c01089aa:	74 24                	je     c01089d0 <check_swap+0xd5>$/;"	l
c01089ac	obj/kernel.asm	/^c01089ac:	c7 44 24 0c ee 8a 11 	movl   $0xc0118aee,0xc(%esp)$/;"	l
c01089b3	obj/kernel.asm	/^c01089b3:	c0 $/;"	l
c01089b4	obj/kernel.asm	/^c01089b4:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c01089bb	obj/kernel.asm	/^c01089bb:	c0 $/;"	l
c01089bc	obj/kernel.asm	/^c01089bc:	c7 44 24 04 be 00 00 	movl   $0xbe,0x4(%esp)$/;"	l
c01089c3	obj/kernel.asm	/^c01089c3:	00 $/;"	l
c01089c4	obj/kernel.asm	/^c01089c4:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c01089cb	obj/kernel.asm	/^c01089cb:	e8 67 82 ff ff       	call   c0100c37 <__panic>$/;"	l
c01089d0	obj/kernel.asm	/^c01089d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01089d3	obj/kernel.asm	/^c01089d3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01089d7	obj/kernel.asm	/^c01089d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089da	obj/kernel.asm	/^c01089da:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01089de	obj/kernel.asm	/^c01089de:	c7 04 24 08 8b 11 c0 	movl   $0xc0118b08,(%esp)$/;"	l
c01089e5	obj/kernel.asm	/^c01089e5:	e8 f6 80 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01089ea	obj/kernel.asm	/^c01089ea:	e8 cd de ff ff       	call   c01068bc <mm_create>$/;"	l
c01089ef	obj/kernel.asm	/^c01089ef:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01089f2	obj/kernel.asm	/^c01089f2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01089f6	obj/kernel.asm	/^c01089f6:	75 24                	jne    c0108a1c <check_swap+0x121>$/;"	l
c01089f8	obj/kernel.asm	/^c01089f8:	c7 44 24 0c 2e 8b 11 	movl   $0xc0118b2e,0xc(%esp)$/;"	l
c01089ff	obj/kernel.asm	/^c01089ff:	c0 $/;"	l
c0108a00	obj/kernel.asm	/^c0108a00:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108a07	obj/kernel.asm	/^c0108a07:	c0 $/;"	l
c0108a08	obj/kernel.asm	/^c0108a08:	c7 44 24 04 c3 00 00 	movl   $0xc3,0x4(%esp)$/;"	l
c0108a0f	obj/kernel.asm	/^c0108a0f:	00 $/;"	l
c0108a10	obj/kernel.asm	/^c0108a10:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108a17	obj/kernel.asm	/^c0108a17:	e8 1b 82 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108a1c	obj/kernel.asm	/^c0108a1c:	a1 84 b6 15 c0       	mov    0xc015b684,%eax$/;"	l
c0108a21	obj/kernel.asm	/^c0108a21:	85 c0                	test   %eax,%eax$/;"	l
c0108a23	obj/kernel.asm	/^c0108a23:	74 24                	je     c0108a49 <check_swap+0x14e>$/;"	l
c0108a25	obj/kernel.asm	/^c0108a25:	c7 44 24 0c 39 8b 11 	movl   $0xc0118b39,0xc(%esp)$/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c:	c0 $/;"	l
c0108a2d	obj/kernel.asm	/^c0108a2d:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108a34	obj/kernel.asm	/^c0108a34:	c0 $/;"	l
c0108a35	obj/kernel.asm	/^c0108a35:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0108a3c	obj/kernel.asm	/^c0108a3c:	00 $/;"	l
c0108a3d	obj/kernel.asm	/^c0108a3d:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108a44	obj/kernel.asm	/^c0108a44:	e8 ee 81 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108a49	obj/kernel.asm	/^c0108a49:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108a4c	obj/kernel.asm	/^c0108a4c:	a3 84 b6 15 c0       	mov    %eax,0xc015b684$/;"	l
c0108a51	obj/kernel.asm	/^c0108a51:	8b 15 c4 7e 15 c0    	mov    0xc0157ec4,%edx$/;"	l
c0108a57	obj/kernel.asm	/^c0108a57:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108a5a	obj/kernel.asm	/^c0108a5a:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0108a5d	obj/kernel.asm	/^c0108a5d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108a60	obj/kernel.asm	/^c0108a60:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108a63	obj/kernel.asm	/^c0108a63:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108a66	obj/kernel.asm	/^c0108a66:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108a69	obj/kernel.asm	/^c0108a69:	8b 00                	mov    (%eax),%eax$/;"	l
c0108a6b	obj/kernel.asm	/^c0108a6b:	85 c0                	test   %eax,%eax$/;"	l
c0108a6d	obj/kernel.asm	/^c0108a6d:	74 24                	je     c0108a93 <check_swap+0x198>$/;"	l
c0108a6f	obj/kernel.asm	/^c0108a6f:	c7 44 24 0c 51 8b 11 	movl   $0xc0118b51,0xc(%esp)$/;"	l
c0108a76	obj/kernel.asm	/^c0108a76:	c0 $/;"	l
c0108a77	obj/kernel.asm	/^c0108a77:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108a7e	obj/kernel.asm	/^c0108a7e:	c0 $/;"	l
c0108a7f	obj/kernel.asm	/^c0108a7f:	c7 44 24 04 cb 00 00 	movl   $0xcb,0x4(%esp)$/;"	l
c0108a86	obj/kernel.asm	/^c0108a86:	00 $/;"	l
c0108a87	obj/kernel.asm	/^c0108a87:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108a8e	obj/kernel.asm	/^c0108a8e:	e8 a4 81 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108a93	obj/kernel.asm	/^c0108a93:	c7 44 24 08 03 00 00 	movl   $0x3,0x8(%esp)$/;"	l
c0108a9a	obj/kernel.asm	/^c0108a9a:	00 $/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	c7 44 24 04 00 60 00 	movl   $0x6000,0x4(%esp)$/;"	l
c0108aa2	obj/kernel.asm	/^c0108aa2:	00 $/;"	l
c0108aa3	obj/kernel.asm	/^c0108aa3:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c0108aaa	obj/kernel.asm	/^c0108aaa:	e8 b2 de ff ff       	call   c0106961 <vma_create>$/;"	l
c0108aaf	obj/kernel.asm	/^c0108aaf:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0108ab2	obj/kernel.asm	/^c0108ab2:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0108ab6	obj/kernel.asm	/^c0108ab6:	75 24                	jne    c0108adc <check_swap+0x1e1>$/;"	l
c0108ab8	obj/kernel.asm	/^c0108ab8:	c7 44 24 0c 5f 8b 11 	movl   $0xc0118b5f,0xc(%esp)$/;"	l
c0108abf	obj/kernel.asm	/^c0108abf:	c0 $/;"	l
c0108ac0	obj/kernel.asm	/^c0108ac0:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108ac7	obj/kernel.asm	/^c0108ac7:	c0 $/;"	l
c0108ac8	obj/kernel.asm	/^c0108ac8:	c7 44 24 04 ce 00 00 	movl   $0xce,0x4(%esp)$/;"	l
c0108acf	obj/kernel.asm	/^c0108acf:	00 $/;"	l
c0108ad0	obj/kernel.asm	/^c0108ad0:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108ad7	obj/kernel.asm	/^c0108ad7:	e8 5b 81 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108adc	obj/kernel.asm	/^c0108adc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108adf	obj/kernel.asm	/^c0108adf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108ae3	obj/kernel.asm	/^c0108ae3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108ae6	obj/kernel.asm	/^c0108ae6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ae9	obj/kernel.asm	/^c0108ae9:	e8 03 e0 ff ff       	call   c0106af1 <insert_vma_struct>$/;"	l
c0108aee	obj/kernel.asm	/^c0108aee:	c7 04 24 6c 8b 11 c0 	movl   $0xc0118b6c,(%esp)$/;"	l
c0108af5	obj/kernel.asm	/^c0108af5:	e8 e6 7f ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108afa	obj/kernel.asm	/^c0108afa:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0108b01	obj/kernel.asm	/^c0108b01:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108b04	obj/kernel.asm	/^c0108b04:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0108b07	obj/kernel.asm	/^c0108b07:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0108b0e	obj/kernel.asm	/^c0108b0e:	00 $/;"	l
c0108b0f	obj/kernel.asm	/^c0108b0f:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c0108b16	obj/kernel.asm	/^c0108b16:	00 $/;"	l
c0108b17	obj/kernel.asm	/^c0108b17:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108b1a	obj/kernel.asm	/^c0108b1a:	e8 ac c3 ff ff       	call   c0104ecb <get_pte>$/;"	l
c0108b1f	obj/kernel.asm	/^c0108b1f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0108b22	obj/kernel.asm	/^c0108b22:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c0108b26	obj/kernel.asm	/^c0108b26:	75 24                	jne    c0108b4c <check_swap+0x251>$/;"	l
c0108b28	obj/kernel.asm	/^c0108b28:	c7 44 24 0c a0 8b 11 	movl   $0xc0118ba0,0xc(%esp)$/;"	l
c0108b2f	obj/kernel.asm	/^c0108b2f:	c0 $/;"	l
c0108b30	obj/kernel.asm	/^c0108b30:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108b37	obj/kernel.asm	/^c0108b37:	c0 $/;"	l
c0108b38	obj/kernel.asm	/^c0108b38:	c7 44 24 04 d6 00 00 	movl   $0xd6,0x4(%esp)$/;"	l
c0108b3f	obj/kernel.asm	/^c0108b3f:	00 $/;"	l
c0108b40	obj/kernel.asm	/^c0108b40:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108b47	obj/kernel.asm	/^c0108b47:	e8 eb 80 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108b4c	obj/kernel.asm	/^c0108b4c:	c7 04 24 b4 8b 11 c0 	movl   $0xc0118bb4,(%esp)$/;"	l
c0108b53	obj/kernel.asm	/^c0108b53:	e8 88 7f ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108b58	obj/kernel.asm	/^c0108b58:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0108b5f	obj/kernel.asm	/^c0108b5f:	e9 a3 00 00 00       	jmp    c0108c07 <check_swap+0x30c>$/;"	l
c0108b64	obj/kernel.asm	/^c0108b64:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0108b6b	obj/kernel.asm	/^c0108b6b:	e8 1f bb ff ff       	call   c010468f <alloc_pages>$/;"	l
c0108b70	obj/kernel.asm	/^c0108b70:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108b73	obj/kernel.asm	/^c0108b73:	89 04 95 a0 b6 15 c0 	mov    %eax,-0x3fea4960(,%edx,4)$/;"	l
c0108b7a	obj/kernel.asm	/^c0108b7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108b7d	obj/kernel.asm	/^c0108b7d:	8b 04 85 a0 b6 15 c0 	mov    -0x3fea4960(,%eax,4),%eax$/;"	l
c0108b84	obj/kernel.asm	/^c0108b84:	85 c0                	test   %eax,%eax$/;"	l
c0108b86	obj/kernel.asm	/^c0108b86:	75 24                	jne    c0108bac <check_swap+0x2b1>$/;"	l
c0108b88	obj/kernel.asm	/^c0108b88:	c7 44 24 0c d8 8b 11 	movl   $0xc0118bd8,0xc(%esp)$/;"	l
c0108b8f	obj/kernel.asm	/^c0108b8f:	c0 $/;"	l
c0108b90	obj/kernel.asm	/^c0108b90:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108b97	obj/kernel.asm	/^c0108b97:	c0 $/;"	l
c0108b98	obj/kernel.asm	/^c0108b98:	c7 44 24 04 db 00 00 	movl   $0xdb,0x4(%esp)$/;"	l
c0108b9f	obj/kernel.asm	/^c0108b9f:	00 $/;"	l
c0108ba0	obj/kernel.asm	/^c0108ba0:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108ba7	obj/kernel.asm	/^c0108ba7:	e8 8b 80 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108bac	obj/kernel.asm	/^c0108bac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108baf	obj/kernel.asm	/^c0108baf:	8b 04 85 a0 b6 15 c0 	mov    -0x3fea4960(,%eax,4),%eax$/;"	l
c0108bb6	obj/kernel.asm	/^c0108bb6:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108bb9	obj/kernel.asm	/^c0108bb9:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0108bc0	obj/kernel.asm	/^c0108bc0:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0108bc3	obj/kernel.asm	/^c0108bc3:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0108bc6	obj/kernel.asm	/^c0108bc6:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0108bc9	obj/kernel.asm	/^c0108bc9:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108bcc	obj/kernel.asm	/^c0108bcc:	19 c0                	sbb    %eax,%eax$/;"	l
c0108bce	obj/kernel.asm	/^c0108bce:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0108bd1	obj/kernel.asm	/^c0108bd1:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0108bd5	obj/kernel.asm	/^c0108bd5:	0f 95 c0             	setne  %al$/;"	l
c0108bd8	obj/kernel.asm	/^c0108bd8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108bdb	obj/kernel.asm	/^c0108bdb:	85 c0                	test   %eax,%eax$/;"	l
c0108bdd	obj/kernel.asm	/^c0108bdd:	74 24                	je     c0108c03 <check_swap+0x308>$/;"	l
c0108bdf	obj/kernel.asm	/^c0108bdf:	c7 44 24 0c ec 8b 11 	movl   $0xc0118bec,0xc(%esp)$/;"	l
c0108be6	obj/kernel.asm	/^c0108be6:	c0 $/;"	l
c0108be7	obj/kernel.asm	/^c0108be7:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108bee	obj/kernel.asm	/^c0108bee:	c0 $/;"	l
c0108bef	obj/kernel.asm	/^c0108bef:	c7 44 24 04 dc 00 00 	movl   $0xdc,0x4(%esp)$/;"	l
c0108bf6	obj/kernel.asm	/^c0108bf6:	00 $/;"	l
c0108bf7	obj/kernel.asm	/^c0108bf7:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108bfe	obj/kernel.asm	/^c0108bfe:	e8 34 80 ff ff       	call   c0100c37 <__panic>$/;"	l
c0108c03	obj/kernel.asm	/^c0108c03:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0108c07	obj/kernel.asm	/^c0108c07:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0108c0b	obj/kernel.asm	/^c0108c0b:	0f 8e 53 ff ff ff    	jle    c0108b64 <check_swap+0x269>$/;"	l
c0108c11	obj/kernel.asm	/^c0108c11:	a1 64 b7 15 c0       	mov    0xc015b764,%eax$/;"	l
c0108c16	obj/kernel.asm	/^c0108c16:	8b 15 68 b7 15 c0    	mov    0xc015b768,%edx$/;"	l
c0108c1c	obj/kernel.asm	/^c0108c1c:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0108c1f	obj/kernel.asm	/^c0108c1f:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0108c22	obj/kernel.asm	/^c0108c22:	c7 45 a8 64 b7 15 c0 	movl   $0xc015b764,-0x58(%ebp)$/;"	l
c0108c29	obj/kernel.asm	/^c0108c29:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0108c2c	obj/kernel.asm	/^c0108c2c:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0108c2f	obj/kernel.asm	/^c0108c2f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108c32	obj/kernel.asm	/^c0108c32:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0108c35	obj/kernel.asm	/^c0108c35:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108c38	obj/kernel.asm	/^c0108c38:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0108c3b	obj/kernel.asm	/^c0108c3b:	89 10                	mov    %edx,(%eax)$/;"	l
c0108c3d	obj/kernel.asm	/^c0108c3d:	c7 45 a4 64 b7 15 c0 	movl   $0xc015b764,-0x5c(%ebp)$/;"	l
c0108c44	obj/kernel.asm	/^c0108c44:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0108c47	obj/kernel.asm	/^c0108c47:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108c4a	obj/kernel.asm	/^c0108c4a:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0108c4d	obj/kernel.asm	/^c0108c4d:	0f 94 c0             	sete   %al$/;"	l
c0108c50	obj/kernel.asm	/^c0108c50:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108c53	obj/kernel.asm	/^c0108c53:	85 c0                	test   %eax,%eax$/;"	l
c0108c55	obj/kernel.asm	/^c0108c55:	75 24                	jne    c0108c7b <check_swap+0x380>$/;"	l
c0108c57	obj/kernel.asm	/^c0108c57:	c7 44 24 0c 07 8c 11 	movl   $0xc0118c07,0xc(%esp)$/;"	l
c0108c5e	obj/kernel.asm	/^c0108c5e:	c0 $/;"	l
c0108c5f	obj/kernel.asm	/^c0108c5f:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108c66	obj/kernel.asm	/^c0108c66:	c0 $/;"	l
c0108c67	obj/kernel.asm	/^c0108c67:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c0108c6e	obj/kernel.asm	/^c0108c6e:	00 $/;"	l
c0108c6f	obj/kernel.asm	/^c0108c6f:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108c76	obj/kernel.asm	/^c0108c76:	e8 bc 7f ff ff       	call   c0100c37 <__panic>$/;"	l
c0108c7b	obj/kernel.asm	/^c0108c7b:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0108c80	obj/kernel.asm	/^c0108c80:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108c83	obj/kernel.asm	/^c0108c83:	c7 05 6c b7 15 c0 00 	movl   $0x0,0xc015b76c$/;"	l
c0108c8a	obj/kernel.asm	/^c0108c8a:	00 00 00 $/;"	l
c0108c8d	obj/kernel.asm	/^c0108c8d:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0108c94	obj/kernel.asm	/^c0108c94:	eb 1e                	jmp    c0108cb4 <check_swap+0x3b9>$/;"	l
c0108c96	obj/kernel.asm	/^c0108c96:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108c99	obj/kernel.asm	/^c0108c99:	8b 04 85 a0 b6 15 c0 	mov    -0x3fea4960(,%eax,4),%eax$/;"	l
c0108ca0	obj/kernel.asm	/^c0108ca0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	00 $/;"	l
c0108ca8	obj/kernel.asm	/^c0108ca8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108cab	obj/kernel.asm	/^c0108cab:	e8 4a ba ff ff       	call   c01046fa <free_pages>$/;"	l
c0108cb0	obj/kernel.asm	/^c0108cb0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0108cb8	obj/kernel.asm	/^c0108cb8:	7e dc                	jle    c0108c96 <check_swap+0x39b>$/;"	l
c0108cba	obj/kernel.asm	/^c0108cba:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0108cbf	obj/kernel.asm	/^c0108cbf:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0108cc2	obj/kernel.asm	/^c0108cc2:	74 24                	je     c0108ce8 <check_swap+0x3ed>$/;"	l
c0108cc4	obj/kernel.asm	/^c0108cc4:	c7 44 24 0c 20 8c 11 	movl   $0xc0118c20,0xc(%esp)$/;"	l
c0108ccb	obj/kernel.asm	/^c0108ccb:	c0 $/;"	l
c0108ccc	obj/kernel.asm	/^c0108ccc:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108cd3	obj/kernel.asm	/^c0108cd3:	c0 $/;"	l
c0108cd4	obj/kernel.asm	/^c0108cd4:	c7 44 24 04 e9 00 00 	movl   $0xe9,0x4(%esp)$/;"	l
c0108cdb	obj/kernel.asm	/^c0108cdb:	00 $/;"	l
c0108cdc	obj/kernel.asm	/^c0108cdc:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108ce3	obj/kernel.asm	/^c0108ce3:	e8 4f 7f ff ff       	call   c0100c37 <__panic>$/;"	l
c0108ce8	obj/kernel.asm	/^c0108ce8:	c7 04 24 44 8c 11 c0 	movl   $0xc0118c44,(%esp)$/;"	l
c0108cef	obj/kernel.asm	/^c0108cef:	e8 ec 7d ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108cf4	obj/kernel.asm	/^c0108cf4:	c7 05 4c 7f 15 c0 00 	movl   $0x0,0xc0157f4c$/;"	l
c0108cfb	obj/kernel.asm	/^c0108cfb:	00 00 00 $/;"	l
c0108cfe	obj/kernel.asm	/^c0108cfe:	e8 28 fa ff ff       	call   c010872b <check_content_set>$/;"	l
c0108d03	obj/kernel.asm	/^c0108d03:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0108d08	obj/kernel.asm	/^c0108d08:	85 c0                	test   %eax,%eax$/;"	l
c0108d0a	obj/kernel.asm	/^c0108d0a:	74 24                	je     c0108d30 <check_swap+0x435>$/;"	l
c0108d0c	obj/kernel.asm	/^c0108d0c:	c7 44 24 0c 6b 8c 11 	movl   $0xc0118c6b,0xc(%esp)$/;"	l
c0108d13	obj/kernel.asm	/^c0108d13:	c0 $/;"	l
c0108d14	obj/kernel.asm	/^c0108d14:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	c0 $/;"	l
c0108d1c	obj/kernel.asm	/^c0108d1c:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c0108d23	obj/kernel.asm	/^c0108d23:	00 $/;"	l
c0108d24	obj/kernel.asm	/^c0108d24:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108d2b	obj/kernel.asm	/^c0108d2b:	e8 07 7f ff ff       	call   c0100c37 <__panic>$/;"	l
c0108d30	obj/kernel.asm	/^c0108d30:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0108d37	obj/kernel.asm	/^c0108d37:	eb 26                	jmp    c0108d5f <check_swap+0x464>$/;"	l
c0108d39	obj/kernel.asm	/^c0108d39:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d3c	obj/kernel.asm	/^c0108d3c:	c7 04 85 c0 b6 15 c0 	movl   $0xffffffff,-0x3fea4940(,%eax,4)$/;"	l
c0108d43	obj/kernel.asm	/^c0108d43:	ff ff ff ff $/;"	l
c0108d47	obj/kernel.asm	/^c0108d47:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d4a	obj/kernel.asm	/^c0108d4a:	8b 14 85 c0 b6 15 c0 	mov    -0x3fea4940(,%eax,4),%edx$/;"	l
c0108d51	obj/kernel.asm	/^c0108d51:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d54	obj/kernel.asm	/^c0108d54:	89 14 85 00 b7 15 c0 	mov    %edx,-0x3fea4900(,%eax,4)$/;"	l
c0108d5b	obj/kernel.asm	/^c0108d5b:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0108d5f	obj/kernel.asm	/^c0108d5f:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0108d63	obj/kernel.asm	/^c0108d63:	7e d4                	jle    c0108d39 <check_swap+0x43e>$/;"	l
c0108d65	obj/kernel.asm	/^c0108d65:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0108d6c	obj/kernel.asm	/^c0108d6c:	e9 eb 00 00 00       	jmp    c0108e5c <check_swap+0x561>$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d74	obj/kernel.asm	/^c0108d74:	c7 04 85 54 b7 15 c0 	movl   $0x0,-0x3fea48ac(,%eax,4)$/;"	l
c0108d7b	obj/kernel.asm	/^c0108d7b:	00 00 00 00 $/;"	l
c0108d7f	obj/kernel.asm	/^c0108d7f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108d82	obj/kernel.asm	/^c0108d82:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108d85	obj/kernel.asm	/^c0108d85:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108d88	obj/kernel.asm	/^c0108d88:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0108d8f	obj/kernel.asm	/^c0108d8f:	00 $/;"	l
c0108d90	obj/kernel.asm	/^c0108d90:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108d94	obj/kernel.asm	/^c0108d94:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108d97	obj/kernel.asm	/^c0108d97:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108d9a	obj/kernel.asm	/^c0108d9a:	e8 2c c1 ff ff       	call   c0104ecb <get_pte>$/;"	l
c0108d9f	obj/kernel.asm	/^c0108d9f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108da2	obj/kernel.asm	/^c0108da2:	89 04 95 54 b7 15 c0 	mov    %eax,-0x3fea48ac(,%edx,4)$/;"	l
c0108da9	obj/kernel.asm	/^c0108da9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108dac	obj/kernel.asm	/^c0108dac:	8b 04 85 54 b7 15 c0 	mov    -0x3fea48ac(,%eax,4),%eax$/;"	l
c0108db3	obj/kernel.asm	/^c0108db3:	85 c0                	test   %eax,%eax$/;"	l
c0108db5	obj/kernel.asm	/^c0108db5:	75 24                	jne    c0108ddb <check_swap+0x4e0>$/;"	l
c0108db7	obj/kernel.asm	/^c0108db7:	c7 44 24 0c 78 8c 11 	movl   $0xc0118c78,0xc(%esp)$/;"	l
c0108dbe	obj/kernel.asm	/^c0108dbe:	c0 $/;"	l
c0108dbf	obj/kernel.asm	/^c0108dbf:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	c0 $/;"	l
c0108dc7	obj/kernel.asm	/^c0108dc7:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0108dce	obj/kernel.asm	/^c0108dce:	00 $/;"	l
c0108dcf	obj/kernel.asm	/^c0108dcf:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108dd6	obj/kernel.asm	/^c0108dd6:	e8 5c 7e ff ff       	call   c0100c37 <__panic>$/;"	l
c0108ddb	obj/kernel.asm	/^c0108ddb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108dde	obj/kernel.asm	/^c0108dde:	8b 04 85 54 b7 15 c0 	mov    -0x3fea48ac(,%eax,4),%eax$/;"	l
c0108de5	obj/kernel.asm	/^c0108de5:	8b 00                	mov    (%eax),%eax$/;"	l
c0108de7	obj/kernel.asm	/^c0108de7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108dea	obj/kernel.asm	/^c0108dea:	e8 9f f5 ff ff       	call   c010838e <pte2page>$/;"	l
c0108def	obj/kernel.asm	/^c0108def:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108df2	obj/kernel.asm	/^c0108df2:	8b 14 95 a0 b6 15 c0 	mov    -0x3fea4960(,%edx,4),%edx$/;"	l
c0108df9	obj/kernel.asm	/^c0108df9:	39 d0                	cmp    %edx,%eax$/;"	l
c0108dfb	obj/kernel.asm	/^c0108dfb:	74 24                	je     c0108e21 <check_swap+0x526>$/;"	l
c0108dfd	obj/kernel.asm	/^c0108dfd:	c7 44 24 0c 90 8c 11 	movl   $0xc0118c90,0xc(%esp)$/;"	l
c0108e04	obj/kernel.asm	/^c0108e04:	c0 $/;"	l
c0108e05	obj/kernel.asm	/^c0108e05:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108e0c	obj/kernel.asm	/^c0108e0c:	c0 $/;"	l
c0108e0d	obj/kernel.asm	/^c0108e0d:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0108e14	obj/kernel.asm	/^c0108e14:	00 $/;"	l
c0108e15	obj/kernel.asm	/^c0108e15:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108e1c	obj/kernel.asm	/^c0108e1c:	e8 16 7e ff ff       	call   c0100c37 <__panic>$/;"	l
c0108e21	obj/kernel.asm	/^c0108e21:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108e24	obj/kernel.asm	/^c0108e24:	8b 04 85 54 b7 15 c0 	mov    -0x3fea48ac(,%eax,4),%eax$/;"	l
c0108e2b	obj/kernel.asm	/^c0108e2b:	8b 00                	mov    (%eax),%eax$/;"	l
c0108e2d	obj/kernel.asm	/^c0108e2d:	83 e0 01             	and    $0x1,%eax$/;"	l
c0108e30	obj/kernel.asm	/^c0108e30:	85 c0                	test   %eax,%eax$/;"	l
c0108e32	obj/kernel.asm	/^c0108e32:	75 24                	jne    c0108e58 <check_swap+0x55d>$/;"	l
c0108e34	obj/kernel.asm	/^c0108e34:	c7 44 24 0c b8 8c 11 	movl   $0xc0118cb8,0xc(%esp)$/;"	l
c0108e3b	obj/kernel.asm	/^c0108e3b:	c0 $/;"	l
c0108e3c	obj/kernel.asm	/^c0108e3c:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108e43	obj/kernel.asm	/^c0108e43:	c0 $/;"	l
c0108e44	obj/kernel.asm	/^c0108e44:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c0108e4b	obj/kernel.asm	/^c0108e4b:	00 $/;"	l
c0108e4c	obj/kernel.asm	/^c0108e4c:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108e53	obj/kernel.asm	/^c0108e53:	e8 df 7d ff ff       	call   c0100c37 <__panic>$/;"	l
c0108e58	obj/kernel.asm	/^c0108e58:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0108e5c	obj/kernel.asm	/^c0108e5c:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0108e60	obj/kernel.asm	/^c0108e60:	0f 8e 0b ff ff ff    	jle    c0108d71 <check_swap+0x476>$/;"	l
c0108e66	obj/kernel.asm	/^c0108e66:	c7 04 24 d4 8c 11 c0 	movl   $0xc0118cd4,(%esp)$/;"	l
c0108e6d	obj/kernel.asm	/^c0108e6d:	e8 6e 7c ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108e72	obj/kernel.asm	/^c0108e72:	e8 6c fa ff ff       	call   c01088e3 <check_content_access>$/;"	l
c0108e77	obj/kernel.asm	/^c0108e77:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0108e7a	obj/kernel.asm	/^c0108e7a:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0108e7e	obj/kernel.asm	/^c0108e7e:	74 24                	je     c0108ea4 <check_swap+0x5a9>$/;"	l
c0108e80	obj/kernel.asm	/^c0108e80:	c7 44 24 0c fa 8c 11 	movl   $0xc0118cfa,0xc(%esp)$/;"	l
c0108e87	obj/kernel.asm	/^c0108e87:	c0 $/;"	l
c0108e88	obj/kernel.asm	/^c0108e88:	c7 44 24 08 e2 89 11 	movl   $0xc01189e2,0x8(%esp)$/;"	l
c0108e8f	obj/kernel.asm	/^c0108e8f:	c0 $/;"	l
c0108e90	obj/kernel.asm	/^c0108e90:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c0108e97	obj/kernel.asm	/^c0108e97:	00 $/;"	l
c0108e98	obj/kernel.asm	/^c0108e98:	c7 04 24 7c 89 11 c0 	movl   $0xc011897c,(%esp)$/;"	l
c0108e9f	obj/kernel.asm	/^c0108e9f:	e8 93 7d ff ff       	call   c0100c37 <__panic>$/;"	l
c0108ea4	obj/kernel.asm	/^c0108ea4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0108eab	obj/kernel.asm	/^c0108eab:	eb 1e                	jmp    c0108ecb <check_swap+0x5d0>$/;"	l
c0108ead	obj/kernel.asm	/^c0108ead:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108eb0	obj/kernel.asm	/^c0108eb0:	8b 04 85 a0 b6 15 c0 	mov    -0x3fea4960(,%eax,4),%eax$/;"	l
c0108eb7	obj/kernel.asm	/^c0108eb7:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108ebe	obj/kernel.asm	/^c0108ebe:	00 $/;"	l
c0108ebf	obj/kernel.asm	/^c0108ebf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ec2	obj/kernel.asm	/^c0108ec2:	e8 33 b8 ff ff       	call   c01046fa <free_pages>$/;"	l
c0108ec7	obj/kernel.asm	/^c0108ec7:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0108ecb	obj/kernel.asm	/^c0108ecb:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0108ecf	obj/kernel.asm	/^c0108ecf:	7e dc                	jle    c0108ead <check_swap+0x5b2>$/;"	l
c0108ed1	obj/kernel.asm	/^c0108ed1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108ed4	obj/kernel.asm	/^c0108ed4:	8b 00                	mov    (%eax),%eax$/;"	l
c0108ed6	obj/kernel.asm	/^c0108ed6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ed9	obj/kernel.asm	/^c0108ed9:	e8 61 f4 ff ff       	call   c010833f <pa2page>$/;"	l
c0108ede	obj/kernel.asm	/^c0108ede:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0108ee5	obj/kernel.asm	/^c0108ee5:	00 $/;"	l
c0108ee6	obj/kernel.asm	/^c0108ee6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108ee9	obj/kernel.asm	/^c0108ee9:	e8 0c b8 ff ff       	call   c01046fa <free_pages>$/;"	l
c0108eee	obj/kernel.asm	/^c0108eee:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108ef1	obj/kernel.asm	/^c0108ef1:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108ef7	obj/kernel.asm	/^c0108ef7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108efa	obj/kernel.asm	/^c0108efa:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108f01	obj/kernel.asm	/^c0108f01:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108f04	obj/kernel.asm	/^c0108f04:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108f07	obj/kernel.asm	/^c0108f07:	e8 15 dd ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c0108f0c	obj/kernel.asm	/^c0108f0c:	c7 05 84 b6 15 c0 00 	movl   $0x0,0xc015b684$/;"	l
c0108f13	obj/kernel.asm	/^c0108f13:	00 00 00 $/;"	l
c0108f16	obj/kernel.asm	/^c0108f16:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108f19	obj/kernel.asm	/^c0108f19:	a3 6c b7 15 c0       	mov    %eax,0xc015b76c$/;"	l
c0108f1e	obj/kernel.asm	/^c0108f1e:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0108f21	obj/kernel.asm	/^c0108f21:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0108f24	obj/kernel.asm	/^c0108f24:	a3 64 b7 15 c0       	mov    %eax,0xc015b764$/;"	l
c0108f29	obj/kernel.asm	/^c0108f29:	89 15 68 b7 15 c0    	mov    %edx,0xc015b768$/;"	l
c0108f2f	obj/kernel.asm	/^c0108f2f:	c7 45 e8 64 b7 15 c0 	movl   $0xc015b764,-0x18(%ebp)$/;"	l
c0108f36	obj/kernel.asm	/^c0108f36:	eb 1d                	jmp    c0108f55 <check_swap+0x65a>$/;"	l
c0108f38	obj/kernel.asm	/^c0108f38:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108f3b	obj/kernel.asm	/^c0108f3b:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108f41	obj/kernel.asm	/^c0108f41:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108f45	obj/kernel.asm	/^c0108f45:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108f48	obj/kernel.asm	/^c0108f48:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0108f4b	obj/kernel.asm	/^c0108f4b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108f4e	obj/kernel.asm	/^c0108f4e:	29 c2                	sub    %eax,%edx$/;"	l
c0108f50	obj/kernel.asm	/^c0108f50:	89 d0                	mov    %edx,%eax$/;"	l
c0108f52	obj/kernel.asm	/^c0108f52:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108f55	obj/kernel.asm	/^c0108f55:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108f58	obj/kernel.asm	/^c0108f58:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0108f5b	obj/kernel.asm	/^c0108f5b:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0108f5e	obj/kernel.asm	/^c0108f5e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108f61	obj/kernel.asm	/^c0108f61:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108f64	obj/kernel.asm	/^c0108f64:	81 7d e8 64 b7 15 c0 	cmpl   $0xc015b764,-0x18(%ebp)$/;"	l
c0108f6b	obj/kernel.asm	/^c0108f6b:	75 cb                	jne    c0108f38 <check_swap+0x63d>$/;"	l
c0108f6d	obj/kernel.asm	/^c0108f6d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108f70	obj/kernel.asm	/^c0108f70:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0108f74	obj/kernel.asm	/^c0108f74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f77	obj/kernel.asm	/^c0108f77:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0108f7b	obj/kernel.asm	/^c0108f7b:	c7 04 24 01 8d 11 c0 	movl   $0xc0118d01,(%esp)$/;"	l
c0108f82	obj/kernel.asm	/^c0108f82:	e8 59 7b ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108f87	obj/kernel.asm	/^c0108f87:	c7 04 24 1b 8d 11 c0 	movl   $0xc0118d1b,(%esp)$/;"	l
c0108f8e	obj/kernel.asm	/^c0108f8e:	e8 4d 7b ff ff       	call   c0100ae0 <cprintf>$/;"	l
c0108f93	obj/kernel.asm	/^c0108f93:	83 c4 74             	add    $0x74,%esp$/;"	l
c0108f96	obj/kernel.asm	/^c0108f96:	5b                   	pop    %ebx$/;"	l
c0108f97	obj/kernel.asm	/^c0108f97:	5d                   	pop    %ebp$/;"	l
c0108f98	obj/kernel.asm	/^c0108f98:	c3                   	ret    $/;"	l
c0108f99	obj/kernel.asm	/^c0108f99 <page2ppn>:$/;"	l
c0108f99	obj/kernel.asm	/^c0108f99:	55                   	push   %ebp$/;"	l
c0108f9a	obj/kernel.asm	/^c0108f9a:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f9c	obj/kernel.asm	/^c0108f9c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f9f	obj/kernel.asm	/^c0108f9f:	a1 78 b6 15 c0       	mov    0xc015b678,%eax$/;"	l
c0108fa4	obj/kernel.asm	/^c0108fa4:	29 c2                	sub    %eax,%edx$/;"	l
c0108fa6	obj/kernel.asm	/^c0108fa6:	89 d0                	mov    %edx,%eax$/;"	l
c0108fa8	obj/kernel.asm	/^c0108fa8:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0108fab	obj/kernel.asm	/^c0108fab:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0108fb1	obj/kernel.asm	/^c0108fb1:	5d                   	pop    %ebp$/;"	l
c0108fb2	obj/kernel.asm	/^c0108fb2:	c3                   	ret    $/;"	l
c0108fb3	obj/kernel.asm	/^c0108fb3 <page2pa>:$/;"	l
c0108fb3	obj/kernel.asm	/^c0108fb3:	55                   	push   %ebp$/;"	l
c0108fb4	obj/kernel.asm	/^c0108fb4:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fb6	obj/kernel.asm	/^c0108fb6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108fb9	obj/kernel.asm	/^c0108fb9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fbc	obj/kernel.asm	/^c0108fbc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0108fbf	obj/kernel.asm	/^c0108fbf:	e8 d5 ff ff ff       	call   c0108f99 <page2ppn>$/;"	l
c0108fc4	obj/kernel.asm	/^c0108fc4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108fc7	obj/kernel.asm	/^c0108fc7:	c9                   	leave  $/;"	l
c0108fc8	obj/kernel.asm	/^c0108fc8:	c3                   	ret    $/;"	l
c0108fc9	obj/kernel.asm	/^c0108fc9 <page_ref>:$/;"	l
c0108fc9	obj/kernel.asm	/^c0108fc9:	55                   	push   %ebp$/;"	l
c0108fca	obj/kernel.asm	/^c0108fca:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fcc	obj/kernel.asm	/^c0108fcc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fcf	obj/kernel.asm	/^c0108fcf:	8b 00                	mov    (%eax),%eax$/;"	l
c0108fd1	obj/kernel.asm	/^c0108fd1:	5d                   	pop    %ebp$/;"	l
c0108fd2	obj/kernel.asm	/^c0108fd2:	c3                   	ret    $/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3 <set_page_ref>:$/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3:	55                   	push   %ebp$/;"	l
c0108fd4	obj/kernel.asm	/^c0108fd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fd6	obj/kernel.asm	/^c0108fd6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fd9	obj/kernel.asm	/^c0108fd9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108fdc	obj/kernel.asm	/^c0108fdc:	89 10                	mov    %edx,(%eax)$/;"	l
c0108fde	obj/kernel.asm	/^c0108fde:	5d                   	pop    %ebp$/;"	l
c0108fdf	obj/kernel.asm	/^c0108fdf:	c3                   	ret    $/;"	l
c0108fe0	obj/kernel.asm	/^c0108fe0 <default_init>:$/;"	l
c0108fe0	obj/kernel.asm	/^c0108fe0:	55                   	push   %ebp$/;"	l
c0108fe1	obj/kernel.asm	/^c0108fe1:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fe3	obj/kernel.asm	/^c0108fe3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108fe6	obj/kernel.asm	/^c0108fe6:	c7 45 fc 64 b7 15 c0 	movl   $0xc015b764,-0x4(%ebp)$/;"	l
c0108fed	obj/kernel.asm	/^c0108fed:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108ff0	obj/kernel.asm	/^c0108ff0:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108ff3	obj/kernel.asm	/^c0108ff3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108ff6	obj/kernel.asm	/^c0108ff6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108ff9	obj/kernel.asm	/^c0108ff9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108ffc	obj/kernel.asm	/^c0108ffc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108fff	obj/kernel.asm	/^c0108fff:	89 10                	mov    %edx,(%eax)$/;"	l
c0109001	obj/kernel.asm	/^c0109001:	c7 05 6c b7 15 c0 00 	movl   $0x0,0xc015b76c$/;"	l
c0109008	obj/kernel.asm	/^c0109008:	00 00 00 $/;"	l
c010900b	obj/kernel.asm	/^c010900b:	c9                   	leave  $/;"	l
c010900c	obj/kernel.asm	/^c010900c:	c3                   	ret    $/;"	l
c010900d	obj/kernel.asm	/^c010900d <default_init_memmap>:$/;"	l
c010900d	obj/kernel.asm	/^c010900d:	55                   	push   %ebp$/;"	l
c010900e	obj/kernel.asm	/^c010900e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109010	obj/kernel.asm	/^c0109010:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0109013	obj/kernel.asm	/^c0109013:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0109017	obj/kernel.asm	/^c0109017:	75 24                	jne    c010903d <default_init_memmap+0x30>$/;"	l
c0109019	obj/kernel.asm	/^c0109019:	c7 44 24 0c 34 8d 11 	movl   $0xc0118d34,0xc(%esp)$/;"	l
c0109020	obj/kernel.asm	/^c0109020:	c0 $/;"	l
c0109021	obj/kernel.asm	/^c0109021:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109028	obj/kernel.asm	/^c0109028:	c0 $/;"	l
c0109029	obj/kernel.asm	/^c0109029:	c7 44 24 04 46 00 00 	movl   $0x46,0x4(%esp)$/;"	l
c0109030	obj/kernel.asm	/^c0109030:	00 $/;"	l
c0109031	obj/kernel.asm	/^c0109031:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109038	obj/kernel.asm	/^c0109038:	e8 fa 7b ff ff       	call   c0100c37 <__panic>$/;"	l
c010903d	obj/kernel.asm	/^c010903d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109040	obj/kernel.asm	/^c0109040:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109043	obj/kernel.asm	/^c0109043:	e9 dc 00 00 00       	jmp    c0109124 <default_init_memmap+0x117>$/;"	l
c0109048	obj/kernel.asm	/^c0109048:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010904b	obj/kernel.asm	/^c010904b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010904e	obj/kernel.asm	/^c010904e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109055	obj/kernel.asm	/^c0109055:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109058	obj/kernel.asm	/^c0109058:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010905b	obj/kernel.asm	/^c010905b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010905e	obj/kernel.asm	/^c010905e:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109061	obj/kernel.asm	/^c0109061:	19 c0                	sbb    %eax,%eax$/;"	l
c0109063	obj/kernel.asm	/^c0109063:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109066	obj/kernel.asm	/^c0109066:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010906a	obj/kernel.asm	/^c010906a:	0f 95 c0             	setne  %al$/;"	l
c010906d	obj/kernel.asm	/^c010906d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	85 c0                	test   %eax,%eax$/;"	l
c0109072	obj/kernel.asm	/^c0109072:	75 24                	jne    c0109098 <default_init_memmap+0x8b>$/;"	l
c0109074	obj/kernel.asm	/^c0109074:	c7 44 24 0c 65 8d 11 	movl   $0xc0118d65,0xc(%esp)$/;"	l
c010907b	obj/kernel.asm	/^c010907b:	c0 $/;"	l
c010907c	obj/kernel.asm	/^c010907c:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109083	obj/kernel.asm	/^c0109083:	c0 $/;"	l
c0109084	obj/kernel.asm	/^c0109084:	c7 44 24 04 49 00 00 	movl   $0x49,0x4(%esp)$/;"	l
c010908b	obj/kernel.asm	/^c010908b:	00 $/;"	l
c010908c	obj/kernel.asm	/^c010908c:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109093	obj/kernel.asm	/^c0109093:	e8 9f 7b ff ff       	call   c0100c37 <__panic>$/;"	l
c0109098	obj/kernel.asm	/^c0109098:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010909b	obj/kernel.asm	/^c010909b:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01090a2	obj/kernel.asm	/^c01090a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090a5	obj/kernel.asm	/^c01090a5:	83 c0 04             	add    $0x4,%eax$/;"	l
c01090a8	obj/kernel.asm	/^c01090a8:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c01090af	obj/kernel.asm	/^c01090af:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01090b2	obj/kernel.asm	/^c01090b2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01090b5	obj/kernel.asm	/^c01090b5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01090b8	obj/kernel.asm	/^c01090b8:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01090bb	obj/kernel.asm	/^c01090bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090be	obj/kernel.asm	/^c01090be:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01090c5	obj/kernel.asm	/^c01090c5:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01090cc	obj/kernel.asm	/^c01090cc:	00 $/;"	l
c01090cd	obj/kernel.asm	/^c01090cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090d0	obj/kernel.asm	/^c01090d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01090d3	obj/kernel.asm	/^c01090d3:	e8 fb fe ff ff       	call   c0108fd3 <set_page_ref>$/;"	l
c01090d8	obj/kernel.asm	/^c01090d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090db	obj/kernel.asm	/^c01090db:	83 c0 10             	add    $0x10,%eax$/;"	l
c01090de	obj/kernel.asm	/^c01090de:	c7 45 dc 64 b7 15 c0 	movl   $0xc015b764,-0x24(%ebp)$/;"	l
c01090e5	obj/kernel.asm	/^c01090e5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01090e8	obj/kernel.asm	/^c01090e8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01090eb	obj/kernel.asm	/^c01090eb:	8b 00                	mov    (%eax),%eax$/;"	l
c01090ed	obj/kernel.asm	/^c01090ed:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01090f3	obj/kernel.asm	/^c01090f3:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01090f6	obj/kernel.asm	/^c01090f6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01090f9	obj/kernel.asm	/^c01090f9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01090fc	obj/kernel.asm	/^c01090fc:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01090ff	obj/kernel.asm	/^c01090ff:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0109102	obj/kernel.asm	/^c0109102:	89 10                	mov    %edx,(%eax)$/;"	l
c0109104	obj/kernel.asm	/^c0109104:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109107	obj/kernel.asm	/^c0109107:	8b 10                	mov    (%eax),%edx$/;"	l
c0109109	obj/kernel.asm	/^c0109109:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010910c	obj/kernel.asm	/^c010910c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010910f	obj/kernel.asm	/^c010910f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0109112	obj/kernel.asm	/^c0109112:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0109115	obj/kernel.asm	/^c0109115:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109118	obj/kernel.asm	/^c0109118:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010911b	obj/kernel.asm	/^c010911b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010911e	obj/kernel.asm	/^c010911e:	89 10                	mov    %edx,(%eax)$/;"	l
c0109120	obj/kernel.asm	/^c0109120:	83 45 f4 24          	addl   $0x24,-0xc(%ebp)$/;"	l
c0109124	obj/kernel.asm	/^c0109124:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109127	obj/kernel.asm	/^c0109127:	89 d0                	mov    %edx,%eax$/;"	l
c0109129	obj/kernel.asm	/^c0109129:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010912c	obj/kernel.asm	/^c010912c:	01 d0                	add    %edx,%eax$/;"	l
c010912e	obj/kernel.asm	/^c010912e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109131	obj/kernel.asm	/^c0109131:	89 c2                	mov    %eax,%edx$/;"	l
c0109133	obj/kernel.asm	/^c0109133:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109136	obj/kernel.asm	/^c0109136:	01 d0                	add    %edx,%eax$/;"	l
c0109138	obj/kernel.asm	/^c0109138:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010913b	obj/kernel.asm	/^c010913b:	0f 85 07 ff ff ff    	jne    c0109048 <default_init_memmap+0x3b>$/;"	l
c0109141	obj/kernel.asm	/^c0109141:	8b 15 6c b7 15 c0    	mov    0xc015b76c,%edx$/;"	l
c0109147	obj/kernel.asm	/^c0109147:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010914a	obj/kernel.asm	/^c010914a:	01 d0                	add    %edx,%eax$/;"	l
c010914c	obj/kernel.asm	/^c010914c:	a3 6c b7 15 c0       	mov    %eax,0xc015b76c$/;"	l
c0109151	obj/kernel.asm	/^c0109151:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109154	obj/kernel.asm	/^c0109154:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109157	obj/kernel.asm	/^c0109157:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010915a	obj/kernel.asm	/^c010915a:	c9                   	leave  $/;"	l
c010915b	obj/kernel.asm	/^c010915b:	c3                   	ret    $/;"	l
c010915c	obj/kernel.asm	/^c010915c <default_alloc_pages>:$/;"	l
c010915c	obj/kernel.asm	/^c010915c:	55                   	push   %ebp$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	89 e5                	mov    %esp,%ebp$/;"	l
c010915f	obj/kernel.asm	/^c010915f:	83 ec 68             	sub    $0x68,%esp$/;"	l
c0109162	obj/kernel.asm	/^c0109162:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109166	obj/kernel.asm	/^c0109166:	75 24                	jne    c010918c <default_alloc_pages+0x30>$/;"	l
c0109168	obj/kernel.asm	/^c0109168:	c7 44 24 0c 34 8d 11 	movl   $0xc0118d34,0xc(%esp)$/;"	l
c010916f	obj/kernel.asm	/^c010916f:	c0 $/;"	l
c0109170	obj/kernel.asm	/^c0109170:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109177	obj/kernel.asm	/^c0109177:	c0 $/;"	l
c0109178	obj/kernel.asm	/^c0109178:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c010917f	obj/kernel.asm	/^c010917f:	00 $/;"	l
c0109180	obj/kernel.asm	/^c0109180:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	e8 ab 7a ff ff       	call   c0100c37 <__panic>$/;"	l
c010918c	obj/kernel.asm	/^c010918c:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0109191	obj/kernel.asm	/^c0109191:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109194	obj/kernel.asm	/^c0109194:	73 0a                	jae    c01091a0 <default_alloc_pages+0x44>$/;"	l
c0109196	obj/kernel.asm	/^c0109196:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010919b	obj/kernel.asm	/^c010919b:	e9 37 01 00 00       	jmp    c01092d7 <default_alloc_pages+0x17b>$/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	c7 45 f4 64 b7 15 c0 	movl   $0xc015b764,-0xc(%ebp)$/;"	l
c01091a7	obj/kernel.asm	/^c01091a7:	e9 0a 01 00 00       	jmp    c01092b6 <default_alloc_pages+0x15a>$/;"	l
c01091ac	obj/kernel.asm	/^c01091ac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091af	obj/kernel.asm	/^c01091af:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01091b2	obj/kernel.asm	/^c01091b2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01091b5	obj/kernel.asm	/^c01091b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01091b8	obj/kernel.asm	/^c01091b8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01091bb	obj/kernel.asm	/^c01091bb:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01091be	obj/kernel.asm	/^c01091be:	0f 82 f2 00 00 00    	jb     c01092b6 <default_alloc_pages+0x15a>$/;"	l
c01091c4	obj/kernel.asm	/^c01091c4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01091cb	obj/kernel.asm	/^c01091cb:	eb 7c                	jmp    c0109249 <default_alloc_pages+0xed>$/;"	l
c01091cd	obj/kernel.asm	/^c01091cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091d0	obj/kernel.asm	/^c01091d0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01091d3	obj/kernel.asm	/^c01091d3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01091d6	obj/kernel.asm	/^c01091d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091d9	obj/kernel.asm	/^c01091d9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01091dc	obj/kernel.asm	/^c01091dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091df	obj/kernel.asm	/^c01091df:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01091e2	obj/kernel.asm	/^c01091e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01091e5	obj/kernel.asm	/^c01091e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01091e8	obj/kernel.asm	/^c01091e8:	83 c0 04             	add    $0x4,%eax$/;"	l
c01091eb	obj/kernel.asm	/^c01091eb:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01091f2	obj/kernel.asm	/^c01091f2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01091f5	obj/kernel.asm	/^c01091f5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01091f8	obj/kernel.asm	/^c01091f8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01091fb	obj/kernel.asm	/^c01091fb:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01091fe	obj/kernel.asm	/^c01091fe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109201	obj/kernel.asm	/^c0109201:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109204	obj/kernel.asm	/^c0109204:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
c010920b	obj/kernel.asm	/^c010920b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010920e	obj/kernel.asm	/^c010920e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109211	obj/kernel.asm	/^c0109211:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0109214	obj/kernel.asm	/^c0109214:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0109217	obj/kernel.asm	/^c0109217:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010921a	obj/kernel.asm	/^c010921a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010921d	obj/kernel.asm	/^c010921d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109220	obj/kernel.asm	/^c0109220:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109223	obj/kernel.asm	/^c0109223:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0109226	obj/kernel.asm	/^c0109226:	8b 12                	mov    (%edx),%edx$/;"	l
c0109228	obj/kernel.asm	/^c0109228:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010922b	obj/kernel.asm	/^c010922b:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010922e	obj/kernel.asm	/^c010922e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0109231	obj/kernel.asm	/^c0109231:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0109234	obj/kernel.asm	/^c0109234:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109237	obj/kernel.asm	/^c0109237:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010923a	obj/kernel.asm	/^c010923a:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010923d	obj/kernel.asm	/^c010923d:	89 10                	mov    %edx,(%eax)$/;"	l
c010923f	obj/kernel.asm	/^c010923f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109242	obj/kernel.asm	/^c0109242:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109245	obj/kernel.asm	/^c0109245:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0109249	obj/kernel.asm	/^c0109249:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010924c	obj/kernel.asm	/^c010924c:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010924f	obj/kernel.asm	/^c010924f:	0f 82 78 ff ff ff    	jb     c01091cd <default_alloc_pages+0x71>$/;"	l
c0109255	obj/kernel.asm	/^c0109255:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109258	obj/kernel.asm	/^c0109258:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010925b	obj/kernel.asm	/^c010925b:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010925e	obj/kernel.asm	/^c010925e:	76 12                	jbe    c0109272 <default_alloc_pages+0x116>$/;"	l
c0109260	obj/kernel.asm	/^c0109260:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109263	obj/kernel.asm	/^c0109263:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0109266	obj/kernel.asm	/^c0109266:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109269	obj/kernel.asm	/^c0109269:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010926c	obj/kernel.asm	/^c010926c:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c010926f	obj/kernel.asm	/^c010926f:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0109272	obj/kernel.asm	/^c0109272:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109275	obj/kernel.asm	/^c0109275:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109278	obj/kernel.asm	/^c0109278:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c010927f	obj/kernel.asm	/^c010927f:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109282	obj/kernel.asm	/^c0109282:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109285	obj/kernel.asm	/^c0109285:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0109288	obj/kernel.asm	/^c0109288:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c010928b	obj/kernel.asm	/^c010928b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010928e	obj/kernel.asm	/^c010928e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109291	obj/kernel.asm	/^c0109291:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)$/;"	l
c0109298	obj/kernel.asm	/^c0109298:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010929b	obj/kernel.asm	/^c010929b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010929e	obj/kernel.asm	/^c010929e:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c01092a1	obj/kernel.asm	/^c01092a1:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c01092a9	obj/kernel.asm	/^c01092a9:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c01092ac	obj/kernel.asm	/^c01092ac:	a3 6c b7 15 c0       	mov    %eax,0xc015b76c$/;"	l
c01092b1	obj/kernel.asm	/^c01092b1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01092b4	obj/kernel.asm	/^c01092b4:	eb 21                	jmp    c01092d7 <default_alloc_pages+0x17b>$/;"	l
c01092b6	obj/kernel.asm	/^c01092b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01092b9	obj/kernel.asm	/^c01092b9:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c01092bc	obj/kernel.asm	/^c01092bc:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c01092bf	obj/kernel.asm	/^c01092bf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01092c2	obj/kernel.asm	/^c01092c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	81 7d f4 64 b7 15 c0 	cmpl   $0xc015b764,-0xc(%ebp)$/;"	l
c01092cc	obj/kernel.asm	/^c01092cc:	0f 85 da fe ff ff    	jne    c01091ac <default_alloc_pages+0x50>$/;"	l
c01092d2	obj/kernel.asm	/^c01092d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01092d7	obj/kernel.asm	/^c01092d7:	c9                   	leave  $/;"	l
c01092d8	obj/kernel.asm	/^c01092d8:	c3                   	ret    $/;"	l
c01092d9	obj/kernel.asm	/^c01092d9 <default_free_pages>:$/;"	l
c01092d9	obj/kernel.asm	/^c01092d9:	55                   	push   %ebp$/;"	l
c01092da	obj/kernel.asm	/^c01092da:	89 e5                	mov    %esp,%ebp$/;"	l
c01092dc	obj/kernel.asm	/^c01092dc:	83 ec 68             	sub    $0x68,%esp$/;"	l
c01092df	obj/kernel.asm	/^c01092df:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01092e3	obj/kernel.asm	/^c01092e3:	75 24                	jne    c0109309 <default_free_pages+0x30>$/;"	l
c01092e5	obj/kernel.asm	/^c01092e5:	c7 44 24 0c 34 8d 11 	movl   $0xc0118d34,0xc(%esp)$/;"	l
c01092ec	obj/kernel.asm	/^c01092ec:	c0 $/;"	l
c01092ed	obj/kernel.asm	/^c01092ed:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01092f4	obj/kernel.asm	/^c01092f4:	c0 $/;"	l
c01092f5	obj/kernel.asm	/^c01092f5:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c01092fc	obj/kernel.asm	/^c01092fc:	00 $/;"	l
c01092fd	obj/kernel.asm	/^c01092fd:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109304	obj/kernel.asm	/^c0109304:	e8 2e 79 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109309	obj/kernel.asm	/^c0109309:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010930c	obj/kernel.asm	/^c010930c:	83 c0 04             	add    $0x4,%eax$/;"	l
c010930f	obj/kernel.asm	/^c010930f:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0109316	obj/kernel.asm	/^c0109316:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109319	obj/kernel.asm	/^c0109319:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010931c	obj/kernel.asm	/^c010931c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010931f	obj/kernel.asm	/^c010931f:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109322	obj/kernel.asm	/^c0109322:	19 c0                	sbb    %eax,%eax$/;"	l
c0109324	obj/kernel.asm	/^c0109324:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109327	obj/kernel.asm	/^c0109327:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010932b	obj/kernel.asm	/^c010932b:	0f 95 c0             	setne  %al$/;"	l
c010932e	obj/kernel.asm	/^c010932e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109331	obj/kernel.asm	/^c0109331:	85 c0                	test   %eax,%eax$/;"	l
c0109333	obj/kernel.asm	/^c0109333:	75 24                	jne    c0109359 <default_free_pages+0x80>$/;"	l
c0109335	obj/kernel.asm	/^c0109335:	c7 44 24 0c 75 8d 11 	movl   $0xc0118d75,0xc(%esp)$/;"	l
c010933c	obj/kernel.asm	/^c010933c:	c0 $/;"	l
c010933d	obj/kernel.asm	/^c010933d:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109344	obj/kernel.asm	/^c0109344:	c0 $/;"	l
c0109345	obj/kernel.asm	/^c0109345:	c7 44 24 04 79 00 00 	movl   $0x79,0x4(%esp)$/;"	l
c010934c	obj/kernel.asm	/^c010934c:	00 $/;"	l
c010934d	obj/kernel.asm	/^c010934d:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109354	obj/kernel.asm	/^c0109354:	e8 de 78 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109359	obj/kernel.asm	/^c0109359:	c7 45 f4 64 b7 15 c0 	movl   $0xc015b764,-0xc(%ebp)$/;"	l
c0109360	obj/kernel.asm	/^c0109360:	eb 13                	jmp    c0109375 <default_free_pages+0x9c>$/;"	l
c0109362	obj/kernel.asm	/^c0109362:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109365	obj/kernel.asm	/^c0109365:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0109368	obj/kernel.asm	/^c0109368:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010936b	obj/kernel.asm	/^c010936b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010936e	obj/kernel.asm	/^c010936e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109371	obj/kernel.asm	/^c0109371:	76 02                	jbe    c0109375 <default_free_pages+0x9c>$/;"	l
c0109373	obj/kernel.asm	/^c0109373:	eb 18                	jmp    c010938d <default_free_pages+0xb4>$/;"	l
c0109375	obj/kernel.asm	/^c0109375:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109378	obj/kernel.asm	/^c0109378:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010937b	obj/kernel.asm	/^c010937b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010937e	obj/kernel.asm	/^c010937e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109381	obj/kernel.asm	/^c0109381:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109384	obj/kernel.asm	/^c0109384:	81 7d f4 64 b7 15 c0 	cmpl   $0xc015b764,-0xc(%ebp)$/;"	l
c010938b	obj/kernel.asm	/^c010938b:	75 d5                	jne    c0109362 <default_free_pages+0x89>$/;"	l
c010938d	obj/kernel.asm	/^c010938d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109390	obj/kernel.asm	/^c0109390:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109393	obj/kernel.asm	/^c0109393:	eb 4b                	jmp    c01093e0 <default_free_pages+0x107>$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109398	obj/kernel.asm	/^c0109398:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c010939b	obj/kernel.asm	/^c010939b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010939e	obj/kernel.asm	/^c010939e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01093a1	obj/kernel.asm	/^c01093a1:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c01093a4	obj/kernel.asm	/^c01093a4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01093a7	obj/kernel.asm	/^c01093a7:	8b 00                	mov    (%eax),%eax$/;"	l
c01093a9	obj/kernel.asm	/^c01093a9:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01093ac	obj/kernel.asm	/^c01093ac:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c01093af	obj/kernel.asm	/^c01093af:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01093b2	obj/kernel.asm	/^c01093b2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01093b5	obj/kernel.asm	/^c01093b5:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01093b8	obj/kernel.asm	/^c01093b8:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01093bb	obj/kernel.asm	/^c01093bb:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01093be	obj/kernel.asm	/^c01093be:	89 10                	mov    %edx,(%eax)$/;"	l
c01093c0	obj/kernel.asm	/^c01093c0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01093c3	obj/kernel.asm	/^c01093c3:	8b 10                	mov    (%eax),%edx$/;"	l
c01093c5	obj/kernel.asm	/^c01093c5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01093c8	obj/kernel.asm	/^c01093c8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01093cb	obj/kernel.asm	/^c01093cb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01093ce	obj/kernel.asm	/^c01093ce:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01093d1	obj/kernel.asm	/^c01093d1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01093d4	obj/kernel.asm	/^c01093d4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01093d7	obj/kernel.asm	/^c01093d7:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01093da	obj/kernel.asm	/^c01093da:	89 10                	mov    %edx,(%eax)$/;"	l
c01093dc	obj/kernel.asm	/^c01093dc:	83 45 f0 24          	addl   $0x24,-0x10(%ebp)$/;"	l
c01093e0	obj/kernel.asm	/^c01093e0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01093e3	obj/kernel.asm	/^c01093e3:	89 d0                	mov    %edx,%eax$/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01093e8	obj/kernel.asm	/^c01093e8:	01 d0                	add    %edx,%eax$/;"	l
c01093ea	obj/kernel.asm	/^c01093ea:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01093ed	obj/kernel.asm	/^c01093ed:	89 c2                	mov    %eax,%edx$/;"	l
c01093ef	obj/kernel.asm	/^c01093ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093f2	obj/kernel.asm	/^c01093f2:	01 d0                	add    %edx,%eax$/;"	l
c01093f4	obj/kernel.asm	/^c01093f4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01093f7	obj/kernel.asm	/^c01093f7:	77 9c                	ja     c0109395 <default_free_pages+0xbc>$/;"	l
c01093f9	obj/kernel.asm	/^c01093f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093fc	obj/kernel.asm	/^c01093fc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0109403	obj/kernel.asm	/^c0109403:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010940a	obj/kernel.asm	/^c010940a:	00 $/;"	l
c010940b	obj/kernel.asm	/^c010940b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010940e	obj/kernel.asm	/^c010940e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109411	obj/kernel.asm	/^c0109411:	e8 bd fb ff ff       	call   c0108fd3 <set_page_ref>$/;"	l
c0109416	obj/kernel.asm	/^c0109416:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109419	obj/kernel.asm	/^c0109419:	83 c0 04             	add    $0x4,%eax$/;"	l
c010941c	obj/kernel.asm	/^c010941c:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)$/;"	l
c0109423	obj/kernel.asm	/^c0109423:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0109426	obj/kernel.asm	/^c0109426:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0109429	obj/kernel.asm	/^c0109429:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010942c	obj/kernel.asm	/^c010942c:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c010942f	obj/kernel.asm	/^c010942f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109432	obj/kernel.asm	/^c0109432:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109435	obj/kernel.asm	/^c0109435:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c010943c	obj/kernel.asm	/^c010943c:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010943f	obj/kernel.asm	/^c010943f:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109442	obj/kernel.asm	/^c0109442:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0109445	obj/kernel.asm	/^c0109445:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0109448	obj/kernel.asm	/^c0109448:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010944b	obj/kernel.asm	/^c010944b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010944e	obj/kernel.asm	/^c010944e:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0109451	obj/kernel.asm	/^c0109451:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109454	obj/kernel.asm	/^c0109454:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0109457	obj/kernel.asm	/^c0109457:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010945a	obj/kernel.asm	/^c010945a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010945d	obj/kernel.asm	/^c010945d:	89 d0                	mov    %edx,%eax$/;"	l
c010945f	obj/kernel.asm	/^c010945f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109462	obj/kernel.asm	/^c0109462:	01 d0                	add    %edx,%eax$/;"	l
c0109464	obj/kernel.asm	/^c0109464:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109467	obj/kernel.asm	/^c0109467:	89 c2                	mov    %eax,%edx$/;"	l
c0109469	obj/kernel.asm	/^c0109469:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010946c	obj/kernel.asm	/^c010946c:	01 d0                	add    %edx,%eax$/;"	l
c010946e	obj/kernel.asm	/^c010946e:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0109471	obj/kernel.asm	/^c0109471:	75 1e                	jne    c0109491 <default_free_pages+0x1b8>$/;"	l
c0109473	obj/kernel.asm	/^c0109473:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0109479	obj/kernel.asm	/^c0109479:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010947c	obj/kernel.asm	/^c010947c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010947f	obj/kernel.asm	/^c010947f:	01 c2                	add    %eax,%edx$/;"	l
c0109481	obj/kernel.asm	/^c0109481:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109484	obj/kernel.asm	/^c0109484:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0109487	obj/kernel.asm	/^c0109487:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010948a	obj/kernel.asm	/^c010948a:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0109491	obj/kernel.asm	/^c0109491:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109494	obj/kernel.asm	/^c0109494:	83 c0 10             	add    $0x10,%eax$/;"	l
c0109497	obj/kernel.asm	/^c0109497:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010949a	obj/kernel.asm	/^c010949a:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010949d	obj/kernel.asm	/^c010949d:	8b 00                	mov    (%eax),%eax$/;"	l
c010949f	obj/kernel.asm	/^c010949f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01094a2	obj/kernel.asm	/^c01094a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094a5	obj/kernel.asm	/^c01094a5:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01094a8	obj/kernel.asm	/^c01094a8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01094ab	obj/kernel.asm	/^c01094ab:	81 7d f4 64 b7 15 c0 	cmpl   $0xc015b764,-0xc(%ebp)$/;"	l
c01094b2	obj/kernel.asm	/^c01094b2:	74 57                	je     c010950b <default_free_pages+0x232>$/;"	l
c01094b4	obj/kernel.asm	/^c01094b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094b7	obj/kernel.asm	/^c01094b7:	83 e8 24             	sub    $0x24,%eax$/;"	l
c01094ba	obj/kernel.asm	/^c01094ba:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01094bd	obj/kernel.asm	/^c01094bd:	75 4c                	jne    c010950b <default_free_pages+0x232>$/;"	l
c01094bf	obj/kernel.asm	/^c01094bf:	eb 41                	jmp    c0109502 <default_free_pages+0x229>$/;"	l
c01094c1	obj/kernel.asm	/^c01094c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01094c4	obj/kernel.asm	/^c01094c4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01094c7	obj/kernel.asm	/^c01094c7:	85 c0                	test   %eax,%eax$/;"	l
c01094c9	obj/kernel.asm	/^c01094c9:	74 20                	je     c01094eb <default_free_pages+0x212>$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01094ce	obj/kernel.asm	/^c01094ce:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01094d1	obj/kernel.asm	/^c01094d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094d4	obj/kernel.asm	/^c01094d4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01094d7	obj/kernel.asm	/^c01094d7:	01 c2                	add    %eax,%edx$/;"	l
c01094d9	obj/kernel.asm	/^c01094d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01094dc	obj/kernel.asm	/^c01094dc:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094e2	obj/kernel.asm	/^c01094e2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01094e9	obj/kernel.asm	/^c01094e9:	eb 20                	jmp    c010950b <default_free_pages+0x232>$/;"	l
c01094eb	obj/kernel.asm	/^c01094eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094ee	obj/kernel.asm	/^c01094ee:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c01094f1	obj/kernel.asm	/^c01094f1:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01094f4	obj/kernel.asm	/^c01094f4:	8b 00                	mov    (%eax),%eax$/;"	l
c01094f6	obj/kernel.asm	/^c01094f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094fc	obj/kernel.asm	/^c01094fc:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01094ff	obj/kernel.asm	/^c01094ff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109502	obj/kernel.asm	/^c0109502:	81 7d f4 64 b7 15 c0 	cmpl   $0xc015b764,-0xc(%ebp)$/;"	l
c0109509	obj/kernel.asm	/^c0109509:	75 b6                	jne    c01094c1 <default_free_pages+0x1e8>$/;"	l
c010950b	obj/kernel.asm	/^c010950b:	8b 15 6c b7 15 c0    	mov    0xc015b76c,%edx$/;"	l
c0109511	obj/kernel.asm	/^c0109511:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109514	obj/kernel.asm	/^c0109514:	01 d0                	add    %edx,%eax$/;"	l
c0109516	obj/kernel.asm	/^c0109516:	a3 6c b7 15 c0       	mov    %eax,0xc015b76c$/;"	l
c010951b	obj/kernel.asm	/^c010951b:	90                   	nop$/;"	l
c010951c	obj/kernel.asm	/^c010951c:	c9                   	leave  $/;"	l
c010951d	obj/kernel.asm	/^c010951d:	c3                   	ret    $/;"	l
c010951e	obj/kernel.asm	/^c010951e <default_nr_free_pages>:$/;"	l
c010951e	obj/kernel.asm	/^c010951e:	55                   	push   %ebp$/;"	l
c010951f	obj/kernel.asm	/^c010951f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109521	obj/kernel.asm	/^c0109521:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0109526	obj/kernel.asm	/^c0109526:	5d                   	pop    %ebp$/;"	l
c0109527	obj/kernel.asm	/^c0109527:	c3                   	ret    $/;"	l
c0109528	obj/kernel.asm	/^c0109528 <basic_check>:$/;"	l
c0109528	obj/kernel.asm	/^c0109528:	55                   	push   %ebp$/;"	l
c0109529	obj/kernel.asm	/^c0109529:	89 e5                	mov    %esp,%ebp$/;"	l
c010952b	obj/kernel.asm	/^c010952b:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010952e	obj/kernel.asm	/^c010952e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109535	obj/kernel.asm	/^c0109535:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109538	obj/kernel.asm	/^c0109538:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010953b	obj/kernel.asm	/^c010953b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010953e	obj/kernel.asm	/^c010953e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109541	obj/kernel.asm	/^c0109541:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109548	obj/kernel.asm	/^c0109548:	e8 42 b1 ff ff       	call   c010468f <alloc_pages>$/;"	l
c010954d	obj/kernel.asm	/^c010954d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109550	obj/kernel.asm	/^c0109550:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109554	obj/kernel.asm	/^c0109554:	75 24                	jne    c010957a <basic_check+0x52>$/;"	l
c0109556	obj/kernel.asm	/^c0109556:	c7 44 24 0c 88 8d 11 	movl   $0xc0118d88,0xc(%esp)$/;"	l
c010955d	obj/kernel.asm	/^c010955d:	c0 $/;"	l
c010955e	obj/kernel.asm	/^c010955e:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109565	obj/kernel.asm	/^c0109565:	c0 $/;"	l
c0109566	obj/kernel.asm	/^c0109566:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c010956d	obj/kernel.asm	/^c010956d:	00 $/;"	l
c010956e	obj/kernel.asm	/^c010956e:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109575	obj/kernel.asm	/^c0109575:	e8 bd 76 ff ff       	call   c0100c37 <__panic>$/;"	l
c010957a	obj/kernel.asm	/^c010957a:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109581	obj/kernel.asm	/^c0109581:	e8 09 b1 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109586	obj/kernel.asm	/^c0109586:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109589	obj/kernel.asm	/^c0109589:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010958d	obj/kernel.asm	/^c010958d:	75 24                	jne    c01095b3 <basic_check+0x8b>$/;"	l
c010958f	obj/kernel.asm	/^c010958f:	c7 44 24 0c a4 8d 11 	movl   $0xc0118da4,0xc(%esp)$/;"	l
c0109596	obj/kernel.asm	/^c0109596:	c0 $/;"	l
c0109597	obj/kernel.asm	/^c0109597:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010959e	obj/kernel.asm	/^c010959e:	c0 $/;"	l
c010959f	obj/kernel.asm	/^c010959f:	c7 44 24 04 ae 00 00 	movl   $0xae,0x4(%esp)$/;"	l
c01095a6	obj/kernel.asm	/^c01095a6:	00 $/;"	l
c01095a7	obj/kernel.asm	/^c01095a7:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01095ae	obj/kernel.asm	/^c01095ae:	e8 84 76 ff ff       	call   c0100c37 <__panic>$/;"	l
c01095b3	obj/kernel.asm	/^c01095b3:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01095ba	obj/kernel.asm	/^c01095ba:	e8 d0 b0 ff ff       	call   c010468f <alloc_pages>$/;"	l
c01095bf	obj/kernel.asm	/^c01095bf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01095c2	obj/kernel.asm	/^c01095c2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01095c6	obj/kernel.asm	/^c01095c6:	75 24                	jne    c01095ec <basic_check+0xc4>$/;"	l
c01095c8	obj/kernel.asm	/^c01095c8:	c7 44 24 0c c0 8d 11 	movl   $0xc0118dc0,0xc(%esp)$/;"	l
c01095cf	obj/kernel.asm	/^c01095cf:	c0 $/;"	l
c01095d0	obj/kernel.asm	/^c01095d0:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01095d7	obj/kernel.asm	/^c01095d7:	c0 $/;"	l
c01095d8	obj/kernel.asm	/^c01095d8:	c7 44 24 04 af 00 00 	movl   $0xaf,0x4(%esp)$/;"	l
c01095df	obj/kernel.asm	/^c01095df:	00 $/;"	l
c01095e0	obj/kernel.asm	/^c01095e0:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01095e7	obj/kernel.asm	/^c01095e7:	e8 4b 76 ff ff       	call   c0100c37 <__panic>$/;"	l
c01095ec	obj/kernel.asm	/^c01095ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01095ef	obj/kernel.asm	/^c01095ef:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01095f2	obj/kernel.asm	/^c01095f2:	74 10                	je     c0109604 <basic_check+0xdc>$/;"	l
c01095f4	obj/kernel.asm	/^c01095f4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01095f7	obj/kernel.asm	/^c01095f7:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01095fa	obj/kernel.asm	/^c01095fa:	74 08                	je     c0109604 <basic_check+0xdc>$/;"	l
c01095fc	obj/kernel.asm	/^c01095fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01095ff	obj/kernel.asm	/^c01095ff:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109602	obj/kernel.asm	/^c0109602:	75 24                	jne    c0109628 <basic_check+0x100>$/;"	l
c0109604	obj/kernel.asm	/^c0109604:	c7 44 24 0c dc 8d 11 	movl   $0xc0118ddc,0xc(%esp)$/;"	l
c010960b	obj/kernel.asm	/^c010960b:	c0 $/;"	l
c010960c	obj/kernel.asm	/^c010960c:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109613	obj/kernel.asm	/^c0109613:	c0 $/;"	l
c0109614	obj/kernel.asm	/^c0109614:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c010961b	obj/kernel.asm	/^c010961b:	00 $/;"	l
c010961c	obj/kernel.asm	/^c010961c:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109623	obj/kernel.asm	/^c0109623:	e8 0f 76 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109628	obj/kernel.asm	/^c0109628:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010962b	obj/kernel.asm	/^c010962b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010962e	obj/kernel.asm	/^c010962e:	e8 96 f9 ff ff       	call   c0108fc9 <page_ref>$/;"	l
c0109633	obj/kernel.asm	/^c0109633:	85 c0                	test   %eax,%eax$/;"	l
c0109635	obj/kernel.asm	/^c0109635:	75 1e                	jne    c0109655 <basic_check+0x12d>$/;"	l
c0109637	obj/kernel.asm	/^c0109637:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010963a	obj/kernel.asm	/^c010963a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010963d	obj/kernel.asm	/^c010963d:	e8 87 f9 ff ff       	call   c0108fc9 <page_ref>$/;"	l
c0109642	obj/kernel.asm	/^c0109642:	85 c0                	test   %eax,%eax$/;"	l
c0109644	obj/kernel.asm	/^c0109644:	75 0f                	jne    c0109655 <basic_check+0x12d>$/;"	l
c0109646	obj/kernel.asm	/^c0109646:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109649	obj/kernel.asm	/^c0109649:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010964c	obj/kernel.asm	/^c010964c:	e8 78 f9 ff ff       	call   c0108fc9 <page_ref>$/;"	l
c0109651	obj/kernel.asm	/^c0109651:	85 c0                	test   %eax,%eax$/;"	l
c0109653	obj/kernel.asm	/^c0109653:	74 24                	je     c0109679 <basic_check+0x151>$/;"	l
c0109655	obj/kernel.asm	/^c0109655:	c7 44 24 0c 00 8e 11 	movl   $0xc0118e00,0xc(%esp)$/;"	l
c010965c	obj/kernel.asm	/^c010965c:	c0 $/;"	l
c010965d	obj/kernel.asm	/^c010965d:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109664	obj/kernel.asm	/^c0109664:	c0 $/;"	l
c0109665	obj/kernel.asm	/^c0109665:	c7 44 24 04 b2 00 00 	movl   $0xb2,0x4(%esp)$/;"	l
c010966c	obj/kernel.asm	/^c010966c:	00 $/;"	l
c010966d	obj/kernel.asm	/^c010966d:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109674	obj/kernel.asm	/^c0109674:	e8 be 75 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109679	obj/kernel.asm	/^c0109679:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010967c	obj/kernel.asm	/^c010967c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010967f	obj/kernel.asm	/^c010967f:	e8 2f f9 ff ff       	call   c0108fb3 <page2pa>$/;"	l
c0109684	obj/kernel.asm	/^c0109684:	8b 15 c0 7e 15 c0    	mov    0xc0157ec0,%edx$/;"	l
c010968a	obj/kernel.asm	/^c010968a:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c010968d	obj/kernel.asm	/^c010968d:	39 d0                	cmp    %edx,%eax$/;"	l
c010968f	obj/kernel.asm	/^c010968f:	72 24                	jb     c01096b5 <basic_check+0x18d>$/;"	l
c0109691	obj/kernel.asm	/^c0109691:	c7 44 24 0c 3c 8e 11 	movl   $0xc0118e3c,0xc(%esp)$/;"	l
c0109698	obj/kernel.asm	/^c0109698:	c0 $/;"	l
c0109699	obj/kernel.asm	/^c0109699:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01096a0	obj/kernel.asm	/^c01096a0:	c0 $/;"	l
c01096a1	obj/kernel.asm	/^c01096a1:	c7 44 24 04 b4 00 00 	movl   $0xb4,0x4(%esp)$/;"	l
c01096a8	obj/kernel.asm	/^c01096a8:	00 $/;"	l
c01096a9	obj/kernel.asm	/^c01096a9:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01096b0	obj/kernel.asm	/^c01096b0:	e8 82 75 ff ff       	call   c0100c37 <__panic>$/;"	l
c01096b5	obj/kernel.asm	/^c01096b5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096b8	obj/kernel.asm	/^c01096b8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01096bb	obj/kernel.asm	/^c01096bb:	e8 f3 f8 ff ff       	call   c0108fb3 <page2pa>$/;"	l
c01096c0	obj/kernel.asm	/^c01096c0:	8b 15 c0 7e 15 c0    	mov    0xc0157ec0,%edx$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c01096c9	obj/kernel.asm	/^c01096c9:	39 d0                	cmp    %edx,%eax$/;"	l
c01096cb	obj/kernel.asm	/^c01096cb:	72 24                	jb     c01096f1 <basic_check+0x1c9>$/;"	l
c01096cd	obj/kernel.asm	/^c01096cd:	c7 44 24 0c 59 8e 11 	movl   $0xc0118e59,0xc(%esp)$/;"	l
c01096d4	obj/kernel.asm	/^c01096d4:	c0 $/;"	l
c01096d5	obj/kernel.asm	/^c01096d5:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01096dc	obj/kernel.asm	/^c01096dc:	c0 $/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	c7 44 24 04 b5 00 00 	movl   $0xb5,0x4(%esp)$/;"	l
c01096e4	obj/kernel.asm	/^c01096e4:	00 $/;"	l
c01096e5	obj/kernel.asm	/^c01096e5:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01096ec	obj/kernel.asm	/^c01096ec:	e8 46 75 ff ff       	call   c0100c37 <__panic>$/;"	l
c01096f1	obj/kernel.asm	/^c01096f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096f4	obj/kernel.asm	/^c01096f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01096f7	obj/kernel.asm	/^c01096f7:	e8 b7 f8 ff ff       	call   c0108fb3 <page2pa>$/;"	l
c01096fc	obj/kernel.asm	/^c01096fc:	8b 15 c0 7e 15 c0    	mov    0xc0157ec0,%edx$/;"	l
c0109702	obj/kernel.asm	/^c0109702:	c1 e2 0c             	shl    $0xc,%edx$/;"	l
c0109705	obj/kernel.asm	/^c0109705:	39 d0                	cmp    %edx,%eax$/;"	l
c0109707	obj/kernel.asm	/^c0109707:	72 24                	jb     c010972d <basic_check+0x205>$/;"	l
c0109709	obj/kernel.asm	/^c0109709:	c7 44 24 0c 76 8e 11 	movl   $0xc0118e76,0xc(%esp)$/;"	l
c0109710	obj/kernel.asm	/^c0109710:	c0 $/;"	l
c0109711	obj/kernel.asm	/^c0109711:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109718	obj/kernel.asm	/^c0109718:	c0 $/;"	l
c0109719	obj/kernel.asm	/^c0109719:	c7 44 24 04 b6 00 00 	movl   $0xb6,0x4(%esp)$/;"	l
c0109720	obj/kernel.asm	/^c0109720:	00 $/;"	l
c0109721	obj/kernel.asm	/^c0109721:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109728	obj/kernel.asm	/^c0109728:	e8 0a 75 ff ff       	call   c0100c37 <__panic>$/;"	l
c010972d	obj/kernel.asm	/^c010972d:	a1 64 b7 15 c0       	mov    0xc015b764,%eax$/;"	l
c0109732	obj/kernel.asm	/^c0109732:	8b 15 68 b7 15 c0    	mov    0xc015b768,%edx$/;"	l
c0109738	obj/kernel.asm	/^c0109738:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010973b	obj/kernel.asm	/^c010973b:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010973e	obj/kernel.asm	/^c010973e:	c7 45 e0 64 b7 15 c0 	movl   $0xc015b764,-0x20(%ebp)$/;"	l
c0109745	obj/kernel.asm	/^c0109745:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109748	obj/kernel.asm	/^c0109748:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010974b	obj/kernel.asm	/^c010974b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010974e	obj/kernel.asm	/^c010974e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109751	obj/kernel.asm	/^c0109751:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109754	obj/kernel.asm	/^c0109754:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109757	obj/kernel.asm	/^c0109757:	89 10                	mov    %edx,(%eax)$/;"	l
c0109759	obj/kernel.asm	/^c0109759:	c7 45 dc 64 b7 15 c0 	movl   $0xc015b764,-0x24(%ebp)$/;"	l
c0109760	obj/kernel.asm	/^c0109760:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109763	obj/kernel.asm	/^c0109763:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109766	obj/kernel.asm	/^c0109766:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0109769	obj/kernel.asm	/^c0109769:	0f 94 c0             	sete   %al$/;"	l
c010976c	obj/kernel.asm	/^c010976c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010976f	obj/kernel.asm	/^c010976f:	85 c0                	test   %eax,%eax$/;"	l
c0109771	obj/kernel.asm	/^c0109771:	75 24                	jne    c0109797 <basic_check+0x26f>$/;"	l
c0109773	obj/kernel.asm	/^c0109773:	c7 44 24 0c 93 8e 11 	movl   $0xc0118e93,0xc(%esp)$/;"	l
c010977a	obj/kernel.asm	/^c010977a:	c0 $/;"	l
c010977b	obj/kernel.asm	/^c010977b:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109782	obj/kernel.asm	/^c0109782:	c0 $/;"	l
c0109783	obj/kernel.asm	/^c0109783:	c7 44 24 04 ba 00 00 	movl   $0xba,0x4(%esp)$/;"	l
c010978a	obj/kernel.asm	/^c010978a:	00 $/;"	l
c010978b	obj/kernel.asm	/^c010978b:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109792	obj/kernel.asm	/^c0109792:	e8 a0 74 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109797	obj/kernel.asm	/^c0109797:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c010979c	obj/kernel.asm	/^c010979c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010979f	obj/kernel.asm	/^c010979f:	c7 05 6c b7 15 c0 00 	movl   $0x0,0xc015b76c$/;"	l
c01097a6	obj/kernel.asm	/^c01097a6:	00 00 00 $/;"	l
c01097a9	obj/kernel.asm	/^c01097a9:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01097b0	obj/kernel.asm	/^c01097b0:	e8 da ae ff ff       	call   c010468f <alloc_pages>$/;"	l
c01097b5	obj/kernel.asm	/^c01097b5:	85 c0                	test   %eax,%eax$/;"	l
c01097b7	obj/kernel.asm	/^c01097b7:	74 24                	je     c01097dd <basic_check+0x2b5>$/;"	l
c01097b9	obj/kernel.asm	/^c01097b9:	c7 44 24 0c aa 8e 11 	movl   $0xc0118eaa,0xc(%esp)$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	c0 $/;"	l
c01097c1	obj/kernel.asm	/^c01097c1:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01097c8	obj/kernel.asm	/^c01097c8:	c0 $/;"	l
c01097c9	obj/kernel.asm	/^c01097c9:	c7 44 24 04 bf 00 00 	movl   $0xbf,0x4(%esp)$/;"	l
c01097d0	obj/kernel.asm	/^c01097d0:	00 $/;"	l
c01097d1	obj/kernel.asm	/^c01097d1:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01097d8	obj/kernel.asm	/^c01097d8:	e8 5a 74 ff ff       	call   c0100c37 <__panic>$/;"	l
c01097dd	obj/kernel.asm	/^c01097dd:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01097e4	obj/kernel.asm	/^c01097e4:	00 $/;"	l
c01097e5	obj/kernel.asm	/^c01097e5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01097e8	obj/kernel.asm	/^c01097e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01097eb	obj/kernel.asm	/^c01097eb:	e8 0a af ff ff       	call   c01046fa <free_pages>$/;"	l
c01097f0	obj/kernel.asm	/^c01097f0:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c01097f7	obj/kernel.asm	/^c01097f7:	00 $/;"	l
c01097f8	obj/kernel.asm	/^c01097f8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01097fb	obj/kernel.asm	/^c01097fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01097fe	obj/kernel.asm	/^c01097fe:	e8 f7 ae ff ff       	call   c01046fa <free_pages>$/;"	l
c0109803	obj/kernel.asm	/^c0109803:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010980a	obj/kernel.asm	/^c010980a:	00 $/;"	l
c010980b	obj/kernel.asm	/^c010980b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010980e	obj/kernel.asm	/^c010980e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109811	obj/kernel.asm	/^c0109811:	e8 e4 ae ff ff       	call   c01046fa <free_pages>$/;"	l
c0109816	obj/kernel.asm	/^c0109816:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c010981b	obj/kernel.asm	/^c010981b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010981e	obj/kernel.asm	/^c010981e:	74 24                	je     c0109844 <basic_check+0x31c>$/;"	l
c0109820	obj/kernel.asm	/^c0109820:	c7 44 24 0c bf 8e 11 	movl   $0xc0118ebf,0xc(%esp)$/;"	l
c0109827	obj/kernel.asm	/^c0109827:	c0 $/;"	l
c0109828	obj/kernel.asm	/^c0109828:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010982f	obj/kernel.asm	/^c010982f:	c0 $/;"	l
c0109830	obj/kernel.asm	/^c0109830:	c7 44 24 04 c4 00 00 	movl   $0xc4,0x4(%esp)$/;"	l
c0109837	obj/kernel.asm	/^c0109837:	00 $/;"	l
c0109838	obj/kernel.asm	/^c0109838:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c010983f	obj/kernel.asm	/^c010983f:	e8 f3 73 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109844	obj/kernel.asm	/^c0109844:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010984b	obj/kernel.asm	/^c010984b:	e8 3f ae ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109850	obj/kernel.asm	/^c0109850:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109853	obj/kernel.asm	/^c0109853:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109857	obj/kernel.asm	/^c0109857:	75 24                	jne    c010987d <basic_check+0x355>$/;"	l
c0109859	obj/kernel.asm	/^c0109859:	c7 44 24 0c 88 8d 11 	movl   $0xc0118d88,0xc(%esp)$/;"	l
c0109860	obj/kernel.asm	/^c0109860:	c0 $/;"	l
c0109861	obj/kernel.asm	/^c0109861:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109868	obj/kernel.asm	/^c0109868:	c0 $/;"	l
c0109869	obj/kernel.asm	/^c0109869:	c7 44 24 04 c6 00 00 	movl   $0xc6,0x4(%esp)$/;"	l
c0109870	obj/kernel.asm	/^c0109870:	00 $/;"	l
c0109871	obj/kernel.asm	/^c0109871:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109878	obj/kernel.asm	/^c0109878:	e8 ba 73 ff ff       	call   c0100c37 <__panic>$/;"	l
c010987d	obj/kernel.asm	/^c010987d:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109884	obj/kernel.asm	/^c0109884:	e8 06 ae ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109889	obj/kernel.asm	/^c0109889:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010988c	obj/kernel.asm	/^c010988c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	75 24                	jne    c01098b6 <basic_check+0x38e>$/;"	l
c0109892	obj/kernel.asm	/^c0109892:	c7 44 24 0c a4 8d 11 	movl   $0xc0118da4,0xc(%esp)$/;"	l
c0109899	obj/kernel.asm	/^c0109899:	c0 $/;"	l
c010989a	obj/kernel.asm	/^c010989a:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01098a1	obj/kernel.asm	/^c01098a1:	c0 $/;"	l
c01098a2	obj/kernel.asm	/^c01098a2:	c7 44 24 04 c7 00 00 	movl   $0xc7,0x4(%esp)$/;"	l
c01098a9	obj/kernel.asm	/^c01098a9:	00 $/;"	l
c01098aa	obj/kernel.asm	/^c01098aa:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01098b1	obj/kernel.asm	/^c01098b1:	e8 81 73 ff ff       	call   c0100c37 <__panic>$/;"	l
c01098b6	obj/kernel.asm	/^c01098b6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01098bd	obj/kernel.asm	/^c01098bd:	e8 cd ad ff ff       	call   c010468f <alloc_pages>$/;"	l
c01098c2	obj/kernel.asm	/^c01098c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01098c5	obj/kernel.asm	/^c01098c5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01098c9	obj/kernel.asm	/^c01098c9:	75 24                	jne    c01098ef <basic_check+0x3c7>$/;"	l
c01098cb	obj/kernel.asm	/^c01098cb:	c7 44 24 0c c0 8d 11 	movl   $0xc0118dc0,0xc(%esp)$/;"	l
c01098d2	obj/kernel.asm	/^c01098d2:	c0 $/;"	l
c01098d3	obj/kernel.asm	/^c01098d3:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01098da	obj/kernel.asm	/^c01098da:	c0 $/;"	l
c01098db	obj/kernel.asm	/^c01098db:	c7 44 24 04 c8 00 00 	movl   $0xc8,0x4(%esp)$/;"	l
c01098e2	obj/kernel.asm	/^c01098e2:	00 $/;"	l
c01098e3	obj/kernel.asm	/^c01098e3:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01098ea	obj/kernel.asm	/^c01098ea:	e8 48 73 ff ff       	call   c0100c37 <__panic>$/;"	l
c01098ef	obj/kernel.asm	/^c01098ef:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01098f6	obj/kernel.asm	/^c01098f6:	e8 94 ad ff ff       	call   c010468f <alloc_pages>$/;"	l
c01098fb	obj/kernel.asm	/^c01098fb:	85 c0                	test   %eax,%eax$/;"	l
c01098fd	obj/kernel.asm	/^c01098fd:	74 24                	je     c0109923 <basic_check+0x3fb>$/;"	l
c01098ff	obj/kernel.asm	/^c01098ff:	c7 44 24 0c aa 8e 11 	movl   $0xc0118eaa,0xc(%esp)$/;"	l
c0109906	obj/kernel.asm	/^c0109906:	c0 $/;"	l
c0109907	obj/kernel.asm	/^c0109907:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010990e	obj/kernel.asm	/^c010990e:	c0 $/;"	l
c010990f	obj/kernel.asm	/^c010990f:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0109916	obj/kernel.asm	/^c0109916:	00 $/;"	l
c0109917	obj/kernel.asm	/^c0109917:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c010991e	obj/kernel.asm	/^c010991e:	e8 14 73 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109923	obj/kernel.asm	/^c0109923:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010992a	obj/kernel.asm	/^c010992a:	00 $/;"	l
c010992b	obj/kernel.asm	/^c010992b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010992e	obj/kernel.asm	/^c010992e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109931	obj/kernel.asm	/^c0109931:	e8 c4 ad ff ff       	call   c01046fa <free_pages>$/;"	l
c0109936	obj/kernel.asm	/^c0109936:	c7 45 d8 64 b7 15 c0 	movl   $0xc015b764,-0x28(%ebp)$/;"	l
c010993d	obj/kernel.asm	/^c010993d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109940	obj/kernel.asm	/^c0109940:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109943	obj/kernel.asm	/^c0109943:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0109946	obj/kernel.asm	/^c0109946:	0f 94 c0             	sete   %al$/;"	l
c0109949	obj/kernel.asm	/^c0109949:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010994c	obj/kernel.asm	/^c010994c:	85 c0                	test   %eax,%eax$/;"	l
c010994e	obj/kernel.asm	/^c010994e:	74 24                	je     c0109974 <basic_check+0x44c>$/;"	l
c0109950	obj/kernel.asm	/^c0109950:	c7 44 24 0c cc 8e 11 	movl   $0xc0118ecc,0xc(%esp)$/;"	l
c0109957	obj/kernel.asm	/^c0109957:	c0 $/;"	l
c0109958	obj/kernel.asm	/^c0109958:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010995f	obj/kernel.asm	/^c010995f:	c0 $/;"	l
c0109960	obj/kernel.asm	/^c0109960:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c0109967	obj/kernel.asm	/^c0109967:	00 $/;"	l
c0109968	obj/kernel.asm	/^c0109968:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c010996f	obj/kernel.asm	/^c010996f:	e8 c3 72 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109974	obj/kernel.asm	/^c0109974:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010997b	obj/kernel.asm	/^c010997b:	e8 0f ad ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109980	obj/kernel.asm	/^c0109980:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109983	obj/kernel.asm	/^c0109983:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109986	obj/kernel.asm	/^c0109986:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0109989	obj/kernel.asm	/^c0109989:	74 24                	je     c01099af <basic_check+0x487>$/;"	l
c010998b	obj/kernel.asm	/^c010998b:	c7 44 24 0c e4 8e 11 	movl   $0xc0118ee4,0xc(%esp)$/;"	l
c0109992	obj/kernel.asm	/^c0109992:	c0 $/;"	l
c0109993	obj/kernel.asm	/^c0109993:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010999a	obj/kernel.asm	/^c010999a:	c0 $/;"	l
c010999b	obj/kernel.asm	/^c010999b:	c7 44 24 04 d0 00 00 	movl   $0xd0,0x4(%esp)$/;"	l
c01099a2	obj/kernel.asm	/^c01099a2:	00 $/;"	l
c01099a3	obj/kernel.asm	/^c01099a3:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01099aa	obj/kernel.asm	/^c01099aa:	e8 88 72 ff ff       	call   c0100c37 <__panic>$/;"	l
c01099af	obj/kernel.asm	/^c01099af:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01099b6	obj/kernel.asm	/^c01099b6:	e8 d4 ac ff ff       	call   c010468f <alloc_pages>$/;"	l
c01099bb	obj/kernel.asm	/^c01099bb:	85 c0                	test   %eax,%eax$/;"	l
c01099bd	obj/kernel.asm	/^c01099bd:	74 24                	je     c01099e3 <basic_check+0x4bb>$/;"	l
c01099bf	obj/kernel.asm	/^c01099bf:	c7 44 24 0c aa 8e 11 	movl   $0xc0118eaa,0xc(%esp)$/;"	l
c01099c6	obj/kernel.asm	/^c01099c6:	c0 $/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01099ce	obj/kernel.asm	/^c01099ce:	c0 $/;"	l
c01099cf	obj/kernel.asm	/^c01099cf:	c7 44 24 04 d1 00 00 	movl   $0xd1,0x4(%esp)$/;"	l
c01099d6	obj/kernel.asm	/^c01099d6:	00 $/;"	l
c01099d7	obj/kernel.asm	/^c01099d7:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c01099de	obj/kernel.asm	/^c01099de:	e8 54 72 ff ff       	call   c0100c37 <__panic>$/;"	l
c01099e3	obj/kernel.asm	/^c01099e3:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c01099e8	obj/kernel.asm	/^c01099e8:	85 c0                	test   %eax,%eax$/;"	l
c01099ea	obj/kernel.asm	/^c01099ea:	74 24                	je     c0109a10 <basic_check+0x4e8>$/;"	l
c01099ec	obj/kernel.asm	/^c01099ec:	c7 44 24 0c fd 8e 11 	movl   $0xc0118efd,0xc(%esp)$/;"	l
c01099f3	obj/kernel.asm	/^c01099f3:	c0 $/;"	l
c01099f4	obj/kernel.asm	/^c01099f4:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c01099fb	obj/kernel.asm	/^c01099fb:	c0 $/;"	l
c01099fc	obj/kernel.asm	/^c01099fc:	c7 44 24 04 d3 00 00 	movl   $0xd3,0x4(%esp)$/;"	l
c0109a03	obj/kernel.asm	/^c0109a03:	00 $/;"	l
c0109a04	obj/kernel.asm	/^c0109a04:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109a0b	obj/kernel.asm	/^c0109a0b:	e8 27 72 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109a10	obj/kernel.asm	/^c0109a10:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109a13	obj/kernel.asm	/^c0109a13:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0109a16	obj/kernel.asm	/^c0109a16:	a3 64 b7 15 c0       	mov    %eax,0xc015b764$/;"	l
c0109a1b	obj/kernel.asm	/^c0109a1b:	89 15 68 b7 15 c0    	mov    %edx,0xc015b768$/;"	l
c0109a21	obj/kernel.asm	/^c0109a21:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109a24	obj/kernel.asm	/^c0109a24:	a3 6c b7 15 c0       	mov    %eax,0xc015b76c$/;"	l
c0109a29	obj/kernel.asm	/^c0109a29:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109a30	obj/kernel.asm	/^c0109a30:	00 $/;"	l
c0109a31	obj/kernel.asm	/^c0109a31:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109a34	obj/kernel.asm	/^c0109a34:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a37	obj/kernel.asm	/^c0109a37:	e8 be ac ff ff       	call   c01046fa <free_pages>$/;"	l
c0109a3c	obj/kernel.asm	/^c0109a3c:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109a43	obj/kernel.asm	/^c0109a43:	00 $/;"	l
c0109a44	obj/kernel.asm	/^c0109a44:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109a47	obj/kernel.asm	/^c0109a47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a4a	obj/kernel.asm	/^c0109a4a:	e8 ab ac ff ff       	call   c01046fa <free_pages>$/;"	l
c0109a4f	obj/kernel.asm	/^c0109a4f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109a56	obj/kernel.asm	/^c0109a56:	00 $/;"	l
c0109a57	obj/kernel.asm	/^c0109a57:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a5a	obj/kernel.asm	/^c0109a5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109a5d	obj/kernel.asm	/^c0109a5d:	e8 98 ac ff ff       	call   c01046fa <free_pages>$/;"	l
c0109a62	obj/kernel.asm	/^c0109a62:	c9                   	leave  $/;"	l
c0109a63	obj/kernel.asm	/^c0109a63:	c3                   	ret    $/;"	l
c0109a64	obj/kernel.asm	/^c0109a64 <default_check>:$/;"	l
c0109a64	obj/kernel.asm	/^c0109a64:	55                   	push   %ebp$/;"	l
c0109a65	obj/kernel.asm	/^c0109a65:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a67	obj/kernel.asm	/^c0109a67:	53                   	push   %ebx$/;"	l
c0109a68	obj/kernel.asm	/^c0109a68:	81 ec 94 00 00 00    	sub    $0x94,%esp$/;"	l
c0109a6e	obj/kernel.asm	/^c0109a6e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109a75	obj/kernel.asm	/^c0109a75:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109a7c	obj/kernel.asm	/^c0109a7c:	c7 45 ec 64 b7 15 c0 	movl   $0xc015b764,-0x14(%ebp)$/;"	l
c0109a83	obj/kernel.asm	/^c0109a83:	eb 6b                	jmp    c0109af0 <default_check+0x8c>$/;"	l
c0109a85	obj/kernel.asm	/^c0109a85:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a88	obj/kernel.asm	/^c0109a88:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0109a8b	obj/kernel.asm	/^c0109a8b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109a8e	obj/kernel.asm	/^c0109a8e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109a91	obj/kernel.asm	/^c0109a91:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109a94	obj/kernel.asm	/^c0109a94:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c0109a9b	obj/kernel.asm	/^c0109a9b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0109a9e	obj/kernel.asm	/^c0109a9e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109aa1	obj/kernel.asm	/^c0109aa1:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0109aa4	obj/kernel.asm	/^c0109aa4:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109aa7	obj/kernel.asm	/^c0109aa7:	19 c0                	sbb    %eax,%eax$/;"	l
c0109aa9	obj/kernel.asm	/^c0109aa9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0109ab0	obj/kernel.asm	/^c0109ab0:	0f 95 c0             	setne  %al$/;"	l
c0109ab3	obj/kernel.asm	/^c0109ab3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109ab6	obj/kernel.asm	/^c0109ab6:	85 c0                	test   %eax,%eax$/;"	l
c0109ab8	obj/kernel.asm	/^c0109ab8:	75 24                	jne    c0109ade <default_check+0x7a>$/;"	l
c0109aba	obj/kernel.asm	/^c0109aba:	c7 44 24 0c 0a 8f 11 	movl   $0xc0118f0a,0xc(%esp)$/;"	l
c0109ac1	obj/kernel.asm	/^c0109ac1:	c0 $/;"	l
c0109ac2	obj/kernel.asm	/^c0109ac2:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109ac9	obj/kernel.asm	/^c0109ac9:	c0 $/;"	l
c0109aca	obj/kernel.asm	/^c0109aca:	c7 44 24 04 e4 00 00 	movl   $0xe4,0x4(%esp)$/;"	l
c0109ad1	obj/kernel.asm	/^c0109ad1:	00 $/;"	l
c0109ad2	obj/kernel.asm	/^c0109ad2:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109ad9	obj/kernel.asm	/^c0109ad9:	e8 59 71 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109ade	obj/kernel.asm	/^c0109ade:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0109ae2	obj/kernel.asm	/^c0109ae2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109ae5	obj/kernel.asm	/^c0109ae5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109aeb	obj/kernel.asm	/^c0109aeb:	01 d0                	add    %edx,%eax$/;"	l
c0109aed	obj/kernel.asm	/^c0109aed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109af0	obj/kernel.asm	/^c0109af0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109af3	obj/kernel.asm	/^c0109af3:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0109af6	obj/kernel.asm	/^c0109af6:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0109af9	obj/kernel.asm	/^c0109af9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109afc	obj/kernel.asm	/^c0109afc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109aff	obj/kernel.asm	/^c0109aff:	81 7d ec 64 b7 15 c0 	cmpl   $0xc015b764,-0x14(%ebp)$/;"	l
c0109b06	obj/kernel.asm	/^c0109b06:	0f 85 79 ff ff ff    	jne    c0109a85 <default_check+0x21>$/;"	l
c0109b0c	obj/kernel.asm	/^c0109b0c:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0109b0f	obj/kernel.asm	/^c0109b0f:	e8 18 ac ff ff       	call   c010472c <nr_free_pages>$/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	39 c3                	cmp    %eax,%ebx$/;"	l
c0109b16	obj/kernel.asm	/^c0109b16:	74 24                	je     c0109b3c <default_check+0xd8>$/;"	l
c0109b18	obj/kernel.asm	/^c0109b18:	c7 44 24 0c 1a 8f 11 	movl   $0xc0118f1a,0xc(%esp)$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	c0 $/;"	l
c0109b20	obj/kernel.asm	/^c0109b20:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109b27	obj/kernel.asm	/^c0109b27:	c0 $/;"	l
c0109b28	obj/kernel.asm	/^c0109b28:	c7 44 24 04 e7 00 00 	movl   $0xe7,0x4(%esp)$/;"	l
c0109b2f	obj/kernel.asm	/^c0109b2f:	00 $/;"	l
c0109b30	obj/kernel.asm	/^c0109b30:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109b37	obj/kernel.asm	/^c0109b37:	e8 fb 70 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109b3c	obj/kernel.asm	/^c0109b3c:	e8 e7 f9 ff ff       	call   c0109528 <basic_check>$/;"	l
c0109b41	obj/kernel.asm	/^c0109b41:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c0109b48	obj/kernel.asm	/^c0109b48:	e8 42 ab ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109b4d	obj/kernel.asm	/^c0109b4d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109b50	obj/kernel.asm	/^c0109b50:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0109b54	obj/kernel.asm	/^c0109b54:	75 24                	jne    c0109b7a <default_check+0x116>$/;"	l
c0109b56	obj/kernel.asm	/^c0109b56:	c7 44 24 0c 33 8f 11 	movl   $0xc0118f33,0xc(%esp)$/;"	l
c0109b5d	obj/kernel.asm	/^c0109b5d:	c0 $/;"	l
c0109b5e	obj/kernel.asm	/^c0109b5e:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109b65	obj/kernel.asm	/^c0109b65:	c0 $/;"	l
c0109b66	obj/kernel.asm	/^c0109b66:	c7 44 24 04 ec 00 00 	movl   $0xec,0x4(%esp)$/;"	l
c0109b6d	obj/kernel.asm	/^c0109b6d:	00 $/;"	l
c0109b6e	obj/kernel.asm	/^c0109b6e:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109b75	obj/kernel.asm	/^c0109b75:	e8 bd 70 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109b7a	obj/kernel.asm	/^c0109b7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b7d	obj/kernel.asm	/^c0109b7d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109b80	obj/kernel.asm	/^c0109b80:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0109b87	obj/kernel.asm	/^c0109b87:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109b8a	obj/kernel.asm	/^c0109b8a:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109b8d	obj/kernel.asm	/^c0109b8d:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0109b90	obj/kernel.asm	/^c0109b90:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109b93	obj/kernel.asm	/^c0109b93:	19 c0                	sbb    %eax,%eax$/;"	l
c0109b95	obj/kernel.asm	/^c0109b95:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0109b98	obj/kernel.asm	/^c0109b98:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c0109b9c	obj/kernel.asm	/^c0109b9c:	0f 95 c0             	setne  %al$/;"	l
c0109b9f	obj/kernel.asm	/^c0109b9f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109ba2	obj/kernel.asm	/^c0109ba2:	85 c0                	test   %eax,%eax$/;"	l
c0109ba4	obj/kernel.asm	/^c0109ba4:	74 24                	je     c0109bca <default_check+0x166>$/;"	l
c0109ba6	obj/kernel.asm	/^c0109ba6:	c7 44 24 0c 3e 8f 11 	movl   $0xc0118f3e,0xc(%esp)$/;"	l
c0109bad	obj/kernel.asm	/^c0109bad:	c0 $/;"	l
c0109bae	obj/kernel.asm	/^c0109bae:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109bb5	obj/kernel.asm	/^c0109bb5:	c0 $/;"	l
c0109bb6	obj/kernel.asm	/^c0109bb6:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c0109bbd	obj/kernel.asm	/^c0109bbd:	00 $/;"	l
c0109bbe	obj/kernel.asm	/^c0109bbe:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109bc5	obj/kernel.asm	/^c0109bc5:	e8 6d 70 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109bca	obj/kernel.asm	/^c0109bca:	a1 64 b7 15 c0       	mov    0xc015b764,%eax$/;"	l
c0109bcf	obj/kernel.asm	/^c0109bcf:	8b 15 68 b7 15 c0    	mov    0xc015b768,%edx$/;"	l
c0109bd5	obj/kernel.asm	/^c0109bd5:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c0109bd8	obj/kernel.asm	/^c0109bd8:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0109bdb	obj/kernel.asm	/^c0109bdb:	c7 45 b4 64 b7 15 c0 	movl   $0xc015b764,-0x4c(%ebp)$/;"	l
c0109be2	obj/kernel.asm	/^c0109be2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0109be5	obj/kernel.asm	/^c0109be5:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0109be8	obj/kernel.asm	/^c0109be8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109beb	obj/kernel.asm	/^c0109beb:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0109bee	obj/kernel.asm	/^c0109bee:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109bf1	obj/kernel.asm	/^c0109bf1:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0109bf4	obj/kernel.asm	/^c0109bf4:	89 10                	mov    %edx,(%eax)$/;"	l
c0109bf6	obj/kernel.asm	/^c0109bf6:	c7 45 b0 64 b7 15 c0 	movl   $0xc015b764,-0x50(%ebp)$/;"	l
c0109bfd	obj/kernel.asm	/^c0109bfd:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109c00	obj/kernel.asm	/^c0109c00:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109c03	obj/kernel.asm	/^c0109c03:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0109c06	obj/kernel.asm	/^c0109c06:	0f 94 c0             	sete   %al$/;"	l
c0109c09	obj/kernel.asm	/^c0109c09:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109c0c	obj/kernel.asm	/^c0109c0c:	85 c0                	test   %eax,%eax$/;"	l
c0109c0e	obj/kernel.asm	/^c0109c0e:	75 24                	jne    c0109c34 <default_check+0x1d0>$/;"	l
c0109c10	obj/kernel.asm	/^c0109c10:	c7 44 24 0c 93 8e 11 	movl   $0xc0118e93,0xc(%esp)$/;"	l
c0109c17	obj/kernel.asm	/^c0109c17:	c0 $/;"	l
c0109c18	obj/kernel.asm	/^c0109c18:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109c1f	obj/kernel.asm	/^c0109c1f:	c0 $/;"	l
c0109c20	obj/kernel.asm	/^c0109c20:	c7 44 24 04 f1 00 00 	movl   $0xf1,0x4(%esp)$/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	00 $/;"	l
c0109c28	obj/kernel.asm	/^c0109c28:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109c2f	obj/kernel.asm	/^c0109c2f:	e8 03 70 ff ff       	call   c0100c37 <__panic>$/;"	l
c0109c34	obj/kernel.asm	/^c0109c34:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109c3b	obj/kernel.asm	/^c0109c3b:	e8 4f aa ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	85 c0                	test   %eax,%eax$/;"	l
c0109c42	obj/kernel.asm	/^c0109c42:	74 24                	je     c0109c68 <default_check+0x204>$/;"	l
c0109c44	obj/kernel.asm	/^c0109c44:	c7 44 24 0c aa 8e 11 	movl   $0xc0118eaa,0xc(%esp)$/;"	l
c0109c4b	obj/kernel.asm	/^c0109c4b:	c0 $/;"	l
c0109c4c	obj/kernel.asm	/^c0109c4c:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109c53	obj/kernel.asm	/^c0109c53:	c0 $/;"	l
c0109c54	obj/kernel.asm	/^c0109c54:	c7 44 24 04 f2 00 00 	movl   $0xf2,0x4(%esp)$/;"	l
c0109c5b	obj/kernel.asm	/^c0109c5b:	00 $/;"	l
c0109c5c	obj/kernel.asm	/^c0109c5c:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109c63	obj/kernel.asm	/^c0109c63:	e8 cf 6f ff ff       	call   c0100c37 <__panic>$/;"	l
c0109c68	obj/kernel.asm	/^c0109c68:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0109c6d	obj/kernel.asm	/^c0109c6d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109c70	obj/kernel.asm	/^c0109c70:	c7 05 6c b7 15 c0 00 	movl   $0x0,0xc015b76c$/;"	l
c0109c77	obj/kernel.asm	/^c0109c77:	00 00 00 $/;"	l
c0109c7a	obj/kernel.asm	/^c0109c7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109c7d	obj/kernel.asm	/^c0109c7d:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109c80	obj/kernel.asm	/^c0109c80:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c0109c87	obj/kernel.asm	/^c0109c87:	00 $/;"	l
c0109c88	obj/kernel.asm	/^c0109c88:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109c8b	obj/kernel.asm	/^c0109c8b:	e8 6a aa ff ff       	call   c01046fa <free_pages>$/;"	l
c0109c90	obj/kernel.asm	/^c0109c90:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0109c97	obj/kernel.asm	/^c0109c97:	e8 f3 a9 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109c9c	obj/kernel.asm	/^c0109c9c:	85 c0                	test   %eax,%eax$/;"	l
c0109c9e	obj/kernel.asm	/^c0109c9e:	74 24                	je     c0109cc4 <default_check+0x260>$/;"	l
c0109ca0	obj/kernel.asm	/^c0109ca0:	c7 44 24 0c 50 8f 11 	movl   $0xc0118f50,0xc(%esp)$/;"	l
c0109ca7	obj/kernel.asm	/^c0109ca7:	c0 $/;"	l
c0109ca8	obj/kernel.asm	/^c0109ca8:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109caf	obj/kernel.asm	/^c0109caf:	c0 $/;"	l
c0109cb0	obj/kernel.asm	/^c0109cb0:	c7 44 24 04 f8 00 00 	movl   $0xf8,0x4(%esp)$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	00 $/;"	l
c0109cb8	obj/kernel.asm	/^c0109cb8:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	e8 73 6f ff ff       	call   c0100c37 <__panic>$/;"	l
c0109cc4	obj/kernel.asm	/^c0109cc4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109cc7	obj/kernel.asm	/^c0109cc7:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109cca	obj/kernel.asm	/^c0109cca:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109ccd	obj/kernel.asm	/^c0109ccd:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c0109cd4	obj/kernel.asm	/^c0109cd4:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0109cd7	obj/kernel.asm	/^c0109cd7:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0109cda	obj/kernel.asm	/^c0109cda:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0109cdd	obj/kernel.asm	/^c0109cdd:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109ce0	obj/kernel.asm	/^c0109ce0:	19 c0                	sbb    %eax,%eax$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c0109ce9	obj/kernel.asm	/^c0109ce9:	0f 95 c0             	setne  %al$/;"	l
c0109cec	obj/kernel.asm	/^c0109cec:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109cef	obj/kernel.asm	/^c0109cef:	85 c0                	test   %eax,%eax$/;"	l
c0109cf1	obj/kernel.asm	/^c0109cf1:	74 0e                	je     c0109d01 <default_check+0x29d>$/;"	l
c0109cf3	obj/kernel.asm	/^c0109cf3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109cf6	obj/kernel.asm	/^c0109cf6:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109cf9	obj/kernel.asm	/^c0109cf9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109cfc	obj/kernel.asm	/^c0109cfc:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109cff	obj/kernel.asm	/^c0109cff:	74 24                	je     c0109d25 <default_check+0x2c1>$/;"	l
c0109d01	obj/kernel.asm	/^c0109d01:	c7 44 24 0c 68 8f 11 	movl   $0xc0118f68,0xc(%esp)$/;"	l
c0109d08	obj/kernel.asm	/^c0109d08:	c0 $/;"	l
c0109d09	obj/kernel.asm	/^c0109d09:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109d10	obj/kernel.asm	/^c0109d10:	c0 $/;"	l
c0109d11	obj/kernel.asm	/^c0109d11:	c7 44 24 04 f9 00 00 	movl   $0xf9,0x4(%esp)$/;"	l
c0109d18	obj/kernel.asm	/^c0109d18:	00 $/;"	l
c0109d19	obj/kernel.asm	/^c0109d19:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109d20	obj/kernel.asm	/^c0109d20:	e8 12 6f ff ff       	call   c0100c37 <__panic>$/;"	l
c0109d25	obj/kernel.asm	/^c0109d25:	c7 04 24 03 00 00 00 	movl   $0x3,(%esp)$/;"	l
c0109d2c	obj/kernel.asm	/^c0109d2c:	e8 5e a9 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109d31	obj/kernel.asm	/^c0109d31:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109d34	obj/kernel.asm	/^c0109d34:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0109d38	obj/kernel.asm	/^c0109d38:	75 24                	jne    c0109d5e <default_check+0x2fa>$/;"	l
c0109d3a	obj/kernel.asm	/^c0109d3a:	c7 44 24 0c 94 8f 11 	movl   $0xc0118f94,0xc(%esp)$/;"	l
c0109d41	obj/kernel.asm	/^c0109d41:	c0 $/;"	l
c0109d42	obj/kernel.asm	/^c0109d42:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109d49	obj/kernel.asm	/^c0109d49:	c0 $/;"	l
c0109d4a	obj/kernel.asm	/^c0109d4a:	c7 44 24 04 fa 00 00 	movl   $0xfa,0x4(%esp)$/;"	l
c0109d51	obj/kernel.asm	/^c0109d51:	00 $/;"	l
c0109d52	obj/kernel.asm	/^c0109d52:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109d59	obj/kernel.asm	/^c0109d59:	e8 d9 6e ff ff       	call   c0100c37 <__panic>$/;"	l
c0109d5e	obj/kernel.asm	/^c0109d5e:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109d65	obj/kernel.asm	/^c0109d65:	e8 25 a9 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109d6a	obj/kernel.asm	/^c0109d6a:	85 c0                	test   %eax,%eax$/;"	l
c0109d6c	obj/kernel.asm	/^c0109d6c:	74 24                	je     c0109d92 <default_check+0x32e>$/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	c7 44 24 0c aa 8e 11 	movl   $0xc0118eaa,0xc(%esp)$/;"	l
c0109d75	obj/kernel.asm	/^c0109d75:	c0 $/;"	l
c0109d76	obj/kernel.asm	/^c0109d76:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109d7d	obj/kernel.asm	/^c0109d7d:	c0 $/;"	l
c0109d7e	obj/kernel.asm	/^c0109d7e:	c7 44 24 04 fb 00 00 	movl   $0xfb,0x4(%esp)$/;"	l
c0109d85	obj/kernel.asm	/^c0109d85:	00 $/;"	l
c0109d86	obj/kernel.asm	/^c0109d86:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109d8d	obj/kernel.asm	/^c0109d8d:	e8 a5 6e ff ff       	call   c0100c37 <__panic>$/;"	l
c0109d92	obj/kernel.asm	/^c0109d92:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d95	obj/kernel.asm	/^c0109d95:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109d98	obj/kernel.asm	/^c0109d98:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0109d9b	obj/kernel.asm	/^c0109d9b:	74 24                	je     c0109dc1 <default_check+0x35d>$/;"	l
c0109d9d	obj/kernel.asm	/^c0109d9d:	c7 44 24 0c b2 8f 11 	movl   $0xc0118fb2,0xc(%esp)$/;"	l
c0109da4	obj/kernel.asm	/^c0109da4:	c0 $/;"	l
c0109da5	obj/kernel.asm	/^c0109da5:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109dac	obj/kernel.asm	/^c0109dac:	c0 $/;"	l
c0109dad	obj/kernel.asm	/^c0109dad:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c0109db4	obj/kernel.asm	/^c0109db4:	00 $/;"	l
c0109db5	obj/kernel.asm	/^c0109db5:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109dbc	obj/kernel.asm	/^c0109dbc:	e8 76 6e ff ff       	call   c0100c37 <__panic>$/;"	l
c0109dc1	obj/kernel.asm	/^c0109dc1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109dc4	obj/kernel.asm	/^c0109dc4:	83 c0 24             	add    $0x24,%eax$/;"	l
c0109dc7	obj/kernel.asm	/^c0109dc7:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0109dca	obj/kernel.asm	/^c0109dca:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109dd1	obj/kernel.asm	/^c0109dd1:	00 $/;"	l
c0109dd2	obj/kernel.asm	/^c0109dd2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109dd5	obj/kernel.asm	/^c0109dd5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109dd8	obj/kernel.asm	/^c0109dd8:	e8 1d a9 ff ff       	call   c01046fa <free_pages>$/;"	l
c0109ddd	obj/kernel.asm	/^c0109ddd:	c7 44 24 04 03 00 00 	movl   $0x3,0x4(%esp)$/;"	l
c0109de4	obj/kernel.asm	/^c0109de4:	00 $/;"	l
c0109de5	obj/kernel.asm	/^c0109de5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109de8	obj/kernel.asm	/^c0109de8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109deb	obj/kernel.asm	/^c0109deb:	e8 0a a9 ff ff       	call   c01046fa <free_pages>$/;"	l
c0109df0	obj/kernel.asm	/^c0109df0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109df3	obj/kernel.asm	/^c0109df3:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109df6	obj/kernel.asm	/^c0109df6:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0109dfd	obj/kernel.asm	/^c0109dfd:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0109e00	obj/kernel.asm	/^c0109e00:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0109e03	obj/kernel.asm	/^c0109e03:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0109e06	obj/kernel.asm	/^c0109e06:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109e09	obj/kernel.asm	/^c0109e09:	19 c0                	sbb    %eax,%eax$/;"	l
c0109e0b	obj/kernel.asm	/^c0109e0b:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0109e0e	obj/kernel.asm	/^c0109e0e:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c0109e12	obj/kernel.asm	/^c0109e12:	0f 95 c0             	setne  %al$/;"	l
c0109e15	obj/kernel.asm	/^c0109e15:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109e18	obj/kernel.asm	/^c0109e18:	85 c0                	test   %eax,%eax$/;"	l
c0109e1a	obj/kernel.asm	/^c0109e1a:	74 0b                	je     c0109e27 <default_check+0x3c3>$/;"	l
c0109e1c	obj/kernel.asm	/^c0109e1c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109e1f	obj/kernel.asm	/^c0109e1f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109e22	obj/kernel.asm	/^c0109e22:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0109e25	obj/kernel.asm	/^c0109e25:	74 24                	je     c0109e4b <default_check+0x3e7>$/;"	l
c0109e27	obj/kernel.asm	/^c0109e27:	c7 44 24 0c c0 8f 11 	movl   $0xc0118fc0,0xc(%esp)$/;"	l
c0109e2e	obj/kernel.asm	/^c0109e2e:	c0 $/;"	l
c0109e2f	obj/kernel.asm	/^c0109e2f:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109e36	obj/kernel.asm	/^c0109e36:	c0 $/;"	l
c0109e37	obj/kernel.asm	/^c0109e37:	c7 44 24 04 01 01 00 	movl   $0x101,0x4(%esp)$/;"	l
c0109e3e	obj/kernel.asm	/^c0109e3e:	00 $/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109e46	obj/kernel.asm	/^c0109e46:	e8 ec 6d ff ff       	call   c0100c37 <__panic>$/;"	l
c0109e4b	obj/kernel.asm	/^c0109e4b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109e4e	obj/kernel.asm	/^c0109e4e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109e51	obj/kernel.asm	/^c0109e51:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c0109e58	obj/kernel.asm	/^c0109e58:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0109e5b	obj/kernel.asm	/^c0109e5b:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0109e5e	obj/kernel.asm	/^c0109e5e:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0109e61	obj/kernel.asm	/^c0109e61:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0109e64	obj/kernel.asm	/^c0109e64:	19 c0                	sbb    %eax,%eax$/;"	l
c0109e66	obj/kernel.asm	/^c0109e66:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0109e69	obj/kernel.asm	/^c0109e69:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c0109e6d	obj/kernel.asm	/^c0109e6d:	0f 95 c0             	setne  %al$/;"	l
c0109e70	obj/kernel.asm	/^c0109e70:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109e73	obj/kernel.asm	/^c0109e73:	85 c0                	test   %eax,%eax$/;"	l
c0109e75	obj/kernel.asm	/^c0109e75:	74 0b                	je     c0109e82 <default_check+0x41e>$/;"	l
c0109e77	obj/kernel.asm	/^c0109e77:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109e7a	obj/kernel.asm	/^c0109e7a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109e7d	obj/kernel.asm	/^c0109e7d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109e80	obj/kernel.asm	/^c0109e80:	74 24                	je     c0109ea6 <default_check+0x442>$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	c7 44 24 0c e8 8f 11 	movl   $0xc0118fe8,0xc(%esp)$/;"	l
c0109e89	obj/kernel.asm	/^c0109e89:	c0 $/;"	l
c0109e8a	obj/kernel.asm	/^c0109e8a:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109e91	obj/kernel.asm	/^c0109e91:	c0 $/;"	l
c0109e92	obj/kernel.asm	/^c0109e92:	c7 44 24 04 02 01 00 	movl   $0x102,0x4(%esp)$/;"	l
c0109e99	obj/kernel.asm	/^c0109e99:	00 $/;"	l
c0109e9a	obj/kernel.asm	/^c0109e9a:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109ea1	obj/kernel.asm	/^c0109ea1:	e8 91 6d ff ff       	call   c0100c37 <__panic>$/;"	l
c0109ea6	obj/kernel.asm	/^c0109ea6:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109ead	obj/kernel.asm	/^c0109ead:	e8 dd a7 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109eb2	obj/kernel.asm	/^c0109eb2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109eb5	obj/kernel.asm	/^c0109eb5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109eb8	obj/kernel.asm	/^c0109eb8:	83 e8 24             	sub    $0x24,%eax$/;"	l
c0109ebb	obj/kernel.asm	/^c0109ebb:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0109ebe	obj/kernel.asm	/^c0109ebe:	74 24                	je     c0109ee4 <default_check+0x480>$/;"	l
c0109ec0	obj/kernel.asm	/^c0109ec0:	c7 44 24 0c 0e 90 11 	movl   $0xc011900e,0xc(%esp)$/;"	l
c0109ec7	obj/kernel.asm	/^c0109ec7:	c0 $/;"	l
c0109ec8	obj/kernel.asm	/^c0109ec8:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109ecf	obj/kernel.asm	/^c0109ecf:	c0 $/;"	l
c0109ed0	obj/kernel.asm	/^c0109ed0:	c7 44 24 04 04 01 00 	movl   $0x104,0x4(%esp)$/;"	l
c0109ed7	obj/kernel.asm	/^c0109ed7:	00 $/;"	l
c0109ed8	obj/kernel.asm	/^c0109ed8:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109edf	obj/kernel.asm	/^c0109edf:	e8 53 6d ff ff       	call   c0100c37 <__panic>$/;"	l
c0109ee4	obj/kernel.asm	/^c0109ee4:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109eeb	obj/kernel.asm	/^c0109eeb:	00 $/;"	l
c0109eec	obj/kernel.asm	/^c0109eec:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109eef	obj/kernel.asm	/^c0109eef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109ef2	obj/kernel.asm	/^c0109ef2:	e8 03 a8 ff ff       	call   c01046fa <free_pages>$/;"	l
c0109ef7	obj/kernel.asm	/^c0109ef7:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0109efe	obj/kernel.asm	/^c0109efe:	e8 8c a7 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109f03	obj/kernel.asm	/^c0109f03:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109f06	obj/kernel.asm	/^c0109f06:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109f09	obj/kernel.asm	/^c0109f09:	83 c0 24             	add    $0x24,%eax$/;"	l
c0109f0c	obj/kernel.asm	/^c0109f0c:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0109f0f	obj/kernel.asm	/^c0109f0f:	74 24                	je     c0109f35 <default_check+0x4d1>$/;"	l
c0109f11	obj/kernel.asm	/^c0109f11:	c7 44 24 0c 2c 90 11 	movl   $0xc011902c,0xc(%esp)$/;"	l
c0109f18	obj/kernel.asm	/^c0109f18:	c0 $/;"	l
c0109f19	obj/kernel.asm	/^c0109f19:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109f20	obj/kernel.asm	/^c0109f20:	c0 $/;"	l
c0109f21	obj/kernel.asm	/^c0109f21:	c7 44 24 04 06 01 00 	movl   $0x106,0x4(%esp)$/;"	l
c0109f28	obj/kernel.asm	/^c0109f28:	00 $/;"	l
c0109f29	obj/kernel.asm	/^c0109f29:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109f30	obj/kernel.asm	/^c0109f30:	e8 02 6d ff ff       	call   c0100c37 <__panic>$/;"	l
c0109f35	obj/kernel.asm	/^c0109f35:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c0109f3c	obj/kernel.asm	/^c0109f3c:	00 $/;"	l
c0109f3d	obj/kernel.asm	/^c0109f3d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109f40	obj/kernel.asm	/^c0109f40:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109f43	obj/kernel.asm	/^c0109f43:	e8 b2 a7 ff ff       	call   c01046fa <free_pages>$/;"	l
c0109f48	obj/kernel.asm	/^c0109f48:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0109f4f	obj/kernel.asm	/^c0109f4f:	00 $/;"	l
c0109f50	obj/kernel.asm	/^c0109f50:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109f53	obj/kernel.asm	/^c0109f53:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0109f56	obj/kernel.asm	/^c0109f56:	e8 9f a7 ff ff       	call   c01046fa <free_pages>$/;"	l
c0109f5b	obj/kernel.asm	/^c0109f5b:	c7 04 24 05 00 00 00 	movl   $0x5,(%esp)$/;"	l
c0109f62	obj/kernel.asm	/^c0109f62:	e8 28 a7 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109f67	obj/kernel.asm	/^c0109f67:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109f6a	obj/kernel.asm	/^c0109f6a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0109f6e	obj/kernel.asm	/^c0109f6e:	75 24                	jne    c0109f94 <default_check+0x530>$/;"	l
c0109f70	obj/kernel.asm	/^c0109f70:	c7 44 24 0c 4c 90 11 	movl   $0xc011904c,0xc(%esp)$/;"	l
c0109f77	obj/kernel.asm	/^c0109f77:	c0 $/;"	l
c0109f78	obj/kernel.asm	/^c0109f78:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109f7f	obj/kernel.asm	/^c0109f7f:	c0 $/;"	l
c0109f80	obj/kernel.asm	/^c0109f80:	c7 44 24 04 0b 01 00 	movl   $0x10b,0x4(%esp)$/;"	l
c0109f87	obj/kernel.asm	/^c0109f87:	00 $/;"	l
c0109f88	obj/kernel.asm	/^c0109f88:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	e8 a3 6c ff ff       	call   c0100c37 <__panic>$/;"	l
c0109f94	obj/kernel.asm	/^c0109f94:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c0109f9b	obj/kernel.asm	/^c0109f9b:	e8 ef a6 ff ff       	call   c010468f <alloc_pages>$/;"	l
c0109fa0	obj/kernel.asm	/^c0109fa0:	85 c0                	test   %eax,%eax$/;"	l
c0109fa2	obj/kernel.asm	/^c0109fa2:	74 24                	je     c0109fc8 <default_check+0x564>$/;"	l
c0109fa4	obj/kernel.asm	/^c0109fa4:	c7 44 24 0c aa 8e 11 	movl   $0xc0118eaa,0xc(%esp)$/;"	l
c0109fab	obj/kernel.asm	/^c0109fab:	c0 $/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109fb3	obj/kernel.asm	/^c0109fb3:	c0 $/;"	l
c0109fb4	obj/kernel.asm	/^c0109fb4:	c7 44 24 04 0c 01 00 	movl   $0x10c,0x4(%esp)$/;"	l
c0109fbb	obj/kernel.asm	/^c0109fbb:	00 $/;"	l
c0109fbc	obj/kernel.asm	/^c0109fbc:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109fc3	obj/kernel.asm	/^c0109fc3:	e8 6f 6c ff ff       	call   c0100c37 <__panic>$/;"	l
c0109fc8	obj/kernel.asm	/^c0109fc8:	a1 6c b7 15 c0       	mov    0xc015b76c,%eax$/;"	l
c0109fcd	obj/kernel.asm	/^c0109fcd:	85 c0                	test   %eax,%eax$/;"	l
c0109fcf	obj/kernel.asm	/^c0109fcf:	74 24                	je     c0109ff5 <default_check+0x591>$/;"	l
c0109fd1	obj/kernel.asm	/^c0109fd1:	c7 44 24 0c fd 8e 11 	movl   $0xc0118efd,0xc(%esp)$/;"	l
c0109fd8	obj/kernel.asm	/^c0109fd8:	c0 $/;"	l
c0109fd9	obj/kernel.asm	/^c0109fd9:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c0109fe0	obj/kernel.asm	/^c0109fe0:	c0 $/;"	l
c0109fe1	obj/kernel.asm	/^c0109fe1:	c7 44 24 04 0e 01 00 	movl   $0x10e,0x4(%esp)$/;"	l
c0109fe8	obj/kernel.asm	/^c0109fe8:	00 $/;"	l
c0109fe9	obj/kernel.asm	/^c0109fe9:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c0109ff0	obj/kernel.asm	/^c0109ff0:	e8 42 6c ff ff       	call   c0100c37 <__panic>$/;"	l
c0109ff5	obj/kernel.asm	/^c0109ff5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8:	a3 6c b7 15 c0       	mov    %eax,0xc015b76c$/;"	l
c0109ffd	obj/kernel.asm	/^c0109ffd:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c010a000	obj/kernel.asm	/^c010a000:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c010a003	obj/kernel.asm	/^c010a003:	a3 64 b7 15 c0       	mov    %eax,0xc015b764$/;"	l
c010a008	obj/kernel.asm	/^c010a008:	89 15 68 b7 15 c0    	mov    %edx,0xc015b768$/;"	l
c010a00e	obj/kernel.asm	/^c010a00e:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c010a015	obj/kernel.asm	/^c010a015:	00 $/;"	l
c010a016	obj/kernel.asm	/^c010a016:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a019	obj/kernel.asm	/^c010a019:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a01c	obj/kernel.asm	/^c010a01c:	e8 d9 a6 ff ff       	call   c01046fa <free_pages>$/;"	l
c010a021	obj/kernel.asm	/^c010a021:	c7 45 ec 64 b7 15 c0 	movl   $0xc015b764,-0x14(%ebp)$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	eb 1d                	jmp    c010a047 <default_check+0x5e3>$/;"	l
c010a02a	obj/kernel.asm	/^c010a02a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a02d	obj/kernel.asm	/^c010a02d:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010a030	obj/kernel.asm	/^c010a030:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010a033	obj/kernel.asm	/^c010a033:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010a037	obj/kernel.asm	/^c010a037:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a03a	obj/kernel.asm	/^c010a03a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a03d	obj/kernel.asm	/^c010a03d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a040	obj/kernel.asm	/^c010a040:	29 c2                	sub    %eax,%edx$/;"	l
c010a042	obj/kernel.asm	/^c010a042:	89 d0                	mov    %edx,%eax$/;"	l
c010a044	obj/kernel.asm	/^c010a044:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a047	obj/kernel.asm	/^c010a047:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a04a	obj/kernel.asm	/^c010a04a:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c010a04d	obj/kernel.asm	/^c010a04d:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c010a050	obj/kernel.asm	/^c010a050:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a053	obj/kernel.asm	/^c010a053:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a056	obj/kernel.asm	/^c010a056:	81 7d ec 64 b7 15 c0 	cmpl   $0xc015b764,-0x14(%ebp)$/;"	l
c010a05d	obj/kernel.asm	/^c010a05d:	75 cb                	jne    c010a02a <default_check+0x5c6>$/;"	l
c010a05f	obj/kernel.asm	/^c010a05f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a063	obj/kernel.asm	/^c010a063:	74 24                	je     c010a089 <default_check+0x625>$/;"	l
c010a065	obj/kernel.asm	/^c010a065:	c7 44 24 0c 6a 90 11 	movl   $0xc011906a,0xc(%esp)$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	c0 $/;"	l
c010a06d	obj/kernel.asm	/^c010a06d:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010a074	obj/kernel.asm	/^c010a074:	c0 $/;"	l
c010a075	obj/kernel.asm	/^c010a075:	c7 44 24 04 19 01 00 	movl   $0x119,0x4(%esp)$/;"	l
c010a07c	obj/kernel.asm	/^c010a07c:	00 $/;"	l
c010a07d	obj/kernel.asm	/^c010a07d:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c010a084	obj/kernel.asm	/^c010a084:	e8 ae 6b ff ff       	call   c0100c37 <__panic>$/;"	l
c010a089	obj/kernel.asm	/^c010a089:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a08d	obj/kernel.asm	/^c010a08d:	74 24                	je     c010a0b3 <default_check+0x64f>$/;"	l
c010a08f	obj/kernel.asm	/^c010a08f:	c7 44 24 0c 75 90 11 	movl   $0xc0119075,0xc(%esp)$/;"	l
c010a096	obj/kernel.asm	/^c010a096:	c0 $/;"	l
c010a097	obj/kernel.asm	/^c010a097:	c7 44 24 08 3a 8d 11 	movl   $0xc0118d3a,0x8(%esp)$/;"	l
c010a09e	obj/kernel.asm	/^c010a09e:	c0 $/;"	l
c010a09f	obj/kernel.asm	/^c010a09f:	c7 44 24 04 1a 01 00 	movl   $0x11a,0x4(%esp)$/;"	l
c010a0a6	obj/kernel.asm	/^c010a0a6:	00 $/;"	l
c010a0a7	obj/kernel.asm	/^c010a0a7:	c7 04 24 4f 8d 11 c0 	movl   $0xc0118d4f,(%esp)$/;"	l
c010a0ae	obj/kernel.asm	/^c010a0ae:	e8 84 6b ff ff       	call   c0100c37 <__panic>$/;"	l
c010a0b3	obj/kernel.asm	/^c010a0b3:	81 c4 94 00 00 00    	add    $0x94,%esp$/;"	l
c010a0b9	obj/kernel.asm	/^c010a0b9:	5b                   	pop    %ebx$/;"	l
c010a0ba	obj/kernel.asm	/^c010a0ba:	5d                   	pop    %ebp$/;"	l
c010a0bb	obj/kernel.asm	/^c010a0bb:	c3                   	ret    $/;"	l
c010a0bc	obj/kernel.asm	/^c010a0bc <phi_test_sema>:$/;"	l
c010a0bc	obj/kernel.asm	/^c010a0bc:	55                   	push   %ebp$/;"	l
c010a0bd	obj/kernel.asm	/^c010a0bd:	89 e5                	mov    %esp,%ebp$/;"	l
c010a0bf	obj/kernel.asm	/^c010a0bf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a0c2	obj/kernel.asm	/^c010a0c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a0c5	obj/kernel.asm	/^c010a0c5:	8b 04 85 80 b7 15 c0 	mov    -0x3fea4880(,%eax,4),%eax$/;"	l
c010a0cc	obj/kernel.asm	/^c010a0cc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a0cf	obj/kernel.asm	/^c010a0cf:	0f 85 85 00 00 00    	jne    c010a15a <phi_test_sema+0x9e>$/;"	l
c010a0d5	obj/kernel.asm	/^c010a0d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a0d8	obj/kernel.asm	/^c010a0d8:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010a0db	obj/kernel.asm	/^c010a0db:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a0e0	obj/kernel.asm	/^c010a0e0:	89 c8                	mov    %ecx,%eax$/;"	l
c010a0e2	obj/kernel.asm	/^c010a0e2:	f7 ea                	imul   %edx$/;"	l
c010a0e4	obj/kernel.asm	/^c010a0e4:	d1 fa                	sar    %edx$/;"	d
c010a0e6	obj/kernel.asm	/^c010a0e6:	89 c8                	mov    %ecx,%eax$/;"	l
c010a0e8	obj/kernel.asm	/^c010a0e8:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a0eb	obj/kernel.asm	/^c010a0eb:	29 c2                	sub    %eax,%edx$/;"	l
c010a0ed	obj/kernel.asm	/^c010a0ed:	89 d0                	mov    %edx,%eax$/;"	l
c010a0ef	obj/kernel.asm	/^c010a0ef:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a0f2	obj/kernel.asm	/^c010a0f2:	01 d0                	add    %edx,%eax$/;"	l
c010a0f4	obj/kernel.asm	/^c010a0f4:	29 c1                	sub    %eax,%ecx$/;"	l
c010a0f6	obj/kernel.asm	/^c010a0f6:	89 ca                	mov    %ecx,%edx$/;"	l
c010a0f8	obj/kernel.asm	/^c010a0f8:	8b 04 95 80 b7 15 c0 	mov    -0x3fea4880(,%edx,4),%eax$/;"	l
c010a0ff	obj/kernel.asm	/^c010a0ff:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a102	obj/kernel.asm	/^c010a102:	74 56                	je     c010a15a <phi_test_sema+0x9e>$/;"	l
c010a104	obj/kernel.asm	/^c010a104:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a107	obj/kernel.asm	/^c010a107:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010a10a	obj/kernel.asm	/^c010a10a:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a10f	obj/kernel.asm	/^c010a10f:	89 c8                	mov    %ecx,%eax$/;"	l
c010a111	obj/kernel.asm	/^c010a111:	f7 ea                	imul   %edx$/;"	l
c010a113	obj/kernel.asm	/^c010a113:	d1 fa                	sar    %edx$/;"	d
c010a115	obj/kernel.asm	/^c010a115:	89 c8                	mov    %ecx,%eax$/;"	l
c010a117	obj/kernel.asm	/^c010a117:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a11a	obj/kernel.asm	/^c010a11a:	29 c2                	sub    %eax,%edx$/;"	l
c010a11c	obj/kernel.asm	/^c010a11c:	89 d0                	mov    %edx,%eax$/;"	l
c010a11e	obj/kernel.asm	/^c010a11e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a121	obj/kernel.asm	/^c010a121:	01 d0                	add    %edx,%eax$/;"	l
c010a123	obj/kernel.asm	/^c010a123:	29 c1                	sub    %eax,%ecx$/;"	l
c010a125	obj/kernel.asm	/^c010a125:	89 ca                	mov    %ecx,%edx$/;"	l
c010a127	obj/kernel.asm	/^c010a127:	8b 04 95 80 b7 15 c0 	mov    -0x3fea4880(,%edx,4),%eax$/;"	l
c010a12e	obj/kernel.asm	/^c010a12e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a131	obj/kernel.asm	/^c010a131:	74 27                	je     c010a15a <phi_test_sema+0x9e>$/;"	l
c010a133	obj/kernel.asm	/^c010a133:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a136	obj/kernel.asm	/^c010a136:	c7 04 85 80 b7 15 c0 	movl   $0x2,-0x3fea4880(,%eax,4)$/;"	l
c010a13d	obj/kernel.asm	/^c010a13d:	02 00 00 00 $/;"	l
c010a141	obj/kernel.asm	/^c010a141:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a144	obj/kernel.asm	/^c010a144:	89 d0                	mov    %edx,%eax$/;"	l
c010a146	obj/kernel.asm	/^c010a146:	01 c0                	add    %eax,%eax$/;"	l
c010a148	obj/kernel.asm	/^c010a148:	01 d0                	add    %edx,%eax$/;"	l
c010a14a	obj/kernel.asm	/^c010a14a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a14d	obj/kernel.asm	/^c010a14d:	05 20 b8 15 c0       	add    $0xc015b820,%eax$/;"	l
c010a152	obj/kernel.asm	/^c010a152:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a155	obj/kernel.asm	/^c010a155:	e8 0f 0c 00 00       	call   c010ad69 <up>$/;"	l
c010a15a	obj/kernel.asm	/^c010a15a:	c9                   	leave  $/;"	l
c010a15b	obj/kernel.asm	/^c010a15b:	c3                   	ret    $/;"	l
c010a15c	obj/kernel.asm	/^c010a15c <phi_take_forks_sema>:$/;"	l
c010a15c	obj/kernel.asm	/^c010a15c:	55                   	push   %ebp$/;"	l
c010a15d	obj/kernel.asm	/^c010a15d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a15f	obj/kernel.asm	/^c010a15f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a162	obj/kernel.asm	/^c010a162:	c7 04 24 a8 b7 15 c0 	movl   $0xc015b7a8,(%esp)$/;"	l
c010a169	obj/kernel.asm	/^c010a169:	e8 16 0c 00 00       	call   c010ad84 <down>$/;"	l
c010a16e	obj/kernel.asm	/^c010a16e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a171	obj/kernel.asm	/^c010a171:	c7 04 85 80 b7 15 c0 	movl   $0x1,-0x3fea4880(,%eax,4)$/;"	l
c010a178	obj/kernel.asm	/^c010a178:	01 00 00 00 $/;"	l
c010a17c	obj/kernel.asm	/^c010a17c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a17f	obj/kernel.asm	/^c010a17f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a182	obj/kernel.asm	/^c010a182:	e8 35 ff ff ff       	call   c010a0bc <phi_test_sema>$/;"	l
c010a187	obj/kernel.asm	/^c010a187:	c7 04 24 a8 b7 15 c0 	movl   $0xc015b7a8,(%esp)$/;"	l
c010a18e	obj/kernel.asm	/^c010a18e:	e8 d6 0b 00 00       	call   c010ad69 <up>$/;"	l
c010a193	obj/kernel.asm	/^c010a193:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a196	obj/kernel.asm	/^c010a196:	89 d0                	mov    %edx,%eax$/;"	l
c010a198	obj/kernel.asm	/^c010a198:	01 c0                	add    %eax,%eax$/;"	l
c010a19a	obj/kernel.asm	/^c010a19a:	01 d0                	add    %edx,%eax$/;"	l
c010a19c	obj/kernel.asm	/^c010a19c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a19f	obj/kernel.asm	/^c010a19f:	05 20 b8 15 c0       	add    $0xc015b820,%eax$/;"	l
c010a1a4	obj/kernel.asm	/^c010a1a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a1a7	obj/kernel.asm	/^c010a1a7:	e8 d8 0b 00 00       	call   c010ad84 <down>$/;"	l
c010a1ac	obj/kernel.asm	/^c010a1ac:	c9                   	leave  $/;"	l
c010a1ad	obj/kernel.asm	/^c010a1ad:	c3                   	ret    $/;"	l
c010a1ae	obj/kernel.asm	/^c010a1ae <phi_put_forks_sema>:$/;"	l
c010a1ae	obj/kernel.asm	/^c010a1ae:	55                   	push   %ebp$/;"	l
c010a1af	obj/kernel.asm	/^c010a1af:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1b1	obj/kernel.asm	/^c010a1b1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a1b4	obj/kernel.asm	/^c010a1b4:	c7 04 24 a8 b7 15 c0 	movl   $0xc015b7a8,(%esp)$/;"	l
c010a1bb	obj/kernel.asm	/^c010a1bb:	e8 c4 0b 00 00       	call   c010ad84 <down>$/;"	l
c010a1c0	obj/kernel.asm	/^c010a1c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1c3	obj/kernel.asm	/^c010a1c3:	c7 04 85 80 b7 15 c0 	movl   $0x0,-0x3fea4880(,%eax,4)$/;"	l
c010a1ca	obj/kernel.asm	/^c010a1ca:	00 00 00 00 $/;"	l
c010a1ce	obj/kernel.asm	/^c010a1ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1d1	obj/kernel.asm	/^c010a1d1:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010a1d4	obj/kernel.asm	/^c010a1d4:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a1d9	obj/kernel.asm	/^c010a1d9:	89 c8                	mov    %ecx,%eax$/;"	l
c010a1db	obj/kernel.asm	/^c010a1db:	f7 ea                	imul   %edx$/;"	l
c010a1dd	obj/kernel.asm	/^c010a1dd:	d1 fa                	sar    %edx$/;"	d
c010a1df	obj/kernel.asm	/^c010a1df:	89 c8                	mov    %ecx,%eax$/;"	l
c010a1e1	obj/kernel.asm	/^c010a1e1:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a1e4	obj/kernel.asm	/^c010a1e4:	29 c2                	sub    %eax,%edx$/;"	l
c010a1e6	obj/kernel.asm	/^c010a1e6:	89 d0                	mov    %edx,%eax$/;"	l
c010a1e8	obj/kernel.asm	/^c010a1e8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a1eb	obj/kernel.asm	/^c010a1eb:	01 d0                	add    %edx,%eax$/;"	l
c010a1ed	obj/kernel.asm	/^c010a1ed:	29 c1                	sub    %eax,%ecx$/;"	l
c010a1ef	obj/kernel.asm	/^c010a1ef:	89 ca                	mov    %ecx,%edx$/;"	l
c010a1f1	obj/kernel.asm	/^c010a1f1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a1f4	obj/kernel.asm	/^c010a1f4:	e8 c3 fe ff ff       	call   c010a0bc <phi_test_sema>$/;"	l
c010a1f9	obj/kernel.asm	/^c010a1f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1fc	obj/kernel.asm	/^c010a1fc:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010a1ff	obj/kernel.asm	/^c010a1ff:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a204	obj/kernel.asm	/^c010a204:	89 c8                	mov    %ecx,%eax$/;"	l
c010a206	obj/kernel.asm	/^c010a206:	f7 ea                	imul   %edx$/;"	l
c010a208	obj/kernel.asm	/^c010a208:	d1 fa                	sar    %edx$/;"	d
c010a20a	obj/kernel.asm	/^c010a20a:	89 c8                	mov    %ecx,%eax$/;"	l
c010a20c	obj/kernel.asm	/^c010a20c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a20f	obj/kernel.asm	/^c010a20f:	29 c2                	sub    %eax,%edx$/;"	l
c010a211	obj/kernel.asm	/^c010a211:	89 d0                	mov    %edx,%eax$/;"	l
c010a213	obj/kernel.asm	/^c010a213:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a216	obj/kernel.asm	/^c010a216:	01 d0                	add    %edx,%eax$/;"	l
c010a218	obj/kernel.asm	/^c010a218:	29 c1                	sub    %eax,%ecx$/;"	l
c010a21a	obj/kernel.asm	/^c010a21a:	89 ca                	mov    %ecx,%edx$/;"	l
c010a21c	obj/kernel.asm	/^c010a21c:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a21f	obj/kernel.asm	/^c010a21f:	e8 98 fe ff ff       	call   c010a0bc <phi_test_sema>$/;"	l
c010a224	obj/kernel.asm	/^c010a224:	c7 04 24 a8 b7 15 c0 	movl   $0xc015b7a8,(%esp)$/;"	l
c010a22b	obj/kernel.asm	/^c010a22b:	e8 39 0b 00 00       	call   c010ad69 <up>$/;"	l
c010a230	obj/kernel.asm	/^c010a230:	c9                   	leave  $/;"	l
c010a231	obj/kernel.asm	/^c010a231:	c3                   	ret    $/;"	l
c010a232	obj/kernel.asm	/^c010a232 <philosopher_using_semaphore>:$/;"	l
c010a232	obj/kernel.asm	/^c010a232:	55                   	push   %ebp$/;"	l
c010a233	obj/kernel.asm	/^c010a233:	89 e5                	mov    %esp,%ebp$/;"	l
c010a235	obj/kernel.asm	/^c010a235:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a238	obj/kernel.asm	/^c010a238:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a23f	obj/kernel.asm	/^c010a23f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a242	obj/kernel.asm	/^c010a242:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a245	obj/kernel.asm	/^c010a245:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a248	obj/kernel.asm	/^c010a248:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a24c	obj/kernel.asm	/^c010a24c:	c7 04 24 b0 90 11 c0 	movl   $0xc01190b0,(%esp)$/;"	l
c010a253	obj/kernel.asm	/^c010a253:	e8 88 68 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a258	obj/kernel.asm	/^c010a258:	eb 62                	jmp    c010a2bc <philosopher_using_semaphore+0x8a>$/;"	l
c010a25a	obj/kernel.asm	/^c010a25a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a25d	obj/kernel.asm	/^c010a25d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a261	obj/kernel.asm	/^c010a261:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a264	obj/kernel.asm	/^c010a264:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a268	obj/kernel.asm	/^c010a268:	c7 04 24 d0 90 11 c0 	movl   $0xc01190d0,(%esp)$/;"	l
c010a26f	obj/kernel.asm	/^c010a26f:	e8 6c 68 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a274	obj/kernel.asm	/^c010a274:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	e8 ac 4c 00 00       	call   c010ef2c <do_sleep>$/;"	l
c010a280	obj/kernel.asm	/^c010a280:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a283	obj/kernel.asm	/^c010a283:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a286	obj/kernel.asm	/^c010a286:	e8 d1 fe ff ff       	call   c010a15c <phi_take_forks_sema>$/;"	l
c010a28b	obj/kernel.asm	/^c010a28b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a28e	obj/kernel.asm	/^c010a28e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a292	obj/kernel.asm	/^c010a292:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a295	obj/kernel.asm	/^c010a295:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a299	obj/kernel.asm	/^c010a299:	c7 04 24 00 91 11 c0 	movl   $0xc0119100,(%esp)$/;"	l
c010a2a0	obj/kernel.asm	/^c010a2a0:	e8 3b 68 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a2a5	obj/kernel.asm	/^c010a2a5:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010a2ac	obj/kernel.asm	/^c010a2ac:	e8 7b 4c 00 00       	call   c010ef2c <do_sleep>$/;"	l
c010a2b1	obj/kernel.asm	/^c010a2b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a2b4	obj/kernel.asm	/^c010a2b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a2b7	obj/kernel.asm	/^c010a2b7:	e8 f2 fe ff ff       	call   c010a1ae <phi_put_forks_sema>$/;"	l
c010a2bc	obj/kernel.asm	/^c010a2bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a2bf	obj/kernel.asm	/^c010a2bf:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a2c2	obj/kernel.asm	/^c010a2c2:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010a2c5	obj/kernel.asm	/^c010a2c5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a2c8	obj/kernel.asm	/^c010a2c8:	7e 90                	jle    c010a25a <philosopher_using_semaphore+0x28>$/;"	l
c010a2ca	obj/kernel.asm	/^c010a2ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a2cd	obj/kernel.asm	/^c010a2cd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a2d1	obj/kernel.asm	/^c010a2d1:	c7 04 24 2b 91 11 c0 	movl   $0xc011912b,(%esp)$/;"	l
c010a2d8	obj/kernel.asm	/^c010a2d8:	e8 03 68 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a2e2	obj/kernel.asm	/^c010a2e2:	c9                   	leave  $/;"	l
c010a2e3	obj/kernel.asm	/^c010a2e3:	c3                   	ret    $/;"	l
c010a2e4	obj/kernel.asm	/^c010a2e4 <phi_test_condvar>:$/;"	l
c010a2e4	obj/kernel.asm	/^c010a2e4:	55                   	push   %ebp$/;"	l
c010a2e5	obj/kernel.asm	/^c010a2e5:	89 e5                	mov    %esp,%ebp$/;"	l
c010a2e7	obj/kernel.asm	/^c010a2e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a2ea	obj/kernel.asm	/^c010a2ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2ed	obj/kernel.asm	/^c010a2ed:	8b 04 85 e0 b7 15 c0 	mov    -0x3fea4820(,%eax,4),%eax$/;"	l
c010a2f4	obj/kernel.asm	/^c010a2f4:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a2f7	obj/kernel.asm	/^c010a2f7:	0f 85 b5 00 00 00    	jne    c010a3b2 <phi_test_condvar+0xce>$/;"	l
c010a2fd	obj/kernel.asm	/^c010a2fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a300	obj/kernel.asm	/^c010a300:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010a303	obj/kernel.asm	/^c010a303:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a308	obj/kernel.asm	/^c010a308:	89 c8                	mov    %ecx,%eax$/;"	l
c010a30a	obj/kernel.asm	/^c010a30a:	f7 ea                	imul   %edx$/;"	l
c010a30c	obj/kernel.asm	/^c010a30c:	d1 fa                	sar    %edx$/;"	d
c010a30e	obj/kernel.asm	/^c010a30e:	89 c8                	mov    %ecx,%eax$/;"	l
c010a310	obj/kernel.asm	/^c010a310:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a313	obj/kernel.asm	/^c010a313:	29 c2                	sub    %eax,%edx$/;"	l
c010a315	obj/kernel.asm	/^c010a315:	89 d0                	mov    %edx,%eax$/;"	l
c010a317	obj/kernel.asm	/^c010a317:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a31a	obj/kernel.asm	/^c010a31a:	01 d0                	add    %edx,%eax$/;"	l
c010a31c	obj/kernel.asm	/^c010a31c:	29 c1                	sub    %eax,%ecx$/;"	l
c010a31e	obj/kernel.asm	/^c010a31e:	89 ca                	mov    %ecx,%edx$/;"	l
c010a320	obj/kernel.asm	/^c010a320:	8b 04 95 e0 b7 15 c0 	mov    -0x3fea4820(,%edx,4),%eax$/;"	l
c010a327	obj/kernel.asm	/^c010a327:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a32a	obj/kernel.asm	/^c010a32a:	0f 84 82 00 00 00    	je     c010a3b2 <phi_test_condvar+0xce>$/;"	l
c010a330	obj/kernel.asm	/^c010a330:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a333	obj/kernel.asm	/^c010a333:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010a336	obj/kernel.asm	/^c010a336:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a33b	obj/kernel.asm	/^c010a33b:	89 c8                	mov    %ecx,%eax$/;"	l
c010a33d	obj/kernel.asm	/^c010a33d:	f7 ea                	imul   %edx$/;"	l
c010a33f	obj/kernel.asm	/^c010a33f:	d1 fa                	sar    %edx$/;"	d
c010a341	obj/kernel.asm	/^c010a341:	89 c8                	mov    %ecx,%eax$/;"	l
c010a343	obj/kernel.asm	/^c010a343:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a346	obj/kernel.asm	/^c010a346:	29 c2                	sub    %eax,%edx$/;"	l
c010a348	obj/kernel.asm	/^c010a348:	89 d0                	mov    %edx,%eax$/;"	l
c010a34a	obj/kernel.asm	/^c010a34a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a34d	obj/kernel.asm	/^c010a34d:	01 d0                	add    %edx,%eax$/;"	l
c010a34f	obj/kernel.asm	/^c010a34f:	29 c1                	sub    %eax,%ecx$/;"	l
c010a351	obj/kernel.asm	/^c010a351:	89 ca                	mov    %ecx,%edx$/;"	l
c010a353	obj/kernel.asm	/^c010a353:	8b 04 95 e0 b7 15 c0 	mov    -0x3fea4820(,%edx,4),%eax$/;"	l
c010a35a	obj/kernel.asm	/^c010a35a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a35d	obj/kernel.asm	/^c010a35d:	74 53                	je     c010a3b2 <phi_test_condvar+0xce>$/;"	l
c010a35f	obj/kernel.asm	/^c010a35f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a362	obj/kernel.asm	/^c010a362:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a366	obj/kernel.asm	/^c010a366:	c7 04 24 48 91 11 c0 	movl   $0xc0119148,(%esp)$/;"	l
c010a36d	obj/kernel.asm	/^c010a36d:	e8 6e 67 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a372	obj/kernel.asm	/^c010a372:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a375	obj/kernel.asm	/^c010a375:	c7 04 85 e0 b7 15 c0 	movl   $0x2,-0x3fea4820(,%eax,4)$/;"	l
c010a37c	obj/kernel.asm	/^c010a37c:	02 00 00 00 $/;"	l
c010a380	obj/kernel.asm	/^c010a380:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a383	obj/kernel.asm	/^c010a383:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a387	obj/kernel.asm	/^c010a387:	c7 04 24 7c 91 11 c0 	movl   $0xc011917c,(%esp)$/;"	l
c010a38e	obj/kernel.asm	/^c010a38e:	e8 4d 67 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a393	obj/kernel.asm	/^c010a393:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a398	obj/kernel.asm	/^c010a398:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010a39b	obj/kernel.asm	/^c010a39b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a39e	obj/kernel.asm	/^c010a39e:	89 d0                	mov    %edx,%eax$/;"	l
c010a3a0	obj/kernel.asm	/^c010a3a0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a3a3	obj/kernel.asm	/^c010a3a3:	01 d0                	add    %edx,%eax$/;"	l
c010a3a5	obj/kernel.asm	/^c010a3a5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a3a8	obj/kernel.asm	/^c010a3a8:	01 c8                	add    %ecx,%eax$/;"	l
c010a3aa	obj/kernel.asm	/^c010a3aa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3ad	obj/kernel.asm	/^c010a3ad:	e8 86 0b 00 00       	call   c010af38 <cond_signal>$/;"	l
c010a3b2	obj/kernel.asm	/^c010a3b2:	c9                   	leave  $/;"	l
c010a3b3	obj/kernel.asm	/^c010a3b3:	c3                   	ret    $/;"	l
c010a3b4	obj/kernel.asm	/^c010a3b4 <phi_take_forks_condvar>:$/;"	l
c010a3b4	obj/kernel.asm	/^c010a3b4:	55                   	push   %ebp$/;"	l
c010a3b5	obj/kernel.asm	/^c010a3b5:	89 e5                	mov    %esp,%ebp$/;"	l
c010a3b7	obj/kernel.asm	/^c010a3b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a3bf	obj/kernel.asm	/^c010a3bf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3c2	obj/kernel.asm	/^c010a3c2:	e8 bd 09 00 00       	call   c010ad84 <down>$/;"	l
c010a3c7	obj/kernel.asm	/^c010a3c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3ca	obj/kernel.asm	/^c010a3ca:	c7 04 85 e0 b7 15 c0 	movl   $0x1,-0x3fea4820(,%eax,4)$/;"	l
c010a3d1	obj/kernel.asm	/^c010a3d1:	01 00 00 00 $/;"	l
c010a3d5	obj/kernel.asm	/^c010a3d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3d8	obj/kernel.asm	/^c010a3d8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a3db	obj/kernel.asm	/^c010a3db:	e8 04 ff ff ff       	call   c010a2e4 <phi_test_condvar>$/;"	l
c010a3e0	obj/kernel.asm	/^c010a3e0:	eb 32                	jmp    c010a414 <phi_take_forks_condvar+0x60>$/;"	l
c010a3e2	obj/kernel.asm	/^c010a3e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3e5	obj/kernel.asm	/^c010a3e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a3e9	obj/kernel.asm	/^c010a3e9:	c7 04 24 a4 91 11 c0 	movl   $0xc01191a4,(%esp)$/;"	l
c010a3f0	obj/kernel.asm	/^c010a3f0:	e8 eb 66 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a3f5	obj/kernel.asm	/^c010a3f5:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a3fa	obj/kernel.asm	/^c010a3fa:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010a3fd	obj/kernel.asm	/^c010a3fd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a400	obj/kernel.asm	/^c010a400:	89 d0                	mov    %edx,%eax$/;"	l
c010a402	obj/kernel.asm	/^c010a402:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a405	obj/kernel.asm	/^c010a405:	01 d0                	add    %edx,%eax$/;"	l
c010a407	obj/kernel.asm	/^c010a407:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a40a	obj/kernel.asm	/^c010a40a:	01 c8                	add    %ecx,%eax$/;"	l
c010a40c	obj/kernel.asm	/^c010a40c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a40f	obj/kernel.asm	/^c010a40f:	e8 c4 0b 00 00       	call   c010afd8 <cond_wait>$/;"	l
c010a414	obj/kernel.asm	/^c010a414:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a417	obj/kernel.asm	/^c010a417:	8b 04 85 e0 b7 15 c0 	mov    -0x3fea4820(,%eax,4),%eax$/;"	l
c010a41e	obj/kernel.asm	/^c010a41e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a421	obj/kernel.asm	/^c010a421:	75 bf                	jne    c010a3e2 <phi_take_forks_condvar+0x2e>$/;"	l
c010a423	obj/kernel.asm	/^c010a423:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a428	obj/kernel.asm	/^c010a428:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a42b	obj/kernel.asm	/^c010a42b:	85 c0                	test   %eax,%eax$/;"	l
c010a42d	obj/kernel.asm	/^c010a42d:	7e 12                	jle    c010a441 <phi_take_forks_condvar+0x8d>$/;"	l
c010a42f	obj/kernel.asm	/^c010a42f:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a434	obj/kernel.asm	/^c010a434:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a43a	obj/kernel.asm	/^c010a43a:	e8 2a 09 00 00       	call   c010ad69 <up>$/;"	l
c010a43f	obj/kernel.asm	/^c010a43f:	eb 0d                	jmp    c010a44e <phi_take_forks_condvar+0x9a>$/;"	l
c010a441	obj/kernel.asm	/^c010a441:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a446	obj/kernel.asm	/^c010a446:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a449	obj/kernel.asm	/^c010a449:	e8 1b 09 00 00       	call   c010ad69 <up>$/;"	l
c010a44e	obj/kernel.asm	/^c010a44e:	c9                   	leave  $/;"	l
c010a44f	obj/kernel.asm	/^c010a44f:	c3                   	ret    $/;"	l
c010a450	obj/kernel.asm	/^c010a450 <phi_put_forks_condvar>:$/;"	l
c010a450	obj/kernel.asm	/^c010a450:	55                   	push   %ebp$/;"	l
c010a451	obj/kernel.asm	/^c010a451:	89 e5                	mov    %esp,%ebp$/;"	l
c010a453	obj/kernel.asm	/^c010a453:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a456	obj/kernel.asm	/^c010a456:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a45b	obj/kernel.asm	/^c010a45b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a45e	obj/kernel.asm	/^c010a45e:	e8 21 09 00 00       	call   c010ad84 <down>$/;"	l
c010a463	obj/kernel.asm	/^c010a463:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a466	obj/kernel.asm	/^c010a466:	c7 04 85 e0 b7 15 c0 	movl   $0x0,-0x3fea4820(,%eax,4)$/;"	l
c010a46d	obj/kernel.asm	/^c010a46d:	00 00 00 00 $/;"	l
c010a471	obj/kernel.asm	/^c010a471:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a474	obj/kernel.asm	/^c010a474:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010a477	obj/kernel.asm	/^c010a477:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a47c	obj/kernel.asm	/^c010a47c:	89 c8                	mov    %ecx,%eax$/;"	l
c010a47e	obj/kernel.asm	/^c010a47e:	f7 ea                	imul   %edx$/;"	l
c010a480	obj/kernel.asm	/^c010a480:	d1 fa                	sar    %edx$/;"	d
c010a482	obj/kernel.asm	/^c010a482:	89 c8                	mov    %ecx,%eax$/;"	l
c010a484	obj/kernel.asm	/^c010a484:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a487	obj/kernel.asm	/^c010a487:	29 c2                	sub    %eax,%edx$/;"	l
c010a489	obj/kernel.asm	/^c010a489:	89 d0                	mov    %edx,%eax$/;"	l
c010a48b	obj/kernel.asm	/^c010a48b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a48e	obj/kernel.asm	/^c010a48e:	01 d0                	add    %edx,%eax$/;"	l
c010a490	obj/kernel.asm	/^c010a490:	29 c1                	sub    %eax,%ecx$/;"	l
c010a492	obj/kernel.asm	/^c010a492:	89 ca                	mov    %ecx,%edx$/;"	l
c010a494	obj/kernel.asm	/^c010a494:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a497	obj/kernel.asm	/^c010a497:	e8 48 fe ff ff       	call   c010a2e4 <phi_test_condvar>$/;"	l
c010a49c	obj/kernel.asm	/^c010a49c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a49f	obj/kernel.asm	/^c010a49f:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010a4a2	obj/kernel.asm	/^c010a4a2:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010a4a7	obj/kernel.asm	/^c010a4a7:	89 c8                	mov    %ecx,%eax$/;"	l
c010a4a9	obj/kernel.asm	/^c010a4a9:	f7 ea                	imul   %edx$/;"	l
c010a4ab	obj/kernel.asm	/^c010a4ab:	d1 fa                	sar    %edx$/;"	d
c010a4ad	obj/kernel.asm	/^c010a4ad:	89 c8                	mov    %ecx,%eax$/;"	l
c010a4af	obj/kernel.asm	/^c010a4af:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010a4b2	obj/kernel.asm	/^c010a4b2:	29 c2                	sub    %eax,%edx$/;"	l
c010a4b4	obj/kernel.asm	/^c010a4b4:	89 d0                	mov    %edx,%eax$/;"	l
c010a4b6	obj/kernel.asm	/^c010a4b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a4b9	obj/kernel.asm	/^c010a4b9:	01 d0                	add    %edx,%eax$/;"	l
c010a4bb	obj/kernel.asm	/^c010a4bb:	29 c1                	sub    %eax,%ecx$/;"	l
c010a4bd	obj/kernel.asm	/^c010a4bd:	89 ca                	mov    %ecx,%edx$/;"	l
c010a4bf	obj/kernel.asm	/^c010a4bf:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010a4c2	obj/kernel.asm	/^c010a4c2:	e8 1d fe ff ff       	call   c010a2e4 <phi_test_condvar>$/;"	l
c010a4c7	obj/kernel.asm	/^c010a4c7:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a4cc	obj/kernel.asm	/^c010a4cc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a4cf	obj/kernel.asm	/^c010a4cf:	85 c0                	test   %eax,%eax$/;"	l
c010a4d1	obj/kernel.asm	/^c010a4d1:	7e 12                	jle    c010a4e5 <phi_put_forks_condvar+0x95>$/;"	l
c010a4d3	obj/kernel.asm	/^c010a4d3:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a4d8	obj/kernel.asm	/^c010a4d8:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a4db	obj/kernel.asm	/^c010a4db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4de	obj/kernel.asm	/^c010a4de:	e8 86 08 00 00       	call   c010ad69 <up>$/;"	l
c010a4e3	obj/kernel.asm	/^c010a4e3:	eb 0d                	jmp    c010a4f2 <phi_put_forks_condvar+0xa2>$/;"	l
c010a4e5	obj/kernel.asm	/^c010a4e5:	a1 6c 6a 15 c0       	mov    0xc0156a6c,%eax$/;"	l
c010a4ea	obj/kernel.asm	/^c010a4ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a4ed	obj/kernel.asm	/^c010a4ed:	e8 77 08 00 00       	call   c010ad69 <up>$/;"	l
c010a4f2	obj/kernel.asm	/^c010a4f2:	c9                   	leave  $/;"	l
c010a4f3	obj/kernel.asm	/^c010a4f3:	c3                   	ret    $/;"	l
c010a4f4	obj/kernel.asm	/^c010a4f4 <philosopher_using_condvar>:$/;"	l
c010a4f4	obj/kernel.asm	/^c010a4f4:	55                   	push   %ebp$/;"	l
c010a4f5	obj/kernel.asm	/^c010a4f5:	89 e5                	mov    %esp,%ebp$/;"	l
c010a4f7	obj/kernel.asm	/^c010a4f7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a4fa	obj/kernel.asm	/^c010a4fa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a501	obj/kernel.asm	/^c010a501:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a504	obj/kernel.asm	/^c010a504:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a507	obj/kernel.asm	/^c010a507:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a50a	obj/kernel.asm	/^c010a50a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a50e	obj/kernel.asm	/^c010a50e:	c7 04 24 e0 91 11 c0 	movl   $0xc01191e0,(%esp)$/;"	l
c010a515	obj/kernel.asm	/^c010a515:	e8 c6 65 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a51a	obj/kernel.asm	/^c010a51a:	eb 62                	jmp    c010a57e <philosopher_using_condvar+0x8a>$/;"	l
c010a51c	obj/kernel.asm	/^c010a51c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a51f	obj/kernel.asm	/^c010a51f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a523	obj/kernel.asm	/^c010a523:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a526	obj/kernel.asm	/^c010a526:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a52a	obj/kernel.asm	/^c010a52a:	c7 04 24 00 92 11 c0 	movl   $0xc0119200,(%esp)$/;"	l
c010a531	obj/kernel.asm	/^c010a531:	e8 aa 65 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a536	obj/kernel.asm	/^c010a536:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010a53d	obj/kernel.asm	/^c010a53d:	e8 ea 49 00 00       	call   c010ef2c <do_sleep>$/;"	l
c010a542	obj/kernel.asm	/^c010a542:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a545	obj/kernel.asm	/^c010a545:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a548	obj/kernel.asm	/^c010a548:	e8 67 fe ff ff       	call   c010a3b4 <phi_take_forks_condvar>$/;"	l
c010a54d	obj/kernel.asm	/^c010a54d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a550	obj/kernel.asm	/^c010a550:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010a554	obj/kernel.asm	/^c010a554:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a557	obj/kernel.asm	/^c010a557:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a55b	obj/kernel.asm	/^c010a55b:	c7 04 24 30 92 11 c0 	movl   $0xc0119230,(%esp)$/;"	l
c010a562	obj/kernel.asm	/^c010a562:	e8 79 65 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a567	obj/kernel.asm	/^c010a567:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c010a56e	obj/kernel.asm	/^c010a56e:	e8 b9 49 00 00       	call   c010ef2c <do_sleep>$/;"	l
c010a573	obj/kernel.asm	/^c010a573:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a576	obj/kernel.asm	/^c010a576:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a579	obj/kernel.asm	/^c010a579:	e8 d2 fe ff ff       	call   c010a450 <phi_put_forks_condvar>$/;"	l
c010a57e	obj/kernel.asm	/^c010a57e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a581	obj/kernel.asm	/^c010a581:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a584	obj/kernel.asm	/^c010a584:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010a587	obj/kernel.asm	/^c010a587:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	7e 90                	jle    c010a51c <philosopher_using_condvar+0x28>$/;"	l
c010a58c	obj/kernel.asm	/^c010a58c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a58f	obj/kernel.asm	/^c010a58f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a593	obj/kernel.asm	/^c010a593:	c7 04 24 60 92 11 c0 	movl   $0xc0119260,(%esp)$/;"	l
c010a59a	obj/kernel.asm	/^c010a59a:	e8 41 65 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010a59f	obj/kernel.asm	/^c010a59f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a5a4	obj/kernel.asm	/^c010a5a4:	c9                   	leave  $/;"	l
c010a5a5	obj/kernel.asm	/^c010a5a5:	c3                   	ret    $/;"	l
c010a5a6	obj/kernel.asm	/^c010a5a6 <check_sync>:$/;"	l
c010a5a6	obj/kernel.asm	/^c010a5a6:	55                   	push   %ebp$/;"	l
c010a5a7	obj/kernel.asm	/^c010a5a7:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5a9	obj/kernel.asm	/^c010a5a9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a5ac	obj/kernel.asm	/^c010a5ac:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010a5b3	obj/kernel.asm	/^c010a5b3:	00 $/;"	l
c010a5b4	obj/kernel.asm	/^c010a5b4:	c7 04 24 a8 b7 15 c0 	movl   $0xc015b7a8,(%esp)$/;"	l
c010a5bb	obj/kernel.asm	/^c010a5bb:	e8 36 06 00 00       	call   c010abf6 <sem_init>$/;"	l
c010a5c0	obj/kernel.asm	/^c010a5c0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a5c7	obj/kernel.asm	/^c010a5c7:	e9 94 00 00 00       	jmp    c010a660 <check_sync+0xba>$/;"	l
c010a5cc	obj/kernel.asm	/^c010a5cc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a5cf	obj/kernel.asm	/^c010a5cf:	89 d0                	mov    %edx,%eax$/;"	l
c010a5d1	obj/kernel.asm	/^c010a5d1:	01 c0                	add    %eax,%eax$/;"	l
c010a5d3	obj/kernel.asm	/^c010a5d3:	01 d0                	add    %edx,%eax$/;"	l
c010a5d5	obj/kernel.asm	/^c010a5d5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a5d8	obj/kernel.asm	/^c010a5d8:	05 20 b8 15 c0       	add    $0xc015b820,%eax$/;"	l
c010a5dd	obj/kernel.asm	/^c010a5dd:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010a5e4	obj/kernel.asm	/^c010a5e4:	00 $/;"	l
c010a5e5	obj/kernel.asm	/^c010a5e5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a5e8	obj/kernel.asm	/^c010a5e8:	e8 09 06 00 00       	call   c010abf6 <sem_init>$/;"	l
c010a5ed	obj/kernel.asm	/^c010a5ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5f0	obj/kernel.asm	/^c010a5f0:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010a5f7	obj/kernel.asm	/^c010a5f7:	00 $/;"	l
c010a5f8	obj/kernel.asm	/^c010a5f8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a5fc	obj/kernel.asm	/^c010a5fc:	c7 04 24 32 a2 10 c0 	movl   $0xc010a232,(%esp)$/;"	l
c010a603	obj/kernel.asm	/^c010a603:	e8 35 2e 00 00       	call   c010d43d <kernel_thread>$/;"	l
c010a608	obj/kernel.asm	/^c010a608:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a60b	obj/kernel.asm	/^c010a60b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a60f	obj/kernel.asm	/^c010a60f:	7f 1c                	jg     c010a62d <check_sync+0x87>$/;"	l
c010a611	obj/kernel.asm	/^c010a611:	c7 44 24 08 80 92 11 	movl   $0xc0119280,0x8(%esp)$/;"	l
c010a618	obj/kernel.asm	/^c010a618:	c0 $/;"	l
c010a619	obj/kernel.asm	/^c010a619:	c7 44 24 04 c0 00 00 	movl   $0xc0,0x4(%esp)$/;"	l
c010a620	obj/kernel.asm	/^c010a620:	00 $/;"	l
c010a621	obj/kernel.asm	/^c010a621:	c7 04 24 b2 92 11 c0 	movl   $0xc01192b2,(%esp)$/;"	l
c010a628	obj/kernel.asm	/^c010a628:	e8 0a 66 ff ff       	call   c0100c37 <__panic>$/;"	l
c010a62d	obj/kernel.asm	/^c010a62d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a630	obj/kernel.asm	/^c010a630:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a633	obj/kernel.asm	/^c010a633:	e8 91 2d 00 00       	call   c010d3c9 <find_proc>$/;"	l
c010a638	obj/kernel.asm	/^c010a638:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a63b	obj/kernel.asm	/^c010a63b:	89 04 95 f4 b7 15 c0 	mov    %eax,-0x3fea480c(,%edx,4)$/;"	l
c010a642	obj/kernel.asm	/^c010a642:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a645	obj/kernel.asm	/^c010a645:	8b 04 85 f4 b7 15 c0 	mov    -0x3fea480c(,%eax,4),%eax$/;"	l
c010a64c	obj/kernel.asm	/^c010a64c:	c7 44 24 04 c9 92 11 	movl   $0xc01192c9,0x4(%esp)$/;"	l
c010a653	obj/kernel.asm	/^c010a653:	c0 $/;"	l
c010a654	obj/kernel.asm	/^c010a654:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a657	obj/kernel.asm	/^c010a657:	e8 54 29 00 00       	call   c010cfb0 <set_proc_name>$/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010a660	obj/kernel.asm	/^c010a660:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c010a664	obj/kernel.asm	/^c010a664:	0f 8e 62 ff ff ff    	jle    c010a5cc <check_sync+0x26>$/;"	l
c010a66a	obj/kernel.asm	/^c010a66a:	c7 44 24 04 05 00 00 	movl   $0x5,0x4(%esp)$/;"	l
c010a671	obj/kernel.asm	/^c010a671:	00 $/;"	l
c010a672	obj/kernel.asm	/^c010a672:	c7 04 24 c0 b7 15 c0 	movl   $0xc015b7c0,(%esp)$/;"	l
c010a679	obj/kernel.asm	/^c010a679:	e8 90 07 00 00       	call   c010ae0e <monitor_init>$/;"	l
c010a67e	obj/kernel.asm	/^c010a67e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a685	obj/kernel.asm	/^c010a685:	e9 81 00 00 00       	jmp    c010a70b <check_sync+0x165>$/;"	l
c010a68a	obj/kernel.asm	/^c010a68a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a68d	obj/kernel.asm	/^c010a68d:	c7 04 85 e0 b7 15 c0 	movl   $0x0,-0x3fea4820(,%eax,4)$/;"	l
c010a694	obj/kernel.asm	/^c010a694:	00 00 00 00 $/;"	l
c010a698	obj/kernel.asm	/^c010a698:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a69b	obj/kernel.asm	/^c010a69b:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010a6a2	obj/kernel.asm	/^c010a6a2:	00 $/;"	l
c010a6a3	obj/kernel.asm	/^c010a6a3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010a6a7	obj/kernel.asm	/^c010a6a7:	c7 04 24 f4 a4 10 c0 	movl   $0xc010a4f4,(%esp)$/;"	l
c010a6ae	obj/kernel.asm	/^c010a6ae:	e8 8a 2d 00 00       	call   c010d43d <kernel_thread>$/;"	l
c010a6b3	obj/kernel.asm	/^c010a6b3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a6b6	obj/kernel.asm	/^c010a6b6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a6ba	obj/kernel.asm	/^c010a6ba:	7f 1c                	jg     c010a6d8 <check_sync+0x132>$/;"	l
c010a6bc	obj/kernel.asm	/^c010a6bc:	c7 44 24 08 e0 92 11 	movl   $0xc01192e0,0x8(%esp)$/;"	l
c010a6c3	obj/kernel.asm	/^c010a6c3:	c0 $/;"	l
c010a6c4	obj/kernel.asm	/^c010a6c4:	c7 44 24 04 cc 00 00 	movl   $0xcc,0x4(%esp)$/;"	l
c010a6cb	obj/kernel.asm	/^c010a6cb:	00 $/;"	l
c010a6cc	obj/kernel.asm	/^c010a6cc:	c7 04 24 b2 92 11 c0 	movl   $0xc01192b2,(%esp)$/;"	l
c010a6d3	obj/kernel.asm	/^c010a6d3:	e8 5f 65 ff ff       	call   c0100c37 <__panic>$/;"	l
c010a6d8	obj/kernel.asm	/^c010a6d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6db	obj/kernel.asm	/^c010a6db:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a6de	obj/kernel.asm	/^c010a6de:	e8 e6 2c 00 00       	call   c010d3c9 <find_proc>$/;"	l
c010a6e3	obj/kernel.asm	/^c010a6e3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a6e6	obj/kernel.asm	/^c010a6e6:	89 04 95 94 b7 15 c0 	mov    %eax,-0x3fea486c(,%edx,4)$/;"	l
c010a6ed	obj/kernel.asm	/^c010a6ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6f0	obj/kernel.asm	/^c010a6f0:	8b 04 85 94 b7 15 c0 	mov    -0x3fea486c(,%eax,4),%eax$/;"	l
c010a6f7	obj/kernel.asm	/^c010a6f7:	c7 44 24 04 10 93 11 	movl   $0xc0119310,0x4(%esp)$/;"	l
c010a6fe	obj/kernel.asm	/^c010a6fe:	c0 $/;"	l
c010a6ff	obj/kernel.asm	/^c010a6ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010a702	obj/kernel.asm	/^c010a702:	e8 a9 28 00 00       	call   c010cfb0 <set_proc_name>$/;"	l
c010a707	obj/kernel.asm	/^c010a707:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010a70b	obj/kernel.asm	/^c010a70b:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c010a70f	obj/kernel.asm	/^c010a70f:	0f 8e 75 ff ff ff    	jle    c010a68a <check_sync+0xe4>$/;"	l
c010a715	obj/kernel.asm	/^c010a715:	c9                   	leave  $/;"	l
c010a716	obj/kernel.asm	/^c010a716:	c3                   	ret    $/;"	l
c010a717	obj/kernel.asm	/^c010a717 <wait_init>:$/;"	l
c010a717	obj/kernel.asm	/^c010a717:	55                   	push   %ebp$/;"	l
c010a718	obj/kernel.asm	/^c010a718:	89 e5                	mov    %esp,%ebp$/;"	l
c010a71a	obj/kernel.asm	/^c010a71a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a71d	obj/kernel.asm	/^c010a71d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a720	obj/kernel.asm	/^c010a720:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010a723	obj/kernel.asm	/^c010a723:	89 10                	mov    %edx,(%eax)$/;"	l
c010a725	obj/kernel.asm	/^c010a725:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a728	obj/kernel.asm	/^c010a728:	c7 40 04 00 00 00 80 	movl   $0x80000000,0x4(%eax)$/;"	l
c010a72f	obj/kernel.asm	/^c010a72f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a732	obj/kernel.asm	/^c010a732:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a735	obj/kernel.asm	/^c010a735:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a738	obj/kernel.asm	/^c010a738:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a73b	obj/kernel.asm	/^c010a73b:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a73e	obj/kernel.asm	/^c010a73e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a741	obj/kernel.asm	/^c010a741:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a744	obj/kernel.asm	/^c010a744:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a747	obj/kernel.asm	/^c010a747:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a74a	obj/kernel.asm	/^c010a74a:	89 10                	mov    %edx,(%eax)$/;"	l
c010a74c	obj/kernel.asm	/^c010a74c:	c9                   	leave  $/;"	l
c010a74d	obj/kernel.asm	/^c010a74d:	c3                   	ret    $/;"	l
c010a74e	obj/kernel.asm	/^c010a74e <wait_queue_init>:$/;"	l
c010a74e	obj/kernel.asm	/^c010a74e:	55                   	push   %ebp$/;"	l
c010a74f	obj/kernel.asm	/^c010a74f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a751	obj/kernel.asm	/^c010a751:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a754	obj/kernel.asm	/^c010a754:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a757	obj/kernel.asm	/^c010a757:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a75a	obj/kernel.asm	/^c010a75a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a75d	obj/kernel.asm	/^c010a75d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a760	obj/kernel.asm	/^c010a760:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a763	obj/kernel.asm	/^c010a763:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a766	obj/kernel.asm	/^c010a766:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a769	obj/kernel.asm	/^c010a769:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a76c	obj/kernel.asm	/^c010a76c:	89 10                	mov    %edx,(%eax)$/;"	l
c010a76e	obj/kernel.asm	/^c010a76e:	c9                   	leave  $/;"	l
c010a76f	obj/kernel.asm	/^c010a76f:	c3                   	ret    $/;"	l
c010a770	obj/kernel.asm	/^c010a770 <wait_queue_add>:$/;"	l
c010a770	obj/kernel.asm	/^c010a770:	55                   	push   %ebp$/;"	l
c010a771	obj/kernel.asm	/^c010a771:	89 e5                	mov    %esp,%ebp$/;"	l
c010a773	obj/kernel.asm	/^c010a773:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a776	obj/kernel.asm	/^c010a776:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a779	obj/kernel.asm	/^c010a779:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a77c	obj/kernel.asm	/^c010a77c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a77f	obj/kernel.asm	/^c010a77f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a782	obj/kernel.asm	/^c010a782:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a785	obj/kernel.asm	/^c010a785:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a788	obj/kernel.asm	/^c010a788:	0f 94 c0             	sete   %al$/;"	l
c010a78b	obj/kernel.asm	/^c010a78b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a78e	obj/kernel.asm	/^c010a78e:	85 c0                	test   %eax,%eax$/;"	l
c010a790	obj/kernel.asm	/^c010a790:	74 09                	je     c010a79b <wait_queue_add+0x2b>$/;"	l
c010a792	obj/kernel.asm	/^c010a792:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a795	obj/kernel.asm	/^c010a795:	8b 00                	mov    (%eax),%eax$/;"	l
c010a797	obj/kernel.asm	/^c010a797:	85 c0                	test   %eax,%eax$/;"	l
c010a799	obj/kernel.asm	/^c010a799:	75 24                	jne    c010a7bf <wait_queue_add+0x4f>$/;"	l
c010a79b	obj/kernel.asm	/^c010a79b:	c7 44 24 0c 2c 93 11 	movl   $0xc011932c,0xc(%esp)$/;"	l
c010a7a2	obj/kernel.asm	/^c010a7a2:	c0 $/;"	l
c010a7a3	obj/kernel.asm	/^c010a7a3:	c7 44 24 08 61 93 11 	movl   $0xc0119361,0x8(%esp)$/;"	l
c010a7aa	obj/kernel.asm	/^c010a7aa:	c0 $/;"	l
c010a7ab	obj/kernel.asm	/^c010a7ab:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c010a7b2	obj/kernel.asm	/^c010a7b2:	00 $/;"	l
c010a7b3	obj/kernel.asm	/^c010a7b3:	c7 04 24 76 93 11 c0 	movl   $0xc0119376,(%esp)$/;"	l
c010a7ba	obj/kernel.asm	/^c010a7ba:	e8 78 64 ff ff       	call   c0100c37 <__panic>$/;"	l
c010a7bf	obj/kernel.asm	/^c010a7bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a7c2	obj/kernel.asm	/^c010a7c2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a7c5	obj/kernel.asm	/^c010a7c5:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a7c8	obj/kernel.asm	/^c010a7c8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a7cb	obj/kernel.asm	/^c010a7cb:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c010a7ce	obj/kernel.asm	/^c010a7ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a7d1	obj/kernel.asm	/^c010a7d1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a7d4	obj/kernel.asm	/^c010a7d4:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010a7d7	obj/kernel.asm	/^c010a7d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a7da	obj/kernel.asm	/^c010a7da:	8b 00                	mov    (%eax),%eax$/;"	l
c010a7dc	obj/kernel.asm	/^c010a7dc:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a7df	obj/kernel.asm	/^c010a7df:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010a7e2	obj/kernel.asm	/^c010a7e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a7e5	obj/kernel.asm	/^c010a7e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a7e8	obj/kernel.asm	/^c010a7e8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a7eb	obj/kernel.asm	/^c010a7eb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7ee	obj/kernel.asm	/^c010a7ee:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a7f1	obj/kernel.asm	/^c010a7f1:	89 10                	mov    %edx,(%eax)$/;"	l
c010a7f3	obj/kernel.asm	/^c010a7f3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7f6	obj/kernel.asm	/^c010a7f6:	8b 10                	mov    (%eax),%edx$/;"	l
c010a7f8	obj/kernel.asm	/^c010a7f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a7fb	obj/kernel.asm	/^c010a7fb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a7fe	obj/kernel.asm	/^c010a7fe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010a804	obj/kernel.asm	/^c010a804:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a807	obj/kernel.asm	/^c010a807:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a80a	obj/kernel.asm	/^c010a80a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a80d	obj/kernel.asm	/^c010a80d:	89 10                	mov    %edx,(%eax)$/;"	l
c010a80f	obj/kernel.asm	/^c010a80f:	c9                   	leave  $/;"	l
c010a810	obj/kernel.asm	/^c010a810:	c3                   	ret    $/;"	l
c010a811	obj/kernel.asm	/^c010a811 <wait_queue_del>:$/;"	l
c010a811	obj/kernel.asm	/^c010a811:	55                   	push   %ebp$/;"	l
c010a812	obj/kernel.asm	/^c010a812:	89 e5                	mov    %esp,%ebp$/;"	l
c010a814	obj/kernel.asm	/^c010a814:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a817	obj/kernel.asm	/^c010a817:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a81a	obj/kernel.asm	/^c010a81a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a81d	obj/kernel.asm	/^c010a81d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a820	obj/kernel.asm	/^c010a820:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a823	obj/kernel.asm	/^c010a823:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a826	obj/kernel.asm	/^c010a826:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a829	obj/kernel.asm	/^c010a829:	0f 94 c0             	sete   %al$/;"	l
c010a82c	obj/kernel.asm	/^c010a82c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a82f	obj/kernel.asm	/^c010a82f:	85 c0                	test   %eax,%eax$/;"	l
c010a831	obj/kernel.asm	/^c010a831:	75 0b                	jne    c010a83e <wait_queue_del+0x2d>$/;"	l
c010a833	obj/kernel.asm	/^c010a833:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a836	obj/kernel.asm	/^c010a836:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a839	obj/kernel.asm	/^c010a839:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a83c	obj/kernel.asm	/^c010a83c:	74 24                	je     c010a862 <wait_queue_del+0x51>$/;"	l
c010a83e	obj/kernel.asm	/^c010a83e:	c7 44 24 0c 88 93 11 	movl   $0xc0119388,0xc(%esp)$/;"	l
c010a845	obj/kernel.asm	/^c010a845:	c0 $/;"	l
c010a846	obj/kernel.asm	/^c010a846:	c7 44 24 08 61 93 11 	movl   $0xc0119361,0x8(%esp)$/;"	l
c010a84d	obj/kernel.asm	/^c010a84d:	c0 $/;"	l
c010a84e	obj/kernel.asm	/^c010a84e:	c7 44 24 04 1c 00 00 	movl   $0x1c,0x4(%esp)$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	00 $/;"	l
c010a856	obj/kernel.asm	/^c010a856:	c7 04 24 76 93 11 c0 	movl   $0xc0119376,(%esp)$/;"	l
c010a85d	obj/kernel.asm	/^c010a85d:	e8 d5 63 ff ff       	call   c0100c37 <__panic>$/;"	l
c010a862	obj/kernel.asm	/^c010a862:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a865	obj/kernel.asm	/^c010a865:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a868	obj/kernel.asm	/^c010a868:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a86b	obj/kernel.asm	/^c010a86b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a86e	obj/kernel.asm	/^c010a86e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a871	obj/kernel.asm	/^c010a871:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a874	obj/kernel.asm	/^c010a874:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a877	obj/kernel.asm	/^c010a877:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a87a	obj/kernel.asm	/^c010a87a:	8b 12                	mov    (%edx),%edx$/;"	l
c010a87c	obj/kernel.asm	/^c010a87c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010a87f	obj/kernel.asm	/^c010a87f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a882	obj/kernel.asm	/^c010a882:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a885	obj/kernel.asm	/^c010a885:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a888	obj/kernel.asm	/^c010a888:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a88b	obj/kernel.asm	/^c010a88b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a88e	obj/kernel.asm	/^c010a88e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a891	obj/kernel.asm	/^c010a891:	89 10                	mov    %edx,(%eax)$/;"	l
c010a893	obj/kernel.asm	/^c010a893:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a896	obj/kernel.asm	/^c010a896:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a899	obj/kernel.asm	/^c010a899:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a89c	obj/kernel.asm	/^c010a89c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010a89f	obj/kernel.asm	/^c010a89f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a8a2	obj/kernel.asm	/^c010a8a2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8a5	obj/kernel.asm	/^c010a8a5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a8a8	obj/kernel.asm	/^c010a8a8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8ab	obj/kernel.asm	/^c010a8ab:	89 10                	mov    %edx,(%eax)$/;"	l
c010a8ad	obj/kernel.asm	/^c010a8ad:	c9                   	leave  $/;"	l
c010a8ae	obj/kernel.asm	/^c010a8ae:	c3                   	ret    $/;"	l
c010a8af	obj/kernel.asm	/^c010a8af <wait_queue_next>:$/;"	l
c010a8af	obj/kernel.asm	/^c010a8af:	55                   	push   %ebp$/;"	l
c010a8b0	obj/kernel.asm	/^c010a8b0:	89 e5                	mov    %esp,%ebp$/;"	l
c010a8b2	obj/kernel.asm	/^c010a8b2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a8b5	obj/kernel.asm	/^c010a8b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a8b8	obj/kernel.asm	/^c010a8b8:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a8bb	obj/kernel.asm	/^c010a8bb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a8c1	obj/kernel.asm	/^c010a8c1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a8c4	obj/kernel.asm	/^c010a8c4:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010a8c7	obj/kernel.asm	/^c010a8c7:	0f 94 c0             	sete   %al$/;"	l
c010a8ca	obj/kernel.asm	/^c010a8ca:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a8cd	obj/kernel.asm	/^c010a8cd:	85 c0                	test   %eax,%eax$/;"	l
c010a8cf	obj/kernel.asm	/^c010a8cf:	75 0b                	jne    c010a8dc <wait_queue_next+0x2d>$/;"	l
c010a8d1	obj/kernel.asm	/^c010a8d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a8d4	obj/kernel.asm	/^c010a8d4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a8d7	obj/kernel.asm	/^c010a8d7:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a8da	obj/kernel.asm	/^c010a8da:	74 24                	je     c010a900 <wait_queue_next+0x51>$/;"	l
c010a8dc	obj/kernel.asm	/^c010a8dc:	c7 44 24 0c 88 93 11 	movl   $0xc0119388,0xc(%esp)$/;"	l
c010a8e3	obj/kernel.asm	/^c010a8e3:	c0 $/;"	l
c010a8e4	obj/kernel.asm	/^c010a8e4:	c7 44 24 08 61 93 11 	movl   $0xc0119361,0x8(%esp)$/;"	l
c010a8eb	obj/kernel.asm	/^c010a8eb:	c0 $/;"	l
c010a8ec	obj/kernel.asm	/^c010a8ec:	c7 44 24 04 22 00 00 	movl   $0x22,0x4(%esp)$/;"	l
c010a8f3	obj/kernel.asm	/^c010a8f3:	00 $/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	c7 04 24 76 93 11 c0 	movl   $0xc0119376,(%esp)$/;"	l
c010a8fb	obj/kernel.asm	/^c010a8fb:	e8 37 63 ff ff       	call   c0100c37 <__panic>$/;"	l
c010a900	obj/kernel.asm	/^c010a900:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a903	obj/kernel.asm	/^c010a903:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a906	obj/kernel.asm	/^c010a906:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a909	obj/kernel.asm	/^c010a909:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a90c	obj/kernel.asm	/^c010a90c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a90f	obj/kernel.asm	/^c010a90f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a912	obj/kernel.asm	/^c010a912:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a915	obj/kernel.asm	/^c010a915:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010a918	obj/kernel.asm	/^c010a918:	74 08                	je     c010a922 <wait_queue_next+0x73>$/;"	l
c010a91a	obj/kernel.asm	/^c010a91a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a91d	obj/kernel.asm	/^c010a91d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a920	obj/kernel.asm	/^c010a920:	eb 05                	jmp    c010a927 <wait_queue_next+0x78>$/;"	l
c010a922	obj/kernel.asm	/^c010a922:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a927	obj/kernel.asm	/^c010a927:	c9                   	leave  $/;"	l
c010a928	obj/kernel.asm	/^c010a928:	c3                   	ret    $/;"	l
c010a929	obj/kernel.asm	/^c010a929 <wait_queue_prev>:$/;"	l
c010a929	obj/kernel.asm	/^c010a929:	55                   	push   %ebp$/;"	l
c010a92a	obj/kernel.asm	/^c010a92a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a92c	obj/kernel.asm	/^c010a92c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a92f	obj/kernel.asm	/^c010a92f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a932	obj/kernel.asm	/^c010a932:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a935	obj/kernel.asm	/^c010a935:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a938	obj/kernel.asm	/^c010a938:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a93b	obj/kernel.asm	/^c010a93b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a93e	obj/kernel.asm	/^c010a93e:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010a941	obj/kernel.asm	/^c010a941:	0f 94 c0             	sete   %al$/;"	l
c010a944	obj/kernel.asm	/^c010a944:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a947	obj/kernel.asm	/^c010a947:	85 c0                	test   %eax,%eax$/;"	l
c010a949	obj/kernel.asm	/^c010a949:	75 0b                	jne    c010a956 <wait_queue_prev+0x2d>$/;"	l
c010a94b	obj/kernel.asm	/^c010a94b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a94e	obj/kernel.asm	/^c010a94e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a951	obj/kernel.asm	/^c010a951:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a954	obj/kernel.asm	/^c010a954:	74 24                	je     c010a97a <wait_queue_prev+0x51>$/;"	l
c010a956	obj/kernel.asm	/^c010a956:	c7 44 24 0c 88 93 11 	movl   $0xc0119388,0xc(%esp)$/;"	l
c010a95d	obj/kernel.asm	/^c010a95d:	c0 $/;"	l
c010a95e	obj/kernel.asm	/^c010a95e:	c7 44 24 08 61 93 11 	movl   $0xc0119361,0x8(%esp)$/;"	l
c010a965	obj/kernel.asm	/^c010a965:	c0 $/;"	l
c010a966	obj/kernel.asm	/^c010a966:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c010a96d	obj/kernel.asm	/^c010a96d:	00 $/;"	l
c010a96e	obj/kernel.asm	/^c010a96e:	c7 04 24 76 93 11 c0 	movl   $0xc0119376,(%esp)$/;"	l
c010a975	obj/kernel.asm	/^c010a975:	e8 bd 62 ff ff       	call   c0100c37 <__panic>$/;"	l
c010a97a	obj/kernel.asm	/^c010a97a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a97d	obj/kernel.asm	/^c010a97d:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010a980	obj/kernel.asm	/^c010a980:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a983	obj/kernel.asm	/^c010a983:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a986	obj/kernel.asm	/^c010a986:	8b 00                	mov    (%eax),%eax$/;"	l
c010a988	obj/kernel.asm	/^c010a988:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a98b	obj/kernel.asm	/^c010a98b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a98e	obj/kernel.asm	/^c010a98e:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010a991	obj/kernel.asm	/^c010a991:	74 08                	je     c010a99b <wait_queue_prev+0x72>$/;"	l
c010a993	obj/kernel.asm	/^c010a993:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a996	obj/kernel.asm	/^c010a996:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a999	obj/kernel.asm	/^c010a999:	eb 05                	jmp    c010a9a0 <wait_queue_prev+0x77>$/;"	l
c010a99b	obj/kernel.asm	/^c010a99b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a9a0	obj/kernel.asm	/^c010a9a0:	c9                   	leave  $/;"	l
c010a9a1	obj/kernel.asm	/^c010a9a1:	c3                   	ret    $/;"	l
c010a9a2	obj/kernel.asm	/^c010a9a2 <wait_queue_first>:$/;"	l
c010a9a2	obj/kernel.asm	/^c010a9a2:	55                   	push   %ebp$/;"	l
c010a9a3	obj/kernel.asm	/^c010a9a3:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9a5	obj/kernel.asm	/^c010a9a5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a9a8	obj/kernel.asm	/^c010a9a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9ab	obj/kernel.asm	/^c010a9ab:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a9ae	obj/kernel.asm	/^c010a9ae:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a9b1	obj/kernel.asm	/^c010a9b1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a9b4	obj/kernel.asm	/^c010a9b4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a9b7	obj/kernel.asm	/^c010a9b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9ba	obj/kernel.asm	/^c010a9ba:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010a9bd	obj/kernel.asm	/^c010a9bd:	74 08                	je     c010a9c7 <wait_queue_first+0x25>$/;"	l
c010a9bf	obj/kernel.asm	/^c010a9bf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a9c2	obj/kernel.asm	/^c010a9c2:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a9c5	obj/kernel.asm	/^c010a9c5:	eb 05                	jmp    c010a9cc <wait_queue_first+0x2a>$/;"	l
c010a9c7	obj/kernel.asm	/^c010a9c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a9cc	obj/kernel.asm	/^c010a9cc:	c9                   	leave  $/;"	l
c010a9cd	obj/kernel.asm	/^c010a9cd:	c3                   	ret    $/;"	l
c010a9ce	obj/kernel.asm	/^c010a9ce <wait_queue_last>:$/;"	l
c010a9ce	obj/kernel.asm	/^c010a9ce:	55                   	push   %ebp$/;"	l
c010a9cf	obj/kernel.asm	/^c010a9cf:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9d1	obj/kernel.asm	/^c010a9d1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a9d4	obj/kernel.asm	/^c010a9d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9d7	obj/kernel.asm	/^c010a9d7:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a9da	obj/kernel.asm	/^c010a9da:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	8b 00                	mov    (%eax),%eax$/;"	l
c010a9df	obj/kernel.asm	/^c010a9df:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a9e2	obj/kernel.asm	/^c010a9e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9e5	obj/kernel.asm	/^c010a9e5:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010a9e8	obj/kernel.asm	/^c010a9e8:	74 08                	je     c010a9f2 <wait_queue_last+0x24>$/;"	l
c010a9ea	obj/kernel.asm	/^c010a9ea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a9ed	obj/kernel.asm	/^c010a9ed:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010a9f0	obj/kernel.asm	/^c010a9f0:	eb 05                	jmp    c010a9f7 <wait_queue_last+0x29>$/;"	l
c010a9f2	obj/kernel.asm	/^c010a9f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a9f7	obj/kernel.asm	/^c010a9f7:	c9                   	leave  $/;"	l
c010a9f8	obj/kernel.asm	/^c010a9f8:	c3                   	ret    $/;"	l
c010a9f9	obj/kernel.asm	/^c010a9f9 <wait_queue_empty>:$/;"	l
c010a9f9	obj/kernel.asm	/^c010a9f9:	55                   	push   %ebp$/;"	l
c010a9fa	obj/kernel.asm	/^c010a9fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9fc	obj/kernel.asm	/^c010a9fc:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a9ff	obj/kernel.asm	/^c010a9ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa02	obj/kernel.asm	/^c010aa02:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010aa05	obj/kernel.asm	/^c010aa05:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010aa08	obj/kernel.asm	/^c010aa08:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aa0b	obj/kernel.asm	/^c010aa0b:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c010aa0e	obj/kernel.asm	/^c010aa0e:	0f 94 c0             	sete   %al$/;"	l
c010aa11	obj/kernel.asm	/^c010aa11:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010aa14	obj/kernel.asm	/^c010aa14:	c9                   	leave  $/;"	l
c010aa15	obj/kernel.asm	/^c010aa15:	c3                   	ret    $/;"	l
c010aa16	obj/kernel.asm	/^c010aa16 <wait_in_queue>:$/;"	l
c010aa16	obj/kernel.asm	/^c010aa16:	55                   	push   %ebp$/;"	l
c010aa17	obj/kernel.asm	/^c010aa17:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa19	obj/kernel.asm	/^c010aa19:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010aa1c	obj/kernel.asm	/^c010aa1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa1f	obj/kernel.asm	/^c010aa1f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010aa22	obj/kernel.asm	/^c010aa22:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010aa25	obj/kernel.asm	/^c010aa25:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010aa28	obj/kernel.asm	/^c010aa28:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aa2b	obj/kernel.asm	/^c010aa2b:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c010aa2e	obj/kernel.asm	/^c010aa2e:	0f 94 c0             	sete   %al$/;"	l
c010aa31	obj/kernel.asm	/^c010aa31:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010aa34	obj/kernel.asm	/^c010aa34:	85 c0                	test   %eax,%eax$/;"	l
c010aa36	obj/kernel.asm	/^c010aa36:	0f 94 c0             	sete   %al$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010aa3c	obj/kernel.asm	/^c010aa3c:	c9                   	leave  $/;"	l
c010aa3d	obj/kernel.asm	/^c010aa3d:	c3                   	ret    $/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e <wakeup_wait>:$/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e:	55                   	push   %ebp$/;"	l
c010aa3f	obj/kernel.asm	/^c010aa3f:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa41	obj/kernel.asm	/^c010aa41:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010aa44	obj/kernel.asm	/^c010aa44:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010aa48	obj/kernel.asm	/^c010aa48:	74 12                	je     c010aa5c <wakeup_wait+0x1e>$/;"	l
c010aa4a	obj/kernel.asm	/^c010aa4a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aa4d	obj/kernel.asm	/^c010aa4d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aa51	obj/kernel.asm	/^c010aa51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa54	obj/kernel.asm	/^c010aa54:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aa57	obj/kernel.asm	/^c010aa57:	e8 b5 fd ff ff       	call   c010a811 <wait_queue_del>$/;"	l
c010aa5c	obj/kernel.asm	/^c010aa5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aa5f	obj/kernel.asm	/^c010aa5f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010aa62	obj/kernel.asm	/^c010aa62:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aa65	obj/kernel.asm	/^c010aa65:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aa68	obj/kernel.asm	/^c010aa68:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa6a	obj/kernel.asm	/^c010aa6a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aa6d	obj/kernel.asm	/^c010aa6d:	e8 85 46 00 00       	call   c010f0f7 <wakeup_proc>$/;"	l
c010aa72	obj/kernel.asm	/^c010aa72:	c9                   	leave  $/;"	l
c010aa73	obj/kernel.asm	/^c010aa73:	c3                   	ret    $/;"	l
c010aa74	obj/kernel.asm	/^c010aa74 <wakeup_first>:$/;"	l
c010aa74	obj/kernel.asm	/^c010aa74:	55                   	push   %ebp$/;"	l
c010aa75	obj/kernel.asm	/^c010aa75:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa77	obj/kernel.asm	/^c010aa77:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010aa7a	obj/kernel.asm	/^c010aa7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa7d	obj/kernel.asm	/^c010aa7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aa80	obj/kernel.asm	/^c010aa80:	e8 1d ff ff ff       	call   c010a9a2 <wait_queue_first>$/;"	l
c010aa85	obj/kernel.asm	/^c010aa85:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa88	obj/kernel.asm	/^c010aa88:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aa8c	obj/kernel.asm	/^c010aa8c:	74 20                	je     c010aaae <wakeup_first+0x3a>$/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010aa95	obj/kernel.asm	/^c010aa95:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aa98	obj/kernel.asm	/^c010aa98:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010aa9c	obj/kernel.asm	/^c010aa9c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aa9f	obj/kernel.asm	/^c010aa9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aaa3	obj/kernel.asm	/^c010aaa3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaa6	obj/kernel.asm	/^c010aaa6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aaa9	obj/kernel.asm	/^c010aaa9:	e8 90 ff ff ff       	call   c010aa3e <wakeup_wait>$/;"	l
c010aaae	obj/kernel.asm	/^c010aaae:	c9                   	leave  $/;"	l
c010aaaf	obj/kernel.asm	/^c010aaaf:	c3                   	ret    $/;"	l
c010aab0	obj/kernel.asm	/^c010aab0 <wakeup_queue>:$/;"	l
c010aab0	obj/kernel.asm	/^c010aab0:	55                   	push   %ebp$/;"	l
c010aab1	obj/kernel.asm	/^c010aab1:	89 e5                	mov    %esp,%ebp$/;"	l
c010aab3	obj/kernel.asm	/^c010aab3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010aab6	obj/kernel.asm	/^c010aab6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aab9	obj/kernel.asm	/^c010aab9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aabc	obj/kernel.asm	/^c010aabc:	e8 e1 fe ff ff       	call   c010a9a2 <wait_queue_first>$/;"	l
c010aac1	obj/kernel.asm	/^c010aac1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aac4	obj/kernel.asm	/^c010aac4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aac8	obj/kernel.asm	/^c010aac8:	74 79                	je     c010ab43 <wakeup_queue+0x93>$/;"	l
c010aaca	obj/kernel.asm	/^c010aaca:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010aace	obj/kernel.asm	/^c010aace:	74 37                	je     c010ab07 <wakeup_queue+0x57>$/;"	l
c010aad0	obj/kernel.asm	/^c010aad0:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010aad7	obj/kernel.asm	/^c010aad7:	00 $/;"	l
c010aad8	obj/kernel.asm	/^c010aad8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aadb	obj/kernel.asm	/^c010aadb:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010aadf	obj/kernel.asm	/^c010aadf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aae2	obj/kernel.asm	/^c010aae2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010aae6	obj/kernel.asm	/^c010aae6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aae9	obj/kernel.asm	/^c010aae9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aaec	obj/kernel.asm	/^c010aaec:	e8 4d ff ff ff       	call   c010aa3e <wakeup_wait>$/;"	l
c010aaf1	obj/kernel.asm	/^c010aaf1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaf4	obj/kernel.asm	/^c010aaf4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aaf7	obj/kernel.asm	/^c010aaf7:	e8 a6 fe ff ff       	call   c010a9a2 <wait_queue_first>$/;"	l
c010aafc	obj/kernel.asm	/^c010aafc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aaff	obj/kernel.asm	/^c010aaff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ab03	obj/kernel.asm	/^c010ab03:	75 cb                	jne    c010aad0 <wakeup_queue+0x20>$/;"	l
c010ab05	obj/kernel.asm	/^c010ab05:	eb 3c                	jmp    c010ab43 <wakeup_queue+0x93>$/;"	l
c010ab07	obj/kernel.asm	/^c010ab07:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010ab0e	obj/kernel.asm	/^c010ab0e:	00 $/;"	l
c010ab0f	obj/kernel.asm	/^c010ab0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ab12	obj/kernel.asm	/^c010ab12:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ab16	obj/kernel.asm	/^c010ab16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab19	obj/kernel.asm	/^c010ab19:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ab1d	obj/kernel.asm	/^c010ab1d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab20	obj/kernel.asm	/^c010ab20:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ab23	obj/kernel.asm	/^c010ab23:	e8 16 ff ff ff       	call   c010aa3e <wakeup_wait>$/;"	l
c010ab28	obj/kernel.asm	/^c010ab28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab2b	obj/kernel.asm	/^c010ab2b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ab2f	obj/kernel.asm	/^c010ab2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab32	obj/kernel.asm	/^c010ab32:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ab35	obj/kernel.asm	/^c010ab35:	e8 75 fd ff ff       	call   c010a8af <wait_queue_next>$/;"	l
c010ab3a	obj/kernel.asm	/^c010ab3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab3d	obj/kernel.asm	/^c010ab3d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ab41	obj/kernel.asm	/^c010ab41:	75 c4                	jne    c010ab07 <wakeup_queue+0x57>$/;"	l
c010ab43	obj/kernel.asm	/^c010ab43:	c9                   	leave  $/;"	l
c010ab44	obj/kernel.asm	/^c010ab44:	c3                   	ret    $/;"	l
c010ab45	obj/kernel.asm	/^c010ab45 <wait_current_set>:$/;"	l
c010ab45	obj/kernel.asm	/^c010ab45:	55                   	push   %ebp$/;"	l
c010ab46	obj/kernel.asm	/^c010ab46:	89 e5                	mov    %esp,%ebp$/;"	l
c010ab48	obj/kernel.asm	/^c010ab48:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ab4b	obj/kernel.asm	/^c010ab4b:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ab50	obj/kernel.asm	/^c010ab50:	85 c0                	test   %eax,%eax$/;"	l
c010ab52	obj/kernel.asm	/^c010ab52:	75 24                	jne    c010ab78 <wait_current_set+0x33>$/;"	l
c010ab54	obj/kernel.asm	/^c010ab54:	c7 44 24 0c c5 93 11 	movl   $0xc01193c5,0xc(%esp)$/;"	l
c010ab5b	obj/kernel.asm	/^c010ab5b:	c0 $/;"	l
c010ab5c	obj/kernel.asm	/^c010ab5c:	c7 44 24 08 61 93 11 	movl   $0xc0119361,0x8(%esp)$/;"	l
c010ab63	obj/kernel.asm	/^c010ab63:	c0 $/;"	l
c010ab64	obj/kernel.asm	/^c010ab64:	c7 44 24 04 74 00 00 	movl   $0x74,0x4(%esp)$/;"	l
c010ab6b	obj/kernel.asm	/^c010ab6b:	00 $/;"	l
c010ab6c	obj/kernel.asm	/^c010ab6c:	c7 04 24 76 93 11 c0 	movl   $0xc0119376,(%esp)$/;"	l
c010ab73	obj/kernel.asm	/^c010ab73:	e8 bf 60 ff ff       	call   c0100c37 <__panic>$/;"	l
c010ab78	obj/kernel.asm	/^c010ab78:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ab7d	obj/kernel.asm	/^c010ab7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ab81	obj/kernel.asm	/^c010ab81:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ab84	obj/kernel.asm	/^c010ab84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ab87	obj/kernel.asm	/^c010ab87:	e8 8b fb ff ff       	call   c010a717 <wait_init>$/;"	l
c010ab8c	obj/kernel.asm	/^c010ab8c:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ab91	obj/kernel.asm	/^c010ab91:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010ab97	obj/kernel.asm	/^c010ab97:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ab9c	obj/kernel.asm	/^c010ab9c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010ab9f	obj/kernel.asm	/^c010ab9f:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)$/;"	l
c010aba5	obj/kernel.asm	/^c010aba5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aba8	obj/kernel.asm	/^c010aba8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010abac	obj/kernel.asm	/^c010abac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abaf	obj/kernel.asm	/^c010abaf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010abb2	obj/kernel.asm	/^c010abb2:	e8 b9 fb ff ff       	call   c010a770 <wait_queue_add>$/;"	l
c010abb7	obj/kernel.asm	/^c010abb7:	c9                   	leave  $/;"	l
c010abb8	obj/kernel.asm	/^c010abb8:	c3                   	ret    $/;"	l
c010abb9	obj/kernel.asm	/^c010abb9 <__intr_save>:$/;"	l
c010abb9	obj/kernel.asm	/^c010abb9:	55                   	push   %ebp$/;"	l
c010abba	obj/kernel.asm	/^c010abba:	89 e5                	mov    %esp,%ebp$/;"	l
c010abbc	obj/kernel.asm	/^c010abbc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010abbf	obj/kernel.asm	/^c010abbf:	9c                   	pushf  $/;"	l
c010abc0	obj/kernel.asm	/^c010abc0:	58                   	pop    %eax$/;"	l
c010abc1	obj/kernel.asm	/^c010abc1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010abc4	obj/kernel.asm	/^c010abc4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010abc7	obj/kernel.asm	/^c010abc7:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010abcc	obj/kernel.asm	/^c010abcc:	85 c0                	test   %eax,%eax$/;"	l
c010abce	obj/kernel.asm	/^c010abce:	74 0c                	je     c010abdc <__intr_save+0x23>$/;"	l
c010abd0	obj/kernel.asm	/^c010abd0:	e8 b9 7e ff ff       	call   c0102a8e <intr_disable>$/;"	l
c010abd5	obj/kernel.asm	/^c010abd5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010abda	obj/kernel.asm	/^c010abda:	eb 05                	jmp    c010abe1 <__intr_save+0x28>$/;"	l
c010abdc	obj/kernel.asm	/^c010abdc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010abe1	obj/kernel.asm	/^c010abe1:	c9                   	leave  $/;"	l
c010abe2	obj/kernel.asm	/^c010abe2:	c3                   	ret    $/;"	l
c010abe3	obj/kernel.asm	/^c010abe3 <__intr_restore>:$/;"	l
c010abe3	obj/kernel.asm	/^c010abe3:	55                   	push   %ebp$/;"	l
c010abe4	obj/kernel.asm	/^c010abe4:	89 e5                	mov    %esp,%ebp$/;"	l
c010abe6	obj/kernel.asm	/^c010abe6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010abe9	obj/kernel.asm	/^c010abe9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010abed	obj/kernel.asm	/^c010abed:	74 05                	je     c010abf4 <__intr_restore+0x11>$/;"	l
c010abef	obj/kernel.asm	/^c010abef:	e8 94 7e ff ff       	call   c0102a88 <intr_enable>$/;"	l
c010abf4	obj/kernel.asm	/^c010abf4:	c9                   	leave  $/;"	l
c010abf5	obj/kernel.asm	/^c010abf5:	c3                   	ret    $/;"	l
c010abf6	obj/kernel.asm	/^c010abf6 <sem_init>:$/;"	l
c010abf6	obj/kernel.asm	/^c010abf6:	55                   	push   %ebp$/;"	l
c010abf7	obj/kernel.asm	/^c010abf7:	89 e5                	mov    %esp,%ebp$/;"	l
c010abf9	obj/kernel.asm	/^c010abf9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010abfc	obj/kernel.asm	/^c010abfc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abff	obj/kernel.asm	/^c010abff:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ac02	obj/kernel.asm	/^c010ac02:	89 10                	mov    %edx,(%eax)$/;"	l
c010ac04	obj/kernel.asm	/^c010ac04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac0d	obj/kernel.asm	/^c010ac0d:	e8 3c fb ff ff       	call   c010a74e <wait_queue_init>$/;"	l
c010ac12	obj/kernel.asm	/^c010ac12:	c9                   	leave  $/;"	l
c010ac13	obj/kernel.asm	/^c010ac13:	c3                   	ret    $/;"	l
c010ac14	obj/kernel.asm	/^c010ac14 <__up>:$/;"	l
c010ac14	obj/kernel.asm	/^c010ac14:	55                   	push   %ebp$/;"	l
c010ac15	obj/kernel.asm	/^c010ac15:	89 e5                	mov    %esp,%ebp$/;"	l
c010ac17	obj/kernel.asm	/^c010ac17:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ac1a	obj/kernel.asm	/^c010ac1a:	e8 9a ff ff ff       	call   c010abb9 <__intr_save>$/;"	l
c010ac1f	obj/kernel.asm	/^c010ac1f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac22	obj/kernel.asm	/^c010ac22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac25	obj/kernel.asm	/^c010ac25:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ac28	obj/kernel.asm	/^c010ac28:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ac2b	obj/kernel.asm	/^c010ac2b:	e8 72 fd ff ff       	call   c010a9a2 <wait_queue_first>$/;"	l
c010ac30	obj/kernel.asm	/^c010ac30:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ac33	obj/kernel.asm	/^c010ac33:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ac37	obj/kernel.asm	/^c010ac37:	75 0f                	jne    c010ac48 <__up+0x34>$/;"	l
c010ac39	obj/kernel.asm	/^c010ac39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac3c	obj/kernel.asm	/^c010ac3c:	8b 00                	mov    (%eax),%eax$/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010ac41	obj/kernel.asm	/^c010ac41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac44	obj/kernel.asm	/^c010ac44:	89 10                	mov    %edx,(%eax)$/;"	l
c010ac46	obj/kernel.asm	/^c010ac46:	eb 58                	jmp    c010aca0 <__up+0x8c>$/;"	l
c010ac48	obj/kernel.asm	/^c010ac48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac4b	obj/kernel.asm	/^c010ac4b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010ac56	obj/kernel.asm	/^c010ac56:	74 24                	je     c010ac7c <__up+0x68>$/;"	l
c010ac58	obj/kernel.asm	/^c010ac58:	c7 44 24 0c d8 93 11 	movl   $0xc01193d8,0xc(%esp)$/;"	l
c010ac5f	obj/kernel.asm	/^c010ac5f:	c0 $/;"	l
c010ac60	obj/kernel.asm	/^c010ac60:	c7 44 24 08 fd 93 11 	movl   $0xc01193fd,0x8(%esp)$/;"	l
c010ac67	obj/kernel.asm	/^c010ac67:	c0 $/;"	l
c010ac68	obj/kernel.asm	/^c010ac68:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c010ac6f	obj/kernel.asm	/^c010ac6f:	00 $/;"	l
c010ac70	obj/kernel.asm	/^c010ac70:	c7 04 24 12 94 11 c0 	movl   $0xc0119412,(%esp)$/;"	l
c010ac77	obj/kernel.asm	/^c010ac77:	e8 bb 5f ff ff       	call   c0100c37 <__panic>$/;"	l
c010ac7c	obj/kernel.asm	/^c010ac7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac7f	obj/kernel.asm	/^c010ac7f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010ac82	obj/kernel.asm	/^c010ac82:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010ac89	obj/kernel.asm	/^c010ac89:	00 $/;"	l
c010ac8a	obj/kernel.asm	/^c010ac8a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ac8d	obj/kernel.asm	/^c010ac8d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010ac91	obj/kernel.asm	/^c010ac91:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac94	obj/kernel.asm	/^c010ac94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ac98	obj/kernel.asm	/^c010ac98:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ac9b	obj/kernel.asm	/^c010ac9b:	e8 9e fd ff ff       	call   c010aa3e <wakeup_wait>$/;"	l
c010aca0	obj/kernel.asm	/^c010aca0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aca3	obj/kernel.asm	/^c010aca3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010aca6	obj/kernel.asm	/^c010aca6:	e8 38 ff ff ff       	call   c010abe3 <__intr_restore>$/;"	l
c010acab	obj/kernel.asm	/^c010acab:	c9                   	leave  $/;"	l
c010acac	obj/kernel.asm	/^c010acac:	c3                   	ret    $/;"	l
c010acad	obj/kernel.asm	/^c010acad <__down>:$/;"	l
c010acad	obj/kernel.asm	/^c010acad:	55                   	push   %ebp$/;"	l
c010acae	obj/kernel.asm	/^c010acae:	89 e5                	mov    %esp,%ebp$/;"	l
c010acb0	obj/kernel.asm	/^c010acb0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010acb3	obj/kernel.asm	/^c010acb3:	e8 01 ff ff ff       	call   c010abb9 <__intr_save>$/;"	l
c010acb8	obj/kernel.asm	/^c010acb8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010acbb	obj/kernel.asm	/^c010acbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010acbe	obj/kernel.asm	/^c010acbe:	8b 00                	mov    (%eax),%eax$/;"	l
c010acc0	obj/kernel.asm	/^c010acc0:	85 c0                	test   %eax,%eax$/;"	l
c010acc2	obj/kernel.asm	/^c010acc2:	7e 22                	jle    c010ace6 <__down+0x39>$/;"	l
c010acc4	obj/kernel.asm	/^c010acc4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010acc7	obj/kernel.asm	/^c010acc7:	8b 00                	mov    (%eax),%eax$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010accc	obj/kernel.asm	/^c010accc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	89 10                	mov    %edx,(%eax)$/;"	l
c010acd1	obj/kernel.asm	/^c010acd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010acd4	obj/kernel.asm	/^c010acd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010acd7	obj/kernel.asm	/^c010acd7:	e8 07 ff ff ff       	call   c010abe3 <__intr_restore>$/;"	l
c010acdc	obj/kernel.asm	/^c010acdc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ace1	obj/kernel.asm	/^c010ace1:	e9 81 00 00 00       	jmp    c010ad67 <__down+0xba>$/;"	l
c010ace6	obj/kernel.asm	/^c010ace6:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010ace9	obj/kernel.asm	/^c010ace9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010acec	obj/kernel.asm	/^c010acec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010acef	obj/kernel.asm	/^c010acef:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010acf2	obj/kernel.asm	/^c010acf2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010acf5	obj/kernel.asm	/^c010acf5:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010acf9	obj/kernel.asm	/^c010acf9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ad00	obj/kernel.asm	/^c010ad00:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ad03	obj/kernel.asm	/^c010ad03:	e8 3d fe ff ff       	call   c010ab45 <wait_current_set>$/;"	l
c010ad08	obj/kernel.asm	/^c010ad08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad0b	obj/kernel.asm	/^c010ad0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad0e	obj/kernel.asm	/^c010ad0e:	e8 d0 fe ff ff       	call   c010abe3 <__intr_restore>$/;"	l
c010ad13	obj/kernel.asm	/^c010ad13:	e8 7b 44 00 00       	call   c010f193 <schedule>$/;"	l
c010ad18	obj/kernel.asm	/^c010ad18:	e8 9c fe ff ff       	call   c010abb9 <__intr_save>$/;"	l
c010ad1d	obj/kernel.asm	/^c010ad1d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad23	obj/kernel.asm	/^c010ad23:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad26	obj/kernel.asm	/^c010ad26:	e8 eb fc ff ff       	call   c010aa16 <wait_in_queue>$/;"	l
c010ad2b	obj/kernel.asm	/^c010ad2b:	85 c0                	test   %eax,%eax$/;"	l
c010ad2d	obj/kernel.asm	/^c010ad2d:	74 15                	je     c010ad44 <__down+0x97>$/;"	l
c010ad2f	obj/kernel.asm	/^c010ad2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad32	obj/kernel.asm	/^c010ad32:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010ad35	obj/kernel.asm	/^c010ad35:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad38	obj/kernel.asm	/^c010ad38:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ad3c	obj/kernel.asm	/^c010ad3c:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ad3f	obj/kernel.asm	/^c010ad3f:	e8 cd fa ff ff       	call   c010a811 <wait_queue_del>$/;"	l
c010ad44	obj/kernel.asm	/^c010ad44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad47	obj/kernel.asm	/^c010ad47:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad4a	obj/kernel.asm	/^c010ad4a:	e8 94 fe ff ff       	call   c010abe3 <__intr_restore>$/;"	l
c010ad4f	obj/kernel.asm	/^c010ad4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad52	obj/kernel.asm	/^c010ad52:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ad55	obj/kernel.asm	/^c010ad55:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010ad58	obj/kernel.asm	/^c010ad58:	74 08                	je     c010ad62 <__down+0xb5>$/;"	l
c010ad5a	obj/kernel.asm	/^c010ad5a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad5d	obj/kernel.asm	/^c010ad5d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ad60	obj/kernel.asm	/^c010ad60:	eb 05                	jmp    c010ad67 <__down+0xba>$/;"	l
c010ad62	obj/kernel.asm	/^c010ad62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ad67	obj/kernel.asm	/^c010ad67:	c9                   	leave  $/;"	l
c010ad68	obj/kernel.asm	/^c010ad68:	c3                   	ret    $/;"	l
c010ad69	obj/kernel.asm	/^c010ad69 <up>:$/;"	l
c010ad69	obj/kernel.asm	/^c010ad69:	55                   	push   %ebp$/;"	l
c010ad6a	obj/kernel.asm	/^c010ad6a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad6c	obj/kernel.asm	/^c010ad6c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad6f	obj/kernel.asm	/^c010ad6f:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
c010ad76	obj/kernel.asm	/^c010ad76:	00 $/;"	l
c010ad77	obj/kernel.asm	/^c010ad77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad7a	obj/kernel.asm	/^c010ad7a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad7d	obj/kernel.asm	/^c010ad7d:	e8 92 fe ff ff       	call   c010ac14 <__up>$/;"	l
c010ad82	obj/kernel.asm	/^c010ad82:	c9                   	leave  $/;"	l
c010ad83	obj/kernel.asm	/^c010ad83:	c3                   	ret    $/;"	l
c010ad84	obj/kernel.asm	/^c010ad84 <down>:$/;"	l
c010ad84	obj/kernel.asm	/^c010ad84:	55                   	push   %ebp$/;"	l
c010ad85	obj/kernel.asm	/^c010ad85:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad87	obj/kernel.asm	/^c010ad87:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ad8a	obj/kernel.asm	/^c010ad8a:	c7 44 24 04 00 01 00 	movl   $0x100,0x4(%esp)$/;"	l
c010ad91	obj/kernel.asm	/^c010ad91:	00 $/;"	l
c010ad92	obj/kernel.asm	/^c010ad92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad95	obj/kernel.asm	/^c010ad95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ad98	obj/kernel.asm	/^c010ad98:	e8 10 ff ff ff       	call   c010acad <__down>$/;"	l
c010ad9d	obj/kernel.asm	/^c010ad9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ada0	obj/kernel.asm	/^c010ada0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ada4	obj/kernel.asm	/^c010ada4:	74 24                	je     c010adca <down+0x46>$/;"	l
c010ada6	obj/kernel.asm	/^c010ada6:	c7 44 24 0c 22 94 11 	movl   $0xc0119422,0xc(%esp)$/;"	l
c010adad	obj/kernel.asm	/^c010adad:	c0 $/;"	l
c010adae	obj/kernel.asm	/^c010adae:	c7 44 24 08 fd 93 11 	movl   $0xc01193fd,0x8(%esp)$/;"	l
c010adb5	obj/kernel.asm	/^c010adb5:	c0 $/;"	l
c010adb6	obj/kernel.asm	/^c010adb6:	c7 44 24 04 40 00 00 	movl   $0x40,0x4(%esp)$/;"	l
c010adbd	obj/kernel.asm	/^c010adbd:	00 $/;"	l
c010adbe	obj/kernel.asm	/^c010adbe:	c7 04 24 12 94 11 c0 	movl   $0xc0119412,(%esp)$/;"	l
c010adc5	obj/kernel.asm	/^c010adc5:	e8 6d 5e ff ff       	call   c0100c37 <__panic>$/;"	l
c010adca	obj/kernel.asm	/^c010adca:	c9                   	leave  $/;"	l
c010adcb	obj/kernel.asm	/^c010adcb:	c3                   	ret    $/;"	l
c010adcc	obj/kernel.asm	/^c010adcc <try_down>:$/;"	l
c010adcc	obj/kernel.asm	/^c010adcc:	55                   	push   %ebp$/;"	l
c010adcd	obj/kernel.asm	/^c010adcd:	89 e5                	mov    %esp,%ebp$/;"	l
c010adcf	obj/kernel.asm	/^c010adcf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010add2	obj/kernel.asm	/^c010add2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010add9	obj/kernel.asm	/^c010add9:	e8 db fd ff ff       	call   c010abb9 <__intr_save>$/;"	l
c010adde	obj/kernel.asm	/^c010adde:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ade1	obj/kernel.asm	/^c010ade1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ade4	obj/kernel.asm	/^c010ade4:	8b 00                	mov    (%eax),%eax$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	85 c0                	test   %eax,%eax$/;"	l
c010ade8	obj/kernel.asm	/^c010ade8:	7e 14                	jle    c010adfe <try_down+0x32>$/;"	l
c010adea	obj/kernel.asm	/^c010adea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aded	obj/kernel.asm	/^c010aded:	8b 00                	mov    (%eax),%eax$/;"	l
c010adef	obj/kernel.asm	/^c010adef:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010adf2	obj/kernel.asm	/^c010adf2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010adf5	obj/kernel.asm	/^c010adf5:	89 10                	mov    %edx,(%eax)$/;"	l
c010adf7	obj/kernel.asm	/^c010adf7:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010adfe	obj/kernel.asm	/^c010adfe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae01	obj/kernel.asm	/^c010ae01:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae04	obj/kernel.asm	/^c010ae04:	e8 da fd ff ff       	call   c010abe3 <__intr_restore>$/;"	l
c010ae09	obj/kernel.asm	/^c010ae09:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	c9                   	leave  $/;"	l
c010ae0d	obj/kernel.asm	/^c010ae0d:	c3                   	ret    $/;"	l
c010ae0e	obj/kernel.asm	/^c010ae0e <monitor_init>:$/;"	l
c010ae0e	obj/kernel.asm	/^c010ae0e:	55                   	push   %ebp$/;"	l
c010ae0f	obj/kernel.asm	/^c010ae0f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae11	obj/kernel.asm	/^c010ae11:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ae18	obj/kernel.asm	/^c010ae18:	75 24                	jne    c010ae3e <monitor_init+0x30>$/;"	l
c010ae1a	obj/kernel.asm	/^c010ae1a:	c7 44 24 0c 30 94 11 	movl   $0xc0119430,0xc(%esp)$/;"	l
c010ae21	obj/kernel.asm	/^c010ae21:	c0 $/;"	l
c010ae22	obj/kernel.asm	/^c010ae22:	c7 44 24 08 39 94 11 	movl   $0xc0119439,0x8(%esp)$/;"	l
c010ae29	obj/kernel.asm	/^c010ae29:	c0 $/;"	l
c010ae2a	obj/kernel.asm	/^c010ae2a:	c7 44 24 04 0b 00 00 	movl   $0xb,0x4(%esp)$/;"	l
c010ae31	obj/kernel.asm	/^c010ae31:	00 $/;"	l
c010ae32	obj/kernel.asm	/^c010ae32:	c7 04 24 4e 94 11 c0 	movl   $0xc011944e,(%esp)$/;"	l
c010ae39	obj/kernel.asm	/^c010ae39:	e8 f9 5d ff ff       	call   c0100c37 <__panic>$/;"	l
c010ae3e	obj/kernel.asm	/^c010ae3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae41	obj/kernel.asm	/^c010ae41:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010ae48	obj/kernel.asm	/^c010ae48:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae4b	obj/kernel.asm	/^c010ae4b:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010ae52	obj/kernel.asm	/^c010ae52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae55	obj/kernel.asm	/^c010ae55:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010ae5c	obj/kernel.asm	/^c010ae5c:	00 $/;"	l
c010ae5d	obj/kernel.asm	/^c010ae5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae60	obj/kernel.asm	/^c010ae60:	e8 91 fd ff ff       	call   c010abf6 <sem_init>$/;"	l
c010ae65	obj/kernel.asm	/^c010ae65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae68	obj/kernel.asm	/^c010ae68:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010ae6b	obj/kernel.asm	/^c010ae6b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010ae72	obj/kernel.asm	/^c010ae72:	00 $/;"	l
c010ae73	obj/kernel.asm	/^c010ae73:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae76	obj/kernel.asm	/^c010ae76:	e8 7b fd ff ff       	call   c010abf6 <sem_init>$/;"	l
c010ae7b	obj/kernel.asm	/^c010ae7b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ae7e	obj/kernel.asm	/^c010ae7e:	89 d0                	mov    %edx,%eax$/;"	l
c010ae80	obj/kernel.asm	/^c010ae80:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010ae83	obj/kernel.asm	/^c010ae83:	01 d0                	add    %edx,%eax$/;"	l
c010ae85	obj/kernel.asm	/^c010ae85:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010ae88	obj/kernel.asm	/^c010ae88:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ae8b	obj/kernel.asm	/^c010ae8b:	e8 58 d3 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ae93	obj/kernel.asm	/^c010ae93:	89 42 1c             	mov    %eax,0x1c(%edx)$/;"	l
c010ae96	obj/kernel.asm	/^c010ae96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae99	obj/kernel.asm	/^c010ae99:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010ae9c	obj/kernel.asm	/^c010ae9c:	85 c0                	test   %eax,%eax$/;"	l
c010ae9e	obj/kernel.asm	/^c010ae9e:	75 24                	jne    c010aec4 <monitor_init+0xb6>$/;"	l
c010aea0	obj/kernel.asm	/^c010aea0:	c7 44 24 0c 62 94 11 	movl   $0xc0119462,0xc(%esp)$/;"	l
c010aea7	obj/kernel.asm	/^c010aea7:	c0 $/;"	l
c010aea8	obj/kernel.asm	/^c010aea8:	c7 44 24 08 39 94 11 	movl   $0xc0119439,0x8(%esp)$/;"	l
c010aeaf	obj/kernel.asm	/^c010aeaf:	c0 $/;"	l
c010aeb0	obj/kernel.asm	/^c010aeb0:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c010aeb7	obj/kernel.asm	/^c010aeb7:	00 $/;"	l
c010aeb8	obj/kernel.asm	/^c010aeb8:	c7 04 24 4e 94 11 c0 	movl   $0xc011944e,(%esp)$/;"	l
c010aebf	obj/kernel.asm	/^c010aebf:	e8 73 5d ff ff       	call   c0100c37 <__panic>$/;"	l
c010aec4	obj/kernel.asm	/^c010aec4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010aecb	obj/kernel.asm	/^c010aecb:	eb 61                	jmp    c010af2e <monitor_init+0x120>$/;"	l
c010aecd	obj/kernel.asm	/^c010aecd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aed0	obj/kernel.asm	/^c010aed0:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010aed3	obj/kernel.asm	/^c010aed3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010aed6	obj/kernel.asm	/^c010aed6:	89 d0                	mov    %edx,%eax$/;"	l
c010aed8	obj/kernel.asm	/^c010aed8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010aedb	obj/kernel.asm	/^c010aedb:	01 d0                	add    %edx,%eax$/;"	l
c010aedd	obj/kernel.asm	/^c010aedd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010aee0	obj/kernel.asm	/^c010aee0:	01 c8                	add    %ecx,%eax$/;"	l
c010aee2	obj/kernel.asm	/^c010aee2:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010aee9	obj/kernel.asm	/^c010aee9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	89 d0                	mov    %edx,%eax$/;"	l
c010aef4	obj/kernel.asm	/^c010aef4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010aef7	obj/kernel.asm	/^c010aef7:	01 d0                	add    %edx,%eax$/;"	l
c010aef9	obj/kernel.asm	/^c010aef9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010aefc	obj/kernel.asm	/^c010aefc:	01 c8                	add    %ecx,%eax$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010af05	obj/kernel.asm	/^c010af05:	00 $/;"	l
c010af06	obj/kernel.asm	/^c010af06:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af09	obj/kernel.asm	/^c010af09:	e8 e8 fc ff ff       	call   c010abf6 <sem_init>$/;"	l
c010af0e	obj/kernel.asm	/^c010af0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af11	obj/kernel.asm	/^c010af11:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010af14	obj/kernel.asm	/^c010af14:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010af17	obj/kernel.asm	/^c010af17:	89 d0                	mov    %edx,%eax$/;"	l
c010af19	obj/kernel.asm	/^c010af19:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010af1c	obj/kernel.asm	/^c010af1c:	01 d0                	add    %edx,%eax$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010af24	obj/kernel.asm	/^c010af24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af27	obj/kernel.asm	/^c010af27:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c010af2a	obj/kernel.asm	/^c010af2a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010af2e	obj/kernel.asm	/^c010af2e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010af34	obj/kernel.asm	/^c010af34:	72 97                	jb     c010aecd <monitor_init+0xbf>$/;"	l
c010af36	obj/kernel.asm	/^c010af36:	c9                   	leave  $/;"	l
c010af37	obj/kernel.asm	/^c010af37:	c3                   	ret    $/;"	l
c010af38	obj/kernel.asm	/^c010af38 <cond_signal>:$/;"	l
c010af38	obj/kernel.asm	/^c010af38:	55                   	push   %ebp$/;"	l
c010af39	obj/kernel.asm	/^c010af39:	89 e5                	mov    %esp,%ebp$/;"	l
c010af3b	obj/kernel.asm	/^c010af3b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010af3e	obj/kernel.asm	/^c010af3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af41	obj/kernel.asm	/^c010af41:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010af44	obj/kernel.asm	/^c010af44:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010af47	obj/kernel.asm	/^c010af47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af4a	obj/kernel.asm	/^c010af4a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010af4d	obj/kernel.asm	/^c010af4d:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010af51	obj/kernel.asm	/^c010af51:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010af55	obj/kernel.asm	/^c010af55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af58	obj/kernel.asm	/^c010af58:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010af5c	obj/kernel.asm	/^c010af5c:	c7 04 24 70 94 11 c0 	movl   $0xc0119470,(%esp)$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	e8 78 5b ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010af68	obj/kernel.asm	/^c010af68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af6b	obj/kernel.asm	/^c010af6b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010af6e	obj/kernel.asm	/^c010af6e:	85 c0                	test   %eax,%eax$/;"	l
c010af70	obj/kernel.asm	/^c010af70:	7e 3a                	jle    c010afac <cond_signal+0x74>$/;"	l
c010af72	obj/kernel.asm	/^c010af72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af75	obj/kernel.asm	/^c010af75:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010af78	obj/kernel.asm	/^c010af78:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010af7b	obj/kernel.asm	/^c010af7b:	83 c2 01             	add    $0x1,%edx$/;"	l
c010af7e	obj/kernel.asm	/^c010af7e:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010af81	obj/kernel.asm	/^c010af81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af84	obj/kernel.asm	/^c010af84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af87	obj/kernel.asm	/^c010af87:	e8 dd fd ff ff       	call   c010ad69 <up>$/;"	l
c010af8c	obj/kernel.asm	/^c010af8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af8f	obj/kernel.asm	/^c010af8f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010af92	obj/kernel.asm	/^c010af92:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010af95	obj/kernel.asm	/^c010af95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010af98	obj/kernel.asm	/^c010af98:	e8 e7 fd ff ff       	call   c010ad84 <down>$/;"	l
c010af9d	obj/kernel.asm	/^c010af9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afa0	obj/kernel.asm	/^c010afa0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010afa3	obj/kernel.asm	/^c010afa3:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010afa6	obj/kernel.asm	/^c010afa6:	83 ea 01             	sub    $0x1,%edx$/;"	l
c010afa9	obj/kernel.asm	/^c010afa9:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010afac	obj/kernel.asm	/^c010afac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afaf	obj/kernel.asm	/^c010afaf:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010afb2	obj/kernel.asm	/^c010afb2:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010afb5	obj/kernel.asm	/^c010afb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afb8	obj/kernel.asm	/^c010afb8:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010afbb	obj/kernel.asm	/^c010afbb:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010afbf	obj/kernel.asm	/^c010afbf:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010afc3	obj/kernel.asm	/^c010afc3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afc6	obj/kernel.asm	/^c010afc6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010afca	obj/kernel.asm	/^c010afca:	c7 04 24 b8 94 11 c0 	movl   $0xc01194b8,(%esp)$/;"	l
c010afd1	obj/kernel.asm	/^c010afd1:	e8 0a 5b ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010afd6	obj/kernel.asm	/^c010afd6:	c9                   	leave  $/;"	l
c010afd7	obj/kernel.asm	/^c010afd7:	c3                   	ret    $/;"	l
c010afd8	obj/kernel.asm	/^c010afd8 <cond_wait>:$/;"	l
c010afd8	obj/kernel.asm	/^c010afd8:	55                   	push   %ebp$/;"	l
c010afd9	obj/kernel.asm	/^c010afd9:	89 e5                	mov    %esp,%ebp$/;"	l
c010afdb	obj/kernel.asm	/^c010afdb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010afde	obj/kernel.asm	/^c010afde:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afe1	obj/kernel.asm	/^c010afe1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010afe4	obj/kernel.asm	/^c010afe4:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010afe7	obj/kernel.asm	/^c010afe7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afea	obj/kernel.asm	/^c010afea:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010afed	obj/kernel.asm	/^c010afed:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010aff1	obj/kernel.asm	/^c010aff1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010aff5	obj/kernel.asm	/^c010aff5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aff8	obj/kernel.asm	/^c010aff8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010affc	obj/kernel.asm	/^c010affc:	c7 04 24 fc 94 11 c0 	movl   $0xc01194fc,(%esp)$/;"	l
c010b003	obj/kernel.asm	/^c010b003:	e8 d8 5a ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010b008	obj/kernel.asm	/^c010b008:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b00b	obj/kernel.asm	/^c010b00b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b00e	obj/kernel.asm	/^c010b00e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b011	obj/kernel.asm	/^c010b011:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b014	obj/kernel.asm	/^c010b014:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b017	obj/kernel.asm	/^c010b017:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b01a	obj/kernel.asm	/^c010b01a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b01d	obj/kernel.asm	/^c010b01d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b020	obj/kernel.asm	/^c010b020:	85 c0                	test   %eax,%eax$/;"	l
c010b022	obj/kernel.asm	/^c010b022:	7e 13                	jle    c010b037 <cond_wait+0x5f>$/;"	l
c010b024	obj/kernel.asm	/^c010b024:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b027	obj/kernel.asm	/^c010b027:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b02a	obj/kernel.asm	/^c010b02a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b02d	obj/kernel.asm	/^c010b02d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b030	obj/kernel.asm	/^c010b030:	e8 34 fd ff ff       	call   c010ad69 <up>$/;"	l
c010b035	obj/kernel.asm	/^c010b035:	eb 0e                	jmp    c010b045 <cond_wait+0x6d>$/;"	l
c010b037	obj/kernel.asm	/^c010b037:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b03a	obj/kernel.asm	/^c010b03a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b03d	obj/kernel.asm	/^c010b03d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b040	obj/kernel.asm	/^c010b040:	e8 24 fd ff ff       	call   c010ad69 <up>$/;"	l
c010b045	obj/kernel.asm	/^c010b045:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b048	obj/kernel.asm	/^c010b048:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b04b	obj/kernel.asm	/^c010b04b:	e8 34 fd ff ff       	call   c010ad84 <down>$/;"	l
c010b050	obj/kernel.asm	/^c010b050:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b053	obj/kernel.asm	/^c010b053:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b056	obj/kernel.asm	/^c010b056:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b059	obj/kernel.asm	/^c010b059:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b05c	obj/kernel.asm	/^c010b05c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b05f	obj/kernel.asm	/^c010b05f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b062	obj/kernel.asm	/^c010b062:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b065	obj/kernel.asm	/^c010b065:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010b068	obj/kernel.asm	/^c010b068:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b06b	obj/kernel.asm	/^c010b06b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b06e	obj/kernel.asm	/^c010b06e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b072	obj/kernel.asm	/^c010b072:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b076	obj/kernel.asm	/^c010b076:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b079	obj/kernel.asm	/^c010b079:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	c7 04 24 40 95 11 c0 	movl   $0xc0119540,(%esp)$/;"	l
c010b084	obj/kernel.asm	/^c010b084:	e8 57 5a ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010b089	obj/kernel.asm	/^c010b089:	c9                   	leave  $/;"	l
c010b08a	obj/kernel.asm	/^c010b08a:	c3                   	ret    $/;"	l
c010b08b	obj/kernel.asm	/^c010b08b <lock_mm>:$/;"	l
c010b08b	obj/kernel.asm	/^c010b08b:	55                   	push   %ebp$/;"	l
c010b08c	obj/kernel.asm	/^c010b08c:	89 e5                	mov    %esp,%ebp$/;"	l
c010b08e	obj/kernel.asm	/^c010b08e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b091	obj/kernel.asm	/^c010b091:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b095	obj/kernel.asm	/^c010b095:	74 25                	je     c010b0bc <lock_mm+0x31>$/;"	l
c010b097	obj/kernel.asm	/^c010b097:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b09a	obj/kernel.asm	/^c010b09a:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b09d	obj/kernel.asm	/^c010b09d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b0a0	obj/kernel.asm	/^c010b0a0:	e8 df fc ff ff       	call   c010ad84 <down>$/;"	l
c010b0a5	obj/kernel.asm	/^c010b0a5:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b0aa	obj/kernel.asm	/^c010b0aa:	85 c0                	test   %eax,%eax$/;"	l
c010b0ac	obj/kernel.asm	/^c010b0ac:	74 0e                	je     c010b0bc <lock_mm+0x31>$/;"	l
c010b0ae	obj/kernel.asm	/^c010b0ae:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b0b3	obj/kernel.asm	/^c010b0b3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0b9	obj/kernel.asm	/^c010b0b9:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010b0bc	obj/kernel.asm	/^c010b0bc:	c9                   	leave  $/;"	l
c010b0bd	obj/kernel.asm	/^c010b0bd:	c3                   	ret    $/;"	l
c010b0be	obj/kernel.asm	/^c010b0be <unlock_mm>:$/;"	l
c010b0be	obj/kernel.asm	/^c010b0be:	55                   	push   %ebp$/;"	l
c010b0bf	obj/kernel.asm	/^c010b0bf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0c1	obj/kernel.asm	/^c010b0c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b0c4	obj/kernel.asm	/^c010b0c4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b0c8	obj/kernel.asm	/^c010b0c8:	74 18                	je     c010b0e2 <unlock_mm+0x24>$/;"	l
c010b0ca	obj/kernel.asm	/^c010b0ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0cd	obj/kernel.asm	/^c010b0cd:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b0d0	obj/kernel.asm	/^c010b0d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b0d3	obj/kernel.asm	/^c010b0d3:	e8 91 fc ff ff       	call   c010ad69 <up>$/;"	l
c010b0d8	obj/kernel.asm	/^c010b0d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010b0e2	obj/kernel.asm	/^c010b0e2:	c9                   	leave  $/;"	l
c010b0e3	obj/kernel.asm	/^c010b0e3:	c3                   	ret    $/;"	l
c010b0e4	obj/kernel.asm	/^c010b0e4 <copy_path>:$/;"	l
c010b0e4	obj/kernel.asm	/^c010b0e4:	55                   	push   %ebp$/;"	l
c010b0e5	obj/kernel.asm	/^c010b0e5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0e7	obj/kernel.asm	/^c010b0e7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b0ea	obj/kernel.asm	/^c010b0ea:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b0ef	obj/kernel.asm	/^c010b0ef:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b0f2	obj/kernel.asm	/^c010b0f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b0f5	obj/kernel.asm	/^c010b0f5:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b0fc	obj/kernel.asm	/^c010b0fc:	e8 e7 d0 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010b101	obj/kernel.asm	/^c010b101:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b104	obj/kernel.asm	/^c010b104:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b108	obj/kernel.asm	/^c010b108:	75 07                	jne    c010b111 <copy_path+0x2d>$/;"	l
c010b10a	obj/kernel.asm	/^c010b10a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b10f	obj/kernel.asm	/^c010b10f:	eb 66                	jmp    c010b177 <copy_path+0x93>$/;"	l
c010b111	obj/kernel.asm	/^c010b111:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b114	obj/kernel.asm	/^c010b114:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b117	obj/kernel.asm	/^c010b117:	e8 6f ff ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b11c	obj/kernel.asm	/^c010b11c:	c7 44 24 0c 00 10 00 	movl   $0x1000,0xc(%esp)$/;"	l
c010b123	obj/kernel.asm	/^c010b123:	00 $/;"	l
c010b124	obj/kernel.asm	/^c010b124:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b127	obj/kernel.asm	/^c010b127:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b12b	obj/kernel.asm	/^c010b12b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b12e	obj/kernel.asm	/^c010b12e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b132	obj/kernel.asm	/^c010b132:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b135	obj/kernel.asm	/^c010b135:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b138	obj/kernel.asm	/^c010b138:	e8 a0 c9 ff ff       	call   c0107add <copy_string>$/;"	l
c010b13d	obj/kernel.asm	/^c010b13d:	85 c0                	test   %eax,%eax$/;"	l
c010b13f	obj/kernel.asm	/^c010b13f:	75 1e                	jne    c010b15f <copy_path+0x7b>$/;"	l
c010b141	obj/kernel.asm	/^c010b141:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b144	obj/kernel.asm	/^c010b144:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b147	obj/kernel.asm	/^c010b147:	e8 72 ff ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b14c	obj/kernel.asm	/^c010b14c:	90                   	nop$/;"	l
c010b14d	obj/kernel.asm	/^c010b14d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b150	obj/kernel.asm	/^c010b150:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b153	obj/kernel.asm	/^c010b153:	e8 ab d0 ff ff       	call   c0108203 <kfree>$/;"	l
c010b158	obj/kernel.asm	/^c010b158:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b15d	obj/kernel.asm	/^c010b15d:	eb 18                	jmp    c010b177 <copy_path+0x93>$/;"	l
c010b15f	obj/kernel.asm	/^c010b15f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b162	obj/kernel.asm	/^c010b162:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b165	obj/kernel.asm	/^c010b165:	e8 54 ff ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b16a	obj/kernel.asm	/^c010b16a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b16d	obj/kernel.asm	/^c010b16d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b170	obj/kernel.asm	/^c010b170:	89 10                	mov    %edx,(%eax)$/;"	l
c010b172	obj/kernel.asm	/^c010b172:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b177	obj/kernel.asm	/^c010b177:	c9                   	leave  $/;"	l
c010b178	obj/kernel.asm	/^c010b178:	c3                   	ret    $/;"	l
c010b179	obj/kernel.asm	/^c010b179 <sysfile_open>:$/;"	l
c010b179	obj/kernel.asm	/^c010b179:	55                   	push   %ebp$/;"	l
c010b17a	obj/kernel.asm	/^c010b17a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b17c	obj/kernel.asm	/^c010b17c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b17f	obj/kernel.asm	/^c010b17f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b182	obj/kernel.asm	/^c010b182:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b186	obj/kernel.asm	/^c010b186:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b189	obj/kernel.asm	/^c010b189:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b18c	obj/kernel.asm	/^c010b18c:	e8 53 ff ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b191	obj/kernel.asm	/^c010b191:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b194	obj/kernel.asm	/^c010b194:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b198	obj/kernel.asm	/^c010b198:	74 05                	je     c010b19f <sysfile_open+0x26>$/;"	l
c010b19a	obj/kernel.asm	/^c010b19a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b19d	obj/kernel.asm	/^c010b19d:	eb 23                	jmp    c010b1c2 <sysfile_open+0x49>$/;"	l
c010b19f	obj/kernel.asm	/^c010b19f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b1a2	obj/kernel.asm	/^c010b1a2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b1a5	obj/kernel.asm	/^c010b1a5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b1a9	obj/kernel.asm	/^c010b1a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1ac	obj/kernel.asm	/^c010b1ac:	e8 5e 0c 00 00       	call   c010be0f <file_open>$/;"	l
c010b1b1	obj/kernel.asm	/^c010b1b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b1b4	obj/kernel.asm	/^c010b1b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b1b7	obj/kernel.asm	/^c010b1b7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1ba	obj/kernel.asm	/^c010b1ba:	e8 44 d0 ff ff       	call   c0108203 <kfree>$/;"	l
c010b1bf	obj/kernel.asm	/^c010b1bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b1c2	obj/kernel.asm	/^c010b1c2:	c9                   	leave  $/;"	l
c010b1c3	obj/kernel.asm	/^c010b1c3:	c3                   	ret    $/;"	l
c010b1c4	obj/kernel.asm	/^c010b1c4 <sysfile_close>:$/;"	l
c010b1c4	obj/kernel.asm	/^c010b1c4:	55                   	push   %ebp$/;"	l
c010b1c5	obj/kernel.asm	/^c010b1c5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b1c7	obj/kernel.asm	/^c010b1c7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b1ca	obj/kernel.asm	/^c010b1ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1cd	obj/kernel.asm	/^c010b1cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b1d0	obj/kernel.asm	/^c010b1d0:	e8 d7 0d 00 00       	call   c010bfac <file_close>$/;"	l
c010b1d5	obj/kernel.asm	/^c010b1d5:	c9                   	leave  $/;"	l
c010b1d6	obj/kernel.asm	/^c010b1d6:	c3                   	ret    $/;"	l
c010b1d7	obj/kernel.asm	/^c010b1d7 <sysfile_read>:$/;"	l
c010b1d7	obj/kernel.asm	/^c010b1d7:	55                   	push   %ebp$/;"	l
c010b1d8	obj/kernel.asm	/^c010b1d8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b1da	obj/kernel.asm	/^c010b1da:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b1dd	obj/kernel.asm	/^c010b1dd:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b1e2	obj/kernel.asm	/^c010b1e2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b1e5	obj/kernel.asm	/^c010b1e5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b1e8	obj/kernel.asm	/^c010b1e8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b1ec	obj/kernel.asm	/^c010b1ec:	75 0a                	jne    c010b1f8 <sysfile_read+0x21>$/;"	l
c010b1ee	obj/kernel.asm	/^c010b1ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b1f3	obj/kernel.asm	/^c010b1f3:	e9 55 01 00 00       	jmp    c010b34d <sysfile_read+0x176>$/;"	l
c010b1f8	obj/kernel.asm	/^c010b1f8:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010b1ff	obj/kernel.asm	/^c010b1ff:	00 $/;"	l
c010b200	obj/kernel.asm	/^c010b200:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010b207	obj/kernel.asm	/^c010b207:	00 $/;"	l
c010b208	obj/kernel.asm	/^c010b208:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b20b	obj/kernel.asm	/^c010b20b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b20e	obj/kernel.asm	/^c010b20e:	e8 9f 0b 00 00       	call   c010bdb2 <file_testfd>$/;"	l
c010b213	obj/kernel.asm	/^c010b213:	85 c0                	test   %eax,%eax$/;"	l
c010b215	obj/kernel.asm	/^c010b215:	75 0a                	jne    c010b221 <sysfile_read+0x4a>$/;"	l
c010b217	obj/kernel.asm	/^c010b217:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b21c	obj/kernel.asm	/^c010b21c:	e9 2c 01 00 00       	jmp    c010b34d <sysfile_read+0x176>$/;"	l
c010b221	obj/kernel.asm	/^c010b221:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b228	obj/kernel.asm	/^c010b228:	e8 bb cf ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010b22d	obj/kernel.asm	/^c010b22d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b230	obj/kernel.asm	/^c010b230:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b234	obj/kernel.asm	/^c010b234:	75 0a                	jne    c010b240 <sysfile_read+0x69>$/;"	l
c010b236	obj/kernel.asm	/^c010b236:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b23b	obj/kernel.asm	/^c010b23b:	e9 0d 01 00 00       	jmp    c010b34d <sysfile_read+0x176>$/;"	l
c010b240	obj/kernel.asm	/^c010b240:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b247	obj/kernel.asm	/^c010b247:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010b24e	obj/kernel.asm	/^c010b24e:	e9 d7 00 00 00       	jmp    c010b32a <sysfile_read+0x153>$/;"	l
c010b253	obj/kernel.asm	/^c010b253:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c010b25a	obj/kernel.asm	/^c010b25a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b25d	obj/kernel.asm	/^c010b25d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b260	obj/kernel.asm	/^c010b260:	76 06                	jbe    c010b268 <sysfile_read+0x91>$/;"	l
c010b262	obj/kernel.asm	/^c010b262:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b265	obj/kernel.asm	/^c010b265:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b268	obj/kernel.asm	/^c010b268:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b26b	obj/kernel.asm	/^c010b26b:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010b26e	obj/kernel.asm	/^c010b26e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b276	obj/kernel.asm	/^c010b276:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b279	obj/kernel.asm	/^c010b279:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b27d	obj/kernel.asm	/^c010b27d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b280	obj/kernel.asm	/^c010b280:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b283	obj/kernel.asm	/^c010b283:	e8 5c 0d 00 00       	call   c010bfe4 <file_read>$/;"	l
c010b288	obj/kernel.asm	/^c010b288:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b28b	obj/kernel.asm	/^c010b28b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b28e	obj/kernel.asm	/^c010b28e:	85 c0                	test   %eax,%eax$/;"	l
c010b290	obj/kernel.asm	/^c010b290:	0f 84 87 00 00 00    	je     c010b31d <sysfile_read+0x146>$/;"	l
c010b296	obj/kernel.asm	/^c010b296:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b299	obj/kernel.asm	/^c010b299:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b29c	obj/kernel.asm	/^c010b29c:	e8 ea fd ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b2a4	obj/kernel.asm	/^c010b2a4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b2a8	obj/kernel.asm	/^c010b2a8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b2af	obj/kernel.asm	/^c010b2af:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b2b2	obj/kernel.asm	/^c010b2b2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b2b6	obj/kernel.asm	/^c010b2b6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b2b9	obj/kernel.asm	/^c010b2b9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b2bc	obj/kernel.asm	/^c010b2bc:	e8 48 bd ff ff       	call   c0107009 <copy_to_user>$/;"	l
c010b2c1	obj/kernel.asm	/^c010b2c1:	85 c0                	test   %eax,%eax$/;"	l
c010b2c3	obj/kernel.asm	/^c010b2c3:	74 40                	je     c010b305 <sysfile_read+0x12e>$/;"	l
c010b2c5	obj/kernel.asm	/^c010b2c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b2c8	obj/kernel.asm	/^c010b2c8:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c010b2cb	obj/kernel.asm	/^c010b2cb:	73 24                	jae    c010b2f1 <sysfile_read+0x11a>$/;"	l
c010b2cd	obj/kernel.asm	/^c010b2cd:	c7 44 24 0c 82 95 11 	movl   $0xc0119582,0xc(%esp)$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	c0 $/;"	l
c010b2d5	obj/kernel.asm	/^c010b2d5:	c7 44 24 08 8e 95 11 	movl   $0xc011958e,0x8(%esp)$/;"	l
c010b2dc	obj/kernel.asm	/^c010b2dc:	c0 $/;"	l
c010b2dd	obj/kernel.asm	/^c010b2dd:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c010b2e4	obj/kernel.asm	/^c010b2e4:	00 $/;"	l
c010b2e5	obj/kernel.asm	/^c010b2e5:	c7 04 24 a3 95 11 c0 	movl   $0xc01195a3,(%esp)$/;"	l
c010b2ec	obj/kernel.asm	/^c010b2ec:	e8 46 59 ff ff       	call   c0100c37 <__panic>$/;"	l
c010b2f1	obj/kernel.asm	/^c010b2f1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b2f4	obj/kernel.asm	/^c010b2f4:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010b2f7	obj/kernel.asm	/^c010b2f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b2fa	obj/kernel.asm	/^c010b2fa:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b2fd	obj/kernel.asm	/^c010b2fd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b300	obj/kernel.asm	/^c010b300:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010b303	obj/kernel.asm	/^c010b303:	eb 0d                	jmp    c010b312 <sysfile_read+0x13b>$/;"	l
c010b305	obj/kernel.asm	/^c010b305:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b309	obj/kernel.asm	/^c010b309:	75 07                	jne    c010b312 <sysfile_read+0x13b>$/;"	l
c010b30b	obj/kernel.asm	/^c010b30b:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b312	obj/kernel.asm	/^c010b312:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b315	obj/kernel.asm	/^c010b315:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b318	obj/kernel.asm	/^c010b318:	e8 a1 fd ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b31d	obj/kernel.asm	/^c010b31d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b321	obj/kernel.asm	/^c010b321:	75 11                	jne    c010b334 <sysfile_read+0x15d>$/;"	l
c010b323	obj/kernel.asm	/^c010b323:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b326	obj/kernel.asm	/^c010b326:	85 c0                	test   %eax,%eax$/;"	l
c010b328	obj/kernel.asm	/^c010b328:	74 0a                	je     c010b334 <sysfile_read+0x15d>$/;"	l
c010b32a	obj/kernel.asm	/^c010b32a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b32e	obj/kernel.asm	/^c010b32e:	0f 85 1f ff ff ff    	jne    c010b253 <sysfile_read+0x7c>$/;"	l
c010b334	obj/kernel.asm	/^c010b334:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b337	obj/kernel.asm	/^c010b337:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b33a	obj/kernel.asm	/^c010b33a:	e8 c4 ce ff ff       	call   c0108203 <kfree>$/;"	l
c010b33f	obj/kernel.asm	/^c010b33f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b343	obj/kernel.asm	/^c010b343:	74 05                	je     c010b34a <sysfile_read+0x173>$/;"	l
c010b345	obj/kernel.asm	/^c010b345:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b348	obj/kernel.asm	/^c010b348:	eb 03                	jmp    c010b34d <sysfile_read+0x176>$/;"	l
c010b34a	obj/kernel.asm	/^c010b34a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b34d	obj/kernel.asm	/^c010b34d:	c9                   	leave  $/;"	l
c010b34e	obj/kernel.asm	/^c010b34e:	c3                   	ret    $/;"	l
c010b34f	obj/kernel.asm	/^c010b34f <sysfile_write>:$/;"	l
c010b34f	obj/kernel.asm	/^c010b34f:	55                   	push   %ebp$/;"	l
c010b350	obj/kernel.asm	/^c010b350:	89 e5                	mov    %esp,%ebp$/;"	l
c010b352	obj/kernel.asm	/^c010b352:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010b355	obj/kernel.asm	/^c010b355:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b35a	obj/kernel.asm	/^c010b35a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b35d	obj/kernel.asm	/^c010b35d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b360	obj/kernel.asm	/^c010b360:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b364	obj/kernel.asm	/^c010b364:	75 0a                	jne    c010b370 <sysfile_write+0x21>$/;"	l
c010b366	obj/kernel.asm	/^c010b366:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b36b	obj/kernel.asm	/^c010b36b:	e9 57 01 00 00       	jmp    c010b4c7 <sysfile_write+0x178>$/;"	l
c010b370	obj/kernel.asm	/^c010b370:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c010b377	obj/kernel.asm	/^c010b377:	00 $/;"	l
c010b378	obj/kernel.asm	/^c010b378:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010b37f	obj/kernel.asm	/^c010b37f:	00 $/;"	l
c010b380	obj/kernel.asm	/^c010b380:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b383	obj/kernel.asm	/^c010b383:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b386	obj/kernel.asm	/^c010b386:	e8 27 0a 00 00       	call   c010bdb2 <file_testfd>$/;"	l
c010b38b	obj/kernel.asm	/^c010b38b:	85 c0                	test   %eax,%eax$/;"	l
c010b38d	obj/kernel.asm	/^c010b38d:	75 0a                	jne    c010b399 <sysfile_write+0x4a>$/;"	l
c010b38f	obj/kernel.asm	/^c010b38f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b394	obj/kernel.asm	/^c010b394:	e9 2e 01 00 00       	jmp    c010b4c7 <sysfile_write+0x178>$/;"	l
c010b399	obj/kernel.asm	/^c010b399:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010b3a0	obj/kernel.asm	/^c010b3a0:	e8 43 ce ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010b3a5	obj/kernel.asm	/^c010b3a5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b3a8	obj/kernel.asm	/^c010b3a8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b3ac	obj/kernel.asm	/^c010b3ac:	75 0a                	jne    c010b3b8 <sysfile_write+0x69>$/;"	l
c010b3ae	obj/kernel.asm	/^c010b3ae:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b3b3	obj/kernel.asm	/^c010b3b3:	e9 0f 01 00 00       	jmp    c010b4c7 <sysfile_write+0x178>$/;"	l
c010b3b8	obj/kernel.asm	/^c010b3b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b3bf	obj/kernel.asm	/^c010b3bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010b3c6	obj/kernel.asm	/^c010b3c6:	e9 d9 00 00 00       	jmp    c010b4a4 <sysfile_write+0x155>$/;"	l
c010b3cb	obj/kernel.asm	/^c010b3cb:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c010b3d2	obj/kernel.asm	/^c010b3d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b3d5	obj/kernel.asm	/^c010b3d5:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b3d8	obj/kernel.asm	/^c010b3d8:	76 06                	jbe    c010b3e0 <sysfile_write+0x91>$/;"	l
c010b3da	obj/kernel.asm	/^c010b3da:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b3dd	obj/kernel.asm	/^c010b3dd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b3e3	obj/kernel.asm	/^c010b3e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b3e6	obj/kernel.asm	/^c010b3e6:	e8 a0 fc ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b3eb	obj/kernel.asm	/^c010b3eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b3ee	obj/kernel.asm	/^c010b3ee:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010b3f5	obj/kernel.asm	/^c010b3f5:	00 $/;"	l
c010b3f6	obj/kernel.asm	/^c010b3f6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010b3fa	obj/kernel.asm	/^c010b3fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b401	obj/kernel.asm	/^c010b401:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b404	obj/kernel.asm	/^c010b404:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b408	obj/kernel.asm	/^c010b408:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b40b	obj/kernel.asm	/^c010b40b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b40e	obj/kernel.asm	/^c010b40e:	e8 a5 bb ff ff       	call   c0106fb8 <copy_from_user>$/;"	l
c010b413	obj/kernel.asm	/^c010b413:	85 c0                	test   %eax,%eax$/;"	l
c010b415	obj/kernel.asm	/^c010b415:	75 07                	jne    c010b41e <sysfile_write+0xcf>$/;"	l
c010b417	obj/kernel.asm	/^c010b417:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b41e	obj/kernel.asm	/^c010b41e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b421	obj/kernel.asm	/^c010b421:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b424	obj/kernel.asm	/^c010b424:	e8 95 fc ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b429	obj/kernel.asm	/^c010b429:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b42d	obj/kernel.asm	/^c010b42d:	75 68                	jne    c010b497 <sysfile_write+0x148>$/;"	l
c010b42f	obj/kernel.asm	/^c010b42f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b432	obj/kernel.asm	/^c010b432:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010b435	obj/kernel.asm	/^c010b435:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c010b439	obj/kernel.asm	/^c010b439:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b43d	obj/kernel.asm	/^c010b43d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b440	obj/kernel.asm	/^c010b440:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b444	obj/kernel.asm	/^c010b444:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b447	obj/kernel.asm	/^c010b447:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	e8 cf 0c 00 00       	call   c010c11e <file_write>$/;"	l
c010b44f	obj/kernel.asm	/^c010b44f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b452	obj/kernel.asm	/^c010b452:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b455	obj/kernel.asm	/^c010b455:	85 c0                	test   %eax,%eax$/;"	l
c010b457	obj/kernel.asm	/^c010b457:	74 3e                	je     c010b497 <sysfile_write+0x148>$/;"	l
c010b459	obj/kernel.asm	/^c010b459:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b45c	obj/kernel.asm	/^c010b45c:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c010b45f	obj/kernel.asm	/^c010b45f:	73 24                	jae    c010b485 <sysfile_write+0x136>$/;"	l
c010b461	obj/kernel.asm	/^c010b461:	c7 44 24 0c 82 95 11 	movl   $0xc0119582,0xc(%esp)$/;"	l
c010b468	obj/kernel.asm	/^c010b468:	c0 $/;"	l
c010b469	obj/kernel.asm	/^c010b469:	c7 44 24 08 8e 95 11 	movl   $0xc011958e,0x8(%esp)$/;"	l
c010b470	obj/kernel.asm	/^c010b470:	c0 $/;"	l
c010b471	obj/kernel.asm	/^c010b471:	c7 44 24 04 8a 00 00 	movl   $0x8a,0x4(%esp)$/;"	l
c010b478	obj/kernel.asm	/^c010b478:	00 $/;"	l
c010b479	obj/kernel.asm	/^c010b479:	c7 04 24 a3 95 11 c0 	movl   $0xc01195a3,(%esp)$/;"	l
c010b480	obj/kernel.asm	/^c010b480:	e8 b2 57 ff ff       	call   c0100c37 <__panic>$/;"	l
c010b485	obj/kernel.asm	/^c010b485:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b488	obj/kernel.asm	/^c010b488:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010b48b	obj/kernel.asm	/^c010b48b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b48e	obj/kernel.asm	/^c010b48e:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010b491	obj/kernel.asm	/^c010b491:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b494	obj/kernel.asm	/^c010b494:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010b497	obj/kernel.asm	/^c010b497:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b49b	obj/kernel.asm	/^c010b49b:	75 11                	jne    c010b4ae <sysfile_write+0x15f>$/;"	l
c010b49d	obj/kernel.asm	/^c010b49d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b4a0	obj/kernel.asm	/^c010b4a0:	85 c0                	test   %eax,%eax$/;"	l
c010b4a2	obj/kernel.asm	/^c010b4a2:	74 0a                	je     c010b4ae <sysfile_write+0x15f>$/;"	l
c010b4a4	obj/kernel.asm	/^c010b4a4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b4a8	obj/kernel.asm	/^c010b4a8:	0f 85 1d ff ff ff    	jne    c010b3cb <sysfile_write+0x7c>$/;"	l
c010b4ae	obj/kernel.asm	/^c010b4ae:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b4b1	obj/kernel.asm	/^c010b4b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4b4	obj/kernel.asm	/^c010b4b4:	e8 4a cd ff ff       	call   c0108203 <kfree>$/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b4bd	obj/kernel.asm	/^c010b4bd:	74 05                	je     c010b4c4 <sysfile_write+0x175>$/;"	l
c010b4bf	obj/kernel.asm	/^c010b4bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b4c2	obj/kernel.asm	/^c010b4c2:	eb 03                	jmp    c010b4c7 <sysfile_write+0x178>$/;"	l
c010b4c4	obj/kernel.asm	/^c010b4c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4c7	obj/kernel.asm	/^c010b4c7:	c9                   	leave  $/;"	l
c010b4c8	obj/kernel.asm	/^c010b4c8:	c3                   	ret    $/;"	l
c010b4c9	obj/kernel.asm	/^c010b4c9 <sysfile_seek>:$/;"	l
c010b4c9	obj/kernel.asm	/^c010b4c9:	55                   	push   %ebp$/;"	l
c010b4ca	obj/kernel.asm	/^c010b4ca:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4cc	obj/kernel.asm	/^c010b4cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b4cf	obj/kernel.asm	/^c010b4cf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b4d2	obj/kernel.asm	/^c010b4d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b4d6	obj/kernel.asm	/^c010b4d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b4d9	obj/kernel.asm	/^c010b4d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b4dd	obj/kernel.asm	/^c010b4dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4e0	obj/kernel.asm	/^c010b4e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b4e3	obj/kernel.asm	/^c010b4e3:	e8 70 0d 00 00       	call   c010c258 <file_seek>$/;"	l
c010b4e8	obj/kernel.asm	/^c010b4e8:	c9                   	leave  $/;"	l
c010b4e9	obj/kernel.asm	/^c010b4e9:	c3                   	ret    $/;"	l
c010b4ea	obj/kernel.asm	/^c010b4ea <sysfile_fstat>:$/;"	l
c010b4ea	obj/kernel.asm	/^c010b4ea:	55                   	push   %ebp$/;"	l
c010b4eb	obj/kernel.asm	/^c010b4eb:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4ed	obj/kernel.asm	/^c010b4ed:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b4f0	obj/kernel.asm	/^c010b4f0:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b4f5	obj/kernel.asm	/^c010b4f5:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b4f8	obj/kernel.asm	/^c010b4f8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b4fb	obj/kernel.asm	/^c010b4fb:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010b4fe	obj/kernel.asm	/^c010b4fe:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b501	obj/kernel.asm	/^c010b501:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b504	obj/kernel.asm	/^c010b504:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b508	obj/kernel.asm	/^c010b508:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b50b	obj/kernel.asm	/^c010b50b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b50e	obj/kernel.asm	/^c010b50e:	e8 e8 0e 00 00       	call   c010c3fb <file_fstat>$/;"	l
c010b513	obj/kernel.asm	/^c010b513:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b51a	obj/kernel.asm	/^c010b51a:	74 05                	je     c010b521 <sysfile_fstat+0x37>$/;"	l
c010b51c	obj/kernel.asm	/^c010b51c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b51f	obj/kernel.asm	/^c010b51f:	eb 45                	jmp    c010b566 <sysfile_fstat+0x7c>$/;"	l
c010b521	obj/kernel.asm	/^c010b521:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b524	obj/kernel.asm	/^c010b524:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b527	obj/kernel.asm	/^c010b527:	e8 5f fb ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b52c	obj/kernel.asm	/^c010b52c:	c7 44 24 0c 10 00 00 	movl   $0x10,0xc(%esp)$/;"	l
c010b533	obj/kernel.asm	/^c010b533:	00 $/;"	l
c010b534	obj/kernel.asm	/^c010b534:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b537	obj/kernel.asm	/^c010b537:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b53b	obj/kernel.asm	/^c010b53b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b53e	obj/kernel.asm	/^c010b53e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b542	obj/kernel.asm	/^c010b542:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b545	obj/kernel.asm	/^c010b545:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b548	obj/kernel.asm	/^c010b548:	e8 bc ba ff ff       	call   c0107009 <copy_to_user>$/;"	l
c010b54d	obj/kernel.asm	/^c010b54d:	85 c0                	test   %eax,%eax$/;"	l
c010b54f	obj/kernel.asm	/^c010b54f:	75 07                	jne    c010b558 <sysfile_fstat+0x6e>$/;"	l
c010b551	obj/kernel.asm	/^c010b551:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b558	obj/kernel.asm	/^c010b558:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b55b	obj/kernel.asm	/^c010b55b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b55e	obj/kernel.asm	/^c010b55e:	e8 5b fb ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b563	obj/kernel.asm	/^c010b563:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b566	obj/kernel.asm	/^c010b566:	c9                   	leave  $/;"	l
c010b567	obj/kernel.asm	/^c010b567:	c3                   	ret    $/;"	l
c010b568	obj/kernel.asm	/^c010b568 <sysfile_fsync>:$/;"	l
c010b568	obj/kernel.asm	/^c010b568:	55                   	push   %ebp$/;"	l
c010b569	obj/kernel.asm	/^c010b569:	89 e5                	mov    %esp,%ebp$/;"	l
c010b56b	obj/kernel.asm	/^c010b56b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b56e	obj/kernel.asm	/^c010b56e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b571	obj/kernel.asm	/^c010b571:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b574	obj/kernel.asm	/^c010b574:	e8 41 0f 00 00       	call   c010c4ba <file_fsync>$/;"	l
c010b579	obj/kernel.asm	/^c010b579:	c9                   	leave  $/;"	l
c010b57a	obj/kernel.asm	/^c010b57a:	c3                   	ret    $/;"	l
c010b57b	obj/kernel.asm	/^c010b57b <sysfile_chdir>:$/;"	l
c010b57b	obj/kernel.asm	/^c010b57b:	55                   	push   %ebp$/;"	l
c010b57c	obj/kernel.asm	/^c010b57c:	89 e5                	mov    %esp,%ebp$/;"	l
c010b57e	obj/kernel.asm	/^c010b57e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b581	obj/kernel.asm	/^c010b581:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b584	obj/kernel.asm	/^c010b584:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b588	obj/kernel.asm	/^c010b588:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b58b	obj/kernel.asm	/^c010b58b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b58e	obj/kernel.asm	/^c010b58e:	e8 51 fb ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b593	obj/kernel.asm	/^c010b593:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b596	obj/kernel.asm	/^c010b596:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b59a	obj/kernel.asm	/^c010b59a:	74 05                	je     c010b5a1 <sysfile_chdir+0x26>$/;"	l
c010b59c	obj/kernel.asm	/^c010b59c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b59f	obj/kernel.asm	/^c010b59f:	eb 1c                	jmp    c010b5bd <sysfile_chdir+0x42>$/;"	l
c010b5a1	obj/kernel.asm	/^c010b5a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b5a4	obj/kernel.asm	/^c010b5a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5a7	obj/kernel.asm	/^c010b5a7:	e8 bf 52 00 00       	call   c011086b <vfs_chdir>$/;"	l
c010b5ac	obj/kernel.asm	/^c010b5ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5af	obj/kernel.asm	/^c010b5af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b5b2	obj/kernel.asm	/^c010b5b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5b5	obj/kernel.asm	/^c010b5b5:	e8 49 cc ff ff       	call   c0108203 <kfree>$/;"	l
c010b5ba	obj/kernel.asm	/^c010b5ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5bd	obj/kernel.asm	/^c010b5bd:	c9                   	leave  $/;"	l
c010b5be	obj/kernel.asm	/^c010b5be:	c3                   	ret    $/;"	l
c010b5bf	obj/kernel.asm	/^c010b5bf <sysfile_link>:$/;"	l
c010b5bf	obj/kernel.asm	/^c010b5bf:	55                   	push   %ebp$/;"	l
c010b5c0	obj/kernel.asm	/^c010b5c0:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5c2	obj/kernel.asm	/^c010b5c2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b5c5	obj/kernel.asm	/^c010b5c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5c8	obj/kernel.asm	/^c010b5c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5cc	obj/kernel.asm	/^c010b5cc:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b5cf	obj/kernel.asm	/^c010b5cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5d2	obj/kernel.asm	/^c010b5d2:	e8 0d fb ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b5d7	obj/kernel.asm	/^c010b5d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5da	obj/kernel.asm	/^c010b5da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b5de	obj/kernel.asm	/^c010b5de:	74 05                	je     c010b5e5 <sysfile_link+0x26>$/;"	l
c010b5e0	obj/kernel.asm	/^c010b5e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5e3	obj/kernel.asm	/^c010b5e3:	eb 59                	jmp    c010b63e <sysfile_link+0x7f>$/;"	l
c010b5e5	obj/kernel.asm	/^c010b5e5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b5e8	obj/kernel.asm	/^c010b5e8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b5ec	obj/kernel.asm	/^c010b5ec:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b5ef	obj/kernel.asm	/^c010b5ef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b5f2	obj/kernel.asm	/^c010b5f2:	e8 ed fa ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b5f7	obj/kernel.asm	/^c010b5f7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b5fa	obj/kernel.asm	/^c010b5fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b5fe	obj/kernel.asm	/^c010b5fe:	74 10                	je     c010b610 <sysfile_link+0x51>$/;"	l
c010b600	obj/kernel.asm	/^c010b600:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b603	obj/kernel.asm	/^c010b603:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b606	obj/kernel.asm	/^c010b606:	e8 f8 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b60b	obj/kernel.asm	/^c010b60b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b60e	obj/kernel.asm	/^c010b60e:	eb 2e                	jmp    c010b63e <sysfile_link+0x7f>$/;"	l
c010b610	obj/kernel.asm	/^c010b610:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b613	obj/kernel.asm	/^c010b613:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b616	obj/kernel.asm	/^c010b616:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b61a	obj/kernel.asm	/^c010b61a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b61d	obj/kernel.asm	/^c010b61d:	e8 c7 5d 00 00       	call   c01113e9 <vfs_link>$/;"	l
c010b622	obj/kernel.asm	/^c010b622:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b625	obj/kernel.asm	/^c010b625:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b628	obj/kernel.asm	/^c010b628:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b62b	obj/kernel.asm	/^c010b62b:	e8 d3 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b630	obj/kernel.asm	/^c010b630:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b633	obj/kernel.asm	/^c010b633:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b636	obj/kernel.asm	/^c010b636:	e8 c8 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b63b	obj/kernel.asm	/^c010b63b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b63e	obj/kernel.asm	/^c010b63e:	c9                   	leave  $/;"	l
c010b63f	obj/kernel.asm	/^c010b63f:	c3                   	ret    $/;"	l
c010b640	obj/kernel.asm	/^c010b640 <sysfile_rename>:$/;"	l
c010b640	obj/kernel.asm	/^c010b640:	55                   	push   %ebp$/;"	l
c010b641	obj/kernel.asm	/^c010b641:	89 e5                	mov    %esp,%ebp$/;"	l
c010b643	obj/kernel.asm	/^c010b643:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b646	obj/kernel.asm	/^c010b646:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b649	obj/kernel.asm	/^c010b649:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b64d	obj/kernel.asm	/^c010b64d:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b650	obj/kernel.asm	/^c010b650:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b653	obj/kernel.asm	/^c010b653:	e8 8c fa ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b658	obj/kernel.asm	/^c010b658:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b65b	obj/kernel.asm	/^c010b65b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b65f	obj/kernel.asm	/^c010b65f:	74 05                	je     c010b666 <sysfile_rename+0x26>$/;"	l
c010b661	obj/kernel.asm	/^c010b661:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b664	obj/kernel.asm	/^c010b664:	eb 59                	jmp    c010b6bf <sysfile_rename+0x7f>$/;"	l
c010b666	obj/kernel.asm	/^c010b666:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b669	obj/kernel.asm	/^c010b669:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b66d	obj/kernel.asm	/^c010b66d:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b670	obj/kernel.asm	/^c010b670:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b673	obj/kernel.asm	/^c010b673:	e8 6c fa ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b678	obj/kernel.asm	/^c010b678:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b67b	obj/kernel.asm	/^c010b67b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b67f	obj/kernel.asm	/^c010b67f:	74 10                	je     c010b691 <sysfile_rename+0x51>$/;"	l
c010b681	obj/kernel.asm	/^c010b681:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b684	obj/kernel.asm	/^c010b684:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b687	obj/kernel.asm	/^c010b687:	e8 77 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b68c	obj/kernel.asm	/^c010b68c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b68f	obj/kernel.asm	/^c010b68f:	eb 2e                	jmp    c010b6bf <sysfile_rename+0x7f>$/;"	l
c010b691	obj/kernel.asm	/^c010b691:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b694	obj/kernel.asm	/^c010b694:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b697	obj/kernel.asm	/^c010b697:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010b69b	obj/kernel.asm	/^c010b69b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b69e	obj/kernel.asm	/^c010b69e:	e8 3c 5d 00 00       	call   c01113df <vfs_rename>$/;"	l
c010b6a3	obj/kernel.asm	/^c010b6a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6a6	obj/kernel.asm	/^c010b6a6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b6a9	obj/kernel.asm	/^c010b6a9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6ac	obj/kernel.asm	/^c010b6ac:	e8 52 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b6b1	obj/kernel.asm	/^c010b6b1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b6b4	obj/kernel.asm	/^c010b6b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6b7	obj/kernel.asm	/^c010b6b7:	e8 47 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b6bc	obj/kernel.asm	/^c010b6bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6bf	obj/kernel.asm	/^c010b6bf:	c9                   	leave  $/;"	l
c010b6c0	obj/kernel.asm	/^c010b6c0:	c3                   	ret    $/;"	l
c010b6c1	obj/kernel.asm	/^c010b6c1 <sysfile_unlink>:$/;"	l
c010b6c1	obj/kernel.asm	/^c010b6c1:	55                   	push   %ebp$/;"	l
c010b6c2	obj/kernel.asm	/^c010b6c2:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6c4	obj/kernel.asm	/^c010b6c4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b6c7	obj/kernel.asm	/^c010b6c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6ca	obj/kernel.asm	/^c010b6ca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b6ce	obj/kernel.asm	/^c010b6ce:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010b6d1	obj/kernel.asm	/^c010b6d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6d4	obj/kernel.asm	/^c010b6d4:	e8 0b fa ff ff       	call   c010b0e4 <copy_path>$/;"	l
c010b6d9	obj/kernel.asm	/^c010b6d9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6dc	obj/kernel.asm	/^c010b6dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b6e0	obj/kernel.asm	/^c010b6e0:	74 05                	je     c010b6e7 <sysfile_unlink+0x26>$/;"	l
c010b6e2	obj/kernel.asm	/^c010b6e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6e5	obj/kernel.asm	/^c010b6e5:	eb 1c                	jmp    c010b703 <sysfile_unlink+0x42>$/;"	l
c010b6e7	obj/kernel.asm	/^c010b6e7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b6ea	obj/kernel.asm	/^c010b6ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6ed	obj/kernel.asm	/^c010b6ed:	e8 e3 5c 00 00       	call   c01113d5 <vfs_unlink>$/;"	l
c010b6f2	obj/kernel.asm	/^c010b6f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b6f8	obj/kernel.asm	/^c010b6f8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b6fb	obj/kernel.asm	/^c010b6fb:	e8 03 cb ff ff       	call   c0108203 <kfree>$/;"	l
c010b700	obj/kernel.asm	/^c010b700:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b703	obj/kernel.asm	/^c010b703:	c9                   	leave  $/;"	l
c010b704	obj/kernel.asm	/^c010b704:	c3                   	ret    $/;"	l
c010b705	obj/kernel.asm	/^c010b705 <sysfile_getcwd>:$/;"	l
c010b705	obj/kernel.asm	/^c010b705:	55                   	push   %ebp$/;"	l
c010b706	obj/kernel.asm	/^c010b706:	89 e5                	mov    %esp,%ebp$/;"	l
c010b708	obj/kernel.asm	/^c010b708:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b70b	obj/kernel.asm	/^c010b70b:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b710	obj/kernel.asm	/^c010b710:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b713	obj/kernel.asm	/^c010b713:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b716	obj/kernel.asm	/^c010b716:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b71a	obj/kernel.asm	/^c010b71a:	75 07                	jne    c010b723 <sysfile_getcwd+0x1e>$/;"	l
c010b71c	obj/kernel.asm	/^c010b71c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b721	obj/kernel.asm	/^c010b721:	eb 77                	jmp    c010b79a <sysfile_getcwd+0x95>$/;"	l
c010b723	obj/kernel.asm	/^c010b723:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b72a	obj/kernel.asm	/^c010b72a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b72d	obj/kernel.asm	/^c010b72d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b730	obj/kernel.asm	/^c010b730:	e8 56 f9 ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b735	obj/kernel.asm	/^c010b735:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b738	obj/kernel.asm	/^c010b738:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010b73f	obj/kernel.asm	/^c010b73f:	00 $/;"	l
c010b740	obj/kernel.asm	/^c010b740:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b743	obj/kernel.asm	/^c010b743:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010b747	obj/kernel.asm	/^c010b747:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b74b	obj/kernel.asm	/^c010b74b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b74e	obj/kernel.asm	/^c010b74e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b751	obj/kernel.asm	/^c010b751:	e8 64 c2 ff ff       	call   c01079ba <user_mem_check>$/;"	l
c010b756	obj/kernel.asm	/^c010b756:	85 c0                	test   %eax,%eax$/;"	l
c010b758	obj/kernel.asm	/^c010b758:	74 32                	je     c010b78c <sysfile_getcwd+0x87>$/;"	l
c010b75a	obj/kernel.asm	/^c010b75a:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010b761	obj/kernel.asm	/^c010b761:	00 $/;"	l
c010b762	obj/kernel.asm	/^c010b762:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b765	obj/kernel.asm	/^c010b765:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b769	obj/kernel.asm	/^c010b769:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b76c	obj/kernel.asm	/^c010b76c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b770	obj/kernel.asm	/^c010b770:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010b773	obj/kernel.asm	/^c010b773:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b776	obj/kernel.asm	/^c010b776:	e8 65 0f 00 00       	call   c010c6e0 <iobuf_init>$/;"	l
c010b77b	obj/kernel.asm	/^c010b77b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b77e	obj/kernel.asm	/^c010b77e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b781	obj/kernel.asm	/^c010b781:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b784	obj/kernel.asm	/^c010b784:	e8 21 51 00 00       	call   c01108aa <vfs_getcwd>$/;"	l
c010b789	obj/kernel.asm	/^c010b789:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b78c	obj/kernel.asm	/^c010b78c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b78f	obj/kernel.asm	/^c010b78f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b792	obj/kernel.asm	/^c010b792:	e8 27 f9 ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b797	obj/kernel.asm	/^c010b797:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b79a	obj/kernel.asm	/^c010b79a:	c9                   	leave  $/;"	l
c010b79b	obj/kernel.asm	/^c010b79b:	c3                   	ret    $/;"	l
c010b79c	obj/kernel.asm	/^c010b79c <sysfile_getdirentry>:$/;"	l
c010b79c	obj/kernel.asm	/^c010b79c:	55                   	push   %ebp$/;"	l
c010b79d	obj/kernel.asm	/^c010b79d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b79f	obj/kernel.asm	/^c010b79f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b7a2	obj/kernel.asm	/^c010b7a2:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b7a7	obj/kernel.asm	/^c010b7a7:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b7aa	obj/kernel.asm	/^c010b7aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b7ad	obj/kernel.asm	/^c010b7ad:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c010b7b4	obj/kernel.asm	/^c010b7b4:	e8 2f ca ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010b7b9	obj/kernel.asm	/^c010b7b9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b7bc	obj/kernel.asm	/^c010b7bc:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010b7c0	obj/kernel.asm	/^c010b7c0:	75 0a                	jne    c010b7cc <sysfile_getdirentry+0x30>$/;"	l
c010b7c2	obj/kernel.asm	/^c010b7c2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b7c7	obj/kernel.asm	/^c010b7c7:	e9 c2 00 00 00       	jmp    c010b88e <sysfile_getdirentry+0xf2>$/;"	l
c010b7cc	obj/kernel.asm	/^c010b7cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b7d3	obj/kernel.asm	/^c010b7d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b7d6	obj/kernel.asm	/^c010b7d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b7d9	obj/kernel.asm	/^c010b7d9:	e8 ad f8 ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b7de	obj/kernel.asm	/^c010b7de:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b7e1	obj/kernel.asm	/^c010b7e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b7e4	obj/kernel.asm	/^c010b7e4:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c010b7eb	obj/kernel.asm	/^c010b7eb:	00 $/;"	l
c010b7ec	obj/kernel.asm	/^c010b7ec:	c7 44 24 0c 04 00 00 	movl   $0x4,0xc(%esp)$/;"	l
c010b7f3	obj/kernel.asm	/^c010b7f3:	00 $/;"	l
c010b7f4	obj/kernel.asm	/^c010b7f4:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010b7f8	obj/kernel.asm	/^c010b7f8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b7fc	obj/kernel.asm	/^c010b7fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b7ff	obj/kernel.asm	/^c010b7ff:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b802	obj/kernel.asm	/^c010b802:	e8 b1 b7 ff ff       	call   c0106fb8 <copy_from_user>$/;"	l
c010b807	obj/kernel.asm	/^c010b807:	85 c0                	test   %eax,%eax$/;"	l
c010b809	obj/kernel.asm	/^c010b809:	75 07                	jne    c010b812 <sysfile_getdirentry+0x76>$/;"	l
c010b80b	obj/kernel.asm	/^c010b80b:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b812	obj/kernel.asm	/^c010b812:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b815	obj/kernel.asm	/^c010b815:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b818	obj/kernel.asm	/^c010b818:	e8 a1 f8 ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b81d	obj/kernel.asm	/^c010b81d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b821	obj/kernel.asm	/^c010b821:	75 5d                	jne    c010b880 <sysfile_getdirentry+0xe4>$/;"	l
c010b823	obj/kernel.asm	/^c010b823:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b826	obj/kernel.asm	/^c010b826:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b82a	obj/kernel.asm	/^c010b82a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b82d	obj/kernel.asm	/^c010b82d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b830	obj/kernel.asm	/^c010b830:	e8 3d 0d 00 00       	call   c010c572 <file_getdirentry>$/;"	l
c010b835	obj/kernel.asm	/^c010b835:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b838	obj/kernel.asm	/^c010b838:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b83c	obj/kernel.asm	/^c010b83c:	75 42                	jne    c010b880 <sysfile_getdirentry+0xe4>$/;"	l
c010b83e	obj/kernel.asm	/^c010b83e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b841	obj/kernel.asm	/^c010b841:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b844	obj/kernel.asm	/^c010b844:	e8 42 f8 ff ff       	call   c010b08b <lock_mm>$/;"	l
c010b849	obj/kernel.asm	/^c010b849:	c7 44 24 0c 04 01 00 	movl   $0x104,0xc(%esp)$/;"	l
c010b850	obj/kernel.asm	/^c010b850:	00 $/;"	l
c010b851	obj/kernel.asm	/^c010b851:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b854	obj/kernel.asm	/^c010b854:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010b858	obj/kernel.asm	/^c010b858:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b85b	obj/kernel.asm	/^c010b85b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b85f	obj/kernel.asm	/^c010b85f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b862	obj/kernel.asm	/^c010b862:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b865	obj/kernel.asm	/^c010b865:	e8 9f b7 ff ff       	call   c0107009 <copy_to_user>$/;"	l
c010b86a	obj/kernel.asm	/^c010b86a:	85 c0                	test   %eax,%eax$/;"	l
c010b86c	obj/kernel.asm	/^c010b86c:	75 07                	jne    c010b875 <sysfile_getdirentry+0xd9>$/;"	l
c010b86e	obj/kernel.asm	/^c010b86e:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010b875	obj/kernel.asm	/^c010b875:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b878	obj/kernel.asm	/^c010b878:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b87b	obj/kernel.asm	/^c010b87b:	e8 3e f8 ff ff       	call   c010b0be <unlock_mm>$/;"	l
c010b880	obj/kernel.asm	/^c010b880:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b883	obj/kernel.asm	/^c010b883:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b886	obj/kernel.asm	/^c010b886:	e8 78 c9 ff ff       	call   c0108203 <kfree>$/;"	l
c010b88b	obj/kernel.asm	/^c010b88b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b88e	obj/kernel.asm	/^c010b88e:	c9                   	leave  $/;"	l
c010b88f	obj/kernel.asm	/^c010b88f:	c3                   	ret    $/;"	l
c010b890	obj/kernel.asm	/^c010b890 <sysfile_dup>:$/;"	l
c010b890	obj/kernel.asm	/^c010b890:	55                   	push   %ebp$/;"	l
c010b891	obj/kernel.asm	/^c010b891:	89 e5                	mov    %esp,%ebp$/;"	l
c010b893	obj/kernel.asm	/^c010b893:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b896	obj/kernel.asm	/^c010b896:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b899	obj/kernel.asm	/^c010b899:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010b89d	obj/kernel.asm	/^c010b89d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8a0	obj/kernel.asm	/^c010b8a0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b8a3	obj/kernel.asm	/^c010b8a3:	e8 d8 0d 00 00       	call   c010c680 <file_dup>$/;"	l
c010b8a8	obj/kernel.asm	/^c010b8a8:	c9                   	leave  $/;"	l
c010b8a9	obj/kernel.asm	/^c010b8a9:	c3                   	ret    $/;"	l
c010b8aa	obj/kernel.asm	/^c010b8aa <sysfile_pipe>:$/;"	l
c010b8aa	obj/kernel.asm	/^c010b8aa:	55                   	push   %ebp$/;"	l
c010b8ab	obj/kernel.asm	/^c010b8ab:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8ad	obj/kernel.asm	/^c010b8ad:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010b8b2	obj/kernel.asm	/^c010b8b2:	5d                   	pop    %ebp$/;"	l
c010b8b3	obj/kernel.asm	/^c010b8b3:	c3                   	ret    $/;"	l
c010b8b4	obj/kernel.asm	/^c010b8b4 <sysfile_mkfifo>:$/;"	l
c010b8b4	obj/kernel.asm	/^c010b8b4:	55                   	push   %ebp$/;"	l
c010b8b5	obj/kernel.asm	/^c010b8b5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8b7	obj/kernel.asm	/^c010b8b7:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010b8bc	obj/kernel.asm	/^c010b8bc:	5d                   	pop    %ebp$/;"	l
c010b8bd	obj/kernel.asm	/^c010b8bd:	c3                   	ret    $/;"	l
c010b8be	obj/kernel.asm	/^c010b8be <files_count>:$/;"	l
c010b8be	obj/kernel.asm	/^c010b8be:	55                   	push   %ebp$/;"	l
c010b8bf	obj/kernel.asm	/^c010b8bf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8c1	obj/kernel.asm	/^c010b8c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8c4	obj/kernel.asm	/^c010b8c4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b8c7	obj/kernel.asm	/^c010b8c7:	5d                   	pop    %ebp$/;"	l
c010b8c8	obj/kernel.asm	/^c010b8c8:	c3                   	ret    $/;"	l
c010b8c9	obj/kernel.asm	/^c010b8c9 <fopen_count>:$/;"	l
c010b8c9	obj/kernel.asm	/^c010b8c9:	55                   	push   %ebp$/;"	l
c010b8ca	obj/kernel.asm	/^c010b8ca:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8cc	obj/kernel.asm	/^c010b8cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8cf	obj/kernel.asm	/^c010b8cf:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b8d2	obj/kernel.asm	/^c010b8d2:	5d                   	pop    %ebp$/;"	l
c010b8d3	obj/kernel.asm	/^c010b8d3:	c3                   	ret    $/;"	l
c010b8d4	obj/kernel.asm	/^c010b8d4 <fopen_count_inc>:$/;"	l
c010b8d4	obj/kernel.asm	/^c010b8d4:	55                   	push   %ebp$/;"	l
c010b8d5	obj/kernel.asm	/^c010b8d5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8d7	obj/kernel.asm	/^c010b8d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8da	obj/kernel.asm	/^c010b8da:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b8dd	obj/kernel.asm	/^c010b8dd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b8e0	obj/kernel.asm	/^c010b8e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8e3	obj/kernel.asm	/^c010b8e3:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010b8e6	obj/kernel.asm	/^c010b8e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8e9	obj/kernel.asm	/^c010b8e9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b8ec	obj/kernel.asm	/^c010b8ec:	5d                   	pop    %ebp$/;"	l
c010b8ed	obj/kernel.asm	/^c010b8ed:	c3                   	ret    $/;"	l
c010b8ee	obj/kernel.asm	/^c010b8ee <fopen_count_dec>:$/;"	l
c010b8ee	obj/kernel.asm	/^c010b8ee:	55                   	push   %ebp$/;"	l
c010b8ef	obj/kernel.asm	/^c010b8ef:	89 e5                	mov    %esp,%ebp$/;"	l
c010b8f1	obj/kernel.asm	/^c010b8f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8f4	obj/kernel.asm	/^c010b8f4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b8f7	obj/kernel.asm	/^c010b8f7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b8fa	obj/kernel.asm	/^c010b8fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8fd	obj/kernel.asm	/^c010b8fd:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010b900	obj/kernel.asm	/^c010b900:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b903	obj/kernel.asm	/^c010b903:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b906	obj/kernel.asm	/^c010b906:	5d                   	pop    %ebp$/;"	l
c010b907	obj/kernel.asm	/^c010b907:	c3                   	ret    $/;"	l
c010b908	obj/kernel.asm	/^c010b908 <get_fd_array>:$/;"	l
c010b908	obj/kernel.asm	/^c010b908:	55                   	push   %ebp$/;"	l
c010b909	obj/kernel.asm	/^c010b909:	89 e5                	mov    %esp,%ebp$/;"	l
c010b90b	obj/kernel.asm	/^c010b90b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b90e	obj/kernel.asm	/^c010b90e:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010b913	obj/kernel.asm	/^c010b913:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010b919	obj/kernel.asm	/^c010b919:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b91c	obj/kernel.asm	/^c010b91c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b920	obj/kernel.asm	/^c010b920:	74 0f                	je     c010b931 <get_fd_array+0x29>$/;"	l
c010b922	obj/kernel.asm	/^c010b922:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b925	obj/kernel.asm	/^c010b925:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010b928	obj/kernel.asm	/^c010b928:	e8 91 ff ff ff       	call   c010b8be <files_count>$/;"	l
c010b92d	obj/kernel.asm	/^c010b92d:	85 c0                	test   %eax,%eax$/;"	l
c010b92f	obj/kernel.asm	/^c010b92f:	7f 24                	jg     c010b955 <get_fd_array+0x4d>$/;"	l
c010b931	obj/kernel.asm	/^c010b931:	c7 44 24 0c b8 95 11 	movl   $0xc01195b8,0xc(%esp)$/;"	l
c010b938	obj/kernel.asm	/^c010b938:	c0 $/;"	l
c010b939	obj/kernel.asm	/^c010b939:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010b940	obj/kernel.asm	/^c010b940:	c0 $/;"	l
c010b941	obj/kernel.asm	/^c010b941:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c010b948	obj/kernel.asm	/^c010b948:	00 $/;"	l
c010b949	obj/kernel.asm	/^c010b949:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010b950	obj/kernel.asm	/^c010b950:	e8 e2 52 ff ff       	call   c0100c37 <__panic>$/;"	l
c010b955	obj/kernel.asm	/^c010b955:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b958	obj/kernel.asm	/^c010b958:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b95b	obj/kernel.asm	/^c010b95b:	c9                   	leave  $/;"	l
c010b95c	obj/kernel.asm	/^c010b95c:	c3                   	ret    $/;"	l
c010b95d	obj/kernel.asm	/^c010b95d <fd_array_init>:$/;"	l
c010b95d	obj/kernel.asm	/^c010b95d:	55                   	push   %ebp$/;"	l
c010b95e	obj/kernel.asm	/^c010b95e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b960	obj/kernel.asm	/^c010b960:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b963	obj/kernel.asm	/^c010b963:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b966	obj/kernel.asm	/^c010b966:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010b969	obj/kernel.asm	/^c010b969:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010b970	obj/kernel.asm	/^c010b970:	eb 24                	jmp    c010b996 <fd_array_init+0x39>$/;"	l
c010b972	obj/kernel.asm	/^c010b972:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b975	obj/kernel.asm	/^c010b975:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010b97c	obj/kernel.asm	/^c010b97c:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b97f	obj/kernel.asm	/^c010b97f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010b985	obj/kernel.asm	/^c010b985:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b988	obj/kernel.asm	/^c010b988:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b98b	obj/kernel.asm	/^c010b98b:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b98e	obj/kernel.asm	/^c010b98e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010b992	obj/kernel.asm	/^c010b992:	83 45 f8 1c          	addl   $0x1c,-0x8(%ebp)$/;"	l
c010b996	obj/kernel.asm	/^c010b996:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b999	obj/kernel.asm	/^c010b999:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b99e	obj/kernel.asm	/^c010b99e:	76 d2                	jbe    c010b972 <fd_array_init+0x15>$/;"	l
c010b9a0	obj/kernel.asm	/^c010b9a0:	c9                   	leave  $/;"	l
c010b9a1	obj/kernel.asm	/^c010b9a1:	c3                   	ret    $/;"	l
c010b9a2	obj/kernel.asm	/^c010b9a2 <fd_array_alloc>:$/;"	l
c010b9a2	obj/kernel.asm	/^c010b9a2:	55                   	push   %ebp$/;"	l
c010b9a3	obj/kernel.asm	/^c010b9a3:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9a5	obj/kernel.asm	/^c010b9a5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b9a8	obj/kernel.asm	/^c010b9a8:	e8 5b ff ff ff       	call   c010b908 <get_fd_array>$/;"	l
c010b9ad	obj/kernel.asm	/^c010b9ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b9b0	obj/kernel.asm	/^c010b9b0:	81 7d 08 d9 6a ff ff 	cmpl   $0xffff6ad9,0x8(%ebp)$/;"	l
c010b9b7	obj/kernel.asm	/^c010b9b7:	75 30                	jne    c010b9e9 <fd_array_alloc+0x47>$/;"	l
c010b9b9	obj/kernel.asm	/^c010b9b9:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010b9c0	obj/kernel.asm	/^c010b9c0:	eb 13                	jmp    c010b9d5 <fd_array_alloc+0x33>$/;"	l
c010b9c2	obj/kernel.asm	/^c010b9c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9c5	obj/kernel.asm	/^c010b9c5:	8b 00                	mov    (%eax),%eax$/;"	l
c010b9c7	obj/kernel.asm	/^c010b9c7:	85 c0                	test   %eax,%eax$/;"	l
c010b9c9	obj/kernel.asm	/^c010b9c9:	75 02                	jne    c010b9cd <fd_array_alloc+0x2b>$/;"	l
c010b9cb	obj/kernel.asm	/^c010b9cb:	eb 59                	jmp    c010ba26 <fd_array_alloc+0x84>$/;"	l
c010b9cd	obj/kernel.asm	/^c010b9cd:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b9d1	obj/kernel.asm	/^c010b9d1:	83 45 f4 1c          	addl   $0x1c,-0xc(%ebp)$/;"	l
c010b9d5	obj/kernel.asm	/^c010b9d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9d8	obj/kernel.asm	/^c010b9d8:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b9dd	obj/kernel.asm	/^c010b9dd:	76 e3                	jbe    c010b9c2 <fd_array_alloc+0x20>$/;"	l
c010b9df	obj/kernel.asm	/^c010b9df:	b8 ea ff ff ff       	mov    $0xffffffea,%eax$/;"	l
c010b9e4	obj/kernel.asm	/^c010b9e4:	e9 90 00 00 00       	jmp    c010ba79 <fd_array_alloc+0xd7>$/;"	l
c010b9e9	obj/kernel.asm	/^c010b9e9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b9ed	obj/kernel.asm	/^c010b9ed:	78 30                	js     c010ba1f <fd_array_alloc+0x7d>$/;"	l
c010b9ef	obj/kernel.asm	/^c010b9ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9f2	obj/kernel.asm	/^c010b9f2:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b9f7	obj/kernel.asm	/^c010b9f7:	77 26                	ja     c010ba1f <fd_array_alloc+0x7d>$/;"	l
c010b9f9	obj/kernel.asm	/^c010b9f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010ba06	obj/kernel.asm	/^c010ba06:	29 c2                	sub    %eax,%edx$/;"	l
c010ba08	obj/kernel.asm	/^c010ba08:	89 d0                	mov    %edx,%eax$/;"	l
c010ba0a	obj/kernel.asm	/^c010ba0a:	01 45 f4             	add    %eax,-0xc(%ebp)$/;"	l
c010ba0d	obj/kernel.asm	/^c010ba0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba10	obj/kernel.asm	/^c010ba10:	8b 00                	mov    (%eax),%eax$/;"	l
c010ba12	obj/kernel.asm	/^c010ba12:	85 c0                	test   %eax,%eax$/;"	l
c010ba14	obj/kernel.asm	/^c010ba14:	75 02                	jne    c010ba18 <fd_array_alloc+0x76>$/;"	l
c010ba16	obj/kernel.asm	/^c010ba16:	eb 0e                	jmp    c010ba26 <fd_array_alloc+0x84>$/;"	l
c010ba18	obj/kernel.asm	/^c010ba18:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c010ba1d	obj/kernel.asm	/^c010ba1d:	eb 5a                	jmp    c010ba79 <fd_array_alloc+0xd7>$/;"	l
c010ba1f	obj/kernel.asm	/^c010ba1f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ba24	obj/kernel.asm	/^c010ba24:	eb 53                	jmp    c010ba79 <fd_array_alloc+0xd7>$/;"	l
c010ba26	obj/kernel.asm	/^c010ba26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba29	obj/kernel.asm	/^c010ba29:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ba2c	obj/kernel.asm	/^c010ba2c:	e8 98 fe ff ff       	call   c010b8c9 <fopen_count>$/;"	l
c010ba31	obj/kernel.asm	/^c010ba31:	85 c0                	test   %eax,%eax$/;"	l
c010ba33	obj/kernel.asm	/^c010ba33:	74 24                	je     c010ba59 <fd_array_alloc+0xb7>$/;"	l
c010ba35	obj/kernel.asm	/^c010ba35:	c7 44 24 0c 06 96 11 	movl   $0xc0119606,0xc(%esp)$/;"	l
c010ba3c	obj/kernel.asm	/^c010ba3c:	c0 $/;"	l
c010ba3d	obj/kernel.asm	/^c010ba3d:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010ba44	obj/kernel.asm	/^c010ba44:	c0 $/;"	l
c010ba45	obj/kernel.asm	/^c010ba45:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)$/;"	l
c010ba4c	obj/kernel.asm	/^c010ba4c:	00 $/;"	l
c010ba4d	obj/kernel.asm	/^c010ba4d:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010ba54	obj/kernel.asm	/^c010ba54:	e8 de 51 ff ff       	call   c0100c37 <__panic>$/;"	l
c010ba59	obj/kernel.asm	/^c010ba59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba5c	obj/kernel.asm	/^c010ba5c:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010ba62	obj/kernel.asm	/^c010ba62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba65	obj/kernel.asm	/^c010ba65:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010ba6c	obj/kernel.asm	/^c010ba6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ba6f	obj/kernel.asm	/^c010ba6f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ba72	obj/kernel.asm	/^c010ba72:	89 10                	mov    %edx,(%eax)$/;"	l
c010ba74	obj/kernel.asm	/^c010ba74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ba79	obj/kernel.asm	/^c010ba79:	c9                   	leave  $/;"	l
c010ba7a	obj/kernel.asm	/^c010ba7a:	c3                   	ret    $/;"	l
c010ba7b	obj/kernel.asm	/^c010ba7b <fd_array_free>:$/;"	l
c010ba7b	obj/kernel.asm	/^c010ba7b:	55                   	push   %ebp$/;"	l
c010ba7c	obj/kernel.asm	/^c010ba7c:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba7e	obj/kernel.asm	/^c010ba7e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ba81	obj/kernel.asm	/^c010ba81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba84	obj/kernel.asm	/^c010ba84:	8b 00                	mov    (%eax),%eax$/;"	l
c010ba86	obj/kernel.asm	/^c010ba86:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010ba89	obj/kernel.asm	/^c010ba89:	74 2e                	je     c010bab9 <fd_array_free+0x3e>$/;"	l
c010ba8b	obj/kernel.asm	/^c010ba8b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba8e	obj/kernel.asm	/^c010ba8e:	8b 00                	mov    (%eax),%eax$/;"	l
c010ba90	obj/kernel.asm	/^c010ba90:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010ba93	obj/kernel.asm	/^c010ba93:	74 24                	je     c010bab9 <fd_array_free+0x3e>$/;"	l
c010ba95	obj/kernel.asm	/^c010ba95:	c7 44 24 0c 20 96 11 	movl   $0xc0119620,0xc(%esp)$/;"	l
c010ba9c	obj/kernel.asm	/^c010ba9c:	c0 $/;"	l
c010ba9d	obj/kernel.asm	/^c010ba9d:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010baa4	obj/kernel.asm	/^c010baa4:	c0 $/;"	l
c010baa5	obj/kernel.asm	/^c010baa5:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)$/;"	l
c010baac	obj/kernel.asm	/^c010baac:	00 $/;"	l
c010baad	obj/kernel.asm	/^c010baad:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bab4	obj/kernel.asm	/^c010bab4:	e8 7e 51 ff ff       	call   c0100c37 <__panic>$/;"	l
c010bab9	obj/kernel.asm	/^c010bab9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010babc	obj/kernel.asm	/^c010babc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010babf	obj/kernel.asm	/^c010babf:	e8 05 fe ff ff       	call   c010b8c9 <fopen_count>$/;"	l
c010bac4	obj/kernel.asm	/^c010bac4:	85 c0                	test   %eax,%eax$/;"	l
c010bac6	obj/kernel.asm	/^c010bac6:	74 24                	je     c010baec <fd_array_free+0x71>$/;"	l
c010bac8	obj/kernel.asm	/^c010bac8:	c7 44 24 0c 06 96 11 	movl   $0xc0119606,0xc(%esp)$/;"	l
c010bacf	obj/kernel.asm	/^c010bacf:	c0 $/;"	l
c010bad0	obj/kernel.asm	/^c010bad0:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bad7	obj/kernel.asm	/^c010bad7:	c0 $/;"	l
c010bad8	obj/kernel.asm	/^c010bad8:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010badf	obj/kernel.asm	/^c010badf:	00 $/;"	l
c010bae0	obj/kernel.asm	/^c010bae0:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bae7	obj/kernel.asm	/^c010bae7:	e8 4b 51 ff ff       	call   c0100c37 <__panic>$/;"	l
c010baec	obj/kernel.asm	/^c010baec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010baef	obj/kernel.asm	/^c010baef:	8b 00                	mov    (%eax),%eax$/;"	l
c010baf1	obj/kernel.asm	/^c010baf1:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010baf4	obj/kernel.asm	/^c010baf4:	75 0e                	jne    c010bb04 <fd_array_free+0x89>$/;"	l
c010baf6	obj/kernel.asm	/^c010baf6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010baf9	obj/kernel.asm	/^c010baf9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010bafc	obj/kernel.asm	/^c010bafc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010baff	obj/kernel.asm	/^c010baff:	e8 ae 58 00 00       	call   c01113b2 <vfs_close>$/;"	l
c010bb04	obj/kernel.asm	/^c010bb04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb07	obj/kernel.asm	/^c010bb07:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010bb0d	obj/kernel.asm	/^c010bb0d:	c9                   	leave  $/;"	l
c010bb0e	obj/kernel.asm	/^c010bb0e:	c3                   	ret    $/;"	l
c010bb0f	obj/kernel.asm	/^c010bb0f <fd_array_acquire>:$/;"	l
c010bb0f	obj/kernel.asm	/^c010bb0f:	55                   	push   %ebp$/;"	l
c010bb10	obj/kernel.asm	/^c010bb10:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb12	obj/kernel.asm	/^c010bb12:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bb15	obj/kernel.asm	/^c010bb15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb18	obj/kernel.asm	/^c010bb18:	8b 00                	mov    (%eax),%eax$/;"	l
c010bb1a	obj/kernel.asm	/^c010bb1a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010bb1d	obj/kernel.asm	/^c010bb1d:	74 24                	je     c010bb43 <fd_array_acquire+0x34>$/;"	l
c010bb1f	obj/kernel.asm	/^c010bb1f:	c7 44 24 0c 55 96 11 	movl   $0xc0119655,0xc(%esp)$/;"	l
c010bb26	obj/kernel.asm	/^c010bb26:	c0 $/;"	l
c010bb27	obj/kernel.asm	/^c010bb27:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bb2e	obj/kernel.asm	/^c010bb2e:	c0 $/;"	l
c010bb2f	obj/kernel.asm	/^c010bb2f:	c7 44 24 04 4e 00 00 	movl   $0x4e,0x4(%esp)$/;"	l
c010bb36	obj/kernel.asm	/^c010bb36:	00 $/;"	l
c010bb37	obj/kernel.asm	/^c010bb37:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bb3e	obj/kernel.asm	/^c010bb3e:	e8 f4 50 ff ff       	call   c0100c37 <__panic>$/;"	l
c010bb43	obj/kernel.asm	/^c010bb43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb46	obj/kernel.asm	/^c010bb46:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb49	obj/kernel.asm	/^c010bb49:	e8 86 fd ff ff       	call   c010b8d4 <fopen_count_inc>$/;"	l
c010bb4e	obj/kernel.asm	/^c010bb4e:	c9                   	leave  $/;"	l
c010bb4f	obj/kernel.asm	/^c010bb4f:	c3                   	ret    $/;"	l
c010bb50	obj/kernel.asm	/^c010bb50 <fd_array_release>:$/;"	l
c010bb50	obj/kernel.asm	/^c010bb50:	55                   	push   %ebp$/;"	l
c010bb51	obj/kernel.asm	/^c010bb51:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb53	obj/kernel.asm	/^c010bb53:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bb56	obj/kernel.asm	/^c010bb56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb59	obj/kernel.asm	/^c010bb59:	8b 00                	mov    (%eax),%eax$/;"	l
c010bb5b	obj/kernel.asm	/^c010bb5b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010bb5e	obj/kernel.asm	/^c010bb5e:	74 2e                	je     c010bb8e <fd_array_release+0x3e>$/;"	l
c010bb60	obj/kernel.asm	/^c010bb60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb63	obj/kernel.asm	/^c010bb63:	8b 00                	mov    (%eax),%eax$/;"	l
c010bb65	obj/kernel.asm	/^c010bb65:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010bb68	obj/kernel.asm	/^c010bb68:	74 24                	je     c010bb8e <fd_array_release+0x3e>$/;"	l
c010bb6a	obj/kernel.asm	/^c010bb6a:	c7 44 24 0c 70 96 11 	movl   $0xc0119670,0xc(%esp)$/;"	l
c010bb71	obj/kernel.asm	/^c010bb71:	c0 $/;"	l
c010bb72	obj/kernel.asm	/^c010bb72:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bb79	obj/kernel.asm	/^c010bb79:	c0 $/;"	l
c010bb7a	obj/kernel.asm	/^c010bb7a:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c010bb81	obj/kernel.asm	/^c010bb81:	00 $/;"	l
c010bb82	obj/kernel.asm	/^c010bb82:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bb89	obj/kernel.asm	/^c010bb89:	e8 a9 50 ff ff       	call   c0100c37 <__panic>$/;"	l
c010bb8e	obj/kernel.asm	/^c010bb8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb91	obj/kernel.asm	/^c010bb91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bb94	obj/kernel.asm	/^c010bb94:	e8 30 fd ff ff       	call   c010b8c9 <fopen_count>$/;"	l
c010bb99	obj/kernel.asm	/^c010bb99:	85 c0                	test   %eax,%eax$/;"	l
c010bb9b	obj/kernel.asm	/^c010bb9b:	7f 24                	jg     c010bbc1 <fd_array_release+0x71>$/;"	l
c010bb9d	obj/kernel.asm	/^c010bb9d:	c7 44 24 0c a7 96 11 	movl   $0xc01196a7,0xc(%esp)$/;"	l
c010bba4	obj/kernel.asm	/^c010bba4:	c0 $/;"	l
c010bba5	obj/kernel.asm	/^c010bba5:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bbac	obj/kernel.asm	/^c010bbac:	c0 $/;"	l
c010bbad	obj/kernel.asm	/^c010bbad:	c7 44 24 04 56 00 00 	movl   $0x56,0x4(%esp)$/;"	l
c010bbb4	obj/kernel.asm	/^c010bbb4:	00 $/;"	l
c010bbb5	obj/kernel.asm	/^c010bbb5:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bbbc	obj/kernel.asm	/^c010bbbc:	e8 76 50 ff ff       	call   c0100c37 <__panic>$/;"	l
c010bbc1	obj/kernel.asm	/^c010bbc1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbc4	obj/kernel.asm	/^c010bbc4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbc7	obj/kernel.asm	/^c010bbc7:	e8 22 fd ff ff       	call   c010b8ee <fopen_count_dec>$/;"	l
c010bbcc	obj/kernel.asm	/^c010bbcc:	85 c0                	test   %eax,%eax$/;"	l
c010bbce	obj/kernel.asm	/^c010bbce:	75 0b                	jne    c010bbdb <fd_array_release+0x8b>$/;"	l
c010bbd0	obj/kernel.asm	/^c010bbd0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbd3	obj/kernel.asm	/^c010bbd3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bbd6	obj/kernel.asm	/^c010bbd6:	e8 a0 fe ff ff       	call   c010ba7b <fd_array_free>$/;"	l
c010bbdb	obj/kernel.asm	/^c010bbdb:	c9                   	leave  $/;"	l
c010bbdc	obj/kernel.asm	/^c010bbdc:	c3                   	ret    $/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd <fd_array_open>:$/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd:	55                   	push   %ebp$/;"	l
c010bbde	obj/kernel.asm	/^c010bbde:	89 e5                	mov    %esp,%ebp$/;"	l
c010bbe0	obj/kernel.asm	/^c010bbe0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bbe3	obj/kernel.asm	/^c010bbe3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbe6	obj/kernel.asm	/^c010bbe6:	8b 00                	mov    (%eax),%eax$/;"	l
c010bbe8	obj/kernel.asm	/^c010bbe8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010bbeb	obj/kernel.asm	/^c010bbeb:	75 0a                	jne    c010bbf7 <fd_array_open+0x1a>$/;"	l
c010bbed	obj/kernel.asm	/^c010bbed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbf0	obj/kernel.asm	/^c010bbf0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010bbf3	obj/kernel.asm	/^c010bbf3:	85 c0                	test   %eax,%eax$/;"	l
c010bbf5	obj/kernel.asm	/^c010bbf5:	75 24                	jne    c010bc1b <fd_array_open+0x3e>$/;"	l
c010bbf7	obj/kernel.asm	/^c010bbf7:	c7 44 24 0c c0 96 11 	movl   $0xc01196c0,0xc(%esp)$/;"	l
c010bbfe	obj/kernel.asm	/^c010bbfe:	c0 $/;"	l
c010bbff	obj/kernel.asm	/^c010bbff:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bc06	obj/kernel.asm	/^c010bc06:	c0 $/;"	l
c010bc07	obj/kernel.asm	/^c010bc07:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c010bc0e	obj/kernel.asm	/^c010bc0e:	00 $/;"	l
c010bc0f	obj/kernel.asm	/^c010bc0f:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bc16	obj/kernel.asm	/^c010bc16:	e8 1c 50 ff ff       	call   c0100c37 <__panic>$/;"	l
c010bc1b	obj/kernel.asm	/^c010bc1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc1e	obj/kernel.asm	/^c010bc1e:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010bc24	obj/kernel.asm	/^c010bc24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc27	obj/kernel.asm	/^c010bc27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc2a	obj/kernel.asm	/^c010bc2a:	e8 a5 fc ff ff       	call   c010b8d4 <fopen_count_inc>$/;"	l
c010bc2f	obj/kernel.asm	/^c010bc2f:	c9                   	leave  $/;"	l
c010bc30	obj/kernel.asm	/^c010bc30:	c3                   	ret    $/;"	l
c010bc31	obj/kernel.asm	/^c010bc31 <fd_array_close>:$/;"	l
c010bc31	obj/kernel.asm	/^c010bc31:	55                   	push   %ebp$/;"	l
c010bc32	obj/kernel.asm	/^c010bc32:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc34	obj/kernel.asm	/^c010bc34:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bc37	obj/kernel.asm	/^c010bc37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc3a	obj/kernel.asm	/^c010bc3a:	8b 00                	mov    (%eax),%eax$/;"	l
c010bc3c	obj/kernel.asm	/^c010bc3c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010bc3f	obj/kernel.asm	/^c010bc3f:	74 24                	je     c010bc65 <fd_array_close+0x34>$/;"	l
c010bc41	obj/kernel.asm	/^c010bc41:	c7 44 24 0c 55 96 11 	movl   $0xc0119655,0xc(%esp)$/;"	l
c010bc48	obj/kernel.asm	/^c010bc48:	c0 $/;"	l
c010bc49	obj/kernel.asm	/^c010bc49:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bc50	obj/kernel.asm	/^c010bc50:	c0 $/;"	l
c010bc51	obj/kernel.asm	/^c010bc51:	c7 44 24 04 67 00 00 	movl   $0x67,0x4(%esp)$/;"	l
c010bc58	obj/kernel.asm	/^c010bc58:	00 $/;"	l
c010bc59	obj/kernel.asm	/^c010bc59:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bc60	obj/kernel.asm	/^c010bc60:	e8 d2 4f ff ff       	call   c0100c37 <__panic>$/;"	l
c010bc65	obj/kernel.asm	/^c010bc65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc68	obj/kernel.asm	/^c010bc68:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bc6b	obj/kernel.asm	/^c010bc6b:	e8 59 fc ff ff       	call   c010b8c9 <fopen_count>$/;"	l
c010bc70	obj/kernel.asm	/^c010bc70:	85 c0                	test   %eax,%eax$/;"	l
c010bc72	obj/kernel.asm	/^c010bc72:	7f 24                	jg     c010bc98 <fd_array_close+0x67>$/;"	l
c010bc74	obj/kernel.asm	/^c010bc74:	c7 44 24 0c a7 96 11 	movl   $0xc01196a7,0xc(%esp)$/;"	l
c010bc7b	obj/kernel.asm	/^c010bc7b:	c0 $/;"	l
c010bc7c	obj/kernel.asm	/^c010bc7c:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bc83	obj/kernel.asm	/^c010bc83:	c0 $/;"	l
c010bc84	obj/kernel.asm	/^c010bc84:	c7 44 24 04 68 00 00 	movl   $0x68,0x4(%esp)$/;"	l
c010bc8b	obj/kernel.asm	/^c010bc8b:	00 $/;"	l
c010bc8c	obj/kernel.asm	/^c010bc8c:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bc93	obj/kernel.asm	/^c010bc93:	e8 9f 4f ff ff       	call   c0100c37 <__panic>$/;"	l
c010bc98	obj/kernel.asm	/^c010bc98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc9b	obj/kernel.asm	/^c010bc9b:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010bca1	obj/kernel.asm	/^c010bca1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bca4	obj/kernel.asm	/^c010bca4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bca7	obj/kernel.asm	/^c010bca7:	e8 42 fc ff ff       	call   c010b8ee <fopen_count_dec>$/;"	l
c010bcac	obj/kernel.asm	/^c010bcac:	85 c0                	test   %eax,%eax$/;"	l
c010bcae	obj/kernel.asm	/^c010bcae:	75 0b                	jne    c010bcbb <fd_array_close+0x8a>$/;"	l
c010bcb0	obj/kernel.asm	/^c010bcb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcb3	obj/kernel.asm	/^c010bcb3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bcb6	obj/kernel.asm	/^c010bcb6:	e8 c0 fd ff ff       	call   c010ba7b <fd_array_free>$/;"	l
c010bcbb	obj/kernel.asm	/^c010bcbb:	c9                   	leave  $/;"	l
c010bcbc	obj/kernel.asm	/^c010bcbc:	c3                   	ret    $/;"	l
c010bcbd	obj/kernel.asm	/^c010bcbd <fd_array_dup>:$/;"	l
c010bcbd	obj/kernel.asm	/^c010bcbd:	55                   	push   %ebp$/;"	l
c010bcbe	obj/kernel.asm	/^c010bcbe:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcc0	obj/kernel.asm	/^c010bcc0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bcc3	obj/kernel.asm	/^c010bcc3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcc6	obj/kernel.asm	/^c010bcc6:	8b 00                	mov    (%eax),%eax$/;"	l
c010bcc8	obj/kernel.asm	/^c010bcc8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010bccb	obj/kernel.asm	/^c010bccb:	75 0a                	jne    c010bcd7 <fd_array_dup+0x1a>$/;"	l
c010bccd	obj/kernel.asm	/^c010bccd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bcd0	obj/kernel.asm	/^c010bcd0:	8b 00                	mov    (%eax),%eax$/;"	l
c010bcd2	obj/kernel.asm	/^c010bcd2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010bcd5	obj/kernel.asm	/^c010bcd5:	74 24                	je     c010bcfb <fd_array_dup+0x3e>$/;"	l
c010bcd7	obj/kernel.asm	/^c010bcd7:	c7 44 24 0c f0 96 11 	movl   $0xc01196f0,0xc(%esp)$/;"	l
c010bcde	obj/kernel.asm	/^c010bcde:	c0 $/;"	l
c010bcdf	obj/kernel.asm	/^c010bcdf:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bce6	obj/kernel.asm	/^c010bce6:	c0 $/;"	l
c010bce7	obj/kernel.asm	/^c010bce7:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
c010bcee	obj/kernel.asm	/^c010bcee:	00 $/;"	l
c010bcef	obj/kernel.asm	/^c010bcef:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bcf6	obj/kernel.asm	/^c010bcf6:	e8 3c 4f ff ff       	call   c0100c37 <__panic>$/;"	l
c010bcfb	obj/kernel.asm	/^c010bcfb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bcfe	obj/kernel.asm	/^c010bcfe:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010bd01	obj/kernel.asm	/^c010bd01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd04	obj/kernel.asm	/^c010bd04:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010bd07	obj/kernel.asm	/^c010bd07:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd0a	obj/kernel.asm	/^c010bd0a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010bd0d	obj/kernel.asm	/^c010bd0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd10	obj/kernel.asm	/^c010bd10:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bd13	obj/kernel.asm	/^c010bd13:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd16	obj/kernel.asm	/^c010bd16:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010bd19	obj/kernel.asm	/^c010bd19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd1c	obj/kernel.asm	/^c010bd1c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bd1f	obj/kernel.asm	/^c010bd1f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd22	obj/kernel.asm	/^c010bd22:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010bd25	obj/kernel.asm	/^c010bd25:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bd28	obj/kernel.asm	/^c010bd28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd2b	obj/kernel.asm	/^c010bd2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd2e	obj/kernel.asm	/^c010bd2e:	e8 94 50 00 00       	call   c0110dc7 <inode_ref_inc>$/;"	l
c010bd33	obj/kernel.asm	/^c010bd33:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd36	obj/kernel.asm	/^c010bd36:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd39	obj/kernel.asm	/^c010bd39:	e8 90 51 00 00       	call   c0110ece <inode_open_inc>$/;"	l
c010bd3e	obj/kernel.asm	/^c010bd3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd41	obj/kernel.asm	/^c010bd41:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bd44	obj/kernel.asm	/^c010bd44:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010bd47	obj/kernel.asm	/^c010bd47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd4a	obj/kernel.asm	/^c010bd4a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bd4d	obj/kernel.asm	/^c010bd4d:	e8 8b fe ff ff       	call   c010bbdd <fd_array_open>$/;"	l
c010bd52	obj/kernel.asm	/^c010bd52:	c9                   	leave  $/;"	l
c010bd53	obj/kernel.asm	/^c010bd53:	c3                   	ret    $/;"	l
c010bd54	obj/kernel.asm	/^c010bd54 <fd2file>:$/;"	l
c010bd54	obj/kernel.asm	/^c010bd54:	55                   	push   %ebp$/;"	l
c010bd55	obj/kernel.asm	/^c010bd55:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd57	obj/kernel.asm	/^c010bd57:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bd5a	obj/kernel.asm	/^c010bd5a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bd5e	obj/kernel.asm	/^c010bd5e:	78 4b                	js     c010bdab <fd2file+0x57>$/;"	l
c010bd60	obj/kernel.asm	/^c010bd60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd63	obj/kernel.asm	/^c010bd63:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010bd68	obj/kernel.asm	/^c010bd68:	77 41                	ja     c010bdab <fd2file+0x57>$/;"	l
c010bd6a	obj/kernel.asm	/^c010bd6a:	e8 99 fb ff ff       	call   c010b908 <get_fd_array>$/;"	l
c010bd6f	obj/kernel.asm	/^c010bd6f:	89 c2                	mov    %eax,%edx$/;"	l
c010bd71	obj/kernel.asm	/^c010bd71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd74	obj/kernel.asm	/^c010bd74:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010bd77	obj/kernel.asm	/^c010bd77:	8d 0c c5 00 00 00 00 	lea    0x0(,%eax,8),%ecx$/;"	l
c010bd7e	obj/kernel.asm	/^c010bd7e:	29 c1                	sub    %eax,%ecx$/;"	l
c010bd80	obj/kernel.asm	/^c010bd80:	89 c8                	mov    %ecx,%eax$/;"	l
c010bd82	obj/kernel.asm	/^c010bd82:	01 d0                	add    %edx,%eax$/;"	l
c010bd84	obj/kernel.asm	/^c010bd84:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bd87	obj/kernel.asm	/^c010bd87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd8a	obj/kernel.asm	/^c010bd8a:	8b 00                	mov    (%eax),%eax$/;"	l
c010bd8c	obj/kernel.asm	/^c010bd8c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010bd8f	obj/kernel.asm	/^c010bd8f:	75 1a                	jne    c010bdab <fd2file+0x57>$/;"	l
c010bd91	obj/kernel.asm	/^c010bd91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bd94	obj/kernel.asm	/^c010bd94:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bd97	obj/kernel.asm	/^c010bd97:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010bd9a	obj/kernel.asm	/^c010bd9a:	75 0f                	jne    c010bdab <fd2file+0x57>$/;"	l
c010bd9c	obj/kernel.asm	/^c010bd9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd9f	obj/kernel.asm	/^c010bd9f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bda2	obj/kernel.asm	/^c010bda2:	89 10                	mov    %edx,(%eax)$/;"	l
c010bda4	obj/kernel.asm	/^c010bda4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bda9	obj/kernel.asm	/^c010bda9:	eb 05                	jmp    c010bdb0 <fd2file+0x5c>$/;"	l
c010bdab	obj/kernel.asm	/^c010bdab:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010bdb0	obj/kernel.asm	/^c010bdb0:	c9                   	leave  $/;"	l
c010bdb1	obj/kernel.asm	/^c010bdb1:	c3                   	ret    $/;"	l
c010bdb2	obj/kernel.asm	/^c010bdb2 <file_testfd>:$/;"	l
c010bdb2	obj/kernel.asm	/^c010bdb2:	55                   	push   %ebp$/;"	l
c010bdb3	obj/kernel.asm	/^c010bdb3:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdb5	obj/kernel.asm	/^c010bdb5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bdb8	obj/kernel.asm	/^c010bdb8:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010bdbb	obj/kernel.asm	/^c010bdbb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bdbf	obj/kernel.asm	/^c010bdbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdc2	obj/kernel.asm	/^c010bdc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bdc5	obj/kernel.asm	/^c010bdc5:	e8 8a ff ff ff       	call   c010bd54 <fd2file>$/;"	l
c010bdca	obj/kernel.asm	/^c010bdca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bdcd	obj/kernel.asm	/^c010bdcd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bdd1	obj/kernel.asm	/^c010bdd1:	74 07                	je     c010bdda <file_testfd+0x28>$/;"	l
c010bdd3	obj/kernel.asm	/^c010bdd3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bdd8	obj/kernel.asm	/^c010bdd8:	eb 33                	jmp    c010be0d <file_testfd+0x5b>$/;"	l
c010bdda	obj/kernel.asm	/^c010bdda:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010bdde	obj/kernel.asm	/^c010bdde:	74 11                	je     c010bdf1 <file_testfd+0x3f>$/;"	l
c010bde0	obj/kernel.asm	/^c010bde0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bde3	obj/kernel.asm	/^c010bde3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bde6	obj/kernel.asm	/^c010bde6:	85 c0                	test   %eax,%eax$/;"	l
c010bde8	obj/kernel.asm	/^c010bde8:	75 07                	jne    c010bdf1 <file_testfd+0x3f>$/;"	l
c010bdea	obj/kernel.asm	/^c010bdea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bdef	obj/kernel.asm	/^c010bdef:	eb 1c                	jmp    c010be0d <file_testfd+0x5b>$/;"	l
c010bdf1	obj/kernel.asm	/^c010bdf1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010bdf5	obj/kernel.asm	/^c010bdf5:	74 11                	je     c010be08 <file_testfd+0x56>$/;"	l
c010bdf7	obj/kernel.asm	/^c010bdf7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bdfa	obj/kernel.asm	/^c010bdfa:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bdfd	obj/kernel.asm	/^c010bdfd:	85 c0                	test   %eax,%eax$/;"	l
c010bdff	obj/kernel.asm	/^c010bdff:	75 07                	jne    c010be08 <file_testfd+0x56>$/;"	l
c010be01	obj/kernel.asm	/^c010be01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010be06	obj/kernel.asm	/^c010be06:	eb 05                	jmp    c010be0d <file_testfd+0x5b>$/;"	l
c010be08	obj/kernel.asm	/^c010be08:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010be0d	obj/kernel.asm	/^c010be0d:	c9                   	leave  $/;"	l
c010be0e	obj/kernel.asm	/^c010be0e:	c3                   	ret    $/;"	l
c010be0f	obj/kernel.asm	/^c010be0f <file_open>:$/;"	l
c010be0f	obj/kernel.asm	/^c010be0f:	55                   	push   %ebp$/;"	l
c010be10	obj/kernel.asm	/^c010be10:	89 e5                	mov    %esp,%ebp$/;"	l
c010be12	obj/kernel.asm	/^c010be12:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010be15	obj/kernel.asm	/^c010be15:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010be1c	obj/kernel.asm	/^c010be1c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010be23	obj/kernel.asm	/^c010be23:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be26	obj/kernel.asm	/^c010be26:	83 e0 03             	and    $0x3,%eax$/;"	l
c010be29	obj/kernel.asm	/^c010be29:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010be2c	obj/kernel.asm	/^c010be2c:	74 15                	je     c010be43 <file_open+0x34>$/;"	l
c010be2e	obj/kernel.asm	/^c010be2e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010be31	obj/kernel.asm	/^c010be31:	72 07                	jb     c010be3a <file_open+0x2b>$/;"	l
c010be33	obj/kernel.asm	/^c010be33:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010be36	obj/kernel.asm	/^c010be36:	74 14                	je     c010be4c <file_open+0x3d>$/;"	l
c010be38	obj/kernel.asm	/^c010be38:	eb 21                	jmp    c010be5b <file_open+0x4c>$/;"	l
c010be3a	obj/kernel.asm	/^c010be3a:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010be41	obj/kernel.asm	/^c010be41:	eb 22                	jmp    c010be65 <file_open+0x56>$/;"	l
c010be43	obj/kernel.asm	/^c010be43:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010be4a	obj/kernel.asm	/^c010be4a:	eb 19                	jmp    c010be65 <file_open+0x56>$/;"	l
c010be4c	obj/kernel.asm	/^c010be4c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010be53	obj/kernel.asm	/^c010be53:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010be56	obj/kernel.asm	/^c010be56:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be59	obj/kernel.asm	/^c010be59:	eb 0a                	jmp    c010be65 <file_open+0x56>$/;"	l
c010be5b	obj/kernel.asm	/^c010be5b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010be60	obj/kernel.asm	/^c010be60:	e9 45 01 00 00       	jmp    c010bfaa <file_open+0x19b>$/;"	l
c010be65	obj/kernel.asm	/^c010be65:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010be68	obj/kernel.asm	/^c010be68:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010be6c	obj/kernel.asm	/^c010be6c:	c7 04 24 d9 6a ff ff 	movl   $0xffff6ad9,(%esp)$/;"	l
c010be73	obj/kernel.asm	/^c010be73:	e8 2a fb ff ff       	call   c010b9a2 <fd_array_alloc>$/;"	l
c010be78	obj/kernel.asm	/^c010be78:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010be7b	obj/kernel.asm	/^c010be7b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010be7f	obj/kernel.asm	/^c010be7f:	74 08                	je     c010be89 <file_open+0x7a>$/;"	l
c010be81	obj/kernel.asm	/^c010be81:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010be84	obj/kernel.asm	/^c010be84:	e9 21 01 00 00       	jmp    c010bfaa <file_open+0x19b>$/;"	l
c010be89	obj/kernel.asm	/^c010be89:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010be8c	obj/kernel.asm	/^c010be8c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010be90	obj/kernel.asm	/^c010be90:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be93	obj/kernel.asm	/^c010be93:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010be97	obj/kernel.asm	/^c010be97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be9a	obj/kernel.asm	/^c010be9a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010be9d	obj/kernel.asm	/^c010be9d:	e8 20 52 00 00       	call   c01110c2 <vfs_open>$/;"	l
c010bea2	obj/kernel.asm	/^c010bea2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bea5	obj/kernel.asm	/^c010bea5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bea9	obj/kernel.asm	/^c010bea9:	74 13                	je     c010bebe <file_open+0xaf>$/;"	l
c010beab	obj/kernel.asm	/^c010beab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010beae	obj/kernel.asm	/^c010beae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010beb1	obj/kernel.asm	/^c010beb1:	e8 c5 fb ff ff       	call   c010ba7b <fd_array_free>$/;"	l
c010beb6	obj/kernel.asm	/^c010beb6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010beb9	obj/kernel.asm	/^c010beb9:	e9 ec 00 00 00       	jmp    c010bfaa <file_open+0x19b>$/;"	l
c010bebe	obj/kernel.asm	/^c010bebe:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bec1	obj/kernel.asm	/^c010bec1:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010bec8	obj/kernel.asm	/^c010bec8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010becb	obj/kernel.asm	/^c010becb:	83 e0 20             	and    $0x20,%eax$/;"	l
c010bece	obj/kernel.asm	/^c010bece:	85 c0                	test   %eax,%eax$/;"	l
c010bed0	obj/kernel.asm	/^c010bed0:	0f 84 a8 00 00 00    	je     c010bf7e <file_open+0x16f>$/;"	l
c010bed6	obj/kernel.asm	/^c010bed6:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010bed9	obj/kernel.asm	/^c010bed9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bedc	obj/kernel.asm	/^c010bedc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010bedf	obj/kernel.asm	/^c010bedf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010bee2	obj/kernel.asm	/^c010bee2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010bee6	obj/kernel.asm	/^c010bee6:	74 17                	je     c010beff <file_open+0xf0>$/;"	l
c010bee8	obj/kernel.asm	/^c010bee8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010beeb	obj/kernel.asm	/^c010beeb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010beee	obj/kernel.asm	/^c010beee:	85 c0                	test   %eax,%eax$/;"	l
c010bef0	obj/kernel.asm	/^c010bef0:	74 0d                	je     c010beff <file_open+0xf0>$/;"	l
c010bef2	obj/kernel.asm	/^c010bef2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bef5	obj/kernel.asm	/^c010bef5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bef8	obj/kernel.asm	/^c010bef8:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010befb	obj/kernel.asm	/^c010befb:	85 c0                	test   %eax,%eax$/;"	l
c010befd	obj/kernel.asm	/^c010befd:	75 24                	jne    c010bf23 <file_open+0x114>$/;"	l
c010beff	obj/kernel.asm	/^c010beff:	c7 44 24 0c 24 97 11 	movl   $0xc0119724,0xc(%esp)$/;"	l
c010bf06	obj/kernel.asm	/^c010bf06:	c0 $/;"	l
c010bf07	obj/kernel.asm	/^c010bf07:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010bf0e	obj/kernel.asm	/^c010bf0e:	c0 $/;"	l
c010bf0f	obj/kernel.asm	/^c010bf0f:	c7 44 24 04 b8 00 00 	movl   $0xb8,0x4(%esp)$/;"	l
c010bf16	obj/kernel.asm	/^c010bf16:	00 $/;"	l
c010bf17	obj/kernel.asm	/^c010bf17:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010bf1e	obj/kernel.asm	/^c010bf1e:	e8 14 4d ff ff       	call   c0100c37 <__panic>$/;"	l
c010bf23	obj/kernel.asm	/^c010bf23:	c7 44 24 04 72 97 11 	movl   $0xc0119772,0x4(%esp)$/;"	l
c010bf2a	obj/kernel.asm	/^c010bf2a:	c0 $/;"	l
c010bf2b	obj/kernel.asm	/^c010bf2b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bf2e	obj/kernel.asm	/^c010bf2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf31	obj/kernel.asm	/^c010bf31:	e8 99 50 00 00       	call   c0110fcf <inode_check>$/;"	l
c010bf36	obj/kernel.asm	/^c010bf36:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bf39	obj/kernel.asm	/^c010bf39:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bf3c	obj/kernel.asm	/^c010bf3c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010bf3f	obj/kernel.asm	/^c010bf3f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010bf42	obj/kernel.asm	/^c010bf42:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010bf45	obj/kernel.asm	/^c010bf45:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010bf49	obj/kernel.asm	/^c010bf49:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010bf4c	obj/kernel.asm	/^c010bf4c:	ff d0                	call   *%eax$/;"	l
c010bf4e	obj/kernel.asm	/^c010bf4e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bf51	obj/kernel.asm	/^c010bf51:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bf55	obj/kernel.asm	/^c010bf55:	74 1b                	je     c010bf72 <file_open+0x163>$/;"	l
c010bf57	obj/kernel.asm	/^c010bf57:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010bf5a	obj/kernel.asm	/^c010bf5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf5d	obj/kernel.asm	/^c010bf5d:	e8 50 54 00 00       	call   c01113b2 <vfs_close>$/;"	l
c010bf62	obj/kernel.asm	/^c010bf62:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bf65	obj/kernel.asm	/^c010bf65:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf68	obj/kernel.asm	/^c010bf68:	e8 0e fb ff ff       	call   c010ba7b <fd_array_free>$/;"	l
c010bf6d	obj/kernel.asm	/^c010bf6d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bf70	obj/kernel.asm	/^c010bf70:	eb 38                	jmp    c010bfaa <file_open+0x19b>$/;"	l
c010bf72	obj/kernel.asm	/^c010bf72:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bf75	obj/kernel.asm	/^c010bf75:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010bf78	obj/kernel.asm	/^c010bf78:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010bf7b	obj/kernel.asm	/^c010bf7b:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010bf7e	obj/kernel.asm	/^c010bf7e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bf81	obj/kernel.asm	/^c010bf81:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010bf84	obj/kernel.asm	/^c010bf84:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010bf87	obj/kernel.asm	/^c010bf87:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bf8a	obj/kernel.asm	/^c010bf8a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bf8d	obj/kernel.asm	/^c010bf8d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bf90	obj/kernel.asm	/^c010bf90:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bf93	obj/kernel.asm	/^c010bf93:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010bf96	obj/kernel.asm	/^c010bf96:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bf99	obj/kernel.asm	/^c010bf99:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bf9c	obj/kernel.asm	/^c010bf9c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bf9f	obj/kernel.asm	/^c010bf9f:	e8 39 fc ff ff       	call   c010bbdd <fd_array_open>$/;"	l
c010bfa4	obj/kernel.asm	/^c010bfa4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bfa7	obj/kernel.asm	/^c010bfa7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bfaa	obj/kernel.asm	/^c010bfaa:	c9                   	leave  $/;"	l
c010bfab	obj/kernel.asm	/^c010bfab:	c3                   	ret    $/;"	l
c010bfac	obj/kernel.asm	/^c010bfac <file_close>:$/;"	l
c010bfac	obj/kernel.asm	/^c010bfac:	55                   	push   %ebp$/;"	l
c010bfad	obj/kernel.asm	/^c010bfad:	89 e5                	mov    %esp,%ebp$/;"	l
c010bfaf	obj/kernel.asm	/^c010bfaf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bfb2	obj/kernel.asm	/^c010bfb2:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010bfb5	obj/kernel.asm	/^c010bfb5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bfb9	obj/kernel.asm	/^c010bfb9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bfbc	obj/kernel.asm	/^c010bfbc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bfbf	obj/kernel.asm	/^c010bfbf:	e8 90 fd ff ff       	call   c010bd54 <fd2file>$/;"	l
c010bfc4	obj/kernel.asm	/^c010bfc4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bfc7	obj/kernel.asm	/^c010bfc7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bfcb	obj/kernel.asm	/^c010bfcb:	74 05                	je     c010bfd2 <file_close+0x26>$/;"	l
c010bfcd	obj/kernel.asm	/^c010bfcd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bfd0	obj/kernel.asm	/^c010bfd0:	eb 10                	jmp    c010bfe2 <file_close+0x36>$/;"	l
c010bfd2	obj/kernel.asm	/^c010bfd2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bfd5	obj/kernel.asm	/^c010bfd5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010bfd8	obj/kernel.asm	/^c010bfd8:	e8 54 fc ff ff       	call   c010bc31 <fd_array_close>$/;"	l
c010bfdd	obj/kernel.asm	/^c010bfdd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bfe2	obj/kernel.asm	/^c010bfe2:	c9                   	leave  $/;"	l
c010bfe3	obj/kernel.asm	/^c010bfe3:	c3                   	ret    $/;"	l
c010bfe4	obj/kernel.asm	/^c010bfe4 <file_read>:$/;"	l
c010bfe4	obj/kernel.asm	/^c010bfe4:	55                   	push   %ebp$/;"	l
c010bfe5	obj/kernel.asm	/^c010bfe5:	89 e5                	mov    %esp,%ebp$/;"	l
c010bfe7	obj/kernel.asm	/^c010bfe7:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010bfea	obj/kernel.asm	/^c010bfea:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010bfed	obj/kernel.asm	/^c010bfed:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010bff3	obj/kernel.asm	/^c010bff3:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010bff6	obj/kernel.asm	/^c010bff6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010bffa	obj/kernel.asm	/^c010bffa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bffd	obj/kernel.asm	/^c010bffd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c000	obj/kernel.asm	/^c010c000:	e8 4f fd ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c005	obj/kernel.asm	/^c010c005:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c008	obj/kernel.asm	/^c010c008:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c00c	obj/kernel.asm	/^c010c00c:	74 08                	je     c010c016 <file_read+0x32>$/;"	l
c010c00e	obj/kernel.asm	/^c010c00e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c011	obj/kernel.asm	/^c010c011:	e9 06 01 00 00       	jmp    c010c11c <file_read+0x138>$/;"	l
c010c016	obj/kernel.asm	/^c010c016:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c019	obj/kernel.asm	/^c010c019:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c01c	obj/kernel.asm	/^c010c01c:	85 c0                	test   %eax,%eax$/;"	l
c010c01e	obj/kernel.asm	/^c010c01e:	75 0a                	jne    c010c02a <file_read+0x46>$/;"	l
c010c020	obj/kernel.asm	/^c010c020:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010c025	obj/kernel.asm	/^c010c025:	e9 f2 00 00 00       	jmp    c010c11c <file_read+0x138>$/;"	l
c010c02a	obj/kernel.asm	/^c010c02a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c02d	obj/kernel.asm	/^c010c02d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c030	obj/kernel.asm	/^c010c030:	e8 da fa ff ff       	call   c010bb0f <fd_array_acquire>$/;"	l
c010c035	obj/kernel.asm	/^c010c035:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c038	obj/kernel.asm	/^c010c038:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c03b	obj/kernel.asm	/^c010c03b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c03f	obj/kernel.asm	/^c010c03f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c042	obj/kernel.asm	/^c010c042:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010c046	obj/kernel.asm	/^c010c046:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c049	obj/kernel.asm	/^c010c049:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c04d	obj/kernel.asm	/^c010c04d:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010c050	obj/kernel.asm	/^c010c050:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c053	obj/kernel.asm	/^c010c053:	e8 88 06 00 00       	call   c010c6e0 <iobuf_init>$/;"	l
c010c058	obj/kernel.asm	/^c010c058:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c05b	obj/kernel.asm	/^c010c05b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c05e	obj/kernel.asm	/^c010c05e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c061	obj/kernel.asm	/^c010c061:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c064	obj/kernel.asm	/^c010c064:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c068	obj/kernel.asm	/^c010c068:	74 17                	je     c010c081 <file_read+0x9d>$/;"	l
c010c06a	obj/kernel.asm	/^c010c06a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c06d	obj/kernel.asm	/^c010c06d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c070	obj/kernel.asm	/^c010c070:	85 c0                	test   %eax,%eax$/;"	l
c010c072	obj/kernel.asm	/^c010c072:	74 0d                	je     c010c081 <file_read+0x9d>$/;"	l
c010c074	obj/kernel.asm	/^c010c074:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c077	obj/kernel.asm	/^c010c077:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c07a	obj/kernel.asm	/^c010c07a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c07d	obj/kernel.asm	/^c010c07d:	85 c0                	test   %eax,%eax$/;"	l
c010c07f	obj/kernel.asm	/^c010c07f:	75 24                	jne    c010c0a5 <file_read+0xc1>$/;"	l
c010c081	obj/kernel.asm	/^c010c081:	c7 44 24 0c 78 97 11 	movl   $0xc0119778,0xc(%esp)$/;"	l
c010c088	obj/kernel.asm	/^c010c088:	c0 $/;"	l
c010c089	obj/kernel.asm	/^c010c089:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c090	obj/kernel.asm	/^c010c090:	c0 $/;"	l
c010c091	obj/kernel.asm	/^c010c091:	c7 44 24 04 e2 00 00 	movl   $0xe2,0x4(%esp)$/;"	l
c010c098	obj/kernel.asm	/^c010c098:	00 $/;"	l
c010c099	obj/kernel.asm	/^c010c099:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c0a0	obj/kernel.asm	/^c010c0a0:	e8 92 4b ff ff       	call   c0100c37 <__panic>$/;"	l
c010c0a5	obj/kernel.asm	/^c010c0a5:	c7 44 24 04 c5 97 11 	movl   $0xc01197c5,0x4(%esp)$/;"	l
c010c0ac	obj/kernel.asm	/^c010c0ac:	c0 $/;"	l
c010c0ad	obj/kernel.asm	/^c010c0ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0b0	obj/kernel.asm	/^c010c0b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c0b3	obj/kernel.asm	/^c010c0b3:	e8 17 4f 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c0b8	obj/kernel.asm	/^c010c0b8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0bb	obj/kernel.asm	/^c010c0bb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c0be	obj/kernel.asm	/^c010c0be:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c0c1	obj/kernel.asm	/^c010c0c1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c0c4	obj/kernel.asm	/^c010c0c4:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c0c7	obj/kernel.asm	/^c010c0c7:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010c0ca	obj/kernel.asm	/^c010c0ca:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010c0ce	obj/kernel.asm	/^c010c0ce:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c0d1	obj/kernel.asm	/^c010c0d1:	ff d0                	call   *%eax$/;"	l
c010c0d3	obj/kernel.asm	/^c010c0d3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c0d6	obj/kernel.asm	/^c010c0d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c0d9	obj/kernel.asm	/^c010c0d9:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010c0dc	obj/kernel.asm	/^c010c0dc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c0df	obj/kernel.asm	/^c010c0df:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c0e2	obj/kernel.asm	/^c010c0e2:	29 c2                	sub    %eax,%edx$/;"	l
c010c0e4	obj/kernel.asm	/^c010c0e4:	89 d0                	mov    %edx,%eax$/;"	l
c010c0e6	obj/kernel.asm	/^c010c0e6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c0e9	obj/kernel.asm	/^c010c0e9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c0ec	obj/kernel.asm	/^c010c0ec:	8b 00                	mov    (%eax),%eax$/;"	l
c010c0ee	obj/kernel.asm	/^c010c0ee:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010c0f1	obj/kernel.asm	/^c010c0f1:	75 13                	jne    c010c106 <file_read+0x122>$/;"	l
c010c0f3	obj/kernel.asm	/^c010c0f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c0f6	obj/kernel.asm	/^c010c0f6:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c0f9	obj/kernel.asm	/^c010c0f9:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010c0fc	obj/kernel.asm	/^c010c0fc:	89 d1                	mov    %edx,%ecx$/;"	l
c010c0fe	obj/kernel.asm	/^c010c0fe:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c101	obj/kernel.asm	/^c010c101:	01 ca                	add    %ecx,%edx$/;"	l
c010c103	obj/kernel.asm	/^c010c103:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010c106	obj/kernel.asm	/^c010c106:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c109	obj/kernel.asm	/^c010c109:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c10c	obj/kernel.asm	/^c010c10c:	89 10                	mov    %edx,(%eax)$/;"	l
c010c10e	obj/kernel.asm	/^c010c10e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c111	obj/kernel.asm	/^c010c111:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c114	obj/kernel.asm	/^c010c114:	e8 37 fa ff ff       	call   c010bb50 <fd_array_release>$/;"	l
c010c119	obj/kernel.asm	/^c010c119:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c11c	obj/kernel.asm	/^c010c11c:	c9                   	leave  $/;"	l
c010c11d	obj/kernel.asm	/^c010c11d:	c3                   	ret    $/;"	l
c010c11e	obj/kernel.asm	/^c010c11e <file_write>:$/;"	l
c010c11e	obj/kernel.asm	/^c010c11e:	55                   	push   %ebp$/;"	l
c010c11f	obj/kernel.asm	/^c010c11f:	89 e5                	mov    %esp,%ebp$/;"	l
c010c121	obj/kernel.asm	/^c010c121:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010c124	obj/kernel.asm	/^c010c124:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c127	obj/kernel.asm	/^c010c127:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010c12d	obj/kernel.asm	/^c010c12d:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010c130	obj/kernel.asm	/^c010c130:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c134	obj/kernel.asm	/^c010c134:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c137	obj/kernel.asm	/^c010c137:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c13a	obj/kernel.asm	/^c010c13a:	e8 15 fc ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c13f	obj/kernel.asm	/^c010c13f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c142	obj/kernel.asm	/^c010c142:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c146	obj/kernel.asm	/^c010c146:	74 08                	je     c010c150 <file_write+0x32>$/;"	l
c010c148	obj/kernel.asm	/^c010c148:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c14b	obj/kernel.asm	/^c010c14b:	e9 06 01 00 00       	jmp    c010c256 <file_write+0x138>$/;"	l
c010c150	obj/kernel.asm	/^c010c150:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c153	obj/kernel.asm	/^c010c153:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010c156	obj/kernel.asm	/^c010c156:	85 c0                	test   %eax,%eax$/;"	l
c010c158	obj/kernel.asm	/^c010c158:	75 0a                	jne    c010c164 <file_write+0x46>$/;"	l
c010c15a	obj/kernel.asm	/^c010c15a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010c15f	obj/kernel.asm	/^c010c15f:	e9 f2 00 00 00       	jmp    c010c256 <file_write+0x138>$/;"	l
c010c164	obj/kernel.asm	/^c010c164:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c167	obj/kernel.asm	/^c010c167:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c16a	obj/kernel.asm	/^c010c16a:	e8 a0 f9 ff ff       	call   c010bb0f <fd_array_acquire>$/;"	l
c010c16f	obj/kernel.asm	/^c010c16f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c172	obj/kernel.asm	/^c010c172:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c175	obj/kernel.asm	/^c010c175:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c179	obj/kernel.asm	/^c010c179:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c17c	obj/kernel.asm	/^c010c17c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010c180	obj/kernel.asm	/^c010c180:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c183	obj/kernel.asm	/^c010c183:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c187	obj/kernel.asm	/^c010c187:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010c18a	obj/kernel.asm	/^c010c18a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c18d	obj/kernel.asm	/^c010c18d:	e8 4e 05 00 00       	call   c010c6e0 <iobuf_init>$/;"	l
c010c192	obj/kernel.asm	/^c010c192:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c195	obj/kernel.asm	/^c010c195:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c198	obj/kernel.asm	/^c010c198:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c19b	obj/kernel.asm	/^c010c19b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c19e	obj/kernel.asm	/^c010c19e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c1a2	obj/kernel.asm	/^c010c1a2:	74 17                	je     c010c1bb <file_write+0x9d>$/;"	l
c010c1a4	obj/kernel.asm	/^c010c1a4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c1a7	obj/kernel.asm	/^c010c1a7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c1aa	obj/kernel.asm	/^c010c1aa:	85 c0                	test   %eax,%eax$/;"	l
c010c1ac	obj/kernel.asm	/^c010c1ac:	74 0d                	je     c010c1bb <file_write+0x9d>$/;"	l
c010c1ae	obj/kernel.asm	/^c010c1ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c1b1	obj/kernel.asm	/^c010c1b1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c1b4	obj/kernel.asm	/^c010c1b4:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c1b7	obj/kernel.asm	/^c010c1b7:	85 c0                	test   %eax,%eax$/;"	l
c010c1b9	obj/kernel.asm	/^c010c1b9:	75 24                	jne    c010c1df <file_write+0xc1>$/;"	l
c010c1bb	obj/kernel.asm	/^c010c1bb:	c7 44 24 0c cc 97 11 	movl   $0xc01197cc,0xc(%esp)$/;"	l
c010c1c2	obj/kernel.asm	/^c010c1c2:	c0 $/;"	l
c010c1c3	obj/kernel.asm	/^c010c1c3:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c1ca	obj/kernel.asm	/^c010c1ca:	c0 $/;"	l
c010c1cb	obj/kernel.asm	/^c010c1cb:	c7 44 24 04 fc 00 00 	movl   $0xfc,0x4(%esp)$/;"	l
c010c1d2	obj/kernel.asm	/^c010c1d2:	00 $/;"	l
c010c1d3	obj/kernel.asm	/^c010c1d3:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c1da	obj/kernel.asm	/^c010c1da:	e8 58 4a ff ff       	call   c0100c37 <__panic>$/;"	l
c010c1df	obj/kernel.asm	/^c010c1df:	c7 44 24 04 1a 98 11 	movl   $0xc011981a,0x4(%esp)$/;"	l
c010c1e6	obj/kernel.asm	/^c010c1e6:	c0 $/;"	l
c010c1e7	obj/kernel.asm	/^c010c1e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c1ea	obj/kernel.asm	/^c010c1ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c1ed	obj/kernel.asm	/^c010c1ed:	e8 dd 4d 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c1f2	obj/kernel.asm	/^c010c1f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c1f5	obj/kernel.asm	/^c010c1f5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c1f8	obj/kernel.asm	/^c010c1f8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c1fb	obj/kernel.asm	/^c010c1fb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c1fe	obj/kernel.asm	/^c010c1fe:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c201	obj/kernel.asm	/^c010c201:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010c204	obj/kernel.asm	/^c010c204:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010c208	obj/kernel.asm	/^c010c208:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c20b	obj/kernel.asm	/^c010c20b:	ff d0                	call   *%eax$/;"	l
c010c20d	obj/kernel.asm	/^c010c20d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c210	obj/kernel.asm	/^c010c210:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c213	obj/kernel.asm	/^c010c213:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010c216	obj/kernel.asm	/^c010c216:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c219	obj/kernel.asm	/^c010c219:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c21c	obj/kernel.asm	/^c010c21c:	29 c2                	sub    %eax,%edx$/;"	l
c010c21e	obj/kernel.asm	/^c010c21e:	89 d0                	mov    %edx,%eax$/;"	l
c010c220	obj/kernel.asm	/^c010c220:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c223	obj/kernel.asm	/^c010c223:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c226	obj/kernel.asm	/^c010c226:	8b 00                	mov    (%eax),%eax$/;"	l
c010c228	obj/kernel.asm	/^c010c228:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010c22b	obj/kernel.asm	/^c010c22b:	75 13                	jne    c010c240 <file_write+0x122>$/;"	l
c010c22d	obj/kernel.asm	/^c010c22d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c230	obj/kernel.asm	/^c010c230:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c233	obj/kernel.asm	/^c010c233:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010c236	obj/kernel.asm	/^c010c236:	89 d1                	mov    %edx,%ecx$/;"	l
c010c238	obj/kernel.asm	/^c010c238:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c23b	obj/kernel.asm	/^c010c23b:	01 ca                	add    %ecx,%edx$/;"	l
c010c23d	obj/kernel.asm	/^c010c23d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010c240	obj/kernel.asm	/^c010c240:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c243	obj/kernel.asm	/^c010c243:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c246	obj/kernel.asm	/^c010c246:	89 10                	mov    %edx,(%eax)$/;"	l
c010c248	obj/kernel.asm	/^c010c248:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c24b	obj/kernel.asm	/^c010c24b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c24e	obj/kernel.asm	/^c010c24e:	e8 fd f8 ff ff       	call   c010bb50 <fd_array_release>$/;"	l
c010c253	obj/kernel.asm	/^c010c253:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c256	obj/kernel.asm	/^c010c256:	c9                   	leave  $/;"	l
c010c257	obj/kernel.asm	/^c010c257:	c3                   	ret    $/;"	l
c010c258	obj/kernel.asm	/^c010c258 <file_seek>:$/;"	l
c010c258	obj/kernel.asm	/^c010c258:	55                   	push   %ebp$/;"	l
c010c259	obj/kernel.asm	/^c010c259:	89 e5                	mov    %esp,%ebp$/;"	l
c010c25b	obj/kernel.asm	/^c010c25b:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010c25e	obj/kernel.asm	/^c010c25e:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010c261	obj/kernel.asm	/^c010c261:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c264	obj/kernel.asm	/^c010c264:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010c267	obj/kernel.asm	/^c010c267:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c26b	obj/kernel.asm	/^c010c26b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c26e	obj/kernel.asm	/^c010c26e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c271	obj/kernel.asm	/^c010c271:	e8 de fa ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c276	obj/kernel.asm	/^c010c276:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c279	obj/kernel.asm	/^c010c279:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c27d	obj/kernel.asm	/^c010c27d:	74 08                	je     c010c287 <file_seek+0x2f>$/;"	l
c010c27f	obj/kernel.asm	/^c010c27f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c282	obj/kernel.asm	/^c010c282:	e9 72 01 00 00       	jmp    c010c3f9 <file_seek+0x1a1>$/;"	l
c010c287	obj/kernel.asm	/^c010c287:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010c28a	obj/kernel.asm	/^c010c28a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c28d	obj/kernel.asm	/^c010c28d:	e8 7d f8 ff ff       	call   c010bb0f <fd_array_acquire>$/;"	l
c010c292	obj/kernel.asm	/^c010c292:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c295	obj/kernel.asm	/^c010c295:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010c298	obj/kernel.asm	/^c010c298:	74 12                	je     c010c2ac <file_seek+0x54>$/;"	l
c010c29a	obj/kernel.asm	/^c010c29a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010c29d	obj/kernel.asm	/^c010c29d:	74 1b                	je     c010c2ba <file_seek+0x62>$/;"	l
c010c29f	obj/kernel.asm	/^c010c29f:	85 c0                	test   %eax,%eax$/;"	l
c010c2a1	obj/kernel.asm	/^c010c2a1:	0f 84 af 00 00 00    	je     c010c356 <file_seek+0xfe>$/;"	l
c010c2a7	obj/kernel.asm	/^c010c2a7:	e9 a1 00 00 00       	jmp    c010c34d <file_seek+0xf5>$/;"	l
c010c2ac	obj/kernel.asm	/^c010c2ac:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010c2af	obj/kernel.asm	/^c010c2af:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c2b2	obj/kernel.asm	/^c010c2b2:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010c2b5	obj/kernel.asm	/^c010c2b5:	e9 9d 00 00 00       	jmp    c010c357 <file_seek+0xff>$/;"	l
c010c2ba	obj/kernel.asm	/^c010c2ba:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010c2bd	obj/kernel.asm	/^c010c2bd:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c2c0	obj/kernel.asm	/^c010c2c0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c2c3	obj/kernel.asm	/^c010c2c3:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c2c7	obj/kernel.asm	/^c010c2c7:	74 17                	je     c010c2e0 <file_seek+0x88>$/;"	l
c010c2c9	obj/kernel.asm	/^c010c2c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c2cc	obj/kernel.asm	/^c010c2cc:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c2cf	obj/kernel.asm	/^c010c2cf:	85 c0                	test   %eax,%eax$/;"	l
c010c2d1	obj/kernel.asm	/^c010c2d1:	74 0d                	je     c010c2e0 <file_seek+0x88>$/;"	l
c010c2d3	obj/kernel.asm	/^c010c2d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c2d6	obj/kernel.asm	/^c010c2d6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c2d9	obj/kernel.asm	/^c010c2d9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c2dc	obj/kernel.asm	/^c010c2dc:	85 c0                	test   %eax,%eax$/;"	l
c010c2de	obj/kernel.asm	/^c010c2de:	75 24                	jne    c010c304 <file_seek+0xac>$/;"	l
c010c2e0	obj/kernel.asm	/^c010c2e0:	c7 44 24 0c 24 97 11 	movl   $0xc0119724,0xc(%esp)$/;"	l
c010c2e7	obj/kernel.asm	/^c010c2e7:	c0 $/;"	l
c010c2e8	obj/kernel.asm	/^c010c2e8:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c2ef	obj/kernel.asm	/^c010c2ef:	c0 $/;"	l
c010c2f0	obj/kernel.asm	/^c010c2f0:	c7 44 24 04 16 01 00 	movl   $0x116,0x4(%esp)$/;"	l
c010c2f7	obj/kernel.asm	/^c010c2f7:	00 $/;"	l
c010c2f8	obj/kernel.asm	/^c010c2f8:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c2ff	obj/kernel.asm	/^c010c2ff:	e8 33 49 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c304	obj/kernel.asm	/^c010c304:	c7 44 24 04 72 97 11 	movl   $0xc0119772,0x4(%esp)$/;"	l
c010c30b	obj/kernel.asm	/^c010c30b:	c0 $/;"	l
c010c30c	obj/kernel.asm	/^c010c30c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c30f	obj/kernel.asm	/^c010c30f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c312	obj/kernel.asm	/^c010c312:	e8 b8 4c 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c317	obj/kernel.asm	/^c010c317:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c31a	obj/kernel.asm	/^c010c31a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c31d	obj/kernel.asm	/^c010c31d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c320	obj/kernel.asm	/^c010c320:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010c323	obj/kernel.asm	/^c010c323:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c326	obj/kernel.asm	/^c010c326:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010c329	obj/kernel.asm	/^c010c329:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010c32d	obj/kernel.asm	/^c010c32d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c330	obj/kernel.asm	/^c010c330:	ff d0                	call   *%eax$/;"	l
c010c332	obj/kernel.asm	/^c010c332:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c335	obj/kernel.asm	/^c010c335:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c339	obj/kernel.asm	/^c010c339:	75 10                	jne    c010c34b <file_seek+0xf3>$/;"	l
c010c33b	obj/kernel.asm	/^c010c33b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c33e	obj/kernel.asm	/^c010c33e:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010c341	obj/kernel.asm	/^c010c341:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c344	obj/kernel.asm	/^c010c344:	01 d0                	add    %edx,%eax$/;"	l
c010c346	obj/kernel.asm	/^c010c346:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010c349	obj/kernel.asm	/^c010c349:	eb 0c                	jmp    c010c357 <file_seek+0xff>$/;"	l
c010c34b	obj/kernel.asm	/^c010c34b:	eb 0a                	jmp    c010c357 <file_seek+0xff>$/;"	l
c010c34d	obj/kernel.asm	/^c010c34d:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010c354	obj/kernel.asm	/^c010c354:	eb 01                	jmp    c010c357 <file_seek+0xff>$/;"	l
c010c356	obj/kernel.asm	/^c010c356:	90                   	nop$/;"	l
c010c357	obj/kernel.asm	/^c010c357:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c35b	obj/kernel.asm	/^c010c35b:	0f 85 8a 00 00 00    	jne    c010c3eb <file_seek+0x193>$/;"	l
c010c361	obj/kernel.asm	/^c010c361:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010c364	obj/kernel.asm	/^c010c364:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c367	obj/kernel.asm	/^c010c367:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c36a	obj/kernel.asm	/^c010c36a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c36e	obj/kernel.asm	/^c010c36e:	74 17                	je     c010c387 <file_seek+0x12f>$/;"	l
c010c370	obj/kernel.asm	/^c010c370:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c373	obj/kernel.asm	/^c010c373:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c376	obj/kernel.asm	/^c010c376:	85 c0                	test   %eax,%eax$/;"	l
c010c378	obj/kernel.asm	/^c010c378:	74 0d                	je     c010c387 <file_seek+0x12f>$/;"	l
c010c37a	obj/kernel.asm	/^c010c37a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c37d	obj/kernel.asm	/^c010c37d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c380	obj/kernel.asm	/^c010c380:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010c383	obj/kernel.asm	/^c010c383:	85 c0                	test   %eax,%eax$/;"	l
c010c385	obj/kernel.asm	/^c010c385:	75 24                	jne    c010c3ab <file_seek+0x153>$/;"	l
c010c387	obj/kernel.asm	/^c010c387:	c7 44 24 0c 20 98 11 	movl   $0xc0119820,0xc(%esp)$/;"	l
c010c38e	obj/kernel.asm	/^c010c38e:	c0 $/;"	l
c010c38f	obj/kernel.asm	/^c010c38f:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c396	obj/kernel.asm	/^c010c396:	c0 $/;"	l
c010c397	obj/kernel.asm	/^c010c397:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
c010c39e	obj/kernel.asm	/^c010c39e:	00 $/;"	l
c010c39f	obj/kernel.asm	/^c010c39f:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c3a6	obj/kernel.asm	/^c010c3a6:	e8 8c 48 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c3ab	obj/kernel.asm	/^c010c3ab:	c7 44 24 04 70 98 11 	movl   $0xc0119870,0x4(%esp)$/;"	l
c010c3b2	obj/kernel.asm	/^c010c3b2:	c0 $/;"	l
c010c3b3	obj/kernel.asm	/^c010c3b3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c3b6	obj/kernel.asm	/^c010c3b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c3b9	obj/kernel.asm	/^c010c3b9:	e8 11 4c 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c3be	obj/kernel.asm	/^c010c3be:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c3c1	obj/kernel.asm	/^c010c3c1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c3c4	obj/kernel.asm	/^c010c3c4:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010c3c7	obj/kernel.asm	/^c010c3c7:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c3cd	obj/kernel.asm	/^c010c3cd:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010c3d0	obj/kernel.asm	/^c010c3d0:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010c3d4	obj/kernel.asm	/^c010c3d4:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c3d7	obj/kernel.asm	/^c010c3d7:	ff d0                	call   *%eax$/;"	l
c010c3d9	obj/kernel.asm	/^c010c3d9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c3dc	obj/kernel.asm	/^c010c3dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c3e0	obj/kernel.asm	/^c010c3e0:	75 09                	jne    c010c3eb <file_seek+0x193>$/;"	l
c010c3e2	obj/kernel.asm	/^c010c3e2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010c3e5	obj/kernel.asm	/^c010c3e5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c3e8	obj/kernel.asm	/^c010c3e8:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010c3eb	obj/kernel.asm	/^c010c3eb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010c3ee	obj/kernel.asm	/^c010c3ee:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c3f1	obj/kernel.asm	/^c010c3f1:	e8 5a f7 ff ff       	call   c010bb50 <fd_array_release>$/;"	l
c010c3f6	obj/kernel.asm	/^c010c3f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c3f9	obj/kernel.asm	/^c010c3f9:	c9                   	leave  $/;"	l
c010c3fa	obj/kernel.asm	/^c010c3fa:	c3                   	ret    $/;"	l
c010c3fb	obj/kernel.asm	/^c010c3fb <file_fstat>:$/;"	l
c010c3fb	obj/kernel.asm	/^c010c3fb:	55                   	push   %ebp$/;"	l
c010c3fc	obj/kernel.asm	/^c010c3fc:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3fe	obj/kernel.asm	/^c010c3fe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c401	obj/kernel.asm	/^c010c401:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010c404	obj/kernel.asm	/^c010c404:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c408	obj/kernel.asm	/^c010c408:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c40b	obj/kernel.asm	/^c010c40b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c40e	obj/kernel.asm	/^c010c40e:	e8 41 f9 ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c413	obj/kernel.asm	/^c010c413:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c416	obj/kernel.asm	/^c010c416:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c41a	obj/kernel.asm	/^c010c41a:	74 08                	je     c010c424 <file_fstat+0x29>$/;"	l
c010c41c	obj/kernel.asm	/^c010c41c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c41f	obj/kernel.asm	/^c010c41f:	e9 94 00 00 00       	jmp    c010c4b8 <file_fstat+0xbd>$/;"	l
c010c424	obj/kernel.asm	/^c010c424:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c427	obj/kernel.asm	/^c010c427:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c42a	obj/kernel.asm	/^c010c42a:	e8 e0 f6 ff ff       	call   c010bb0f <fd_array_acquire>$/;"	l
c010c42f	obj/kernel.asm	/^c010c42f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c432	obj/kernel.asm	/^c010c432:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c435	obj/kernel.asm	/^c010c435:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c438	obj/kernel.asm	/^c010c438:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c43c	obj/kernel.asm	/^c010c43c:	74 17                	je     c010c455 <file_fstat+0x5a>$/;"	l
c010c43e	obj/kernel.asm	/^c010c43e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c441	obj/kernel.asm	/^c010c441:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c444	obj/kernel.asm	/^c010c444:	85 c0                	test   %eax,%eax$/;"	l
c010c446	obj/kernel.asm	/^c010c446:	74 0d                	je     c010c455 <file_fstat+0x5a>$/;"	l
c010c448	obj/kernel.asm	/^c010c448:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c44b	obj/kernel.asm	/^c010c44b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c44e	obj/kernel.asm	/^c010c44e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c451	obj/kernel.asm	/^c010c451:	85 c0                	test   %eax,%eax$/;"	l
c010c453	obj/kernel.asm	/^c010c453:	75 24                	jne    c010c479 <file_fstat+0x7e>$/;"	l
c010c455	obj/kernel.asm	/^c010c455:	c7 44 24 0c 24 97 11 	movl   $0xc0119724,0xc(%esp)$/;"	l
c010c45c	obj/kernel.asm	/^c010c45c:	c0 $/;"	l
c010c45d	obj/kernel.asm	/^c010c45d:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c464	obj/kernel.asm	/^c010c464:	c0 $/;"	l
c010c465	obj/kernel.asm	/^c010c465:	c7 44 24 04 30 01 00 	movl   $0x130,0x4(%esp)$/;"	l
c010c46c	obj/kernel.asm	/^c010c46c:	00 $/;"	l
c010c46d	obj/kernel.asm	/^c010c46d:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c474	obj/kernel.asm	/^c010c474:	e8 be 47 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c479	obj/kernel.asm	/^c010c479:	c7 44 24 04 72 97 11 	movl   $0xc0119772,0x4(%esp)$/;"	l
c010c480	obj/kernel.asm	/^c010c480:	c0 $/;"	l
c010c481	obj/kernel.asm	/^c010c481:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c484	obj/kernel.asm	/^c010c484:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c487	obj/kernel.asm	/^c010c487:	e8 43 4b 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c48c	obj/kernel.asm	/^c010c48c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c48f	obj/kernel.asm	/^c010c48f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c492	obj/kernel.asm	/^c010c492:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c495	obj/kernel.asm	/^c010c495:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c498	obj/kernel.asm	/^c010c498:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c49b	obj/kernel.asm	/^c010c49b:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c010c49e	obj/kernel.asm	/^c010c49e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010c4a2	obj/kernel.asm	/^c010c4a2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c4a5	obj/kernel.asm	/^c010c4a5:	ff d0                	call   *%eax$/;"	l
c010c4a7	obj/kernel.asm	/^c010c4a7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c4aa	obj/kernel.asm	/^c010c4aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c4ad	obj/kernel.asm	/^c010c4ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c4b0	obj/kernel.asm	/^c010c4b0:	e8 9b f6 ff ff       	call   c010bb50 <fd_array_release>$/;"	l
c010c4b5	obj/kernel.asm	/^c010c4b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c4b8	obj/kernel.asm	/^c010c4b8:	c9                   	leave  $/;"	l
c010c4b9	obj/kernel.asm	/^c010c4b9:	c3                   	ret    $/;"	l
c010c4ba	obj/kernel.asm	/^c010c4ba <file_fsync>:$/;"	l
c010c4ba	obj/kernel.asm	/^c010c4ba:	55                   	push   %ebp$/;"	l
c010c4bb	obj/kernel.asm	/^c010c4bb:	89 e5                	mov    %esp,%ebp$/;"	l
c010c4bd	obj/kernel.asm	/^c010c4bd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c4c0	obj/kernel.asm	/^c010c4c0:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010c4c3	obj/kernel.asm	/^c010c4c3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c4c7	obj/kernel.asm	/^c010c4c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c4ca	obj/kernel.asm	/^c010c4ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c4cd	obj/kernel.asm	/^c010c4cd:	e8 82 f8 ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c4d2	obj/kernel.asm	/^c010c4d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c4d5	obj/kernel.asm	/^c010c4d5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c4d9	obj/kernel.asm	/^c010c4d9:	74 08                	je     c010c4e3 <file_fsync+0x29>$/;"	l
c010c4db	obj/kernel.asm	/^c010c4db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c4de	obj/kernel.asm	/^c010c4de:	e9 8d 00 00 00       	jmp    c010c570 <file_fsync+0xb6>$/;"	l
c010c4e3	obj/kernel.asm	/^c010c4e3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c4e6	obj/kernel.asm	/^c010c4e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c4e9	obj/kernel.asm	/^c010c4e9:	e8 21 f6 ff ff       	call   c010bb0f <fd_array_acquire>$/;"	l
c010c4ee	obj/kernel.asm	/^c010c4ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c4f1	obj/kernel.asm	/^c010c4f1:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c4f4	obj/kernel.asm	/^c010c4f4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c4f7	obj/kernel.asm	/^c010c4f7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c4fb	obj/kernel.asm	/^c010c4fb:	74 17                	je     c010c514 <file_fsync+0x5a>$/;"	l
c010c4fd	obj/kernel.asm	/^c010c4fd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c500	obj/kernel.asm	/^c010c500:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c503	obj/kernel.asm	/^c010c503:	85 c0                	test   %eax,%eax$/;"	l
c010c505	obj/kernel.asm	/^c010c505:	74 0d                	je     c010c514 <file_fsync+0x5a>$/;"	l
c010c507	obj/kernel.asm	/^c010c507:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c50a	obj/kernel.asm	/^c010c50a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c50d	obj/kernel.asm	/^c010c50d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c510	obj/kernel.asm	/^c010c510:	85 c0                	test   %eax,%eax$/;"	l
c010c512	obj/kernel.asm	/^c010c512:	75 24                	jne    c010c538 <file_fsync+0x7e>$/;"	l
c010c514	obj/kernel.asm	/^c010c514:	c7 44 24 0c 78 98 11 	movl   $0xc0119878,0xc(%esp)$/;"	l
c010c51b	obj/kernel.asm	/^c010c51b:	c0 $/;"	l
c010c51c	obj/kernel.asm	/^c010c51c:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c523	obj/kernel.asm	/^c010c523:	c0 $/;"	l
c010c524	obj/kernel.asm	/^c010c524:	c7 44 24 04 3e 01 00 	movl   $0x13e,0x4(%esp)$/;"	l
c010c52b	obj/kernel.asm	/^c010c52b:	00 $/;"	l
c010c52c	obj/kernel.asm	/^c010c52c:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c533	obj/kernel.asm	/^c010c533:	e8 ff 46 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c538	obj/kernel.asm	/^c010c538:	c7 44 24 04 c6 98 11 	movl   $0xc01198c6,0x4(%esp)$/;"	l
c010c53f	obj/kernel.asm	/^c010c53f:	c0 $/;"	l
c010c540	obj/kernel.asm	/^c010c540:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c543	obj/kernel.asm	/^c010c543:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c546	obj/kernel.asm	/^c010c546:	e8 84 4a 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c54b	obj/kernel.asm	/^c010c54b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c54e	obj/kernel.asm	/^c010c54e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c551	obj/kernel.asm	/^c010c551:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c554	obj/kernel.asm	/^c010c554:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c557	obj/kernel.asm	/^c010c557:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c55a	obj/kernel.asm	/^c010c55a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c55d	obj/kernel.asm	/^c010c55d:	ff d0                	call   *%eax$/;"	l
c010c55f	obj/kernel.asm	/^c010c55f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c562	obj/kernel.asm	/^c010c562:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c565	obj/kernel.asm	/^c010c565:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c568	obj/kernel.asm	/^c010c568:	e8 e3 f5 ff ff       	call   c010bb50 <fd_array_release>$/;"	l
c010c56d	obj/kernel.asm	/^c010c56d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c570	obj/kernel.asm	/^c010c570:	c9                   	leave  $/;"	l
c010c571	obj/kernel.asm	/^c010c571:	c3                   	ret    $/;"	l
c010c572	obj/kernel.asm	/^c010c572 <file_getdirentry>:$/;"	l
c010c572	obj/kernel.asm	/^c010c572:	55                   	push   %ebp$/;"	l
c010c573	obj/kernel.asm	/^c010c573:	89 e5                	mov    %esp,%ebp$/;"	l
c010c575	obj/kernel.asm	/^c010c575:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010c578	obj/kernel.asm	/^c010c578:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010c57b	obj/kernel.asm	/^c010c57b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c57f	obj/kernel.asm	/^c010c57f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c582	obj/kernel.asm	/^c010c582:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c585	obj/kernel.asm	/^c010c585:	e8 ca f7 ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c58a	obj/kernel.asm	/^c010c58a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c58d	obj/kernel.asm	/^c010c58d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c591	obj/kernel.asm	/^c010c591:	74 08                	je     c010c59b <file_getdirentry+0x29>$/;"	l
c010c593	obj/kernel.asm	/^c010c593:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c596	obj/kernel.asm	/^c010c596:	e9 e3 00 00 00       	jmp    c010c67e <file_getdirentry+0x10c>$/;"	l
c010c59b	obj/kernel.asm	/^c010c59b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c59e	obj/kernel.asm	/^c010c59e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c5a1	obj/kernel.asm	/^c010c5a1:	e8 69 f5 ff ff       	call   c010bb0f <fd_array_acquire>$/;"	l
c010c5a6	obj/kernel.asm	/^c010c5a6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c5a9	obj/kernel.asm	/^c010c5a9:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5ab	obj/kernel.asm	/^c010c5ab:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c5ae	obj/kernel.asm	/^c010c5ae:	83 c2 04             	add    $0x4,%edx$/;"	l
c010c5b1	obj/kernel.asm	/^c010c5b1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010c5b5	obj/kernel.asm	/^c010c5b5:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c010c5bc	obj/kernel.asm	/^c010c5bc:	00 $/;"	l
c010c5bd	obj/kernel.asm	/^c010c5bd:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010c5c1	obj/kernel.asm	/^c010c5c1:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010c5c4	obj/kernel.asm	/^c010c5c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c5c7	obj/kernel.asm	/^c010c5c7:	e8 14 01 00 00       	call   c010c6e0 <iobuf_init>$/;"	l
c010c5cc	obj/kernel.asm	/^c010c5cc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c5cf	obj/kernel.asm	/^c010c5cf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c5d2	obj/kernel.asm	/^c010c5d2:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c5d5	obj/kernel.asm	/^c010c5d5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c5d8	obj/kernel.asm	/^c010c5d8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c5dc	obj/kernel.asm	/^c010c5dc:	74 17                	je     c010c5f5 <file_getdirentry+0x83>$/;"	l
c010c5de	obj/kernel.asm	/^c010c5de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c5e1	obj/kernel.asm	/^c010c5e1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c5e4	obj/kernel.asm	/^c010c5e4:	85 c0                	test   %eax,%eax$/;"	l
c010c5e6	obj/kernel.asm	/^c010c5e6:	74 0d                	je     c010c5f5 <file_getdirentry+0x83>$/;"	l
c010c5e8	obj/kernel.asm	/^c010c5e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c5eb	obj/kernel.asm	/^c010c5eb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c5ee	obj/kernel.asm	/^c010c5ee:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010c5f1	obj/kernel.asm	/^c010c5f1:	85 c0                	test   %eax,%eax$/;"	l
c010c5f3	obj/kernel.asm	/^c010c5f3:	75 24                	jne    c010c619 <file_getdirentry+0xa7>$/;"	l
c010c5f5	obj/kernel.asm	/^c010c5f5:	c7 44 24 0c cc 98 11 	movl   $0xc01198cc,0xc(%esp)$/;"	l
c010c5fc	obj/kernel.asm	/^c010c5fc:	c0 $/;"	l
c010c5fd	obj/kernel.asm	/^c010c5fd:	c7 44 24 08 e2 95 11 	movl   $0xc01195e2,0x8(%esp)$/;"	l
c010c604	obj/kernel.asm	/^c010c604:	c0 $/;"	l
c010c605	obj/kernel.asm	/^c010c605:	c7 44 24 04 4e 01 00 	movl   $0x14e,0x4(%esp)$/;"	l
c010c60c	obj/kernel.asm	/^c010c60c:	00 $/;"	l
c010c60d	obj/kernel.asm	/^c010c60d:	c7 04 24 f7 95 11 c0 	movl   $0xc01195f7,(%esp)$/;"	l
c010c614	obj/kernel.asm	/^c010c614:	e8 1e 46 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c619	obj/kernel.asm	/^c010c619:	c7 44 24 04 20 99 11 	movl   $0xc0119920,0x4(%esp)$/;"	l
c010c620	obj/kernel.asm	/^c010c620:	c0 $/;"	l
c010c621	obj/kernel.asm	/^c010c621:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c624	obj/kernel.asm	/^c010c624:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c627	obj/kernel.asm	/^c010c627:	e8 a3 49 00 00       	call   c0110fcf <inode_check>$/;"	l
c010c62c	obj/kernel.asm	/^c010c62c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c62f	obj/kernel.asm	/^c010c62f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c632	obj/kernel.asm	/^c010c632:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010c635	obj/kernel.asm	/^c010c635:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010c638	obj/kernel.asm	/^c010c638:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010c63b	obj/kernel.asm	/^c010c63b:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010c63e	obj/kernel.asm	/^c010c63e:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010c642	obj/kernel.asm	/^c010c642:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010c645	obj/kernel.asm	/^c010c645:	ff d0                	call   *%eax$/;"	l
c010c647	obj/kernel.asm	/^c010c647:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c64a	obj/kernel.asm	/^c010c64a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c64e	obj/kernel.asm	/^c010c64e:	75 20                	jne    c010c670 <file_getdirentry+0xfe>$/;"	l
c010c650	obj/kernel.asm	/^c010c650:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c653	obj/kernel.asm	/^c010c653:	8b 00                	mov    (%eax),%eax$/;"	l
c010c655	obj/kernel.asm	/^c010c655:	89 c2                	mov    %eax,%edx$/;"	l
c010c657	obj/kernel.asm	/^c010c657:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c65a	obj/kernel.asm	/^c010c65a:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c010c65d	obj/kernel.asm	/^c010c65d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c660	obj/kernel.asm	/^c010c660:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c663	obj/kernel.asm	/^c010c663:	29 c1                	sub    %eax,%ecx$/;"	l
c010c665	obj/kernel.asm	/^c010c665:	89 c8                	mov    %ecx,%eax$/;"	l
c010c667	obj/kernel.asm	/^c010c667:	01 d0                	add    %edx,%eax$/;"	l
c010c669	obj/kernel.asm	/^c010c669:	89 c2                	mov    %eax,%edx$/;"	l
c010c66b	obj/kernel.asm	/^c010c66b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c66e	obj/kernel.asm	/^c010c66e:	89 10                	mov    %edx,(%eax)$/;"	l
c010c670	obj/kernel.asm	/^c010c670:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c673	obj/kernel.asm	/^c010c673:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c676	obj/kernel.asm	/^c010c676:	e8 d5 f4 ff ff       	call   c010bb50 <fd_array_release>$/;"	l
c010c67b	obj/kernel.asm	/^c010c67b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c67e	obj/kernel.asm	/^c010c67e:	c9                   	leave  $/;"	l
c010c67f	obj/kernel.asm	/^c010c67f:	c3                   	ret    $/;"	l
c010c680	obj/kernel.asm	/^c010c680 <file_dup>:$/;"	l
c010c680	obj/kernel.asm	/^c010c680:	55                   	push   %ebp$/;"	l
c010c681	obj/kernel.asm	/^c010c681:	89 e5                	mov    %esp,%ebp$/;"	l
c010c683	obj/kernel.asm	/^c010c683:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c686	obj/kernel.asm	/^c010c686:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010c689	obj/kernel.asm	/^c010c689:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c68d	obj/kernel.asm	/^c010c68d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c690	obj/kernel.asm	/^c010c690:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c693	obj/kernel.asm	/^c010c693:	e8 bc f6 ff ff       	call   c010bd54 <fd2file>$/;"	l
c010c698	obj/kernel.asm	/^c010c698:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c69b	obj/kernel.asm	/^c010c69b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c69f	obj/kernel.asm	/^c010c69f:	74 05                	je     c010c6a6 <file_dup+0x26>$/;"	l
c010c6a1	obj/kernel.asm	/^c010c6a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6a4	obj/kernel.asm	/^c010c6a4:	eb 38                	jmp    c010c6de <file_dup+0x5e>$/;"	l
c010c6a6	obj/kernel.asm	/^c010c6a6:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010c6a9	obj/kernel.asm	/^c010c6a9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c6ad	obj/kernel.asm	/^c010c6ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c6b0	obj/kernel.asm	/^c010c6b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6b3	obj/kernel.asm	/^c010c6b3:	e8 ea f2 ff ff       	call   c010b9a2 <fd_array_alloc>$/;"	l
c010c6b8	obj/kernel.asm	/^c010c6b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c6bb	obj/kernel.asm	/^c010c6bb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c6bf	obj/kernel.asm	/^c010c6bf:	74 05                	je     c010c6c6 <file_dup+0x46>$/;"	l
c010c6c1	obj/kernel.asm	/^c010c6c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c6c4	obj/kernel.asm	/^c010c6c4:	eb 18                	jmp    c010c6de <file_dup+0x5e>$/;"	l
c010c6c6	obj/kernel.asm	/^c010c6c6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c6c9	obj/kernel.asm	/^c010c6c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c6cc	obj/kernel.asm	/^c010c6cc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010c6d0	obj/kernel.asm	/^c010c6d0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c6d3	obj/kernel.asm	/^c010c6d3:	e8 e5 f5 ff ff       	call   c010bcbd <fd_array_dup>$/;"	l
c010c6d8	obj/kernel.asm	/^c010c6d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c6db	obj/kernel.asm	/^c010c6db:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c6de	obj/kernel.asm	/^c010c6de:	c9                   	leave  $/;"	l
c010c6df	obj/kernel.asm	/^c010c6df:	c3                   	ret    $/;"	l
c010c6e0	obj/kernel.asm	/^c010c6e0 <iobuf_init>:$/;"	l
c010c6e0	obj/kernel.asm	/^c010c6e0:	55                   	push   %ebp$/;"	l
c010c6e1	obj/kernel.asm	/^c010c6e1:	89 e5                	mov    %esp,%ebp$/;"	l
c010c6e3	obj/kernel.asm	/^c010c6e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c6e6	obj/kernel.asm	/^c010c6e6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c6e9	obj/kernel.asm	/^c010c6e9:	89 10                	mov    %edx,(%eax)$/;"	l
c010c6eb	obj/kernel.asm	/^c010c6eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c6ee	obj/kernel.asm	/^c010c6ee:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010c6f1	obj/kernel.asm	/^c010c6f1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c6f4	obj/kernel.asm	/^c010c6f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c6f7	obj/kernel.asm	/^c010c6f7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010c6fa	obj/kernel.asm	/^c010c6fa:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010c6fd	obj/kernel.asm	/^c010c6fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c700	obj/kernel.asm	/^c010c700:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010c703	obj/kernel.asm	/^c010c703:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c706	obj/kernel.asm	/^c010c706:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010c709	obj/kernel.asm	/^c010c709:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c70c	obj/kernel.asm	/^c010c70c:	5d                   	pop    %ebp$/;"	l
c010c70d	obj/kernel.asm	/^c010c70d:	c3                   	ret    $/;"	l
c010c70e	obj/kernel.asm	/^c010c70e <iobuf_move>:$/;"	l
c010c70e	obj/kernel.asm	/^c010c70e:	55                   	push   %ebp$/;"	l
c010c70f	obj/kernel.asm	/^c010c70f:	89 e5                	mov    %esp,%ebp$/;"	l
c010c711	obj/kernel.asm	/^c010c711:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c714	obj/kernel.asm	/^c010c714:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c717	obj/kernel.asm	/^c010c717:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c71a	obj/kernel.asm	/^c010c71a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c71d	obj/kernel.asm	/^c010c71d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c720	obj/kernel.asm	/^c010c720:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010c723	obj/kernel.asm	/^c010c723:	76 06                	jbe    c010c72b <iobuf_move+0x1d>$/;"	l
c010c725	obj/kernel.asm	/^c010c725:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c728	obj/kernel.asm	/^c010c728:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c72b	obj/kernel.asm	/^c010c72b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c72f	obj/kernel.asm	/^c010c72f:	74 57                	je     c010c788 <iobuf_move+0x7a>$/;"	l
c010c731	obj/kernel.asm	/^c010c731:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c734	obj/kernel.asm	/^c010c734:	8b 00                	mov    (%eax),%eax$/;"	l
c010c736	obj/kernel.asm	/^c010c736:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c739	obj/kernel.asm	/^c010c739:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c73c	obj/kernel.asm	/^c010c73c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c73f	obj/kernel.asm	/^c010c73f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010c743	obj/kernel.asm	/^c010c743:	74 12                	je     c010c757 <iobuf_move+0x49>$/;"	l
c010c745	obj/kernel.asm	/^c010c745:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c748	obj/kernel.asm	/^c010c748:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c74b	obj/kernel.asm	/^c010c74b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c74e	obj/kernel.asm	/^c010c74e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c751	obj/kernel.asm	/^c010c751:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c754	obj/kernel.asm	/^c010c754:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c757	obj/kernel.asm	/^c010c757:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c75a	obj/kernel.asm	/^c010c75a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010c75e	obj/kernel.asm	/^c010c75e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c761	obj/kernel.asm	/^c010c761:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c765	obj/kernel.asm	/^c010c765:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c768	obj/kernel.asm	/^c010c768:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c76b	obj/kernel.asm	/^c010c76b:	e8 5f 9f 00 00       	call   c01166cf <memmove>$/;"	l
c010c770	obj/kernel.asm	/^c010c770:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c773	obj/kernel.asm	/^c010c773:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c777	obj/kernel.asm	/^c010c777:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c77a	obj/kernel.asm	/^c010c77a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c77d	obj/kernel.asm	/^c010c77d:	e8 a1 00 00 00       	call   c010c823 <iobuf_skip>$/;"	l
c010c782	obj/kernel.asm	/^c010c782:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c785	obj/kernel.asm	/^c010c785:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010c788	obj/kernel.asm	/^c010c788:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010c78c	obj/kernel.asm	/^c010c78c:	74 08                	je     c010c796 <iobuf_move+0x88>$/;"	l
c010c78e	obj/kernel.asm	/^c010c78e:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010c791	obj/kernel.asm	/^c010c791:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c794	obj/kernel.asm	/^c010c794:	89 10                	mov    %edx,(%eax)$/;"	l
c010c796	obj/kernel.asm	/^c010c796:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c79a	obj/kernel.asm	/^c010c79a:	75 07                	jne    c010c7a3 <iobuf_move+0x95>$/;"	l
c010c79c	obj/kernel.asm	/^c010c79c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c7a1	obj/kernel.asm	/^c010c7a1:	eb 05                	jmp    c010c7a8 <iobuf_move+0x9a>$/;"	l
c010c7a3	obj/kernel.asm	/^c010c7a3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010c7a8	obj/kernel.asm	/^c010c7a8:	c9                   	leave  $/;"	l
c010c7a9	obj/kernel.asm	/^c010c7a9:	c3                   	ret    $/;"	l
c010c7aa	obj/kernel.asm	/^c010c7aa <iobuf_move_zeros>:$/;"	l
c010c7aa	obj/kernel.asm	/^c010c7aa:	55                   	push   %ebp$/;"	l
c010c7ab	obj/kernel.asm	/^c010c7ab:	89 e5                	mov    %esp,%ebp$/;"	l
c010c7ad	obj/kernel.asm	/^c010c7ad:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c7b0	obj/kernel.asm	/^c010c7b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c7b3	obj/kernel.asm	/^c010c7b3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c7b6	obj/kernel.asm	/^c010c7b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c7b9	obj/kernel.asm	/^c010c7b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7bc	obj/kernel.asm	/^c010c7bc:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010c7bf	obj/kernel.asm	/^c010c7bf:	76 06                	jbe    c010c7c7 <iobuf_move_zeros+0x1d>$/;"	l
c010c7c1	obj/kernel.asm	/^c010c7c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c7c4	obj/kernel.asm	/^c010c7c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c7c7	obj/kernel.asm	/^c010c7c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c7cb	obj/kernel.asm	/^c010c7cb:	74 34                	je     c010c801 <iobuf_move_zeros+0x57>$/;"	l
c010c7cd	obj/kernel.asm	/^c010c7cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c7d0	obj/kernel.asm	/^c010c7d0:	8b 00                	mov    (%eax),%eax$/;"	l
c010c7d2	obj/kernel.asm	/^c010c7d2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c7d5	obj/kernel.asm	/^c010c7d5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010c7d9	obj/kernel.asm	/^c010c7d9:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010c7e0	obj/kernel.asm	/^c010c7e0:	00 $/;"	l
c010c7e1	obj/kernel.asm	/^c010c7e1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7e4	obj/kernel.asm	/^c010c7e4:	e8 a7 9e 00 00       	call   c0116690 <memset>$/;"	l
c010c7e9	obj/kernel.asm	/^c010c7e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7ec	obj/kernel.asm	/^c010c7ec:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010c7f0	obj/kernel.asm	/^c010c7f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c7f3	obj/kernel.asm	/^c010c7f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c7f6	obj/kernel.asm	/^c010c7f6:	e8 28 00 00 00       	call   c010c823 <iobuf_skip>$/;"	l
c010c7fb	obj/kernel.asm	/^c010c7fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c7fe	obj/kernel.asm	/^c010c7fe:	29 45 0c             	sub    %eax,0xc(%ebp)$/;"	l
c010c801	obj/kernel.asm	/^c010c801:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c805	obj/kernel.asm	/^c010c805:	74 08                	je     c010c80f <iobuf_move_zeros+0x65>$/;"	l
c010c807	obj/kernel.asm	/^c010c807:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c80a	obj/kernel.asm	/^c010c80a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c80d	obj/kernel.asm	/^c010c80d:	89 10                	mov    %edx,(%eax)$/;"	l
c010c80f	obj/kernel.asm	/^c010c80f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c813	obj/kernel.asm	/^c010c813:	75 07                	jne    c010c81c <iobuf_move_zeros+0x72>$/;"	l
c010c815	obj/kernel.asm	/^c010c815:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c81a	obj/kernel.asm	/^c010c81a:	eb 05                	jmp    c010c821 <iobuf_move_zeros+0x77>$/;"	l
c010c81c	obj/kernel.asm	/^c010c81c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010c821	obj/kernel.asm	/^c010c821:	c9                   	leave  $/;"	l
c010c822	obj/kernel.asm	/^c010c822:	c3                   	ret    $/;"	l
c010c823	obj/kernel.asm	/^c010c823 <iobuf_skip>:$/;"	l
c010c823	obj/kernel.asm	/^c010c823:	55                   	push   %ebp$/;"	l
c010c824	obj/kernel.asm	/^c010c824:	89 e5                	mov    %esp,%ebp$/;"	l
c010c826	obj/kernel.asm	/^c010c826:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c829	obj/kernel.asm	/^c010c829:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c82c	obj/kernel.asm	/^c010c82c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c82f	obj/kernel.asm	/^c010c82f:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010c832	obj/kernel.asm	/^c010c832:	73 24                	jae    c010c858 <iobuf_skip+0x35>$/;"	l
c010c834	obj/kernel.asm	/^c010c834:	c7 44 24 0c 2c 99 11 	movl   $0xc011992c,0xc(%esp)$/;"	l
c010c83b	obj/kernel.asm	/^c010c83b:	c0 $/;"	l
c010c83c	obj/kernel.asm	/^c010c83c:	c7 44 24 08 3f 99 11 	movl   $0xc011993f,0x8(%esp)$/;"	l
c010c843	obj/kernel.asm	/^c010c843:	c0 $/;"	l
c010c844	obj/kernel.asm	/^c010c844:	c7 44 24 04 4a 00 00 	movl   $0x4a,0x4(%esp)$/;"	l
c010c84b	obj/kernel.asm	/^c010c84b:	00 $/;"	l
c010c84c	obj/kernel.asm	/^c010c84c:	c7 04 24 54 99 11 c0 	movl   $0xc0119954,(%esp)$/;"	l
c010c853	obj/kernel.asm	/^c010c853:	e8 df 43 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c858	obj/kernel.asm	/^c010c858:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c85b	obj/kernel.asm	/^c010c85b:	8b 10                	mov    (%eax),%edx$/;"	l
c010c85d	obj/kernel.asm	/^c010c85d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c860	obj/kernel.asm	/^c010c860:	01 c2                	add    %eax,%edx$/;"	l
c010c862	obj/kernel.asm	/^c010c862:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c865	obj/kernel.asm	/^c010c865:	89 10                	mov    %edx,(%eax)$/;"	l
c010c867	obj/kernel.asm	/^c010c867:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c86a	obj/kernel.asm	/^c010c86a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c86d	obj/kernel.asm	/^c010c86d:	89 c2                	mov    %eax,%edx$/;"	l
c010c86f	obj/kernel.asm	/^c010c86f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c872	obj/kernel.asm	/^c010c872:	01 d0                	add    %edx,%eax$/;"	l
c010c874	obj/kernel.asm	/^c010c874:	89 c2                	mov    %eax,%edx$/;"	l
c010c876	obj/kernel.asm	/^c010c876:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c879	obj/kernel.asm	/^c010c879:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c87c	obj/kernel.asm	/^c010c87c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c87f	obj/kernel.asm	/^c010c87f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c882	obj/kernel.asm	/^c010c882:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010c885	obj/kernel.asm	/^c010c885:	89 c2                	mov    %eax,%edx$/;"	l
c010c887	obj/kernel.asm	/^c010c887:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c88a	obj/kernel.asm	/^c010c88a:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010c88d	obj/kernel.asm	/^c010c88d:	c9                   	leave  $/;"	l
c010c88e	obj/kernel.asm	/^c010c88e:	c3                   	ret    $/;"	l
c010c88f	obj/kernel.asm	/^c010c88f <files_count>:$/;"	l
c010c88f	obj/kernel.asm	/^c010c88f:	55                   	push   %ebp$/;"	l
c010c890	obj/kernel.asm	/^c010c890:	89 e5                	mov    %esp,%ebp$/;"	l
c010c892	obj/kernel.asm	/^c010c892:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c895	obj/kernel.asm	/^c010c895:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010c898	obj/kernel.asm	/^c010c898:	5d                   	pop    %ebp$/;"	l
c010c899	obj/kernel.asm	/^c010c899:	c3                   	ret    $/;"	l
c010c89a	obj/kernel.asm	/^c010c89a <fs_init>:$/;"	l
c010c89a	obj/kernel.asm	/^c010c89a:	55                   	push   %ebp$/;"	l
c010c89b	obj/kernel.asm	/^c010c89b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c89d	obj/kernel.asm	/^c010c89d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c8a0	obj/kernel.asm	/^c010c8a0:	e8 95 4b 00 00       	call   c011143a <vfs_init>$/;"	l
c010c8a5	obj/kernel.asm	/^c010c8a5:	e8 b5 5a 00 00       	call   c011235f <dev_init>$/;"	l
c010c8aa	obj/kernel.asm	/^c010c8aa:	e8 02 5b 00 00       	call   c01123b1 <sfs_init>$/;"	l
c010c8af	obj/kernel.asm	/^c010c8af:	c9                   	leave  $/;"	l
c010c8b0	obj/kernel.asm	/^c010c8b0:	c3                   	ret    $/;"	l
c010c8b1	obj/kernel.asm	/^c010c8b1 <fs_cleanup>:$/;"	l
c010c8b1	obj/kernel.asm	/^c010c8b1:	55                   	push   %ebp$/;"	l
c010c8b2	obj/kernel.asm	/^c010c8b2:	89 e5                	mov    %esp,%ebp$/;"	l
c010c8b4	obj/kernel.asm	/^c010c8b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c8b7	obj/kernel.asm	/^c010c8b7:	e8 22 36 00 00       	call   c010fede <vfs_cleanup>$/;"	l
c010c8bc	obj/kernel.asm	/^c010c8bc:	c9                   	leave  $/;"	l
c010c8bd	obj/kernel.asm	/^c010c8bd:	c3                   	ret    $/;"	l
c010c8be	obj/kernel.asm	/^c010c8be <lock_files>:$/;"	l
c010c8be	obj/kernel.asm	/^c010c8be:	55                   	push   %ebp$/;"	l
c010c8bf	obj/kernel.asm	/^c010c8bf:	89 e5                	mov    %esp,%ebp$/;"	l
c010c8c1	obj/kernel.asm	/^c010c8c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c8c4	obj/kernel.asm	/^c010c8c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c8c7	obj/kernel.asm	/^c010c8c7:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010c8ca	obj/kernel.asm	/^c010c8ca:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c8cd	obj/kernel.asm	/^c010c8cd:	e8 b2 e4 ff ff       	call   c010ad84 <down>$/;"	l
c010c8d2	obj/kernel.asm	/^c010c8d2:	c9                   	leave  $/;"	l
c010c8d3	obj/kernel.asm	/^c010c8d3:	c3                   	ret    $/;"	l
c010c8d4	obj/kernel.asm	/^c010c8d4 <unlock_files>:$/;"	l
c010c8d4	obj/kernel.asm	/^c010c8d4:	55                   	push   %ebp$/;"	l
c010c8d5	obj/kernel.asm	/^c010c8d5:	89 e5                	mov    %esp,%ebp$/;"	l
c010c8d7	obj/kernel.asm	/^c010c8d7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c8da	obj/kernel.asm	/^c010c8da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c8dd	obj/kernel.asm	/^c010c8dd:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010c8e0	obj/kernel.asm	/^c010c8e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c8e3	obj/kernel.asm	/^c010c8e3:	e8 81 e4 ff ff       	call   c010ad69 <up>$/;"	l
c010c8e8	obj/kernel.asm	/^c010c8e8:	c9                   	leave  $/;"	l
c010c8e9	obj/kernel.asm	/^c010c8e9:	c3                   	ret    $/;"	l
c010c8ea	obj/kernel.asm	/^c010c8ea <files_create>:$/;"	l
c010c8ea	obj/kernel.asm	/^c010c8ea:	55                   	push   %ebp$/;"	l
c010c8eb	obj/kernel.asm	/^c010c8eb:	89 e5                	mov    %esp,%ebp$/;"	l
c010c8ed	obj/kernel.asm	/^c010c8ed:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c8f0	obj/kernel.asm	/^c010c8f0:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010c8f7	obj/kernel.asm	/^c010c8f7:	e8 ec b8 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010c8fc	obj/kernel.asm	/^c010c8fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c8ff	obj/kernel.asm	/^c010c8ff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c903	obj/kernel.asm	/^c010c903:	74 43                	je     c010c948 <files_create+0x5e>$/;"	l
c010c905	obj/kernel.asm	/^c010c905:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c908	obj/kernel.asm	/^c010c908:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010c90e	obj/kernel.asm	/^c010c90e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c911	obj/kernel.asm	/^c010c911:	8d 50 18             	lea    0x18(%eax),%edx$/;"	l
c010c914	obj/kernel.asm	/^c010c914:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c917	obj/kernel.asm	/^c010c917:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c91a	obj/kernel.asm	/^c010c91a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c91d	obj/kernel.asm	/^c010c91d:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010c924	obj/kernel.asm	/^c010c924:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c927	obj/kernel.asm	/^c010c927:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010c92a	obj/kernel.asm	/^c010c92a:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010c931	obj/kernel.asm	/^c010c931:	00 $/;"	l
c010c932	obj/kernel.asm	/^c010c932:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c935	obj/kernel.asm	/^c010c935:	e8 bc e2 ff ff       	call   c010abf6 <sem_init>$/;"	l
c010c93a	obj/kernel.asm	/^c010c93a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c93d	obj/kernel.asm	/^c010c93d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c940	obj/kernel.asm	/^c010c940:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c943	obj/kernel.asm	/^c010c943:	e8 15 f0 ff ff       	call   c010b95d <fd_array_init>$/;"	l
c010c948	obj/kernel.asm	/^c010c948:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c94b	obj/kernel.asm	/^c010c94b:	c9                   	leave  $/;"	l
c010c94c	obj/kernel.asm	/^c010c94c:	c3                   	ret    $/;"	l
c010c94d	obj/kernel.asm	/^c010c94d <files_destroy>:$/;"	l
c010c94d	obj/kernel.asm	/^c010c94d:	55                   	push   %ebp$/;"	l
c010c94e	obj/kernel.asm	/^c010c94e:	89 e5                	mov    %esp,%ebp$/;"	l
c010c950	obj/kernel.asm	/^c010c950:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c953	obj/kernel.asm	/^c010c953:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c957	obj/kernel.asm	/^c010c957:	74 0f                	je     c010c968 <files_destroy+0x1b>$/;"	l
c010c959	obj/kernel.asm	/^c010c959:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c95c	obj/kernel.asm	/^c010c95c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c95f	obj/kernel.asm	/^c010c95f:	e8 2b ff ff ff       	call   c010c88f <files_count>$/;"	l
c010c964	obj/kernel.asm	/^c010c964:	85 c0                	test   %eax,%eax$/;"	l
c010c966	obj/kernel.asm	/^c010c966:	74 24                	je     c010c98c <files_destroy+0x3f>$/;"	l
c010c968	obj/kernel.asm	/^c010c968:	c7 44 24 0c 64 99 11 	movl   $0xc0119964,0xc(%esp)$/;"	l
c010c96f	obj/kernel.asm	/^c010c96f:	c0 $/;"	l
c010c970	obj/kernel.asm	/^c010c970:	c7 44 24 08 8f 99 11 	movl   $0xc011998f,0x8(%esp)$/;"	l
c010c977	obj/kernel.asm	/^c010c977:	c0 $/;"	l
c010c978	obj/kernel.asm	/^c010c978:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010c97f	obj/kernel.asm	/^c010c97f:	00 $/;"	l
c010c980	obj/kernel.asm	/^c010c980:	c7 04 24 a4 99 11 c0 	movl   $0xc01199a4,(%esp)$/;"	l
c010c987	obj/kernel.asm	/^c010c987:	e8 ab 42 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c98c	obj/kernel.asm	/^c010c98c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c98f	obj/kernel.asm	/^c010c98f:	8b 00                	mov    (%eax),%eax$/;"	l
c010c991	obj/kernel.asm	/^c010c991:	85 c0                	test   %eax,%eax$/;"	l
c010c993	obj/kernel.asm	/^c010c993:	74 0d                	je     c010c9a2 <files_destroy+0x55>$/;"	l
c010c995	obj/kernel.asm	/^c010c995:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c998	obj/kernel.asm	/^c010c998:	8b 00                	mov    (%eax),%eax$/;"	l
c010c99a	obj/kernel.asm	/^c010c99a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c99d	obj/kernel.asm	/^c010c99d:	e8 3f 44 00 00       	call   c0110de1 <inode_ref_dec>$/;"	l
c010c9a2	obj/kernel.asm	/^c010c9a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c9a5	obj/kernel.asm	/^c010c9a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c9a8	obj/kernel.asm	/^c010c9a8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c9ab	obj/kernel.asm	/^c010c9ab:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010c9b2	obj/kernel.asm	/^c010c9b2:	eb 4a                	jmp    c010c9fe <files_destroy+0xb1>$/;"	l
c010c9b4	obj/kernel.asm	/^c010c9b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9b7	obj/kernel.asm	/^c010c9b7:	8b 00                	mov    (%eax),%eax$/;"	l
c010c9b9	obj/kernel.asm	/^c010c9b9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010c9bc	obj/kernel.asm	/^c010c9bc:	75 0b                	jne    c010c9c9 <files_destroy+0x7c>$/;"	l
c010c9be	obj/kernel.asm	/^c010c9be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9c1	obj/kernel.asm	/^c010c9c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010c9c4	obj/kernel.asm	/^c010c9c4:	e8 68 f2 ff ff       	call   c010bc31 <fd_array_close>$/;"	l
c010c9c9	obj/kernel.asm	/^c010c9c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9cc	obj/kernel.asm	/^c010c9cc:	8b 00                	mov    (%eax),%eax$/;"	l
c010c9ce	obj/kernel.asm	/^c010c9ce:	85 c0                	test   %eax,%eax$/;"	l
c010c9d0	obj/kernel.asm	/^c010c9d0:	74 24                	je     c010c9f6 <files_destroy+0xa9>$/;"	l
c010c9d2	obj/kernel.asm	/^c010c9d2:	c7 44 24 0c b1 99 11 	movl   $0xc01199b1,0xc(%esp)$/;"	l
c010c9d9	obj/kernel.asm	/^c010c9d9:	c0 $/;"	l
c010c9da	obj/kernel.asm	/^c010c9da:	c7 44 24 08 8f 99 11 	movl   $0xc011998f,0x8(%esp)$/;"	l
c010c9e1	obj/kernel.asm	/^c010c9e1:	c0 $/;"	l
c010c9e2	obj/kernel.asm	/^c010c9e2:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
c010c9e9	obj/kernel.asm	/^c010c9e9:	00 $/;"	l
c010c9ea	obj/kernel.asm	/^c010c9ea:	c7 04 24 a4 99 11 c0 	movl   $0xc01199a4,(%esp)$/;"	l
c010c9f1	obj/kernel.asm	/^c010c9f1:	e8 41 42 ff ff       	call   c0100c37 <__panic>$/;"	l
c010c9f6	obj/kernel.asm	/^c010c9f6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010c9fa	obj/kernel.asm	/^c010c9fa:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010c9fe	obj/kernel.asm	/^c010c9fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca01	obj/kernel.asm	/^c010ca01:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010ca06	obj/kernel.asm	/^c010ca06:	76 ac                	jbe    c010c9b4 <files_destroy+0x67>$/;"	l
c010ca08	obj/kernel.asm	/^c010ca08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ca0b	obj/kernel.asm	/^c010ca0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca0e	obj/kernel.asm	/^c010ca0e:	e8 f0 b7 ff ff       	call   c0108203 <kfree>$/;"	l
c010ca13	obj/kernel.asm	/^c010ca13:	c9                   	leave  $/;"	l
c010ca14	obj/kernel.asm	/^c010ca14:	c3                   	ret    $/;"	l
c010ca15	obj/kernel.asm	/^c010ca15 <files_closeall>:$/;"	l
c010ca15	obj/kernel.asm	/^c010ca15:	55                   	push   %ebp$/;"	l
c010ca16	obj/kernel.asm	/^c010ca16:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca18	obj/kernel.asm	/^c010ca18:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ca1b	obj/kernel.asm	/^c010ca1b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ca1f	obj/kernel.asm	/^c010ca1f:	74 0f                	je     c010ca30 <files_closeall+0x1b>$/;"	l
c010ca21	obj/kernel.asm	/^c010ca21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ca24	obj/kernel.asm	/^c010ca24:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca27	obj/kernel.asm	/^c010ca27:	e8 63 fe ff ff       	call   c010c88f <files_count>$/;"	l
c010ca2c	obj/kernel.asm	/^c010ca2c:	85 c0                	test   %eax,%eax$/;"	l
c010ca2e	obj/kernel.asm	/^c010ca2e:	7f 24                	jg     c010ca54 <files_closeall+0x3f>$/;"	l
c010ca30	obj/kernel.asm	/^c010ca30:	c7 44 24 0c cc 99 11 	movl   $0xc01199cc,0xc(%esp)$/;"	l
c010ca37	obj/kernel.asm	/^c010ca37:	c0 $/;"	l
c010ca38	obj/kernel.asm	/^c010ca38:	c7 44 24 08 8f 99 11 	movl   $0xc011998f,0x8(%esp)$/;"	l
c010ca3f	obj/kernel.asm	/^c010ca3f:	c0 $/;"	l
c010ca40	obj/kernel.asm	/^c010ca40:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010ca47	obj/kernel.asm	/^c010ca47:	00 $/;"	l
c010ca48	obj/kernel.asm	/^c010ca48:	c7 04 24 a4 99 11 c0 	movl   $0xc01199a4,(%esp)$/;"	l
c010ca4f	obj/kernel.asm	/^c010ca4f:	e8 e3 41 ff ff       	call   c0100c37 <__panic>$/;"	l
c010ca54	obj/kernel.asm	/^c010ca54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ca57	obj/kernel.asm	/^c010ca57:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ca5a	obj/kernel.asm	/^c010ca5a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ca5d	obj/kernel.asm	/^c010ca5d:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)$/;"	l
c010ca64	obj/kernel.asm	/^c010ca64:	83 45 f0 38          	addl   $0x38,-0x10(%ebp)$/;"	l
c010ca68	obj/kernel.asm	/^c010ca68:	eb 1d                	jmp    c010ca87 <files_closeall+0x72>$/;"	l
c010ca6a	obj/kernel.asm	/^c010ca6a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca6d	obj/kernel.asm	/^c010ca6d:	8b 00                	mov    (%eax),%eax$/;"	l
c010ca6f	obj/kernel.asm	/^c010ca6f:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ca72	obj/kernel.asm	/^c010ca72:	75 0b                	jne    c010ca7f <files_closeall+0x6a>$/;"	l
c010ca74	obj/kernel.asm	/^c010ca74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca77	obj/kernel.asm	/^c010ca77:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ca7a	obj/kernel.asm	/^c010ca7a:	e8 b2 f1 ff ff       	call   c010bc31 <fd_array_close>$/;"	l
c010ca7f	obj/kernel.asm	/^c010ca7f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010ca83	obj/kernel.asm	/^c010ca83:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010ca87	obj/kernel.asm	/^c010ca87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca8a	obj/kernel.asm	/^c010ca8a:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010ca8f	obj/kernel.asm	/^c010ca8f:	76 d9                	jbe    c010ca6a <files_closeall+0x55>$/;"	l
c010ca91	obj/kernel.asm	/^c010ca91:	c9                   	leave  $/;"	l
c010ca92	obj/kernel.asm	/^c010ca92:	c3                   	ret    $/;"	l
c010ca93	obj/kernel.asm	/^c010ca93 <dup_fs>:$/;"	l
c010ca93	obj/kernel.asm	/^c010ca93:	55                   	push   %ebp$/;"	l
c010ca94	obj/kernel.asm	/^c010ca94:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca96	obj/kernel.asm	/^c010ca96:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ca99	obj/kernel.asm	/^c010ca99:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ca9d	obj/kernel.asm	/^c010ca9d:	74 06                	je     c010caa5 <dup_fs+0x12>$/;"	l
c010ca9f	obj/kernel.asm	/^c010ca9f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010caa3	obj/kernel.asm	/^c010caa3:	75 24                	jne    c010cac9 <dup_fs+0x36>$/;"	l
c010caa5	obj/kernel.asm	/^c010caa5:	c7 44 24 0c f6 99 11 	movl   $0xc01199f6,0xc(%esp)$/;"	l
c010caac	obj/kernel.asm	/^c010caac:	c0 $/;"	l
c010caad	obj/kernel.asm	/^c010caad:	c7 44 24 08 8f 99 11 	movl   $0xc011998f,0x8(%esp)$/;"	l
c010cab4	obj/kernel.asm	/^c010cab4:	c0 $/;"	l
c010cab5	obj/kernel.asm	/^c010cab5:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c010cabc	obj/kernel.asm	/^c010cabc:	00 $/;"	l
c010cabd	obj/kernel.asm	/^c010cabd:	c7 04 24 a4 99 11 c0 	movl   $0xc01199a4,(%esp)$/;"	l
c010cac4	obj/kernel.asm	/^c010cac4:	e8 6e 41 ff ff       	call   c0100c37 <__panic>$/;"	l
c010cac9	obj/kernel.asm	/^c010cac9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cacc	obj/kernel.asm	/^c010cacc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cacf	obj/kernel.asm	/^c010cacf:	e8 bb fd ff ff       	call   c010c88f <files_count>$/;"	l
c010cad4	obj/kernel.asm	/^c010cad4:	85 c0                	test   %eax,%eax$/;"	l
c010cad6	obj/kernel.asm	/^c010cad6:	75 0f                	jne    c010cae7 <dup_fs+0x54>$/;"	l
c010cad8	obj/kernel.asm	/^c010cad8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cadb	obj/kernel.asm	/^c010cadb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cade	obj/kernel.asm	/^c010cade:	e8 ac fd ff ff       	call   c010c88f <files_count>$/;"	l
c010cae3	obj/kernel.asm	/^c010cae3:	85 c0                	test   %eax,%eax$/;"	l
c010cae5	obj/kernel.asm	/^c010cae5:	7f 24                	jg     c010cb0b <dup_fs+0x78>$/;"	l
c010cae7	obj/kernel.asm	/^c010cae7:	c7 44 24 0c 14 9a 11 	movl   $0xc0119a14,0xc(%esp)$/;"	l
c010caee	obj/kernel.asm	/^c010caee:	c0 $/;"	l
c010caef	obj/kernel.asm	/^c010caef:	c7 44 24 08 8f 99 11 	movl   $0xc011998f,0x8(%esp)$/;"	l
c010caf6	obj/kernel.asm	/^c010caf6:	c0 $/;"	l
c010caf7	obj/kernel.asm	/^c010caf7:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)$/;"	l
c010cafe	obj/kernel.asm	/^c010cafe:	00 $/;"	l
c010caff	obj/kernel.asm	/^c010caff:	c7 04 24 a4 99 11 c0 	movl   $0xc01199a4,(%esp)$/;"	l
c010cb06	obj/kernel.asm	/^c010cb06:	e8 2c 41 ff ff       	call   c0100c37 <__panic>$/;"	l
c010cb0b	obj/kernel.asm	/^c010cb0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cb0e	obj/kernel.asm	/^c010cb0e:	8b 10                	mov    (%eax),%edx$/;"	l
c010cb10	obj/kernel.asm	/^c010cb10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cb13	obj/kernel.asm	/^c010cb13:	89 10                	mov    %edx,(%eax)$/;"	l
c010cb15	obj/kernel.asm	/^c010cb15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cb18	obj/kernel.asm	/^c010cb18:	8b 00                	mov    (%eax),%eax$/;"	l
c010cb1a	obj/kernel.asm	/^c010cb1a:	85 c0                	test   %eax,%eax$/;"	l
c010cb1c	obj/kernel.asm	/^c010cb1c:	74 0d                	je     c010cb2b <dup_fs+0x98>$/;"	l
c010cb1e	obj/kernel.asm	/^c010cb1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cb21	obj/kernel.asm	/^c010cb21:	8b 00                	mov    (%eax),%eax$/;"	l
c010cb23	obj/kernel.asm	/^c010cb23:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb26	obj/kernel.asm	/^c010cb26:	e8 9c 42 00 00       	call   c0110dc7 <inode_ref_inc>$/;"	l
c010cb2b	obj/kernel.asm	/^c010cb2b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cb2e	obj/kernel.asm	/^c010cb2e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cb31	obj/kernel.asm	/^c010cb31:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cb34	obj/kernel.asm	/^c010cb34:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cb37	obj/kernel.asm	/^c010cb37:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cb3a	obj/kernel.asm	/^c010cb3a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cb3d	obj/kernel.asm	/^c010cb3d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010cb44	obj/kernel.asm	/^c010cb44:	eb 31                	jmp    c010cb77 <dup_fs+0xe4>$/;"	l
c010cb46	obj/kernel.asm	/^c010cb46:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb49	obj/kernel.asm	/^c010cb49:	8b 00                	mov    (%eax),%eax$/;"	l
c010cb4b	obj/kernel.asm	/^c010cb4b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010cb4e	obj/kernel.asm	/^c010cb4e:	75 1b                	jne    c010cb6b <dup_fs+0xd8>$/;"	l
c010cb50	obj/kernel.asm	/^c010cb50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb53	obj/kernel.asm	/^c010cb53:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010cb59	obj/kernel.asm	/^c010cb59:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb5c	obj/kernel.asm	/^c010cb5c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cb60	obj/kernel.asm	/^c010cb60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010cb63	obj/kernel.asm	/^c010cb63:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cb66	obj/kernel.asm	/^c010cb66:	e8 52 f1 ff ff       	call   c010bcbd <fd_array_dup>$/;"	l
c010cb6b	obj/kernel.asm	/^c010cb6b:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010cb6f	obj/kernel.asm	/^c010cb6f:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010cb73	obj/kernel.asm	/^c010cb73:	83 45 ec 1c          	addl   $0x1c,-0x14(%ebp)$/;"	l
c010cb77	obj/kernel.asm	/^c010cb77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb7a	obj/kernel.asm	/^c010cb7a:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010cb7f	obj/kernel.asm	/^c010cb7f:	76 c5                	jbe    c010cb46 <dup_fs+0xb3>$/;"	l
c010cb81	obj/kernel.asm	/^c010cb81:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cb86	obj/kernel.asm	/^c010cb86:	c9                   	leave  $/;"	l
c010cb87	obj/kernel.asm	/^c010cb87:	c3                   	ret    $/;"	l
c010cb88	obj/kernel.asm	/^c010cb88 <kernel_thread_entry>:$/;"	l
c010cb88	obj/kernel.asm	/^c010cb88:	52                   	push   %edx$/;"	l
c010cb89	obj/kernel.asm	/^c010cb89:	ff d3                	call   *%ebx$/;"	l
c010cb8b	obj/kernel.asm	/^c010cb8b:	50                   	push   %eax$/;"	l
c010cb8c	obj/kernel.asm	/^c010cb8c:	e8 65 0e 00 00       	call   c010d9f6 <do_exit>$/;"	l
c010cb91	obj/kernel.asm	/^c010cb91 <switch_to>:$/;"	l
c010cb91	obj/kernel.asm	/^c010cb91:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010cb95	obj/kernel.asm	/^c010cb95:	8f 00                	popl   (%eax)$/;"	l
c010cb97	obj/kernel.asm	/^c010cb97:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010cb9a	obj/kernel.asm	/^c010cb9a:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010cb9d	obj/kernel.asm	/^c010cb9d:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010cba0	obj/kernel.asm	/^c010cba0:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010cba3	obj/kernel.asm	/^c010cba3:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010cba6	obj/kernel.asm	/^c010cba6:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010cba9	obj/kernel.asm	/^c010cba9:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010cbac	obj/kernel.asm	/^c010cbac:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010cbb0	obj/kernel.asm	/^c010cbb0:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010cbb3	obj/kernel.asm	/^c010cbb3:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010cbb6	obj/kernel.asm	/^c010cbb6:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010cbb9	obj/kernel.asm	/^c010cbb9:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010cbbc	obj/kernel.asm	/^c010cbbc:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010cbbf	obj/kernel.asm	/^c010cbbf:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010cbc2	obj/kernel.asm	/^c010cbc2:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010cbc5	obj/kernel.asm	/^c010cbc5:	ff 30                	pushl  (%eax)$/;"	l
c010cbc7	obj/kernel.asm	/^c010cbc7:	c3                   	ret    $/;"	l
c010cbc8	obj/kernel.asm	/^c010cbc8 <timer_init>:$/;"	l
c010cbc8	obj/kernel.asm	/^c010cbc8:	55                   	push   %ebp$/;"	l
c010cbc9	obj/kernel.asm	/^c010cbc9:	89 e5                	mov    %esp,%ebp$/;"	l
c010cbcb	obj/kernel.asm	/^c010cbcb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010cbce	obj/kernel.asm	/^c010cbce:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010cbd1	obj/kernel.asm	/^c010cbd1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cbd4	obj/kernel.asm	/^c010cbd4:	89 10                	mov    %edx,(%eax)$/;"	l
c010cbd6	obj/kernel.asm	/^c010cbd6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cbd9	obj/kernel.asm	/^c010cbd9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010cbdc	obj/kernel.asm	/^c010cbdc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010cbdf	obj/kernel.asm	/^c010cbdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cbe2	obj/kernel.asm	/^c010cbe2:	83 c0 08             	add    $0x8,%eax$/;"	l
c010cbe5	obj/kernel.asm	/^c010cbe5:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010cbe8	obj/kernel.asm	/^c010cbe8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010cbeb	obj/kernel.asm	/^c010cbeb:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010cbee	obj/kernel.asm	/^c010cbee:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010cbf1	obj/kernel.asm	/^c010cbf1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010cbf4	obj/kernel.asm	/^c010cbf4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010cbf7	obj/kernel.asm	/^c010cbf7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010cbfa	obj/kernel.asm	/^c010cbfa:	89 10                	mov    %edx,(%eax)$/;"	l
c010cbfc	obj/kernel.asm	/^c010cbfc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cbff	obj/kernel.asm	/^c010cbff:	c9                   	leave  $/;"	l
c010cc00	obj/kernel.asm	/^c010cc00:	c3                   	ret    $/;"	l
c010cc01	obj/kernel.asm	/^c010cc01 <__intr_save>:$/;"	l
c010cc01	obj/kernel.asm	/^c010cc01:	55                   	push   %ebp$/;"	l
c010cc02	obj/kernel.asm	/^c010cc02:	89 e5                	mov    %esp,%ebp$/;"	l
c010cc04	obj/kernel.asm	/^c010cc04:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cc07	obj/kernel.asm	/^c010cc07:	9c                   	pushf  $/;"	l
c010cc08	obj/kernel.asm	/^c010cc08:	58                   	pop    %eax$/;"	l
c010cc09	obj/kernel.asm	/^c010cc09:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cc0c	obj/kernel.asm	/^c010cc0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cc0f	obj/kernel.asm	/^c010cc0f:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010cc14	obj/kernel.asm	/^c010cc14:	85 c0                	test   %eax,%eax$/;"	l
c010cc16	obj/kernel.asm	/^c010cc16:	74 0c                	je     c010cc24 <__intr_save+0x23>$/;"	l
c010cc18	obj/kernel.asm	/^c010cc18:	e8 71 5e ff ff       	call   c0102a8e <intr_disable>$/;"	l
c010cc1d	obj/kernel.asm	/^c010cc1d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010cc22	obj/kernel.asm	/^c010cc22:	eb 05                	jmp    c010cc29 <__intr_save+0x28>$/;"	l
c010cc24	obj/kernel.asm	/^c010cc24:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cc29	obj/kernel.asm	/^c010cc29:	c9                   	leave  $/;"	l
c010cc2a	obj/kernel.asm	/^c010cc2a:	c3                   	ret    $/;"	l
c010cc2b	obj/kernel.asm	/^c010cc2b <__intr_restore>:$/;"	l
c010cc2b	obj/kernel.asm	/^c010cc2b:	55                   	push   %ebp$/;"	l
c010cc2c	obj/kernel.asm	/^c010cc2c:	89 e5                	mov    %esp,%ebp$/;"	l
c010cc2e	obj/kernel.asm	/^c010cc2e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cc31	obj/kernel.asm	/^c010cc31:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010cc35	obj/kernel.asm	/^c010cc35:	74 05                	je     c010cc3c <__intr_restore+0x11>$/;"	l
c010cc37	obj/kernel.asm	/^c010cc37:	e8 4c 5e ff ff       	call   c0102a88 <intr_enable>$/;"	l
c010cc3c	obj/kernel.asm	/^c010cc3c:	c9                   	leave  $/;"	l
c010cc3d	obj/kernel.asm	/^c010cc3d:	c3                   	ret    $/;"	l
c010cc3e	obj/kernel.asm	/^c010cc3e <page2ppn>:$/;"	l
c010cc3e	obj/kernel.asm	/^c010cc3e:	55                   	push   %ebp$/;"	l
c010cc3f	obj/kernel.asm	/^c010cc3f:	89 e5                	mov    %esp,%ebp$/;"	l
c010cc41	obj/kernel.asm	/^c010cc41:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010cc44	obj/kernel.asm	/^c010cc44:	a1 78 b6 15 c0       	mov    0xc015b678,%eax$/;"	l
c010cc49	obj/kernel.asm	/^c010cc49:	29 c2                	sub    %eax,%edx$/;"	l
c010cc4b	obj/kernel.asm	/^c010cc4b:	89 d0                	mov    %edx,%eax$/;"	l
c010cc4d	obj/kernel.asm	/^c010cc4d:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010cc50	obj/kernel.asm	/^c010cc50:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c010cc56	obj/kernel.asm	/^c010cc56:	5d                   	pop    %ebp$/;"	l
c010cc57	obj/kernel.asm	/^c010cc57:	c3                   	ret    $/;"	l
c010cc58	obj/kernel.asm	/^c010cc58 <page2pa>:$/;"	l
c010cc58	obj/kernel.asm	/^c010cc58:	55                   	push   %ebp$/;"	l
c010cc59	obj/kernel.asm	/^c010cc59:	89 e5                	mov    %esp,%ebp$/;"	l
c010cc5b	obj/kernel.asm	/^c010cc5b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cc5e	obj/kernel.asm	/^c010cc5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cc61	obj/kernel.asm	/^c010cc61:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cc64	obj/kernel.asm	/^c010cc64:	e8 d5 ff ff ff       	call   c010cc3e <page2ppn>$/;"	l
c010cc69	obj/kernel.asm	/^c010cc69:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010cc6c	obj/kernel.asm	/^c010cc6c:	c9                   	leave  $/;"	l
c010cc6d	obj/kernel.asm	/^c010cc6d:	c3                   	ret    $/;"	l
c010cc6e	obj/kernel.asm	/^c010cc6e <pa2page>:$/;"	l
c010cc6e	obj/kernel.asm	/^c010cc6e:	55                   	push   %ebp$/;"	l
c010cc6f	obj/kernel.asm	/^c010cc6f:	89 e5                	mov    %esp,%ebp$/;"	l
c010cc71	obj/kernel.asm	/^c010cc71:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cc74	obj/kernel.asm	/^c010cc74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cc77	obj/kernel.asm	/^c010cc77:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010cc7a	obj/kernel.asm	/^c010cc7a:	89 c2                	mov    %eax,%edx$/;"	l
c010cc7c	obj/kernel.asm	/^c010cc7c:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c010cc81	obj/kernel.asm	/^c010cc81:	39 c2                	cmp    %eax,%edx$/;"	l
c010cc83	obj/kernel.asm	/^c010cc83:	72 1c                	jb     c010cca1 <pa2page+0x33>$/;"	l
c010cc85	obj/kernel.asm	/^c010cc85:	c7 44 24 08 44 9a 11 	movl   $0xc0119a44,0x8(%esp)$/;"	l
c010cc8c	obj/kernel.asm	/^c010cc8c:	c0 $/;"	l
c010cc8d	obj/kernel.asm	/^c010cc8d:	c7 44 24 04 5e 00 00 	movl   $0x5e,0x4(%esp)$/;"	l
c010cc94	obj/kernel.asm	/^c010cc94:	00 $/;"	l
c010cc95	obj/kernel.asm	/^c010cc95:	c7 04 24 63 9a 11 c0 	movl   $0xc0119a63,(%esp)$/;"	l
c010cc9c	obj/kernel.asm	/^c010cc9c:	e8 96 3f ff ff       	call   c0100c37 <__panic>$/;"	l
c010cca1	obj/kernel.asm	/^c010cca1:	8b 0d 78 b6 15 c0    	mov    0xc015b678,%ecx$/;"	l
c010cca7	obj/kernel.asm	/^c010cca7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ccaa	obj/kernel.asm	/^c010ccaa:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010ccad	obj/kernel.asm	/^c010ccad:	89 c2                	mov    %eax,%edx$/;"	l
c010ccaf	obj/kernel.asm	/^c010ccaf:	89 d0                	mov    %edx,%eax$/;"	l
c010ccb1	obj/kernel.asm	/^c010ccb1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010ccb4	obj/kernel.asm	/^c010ccb4:	01 d0                	add    %edx,%eax$/;"	l
c010ccb6	obj/kernel.asm	/^c010ccb6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010ccb9	obj/kernel.asm	/^c010ccb9:	01 c8                	add    %ecx,%eax$/;"	l
c010ccbb	obj/kernel.asm	/^c010ccbb:	c9                   	leave  $/;"	l
c010ccbc	obj/kernel.asm	/^c010ccbc:	c3                   	ret    $/;"	l
c010ccbd	obj/kernel.asm	/^c010ccbd <page2kva>:$/;"	l
c010ccbd	obj/kernel.asm	/^c010ccbd:	55                   	push   %ebp$/;"	l
c010ccbe	obj/kernel.asm	/^c010ccbe:	89 e5                	mov    %esp,%ebp$/;"	l
c010ccc0	obj/kernel.asm	/^c010ccc0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ccc3	obj/kernel.asm	/^c010ccc3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ccc6	obj/kernel.asm	/^c010ccc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ccc9	obj/kernel.asm	/^c010ccc9:	e8 8a ff ff ff       	call   c010cc58 <page2pa>$/;"	l
c010ccce	obj/kernel.asm	/^c010ccce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ccd1	obj/kernel.asm	/^c010ccd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ccd4	obj/kernel.asm	/^c010ccd4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010ccd7	obj/kernel.asm	/^c010ccd7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ccda	obj/kernel.asm	/^c010ccda:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c010ccdf	obj/kernel.asm	/^c010ccdf:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010cce2	obj/kernel.asm	/^c010cce2:	72 23                	jb     c010cd07 <page2kva+0x4a>$/;"	l
c010cce4	obj/kernel.asm	/^c010cce4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cce7	obj/kernel.asm	/^c010cce7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cceb	obj/kernel.asm	/^c010cceb:	c7 44 24 08 74 9a 11 	movl   $0xc0119a74,0x8(%esp)$/;"	l
c010ccf2	obj/kernel.asm	/^c010ccf2:	c0 $/;"	l
c010ccf3	obj/kernel.asm	/^c010ccf3:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010ccfa	obj/kernel.asm	/^c010ccfa:	00 $/;"	l
c010ccfb	obj/kernel.asm	/^c010ccfb:	c7 04 24 63 9a 11 c0 	movl   $0xc0119a63,(%esp)$/;"	l
c010cd02	obj/kernel.asm	/^c010cd02:	e8 30 3f ff ff       	call   c0100c37 <__panic>$/;"	l
c010cd07	obj/kernel.asm	/^c010cd07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd0a	obj/kernel.asm	/^c010cd0a:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010cd0f	obj/kernel.asm	/^c010cd0f:	c9                   	leave  $/;"	l
c010cd10	obj/kernel.asm	/^c010cd10:	c3                   	ret    $/;"	l
c010cd11	obj/kernel.asm	/^c010cd11 <kva2page>:$/;"	l
c010cd11	obj/kernel.asm	/^c010cd11:	55                   	push   %ebp$/;"	l
c010cd12	obj/kernel.asm	/^c010cd12:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd14	obj/kernel.asm	/^c010cd14:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010cd17	obj/kernel.asm	/^c010cd17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd1a	obj/kernel.asm	/^c010cd1a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd1d	obj/kernel.asm	/^c010cd1d:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010cd24	obj/kernel.asm	/^c010cd24:	77 23                	ja     c010cd49 <kva2page+0x38>$/;"	l
c010cd26	obj/kernel.asm	/^c010cd26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd29	obj/kernel.asm	/^c010cd29:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010cd2d	obj/kernel.asm	/^c010cd2d:	c7 44 24 08 98 9a 11 	movl   $0xc0119a98,0x8(%esp)$/;"	l
c010cd34	obj/kernel.asm	/^c010cd34:	c0 $/;"	l
c010cd35	obj/kernel.asm	/^c010cd35:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010cd3c	obj/kernel.asm	/^c010cd3c:	00 $/;"	l
c010cd3d	obj/kernel.asm	/^c010cd3d:	c7 04 24 63 9a 11 c0 	movl   $0xc0119a63,(%esp)$/;"	l
c010cd44	obj/kernel.asm	/^c010cd44:	e8 ee 3e ff ff       	call   c0100c37 <__panic>$/;"	l
c010cd49	obj/kernel.asm	/^c010cd49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd4c	obj/kernel.asm	/^c010cd4c:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010cd51	obj/kernel.asm	/^c010cd51:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cd54	obj/kernel.asm	/^c010cd54:	e8 15 ff ff ff       	call   c010cc6e <pa2page>$/;"	l
c010cd59	obj/kernel.asm	/^c010cd59:	c9                   	leave  $/;"	l
c010cd5a	obj/kernel.asm	/^c010cd5a:	c3                   	ret    $/;"	l
c010cd5b	obj/kernel.asm	/^c010cd5b <mm_count_inc>:$/;"	l
c010cd5b	obj/kernel.asm	/^c010cd5b:	55                   	push   %ebp$/;"	l
c010cd5c	obj/kernel.asm	/^c010cd5c:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd5e	obj/kernel.asm	/^c010cd5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd61	obj/kernel.asm	/^c010cd61:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cd64	obj/kernel.asm	/^c010cd64:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010cd67	obj/kernel.asm	/^c010cd67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd6a	obj/kernel.asm	/^c010cd6a:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010cd6d	obj/kernel.asm	/^c010cd6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd70	obj/kernel.asm	/^c010cd70:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cd73	obj/kernel.asm	/^c010cd73:	5d                   	pop    %ebp$/;"	l
c010cd74	obj/kernel.asm	/^c010cd74:	c3                   	ret    $/;"	l
c010cd75	obj/kernel.asm	/^c010cd75 <mm_count_dec>:$/;"	l
c010cd75	obj/kernel.asm	/^c010cd75:	55                   	push   %ebp$/;"	l
c010cd76	obj/kernel.asm	/^c010cd76:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd78	obj/kernel.asm	/^c010cd78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd7b	obj/kernel.asm	/^c010cd7b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cd7e	obj/kernel.asm	/^c010cd7e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010cd81	obj/kernel.asm	/^c010cd81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd84	obj/kernel.asm	/^c010cd84:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010cd87	obj/kernel.asm	/^c010cd87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd8a	obj/kernel.asm	/^c010cd8a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010cd8d	obj/kernel.asm	/^c010cd8d:	5d                   	pop    %ebp$/;"	l
c010cd8e	obj/kernel.asm	/^c010cd8e:	c3                   	ret    $/;"	l
c010cd8f	obj/kernel.asm	/^c010cd8f <lock_mm>:$/;"	l
c010cd8f	obj/kernel.asm	/^c010cd8f:	55                   	push   %ebp$/;"	l
c010cd90	obj/kernel.asm	/^c010cd90:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd92	obj/kernel.asm	/^c010cd92:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cd95	obj/kernel.asm	/^c010cd95:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010cd99	obj/kernel.asm	/^c010cd99:	74 25                	je     c010cdc0 <lock_mm+0x31>$/;"	l
c010cd9b	obj/kernel.asm	/^c010cd9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cd9e	obj/kernel.asm	/^c010cd9e:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010cda1	obj/kernel.asm	/^c010cda1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cda4	obj/kernel.asm	/^c010cda4:	e8 db df ff ff       	call   c010ad84 <down>$/;"	l
c010cda9	obj/kernel.asm	/^c010cda9:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010cdae	obj/kernel.asm	/^c010cdae:	85 c0                	test   %eax,%eax$/;"	l
c010cdb0	obj/kernel.asm	/^c010cdb0:	74 0e                	je     c010cdc0 <lock_mm+0x31>$/;"	l
c010cdb2	obj/kernel.asm	/^c010cdb2:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010cdb7	obj/kernel.asm	/^c010cdb7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010cdba	obj/kernel.asm	/^c010cdba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cdbd	obj/kernel.asm	/^c010cdbd:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010cdc0	obj/kernel.asm	/^c010cdc0:	c9                   	leave  $/;"	l
c010cdc1	obj/kernel.asm	/^c010cdc1:	c3                   	ret    $/;"	l
c010cdc2	obj/kernel.asm	/^c010cdc2 <unlock_mm>:$/;"	l
c010cdc2	obj/kernel.asm	/^c010cdc2:	55                   	push   %ebp$/;"	l
c010cdc3	obj/kernel.asm	/^c010cdc3:	89 e5                	mov    %esp,%ebp$/;"	l
c010cdc5	obj/kernel.asm	/^c010cdc5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cdc8	obj/kernel.asm	/^c010cdc8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010cdcc	obj/kernel.asm	/^c010cdcc:	74 18                	je     c010cde6 <unlock_mm+0x24>$/;"	l
c010cdce	obj/kernel.asm	/^c010cdce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cdd1	obj/kernel.asm	/^c010cdd1:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010cdd4	obj/kernel.asm	/^c010cdd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cdd7	obj/kernel.asm	/^c010cdd7:	e8 8d df ff ff       	call   c010ad69 <up>$/;"	l
c010cddc	obj/kernel.asm	/^c010cddc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cddf	obj/kernel.asm	/^c010cddf:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010cde6	obj/kernel.asm	/^c010cde6:	c9                   	leave  $/;"	l
c010cde7	obj/kernel.asm	/^c010cde7:	c3                   	ret    $/;"	l
c010cde8	obj/kernel.asm	/^c010cde8 <files_count_inc>:$/;"	l
c010cde8	obj/kernel.asm	/^c010cde8:	55                   	push   %ebp$/;"	l
c010cde9	obj/kernel.asm	/^c010cde9:	89 e5                	mov    %esp,%ebp$/;"	l
c010cdeb	obj/kernel.asm	/^c010cdeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cdee	obj/kernel.asm	/^c010cdee:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010cdf1	obj/kernel.asm	/^c010cdf1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010cdf4	obj/kernel.asm	/^c010cdf4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cdf7	obj/kernel.asm	/^c010cdf7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010cdfa	obj/kernel.asm	/^c010cdfa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cdfd	obj/kernel.asm	/^c010cdfd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ce00	obj/kernel.asm	/^c010ce00:	5d                   	pop    %ebp$/;"	l
c010ce01	obj/kernel.asm	/^c010ce01:	c3                   	ret    $/;"	l
c010ce02	obj/kernel.asm	/^c010ce02 <files_count_dec>:$/;"	l
c010ce02	obj/kernel.asm	/^c010ce02:	55                   	push   %ebp$/;"	l
c010ce03	obj/kernel.asm	/^c010ce03:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce05	obj/kernel.asm	/^c010ce05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ce08	obj/kernel.asm	/^c010ce08:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ce0b	obj/kernel.asm	/^c010ce0b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ce0e	obj/kernel.asm	/^c010ce0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ce11	obj/kernel.asm	/^c010ce11:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010ce14	obj/kernel.asm	/^c010ce14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ce17	obj/kernel.asm	/^c010ce17:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ce1a	obj/kernel.asm	/^c010ce1a:	5d                   	pop    %ebp$/;"	l
c010ce1b	obj/kernel.asm	/^c010ce1b:	c3                   	ret    $/;"	l
c010ce1c	obj/kernel.asm	/^c010ce1c <alloc_proc>:$/;"	l
c010ce1c	obj/kernel.asm	/^c010ce1c:	55                   	push   %ebp$/;"	l
c010ce1d	obj/kernel.asm	/^c010ce1d:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce1f	obj/kernel.asm	/^c010ce1f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ce22	obj/kernel.asm	/^c010ce22:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
c010ce29	obj/kernel.asm	/^c010ce29:	e8 ba b3 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010ce2e	obj/kernel.asm	/^c010ce2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ce31	obj/kernel.asm	/^c010ce31:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ce35	obj/kernel.asm	/^c010ce35:	0f 84 70 01 00 00    	je     c010cfab <alloc_proc+0x18f>$/;"	l
c010ce3b	obj/kernel.asm	/^c010ce3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce3e	obj/kernel.asm	/^c010ce3e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010ce44	obj/kernel.asm	/^c010ce44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce47	obj/kernel.asm	/^c010ce47:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c010ce4e	obj/kernel.asm	/^c010ce4e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce51	obj/kernel.asm	/^c010ce51:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010ce58	obj/kernel.asm	/^c010ce58:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce5b	obj/kernel.asm	/^c010ce5b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010ce62	obj/kernel.asm	/^c010ce62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce65	obj/kernel.asm	/^c010ce65:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010ce6c	obj/kernel.asm	/^c010ce6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce6f	obj/kernel.asm	/^c010ce6f:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010ce76	obj/kernel.asm	/^c010ce76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce79	obj/kernel.asm	/^c010ce79:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010ce80	obj/kernel.asm	/^c010ce80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce83	obj/kernel.asm	/^c010ce83:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010ce86	obj/kernel.asm	/^c010ce86:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010ce8d	obj/kernel.asm	/^c010ce8d:	00 $/;"	l
c010ce8e	obj/kernel.asm	/^c010ce8e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010ce95	obj/kernel.asm	/^c010ce95:	00 $/;"	l
c010ce96	obj/kernel.asm	/^c010ce96:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ce99	obj/kernel.asm	/^c010ce99:	e8 f2 97 00 00       	call   c0116690 <memset>$/;"	l
c010ce9e	obj/kernel.asm	/^c010ce9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cea1	obj/kernel.asm	/^c010cea1:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c010cea8	obj/kernel.asm	/^c010cea8:	8b 15 74 b6 15 c0    	mov    0xc015b674,%edx$/;"	l
c010ceae	obj/kernel.asm	/^c010ceae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ceb1	obj/kernel.asm	/^c010ceb1:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010ceb4	obj/kernel.asm	/^c010ceb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ceb7	obj/kernel.asm	/^c010ceb7:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c010cebe	obj/kernel.asm	/^c010cebe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cec1	obj/kernel.asm	/^c010cec1:	83 c0 48             	add    $0x48,%eax$/;"	l
c010cec4	obj/kernel.asm	/^c010cec4:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010cecb	obj/kernel.asm	/^c010cecb:	00 $/;"	l
c010cecc	obj/kernel.asm	/^c010cecc:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010ced3	obj/kernel.asm	/^c010ced3:	00 $/;"	l
c010ced4	obj/kernel.asm	/^c010ced4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ced7	obj/kernel.asm	/^c010ced7:	e8 b4 97 00 00       	call   c0116690 <memset>$/;"	l
c010cedc	obj/kernel.asm	/^c010cedc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cedf	obj/kernel.asm	/^c010cedf:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010cee6	obj/kernel.asm	/^c010cee6:	00 00 00 $/;"	l
c010cee9	obj/kernel.asm	/^c010cee9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ceec	obj/kernel.asm	/^c010ceec:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010cef3	obj/kernel.asm	/^c010cef3:	00 00 00 $/;"	l
c010cef6	obj/kernel.asm	/^c010cef6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cef9	obj/kernel.asm	/^c010cef9:	8b 90 98 00 00 00    	mov    0x98(%eax),%edx$/;"	l
c010ceff	obj/kernel.asm	/^c010ceff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf02	obj/kernel.asm	/^c010cf02:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010cf08	obj/kernel.asm	/^c010cf08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf0b	obj/kernel.asm	/^c010cf0b:	8b 90 9c 00 00 00    	mov    0x9c(%eax),%edx$/;"	l
c010cf11	obj/kernel.asm	/^c010cf11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf14	obj/kernel.asm	/^c010cf14:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010cf1a	obj/kernel.asm	/^c010cf1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf1d	obj/kernel.asm	/^c010cf1d:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%eax)$/;"	l
c010cf24	obj/kernel.asm	/^c010cf24:	00 00 00 $/;"	l
c010cf27	obj/kernel.asm	/^c010cf27:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf2a	obj/kernel.asm	/^c010cf2a:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)$/;"	l
c010cf31	obj/kernel.asm	/^c010cf31:	00 00 00 $/;"	l
c010cf34	obj/kernel.asm	/^c010cf34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf37	obj/kernel.asm	/^c010cf37:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx$/;"	l
c010cf3d	obj/kernel.asm	/^c010cf3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf40	obj/kernel.asm	/^c010cf40:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)$/;"	l
c010cf46	obj/kernel.asm	/^c010cf46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf49	obj/kernel.asm	/^c010cf49:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)$/;"	l
c010cf50	obj/kernel.asm	/^c010cf50:	00 00 00 $/;"	l
c010cf53	obj/kernel.asm	/^c010cf53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf56	obj/kernel.asm	/^c010cf56:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)$/;"	l
c010cf5d	obj/kernel.asm	/^c010cf5d:	00 00 00 $/;"	l
c010cf60	obj/kernel.asm	/^c010cf60:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf63	obj/kernel.asm	/^c010cf63:	8b 90 b0 00 00 00    	mov    0xb0(%eax),%edx$/;"	l
c010cf69	obj/kernel.asm	/^c010cf69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf6c	obj/kernel.asm	/^c010cf6c:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)$/;"	l
c010cf72	obj/kernel.asm	/^c010cf72:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf75	obj/kernel.asm	/^c010cf75:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx$/;"	l
c010cf7b	obj/kernel.asm	/^c010cf7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf7e	obj/kernel.asm	/^c010cf7e:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)$/;"	l
c010cf84	obj/kernel.asm	/^c010cf84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf87	obj/kernel.asm	/^c010cf87:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%eax)$/;"	l
c010cf8e	obj/kernel.asm	/^c010cf8e:	00 00 00 $/;"	l
c010cf91	obj/kernel.asm	/^c010cf91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cf94	obj/kernel.asm	/^c010cf94:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%eax)$/;"	l
c010cf9b	obj/kernel.asm	/^c010cf9b:	00 00 00 $/;"	l
c010cf9e	obj/kernel.asm	/^c010cf9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cfa1	obj/kernel.asm	/^c010cfa1:	c7 80 c4 00 00 00 00 	movl   $0x0,0xc4(%eax)$/;"	l
c010cfa8	obj/kernel.asm	/^c010cfa8:	00 00 00 $/;"	l
c010cfab	obj/kernel.asm	/^c010cfab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cfae	obj/kernel.asm	/^c010cfae:	c9                   	leave  $/;"	l
c010cfaf	obj/kernel.asm	/^c010cfaf:	c3                   	ret    $/;"	l
c010cfb0	obj/kernel.asm	/^c010cfb0 <set_proc_name>:$/;"	l
c010cfb0	obj/kernel.asm	/^c010cfb0:	55                   	push   %ebp$/;"	l
c010cfb1	obj/kernel.asm	/^c010cfb1:	89 e5                	mov    %esp,%ebp$/;"	l
c010cfb3	obj/kernel.asm	/^c010cfb3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cfb6	obj/kernel.asm	/^c010cfb6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cfb9	obj/kernel.asm	/^c010cfb9:	83 c0 48             	add    $0x48,%eax$/;"	l
c010cfbc	obj/kernel.asm	/^c010cfbc:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010cfc3	obj/kernel.asm	/^c010cfc3:	00 $/;"	l
c010cfc4	obj/kernel.asm	/^c010cfc4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010cfcb	obj/kernel.asm	/^c010cfcb:	00 $/;"	l
c010cfcc	obj/kernel.asm	/^c010cfcc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010cfcf	obj/kernel.asm	/^c010cfcf:	e8 bc 96 00 00       	call   c0116690 <memset>$/;"	l
c010cfd4	obj/kernel.asm	/^c010cfd4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cfd7	obj/kernel.asm	/^c010cfd7:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010cfda	obj/kernel.asm	/^c010cfda:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010cfe1	obj/kernel.asm	/^c010cfe1:	00 $/;"	l
c010cfe2	obj/kernel.asm	/^c010cfe2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cfe5	obj/kernel.asm	/^c010cfe5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010cfe9	obj/kernel.asm	/^c010cfe9:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010cfec	obj/kernel.asm	/^c010cfec:	e8 81 97 00 00       	call   c0116772 <memcpy>$/;"	l
c010cff1	obj/kernel.asm	/^c010cff1:	c9                   	leave  $/;"	l
c010cff2	obj/kernel.asm	/^c010cff2:	c3                   	ret    $/;"	l
c010cff3	obj/kernel.asm	/^c010cff3 <get_proc_name>:$/;"	l
c010cff3	obj/kernel.asm	/^c010cff3:	55                   	push   %ebp$/;"	l
c010cff4	obj/kernel.asm	/^c010cff4:	89 e5                	mov    %esp,%ebp$/;"	l
c010cff6	obj/kernel.asm	/^c010cff6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cff9	obj/kernel.asm	/^c010cff9:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010d000	obj/kernel.asm	/^c010d000:	00 $/;"	l
c010d001	obj/kernel.asm	/^c010d001:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d008	obj/kernel.asm	/^c010d008:	00 $/;"	l
c010d009	obj/kernel.asm	/^c010d009:	c7 04 24 a0 9f 15 c0 	movl   $0xc0159fa0,(%esp)$/;"	l
c010d010	obj/kernel.asm	/^c010d010:	e8 7b 96 00 00       	call   c0116690 <memset>$/;"	l
c010d015	obj/kernel.asm	/^c010d015:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d018	obj/kernel.asm	/^c010d018:	83 c0 48             	add    $0x48,%eax$/;"	l
c010d01b	obj/kernel.asm	/^c010d01b:	c7 44 24 08 32 00 00 	movl   $0x32,0x8(%esp)$/;"	l
c010d022	obj/kernel.asm	/^c010d022:	00 $/;"	l
c010d023	obj/kernel.asm	/^c010d023:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d027	obj/kernel.asm	/^c010d027:	c7 04 24 a0 9f 15 c0 	movl   $0xc0159fa0,(%esp)$/;"	l
c010d02e	obj/kernel.asm	/^c010d02e:	e8 3f 97 00 00       	call   c0116772 <memcpy>$/;"	l
c010d033	obj/kernel.asm	/^c010d033:	c9                   	leave  $/;"	l
c010d034	obj/kernel.asm	/^c010d034:	c3                   	ret    $/;"	l
c010d035	obj/kernel.asm	/^c010d035 <set_links>:$/;"	l
c010d035	obj/kernel.asm	/^c010d035:	55                   	push   %ebp$/;"	l
c010d036	obj/kernel.asm	/^c010d036:	89 e5                	mov    %esp,%ebp$/;"	l
c010d038	obj/kernel.asm	/^c010d038:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010d03b	obj/kernel.asm	/^c010d03b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d03e	obj/kernel.asm	/^c010d03e:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010d041	obj/kernel.asm	/^c010d041:	c7 45 fc 5c b8 15 c0 	movl   $0xc015b85c,-0x4(%ebp)$/;"	l
c010d048	obj/kernel.asm	/^c010d048:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010d04b	obj/kernel.asm	/^c010d04b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d04e	obj/kernel.asm	/^c010d04e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d051	obj/kernel.asm	/^c010d051:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d054	obj/kernel.asm	/^c010d054:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d057	obj/kernel.asm	/^c010d057:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d05a	obj/kernel.asm	/^c010d05a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d05d	obj/kernel.asm	/^c010d05d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010d060	obj/kernel.asm	/^c010d060:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010d063	obj/kernel.asm	/^c010d063:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d066	obj/kernel.asm	/^c010d066:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010d069	obj/kernel.asm	/^c010d069:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d06c	obj/kernel.asm	/^c010d06c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d06f	obj/kernel.asm	/^c010d06f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010d072	obj/kernel.asm	/^c010d072:	89 10                	mov    %edx,(%eax)$/;"	l
c010d074	obj/kernel.asm	/^c010d074:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d077	obj/kernel.asm	/^c010d077:	8b 10                	mov    (%eax),%edx$/;"	l
c010d079	obj/kernel.asm	/^c010d079:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d07c	obj/kernel.asm	/^c010d07c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d07f	obj/kernel.asm	/^c010d07f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d082	obj/kernel.asm	/^c010d082:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010d085	obj/kernel.asm	/^c010d085:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d088	obj/kernel.asm	/^c010d088:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d08b	obj/kernel.asm	/^c010d08b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d08e	obj/kernel.asm	/^c010d08e:	89 10                	mov    %edx,(%eax)$/;"	l
c010d090	obj/kernel.asm	/^c010d090:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d093	obj/kernel.asm	/^c010d093:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010d09a	obj/kernel.asm	/^c010d09a:	00 00 00 $/;"	l
c010d09d	obj/kernel.asm	/^c010d09d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0a0	obj/kernel.asm	/^c010d0a0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010d0a3	obj/kernel.asm	/^c010d0a3:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010d0a9	obj/kernel.asm	/^c010d0a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0ac	obj/kernel.asm	/^c010d0ac:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010d0b2	obj/kernel.asm	/^c010d0b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0b5	obj/kernel.asm	/^c010d0b5:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010d0bb	obj/kernel.asm	/^c010d0bb:	85 c0                	test   %eax,%eax$/;"	l
c010d0bd	obj/kernel.asm	/^c010d0bd:	74 12                	je     c010d0d1 <set_links+0x9c>$/;"	l
c010d0bf	obj/kernel.asm	/^c010d0bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0c2	obj/kernel.asm	/^c010d0c2:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010d0c8	obj/kernel.asm	/^c010d0c8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d0cb	obj/kernel.asm	/^c010d0cb:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010d0d1	obj/kernel.asm	/^c010d0d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0d4	obj/kernel.asm	/^c010d0d4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010d0d7	obj/kernel.asm	/^c010d0d7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d0da	obj/kernel.asm	/^c010d0da:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010d0e0	obj/kernel.asm	/^c010d0e0:	a1 80 9f 15 c0       	mov    0xc0159f80,%eax$/;"	l
c010d0e5	obj/kernel.asm	/^c010d0e5:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d0e8	obj/kernel.asm	/^c010d0e8:	a3 80 9f 15 c0       	mov    %eax,0xc0159f80$/;"	l
c010d0ed	obj/kernel.asm	/^c010d0ed:	c9                   	leave  $/;"	l
c010d0ee	obj/kernel.asm	/^c010d0ee:	c3                   	ret    $/;"	l
c010d0ef	obj/kernel.asm	/^c010d0ef <remove_links>:$/;"	l
c010d0ef	obj/kernel.asm	/^c010d0ef:	55                   	push   %ebp$/;"	l
c010d0f0	obj/kernel.asm	/^c010d0f0:	89 e5                	mov    %esp,%ebp$/;"	l
c010d0f2	obj/kernel.asm	/^c010d0f2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010d0f5	obj/kernel.asm	/^c010d0f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0f8	obj/kernel.asm	/^c010d0f8:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010d0fb	obj/kernel.asm	/^c010d0fb:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d0fe	obj/kernel.asm	/^c010d0fe:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d101	obj/kernel.asm	/^c010d101:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d104	obj/kernel.asm	/^c010d104:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010d107	obj/kernel.asm	/^c010d107:	8b 12                	mov    (%edx),%edx$/;"	l
c010d109	obj/kernel.asm	/^c010d109:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010d10c	obj/kernel.asm	/^c010d10c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d10f	obj/kernel.asm	/^c010d10f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d112	obj/kernel.asm	/^c010d112:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d115	obj/kernel.asm	/^c010d115:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d118	obj/kernel.asm	/^c010d118:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d11b	obj/kernel.asm	/^c010d11b:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010d11e	obj/kernel.asm	/^c010d11e:	89 10                	mov    %edx,(%eax)$/;"	l
c010d120	obj/kernel.asm	/^c010d120:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d123	obj/kernel.asm	/^c010d123:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010d129	obj/kernel.asm	/^c010d129:	85 c0                	test   %eax,%eax$/;"	l
c010d12b	obj/kernel.asm	/^c010d12b:	74 18                	je     c010d145 <remove_links+0x56>$/;"	l
c010d12d	obj/kernel.asm	/^c010d12d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d130	obj/kernel.asm	/^c010d130:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010d136	obj/kernel.asm	/^c010d136:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d139	obj/kernel.asm	/^c010d139:	8b 92 98 00 00 00    	mov    0x98(%edx),%edx$/;"	l
c010d13f	obj/kernel.asm	/^c010d13f:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010d145	obj/kernel.asm	/^c010d145:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d148	obj/kernel.asm	/^c010d148:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010d14e	obj/kernel.asm	/^c010d14e:	85 c0                	test   %eax,%eax$/;"	l
c010d150	obj/kernel.asm	/^c010d150:	74 1a                	je     c010d16c <remove_links+0x7d>$/;"	l
c010d152	obj/kernel.asm	/^c010d152:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d155	obj/kernel.asm	/^c010d155:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010d15b	obj/kernel.asm	/^c010d15b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d15e	obj/kernel.asm	/^c010d15e:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010d164	obj/kernel.asm	/^c010d164:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010d16a	obj/kernel.asm	/^c010d16a:	eb 15                	jmp    c010d181 <remove_links+0x92>$/;"	l
c010d16c	obj/kernel.asm	/^c010d16c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d16f	obj/kernel.asm	/^c010d16f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010d172	obj/kernel.asm	/^c010d172:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d175	obj/kernel.asm	/^c010d175:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010d17b	obj/kernel.asm	/^c010d17b:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010d181	obj/kernel.asm	/^c010d181:	a1 80 9f 15 c0       	mov    0xc0159f80,%eax$/;"	l
c010d186	obj/kernel.asm	/^c010d186:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010d189	obj/kernel.asm	/^c010d189:	a3 80 9f 15 c0       	mov    %eax,0xc0159f80$/;"	l
c010d18e	obj/kernel.asm	/^c010d18e:	c9                   	leave  $/;"	l
c010d18f	obj/kernel.asm	/^c010d18f:	c3                   	ret    $/;"	l
c010d190	obj/kernel.asm	/^c010d190 <get_pid>:$/;"	l
c010d190	obj/kernel.asm	/^c010d190:	55                   	push   %ebp$/;"	l
c010d191	obj/kernel.asm	/^c010d191:	89 e5                	mov    %esp,%ebp$/;"	l
c010d193	obj/kernel.asm	/^c010d193:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010d196	obj/kernel.asm	/^c010d196:	c7 45 f8 5c b8 15 c0 	movl   $0xc015b85c,-0x8(%ebp)$/;"	l
c010d19d	obj/kernel.asm	/^c010d19d:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d1a2	obj/kernel.asm	/^c010d1a2:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d1a5	obj/kernel.asm	/^c010d1a5:	a3 70 6a 15 c0       	mov    %eax,0xc0156a70$/;"	l
c010d1aa	obj/kernel.asm	/^c010d1aa:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d1af	obj/kernel.asm	/^c010d1af:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010d1b4	obj/kernel.asm	/^c010d1b4:	7e 0c                	jle    c010d1c2 <get_pid+0x32>$/;"	l
c010d1b6	obj/kernel.asm	/^c010d1b6:	c7 05 70 6a 15 c0 01 	movl   $0x1,0xc0156a70$/;"	l
c010d1bd	obj/kernel.asm	/^c010d1bd:	00 00 00 $/;"	l
c010d1c0	obj/kernel.asm	/^c010d1c0:	eb 13                	jmp    c010d1d5 <get_pid+0x45>$/;"	l
c010d1c2	obj/kernel.asm	/^c010d1c2:	8b 15 70 6a 15 c0    	mov    0xc0156a70,%edx$/;"	l
c010d1c8	obj/kernel.asm	/^c010d1c8:	a1 74 6a 15 c0       	mov    0xc0156a74,%eax$/;"	l
c010d1cd	obj/kernel.asm	/^c010d1cd:	39 c2                	cmp    %eax,%edx$/;"	l
c010d1cf	obj/kernel.asm	/^c010d1cf:	0f 8c ac 00 00 00    	jl     c010d281 <get_pid+0xf1>$/;"	l
c010d1d5	obj/kernel.asm	/^c010d1d5:	c7 05 74 6a 15 c0 00 	movl   $0x2000,0xc0156a74$/;"	l
c010d1dc	obj/kernel.asm	/^c010d1dc:	20 00 00 $/;"	l
c010d1df	obj/kernel.asm	/^c010d1df:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d1e2	obj/kernel.asm	/^c010d1e2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d1e5	obj/kernel.asm	/^c010d1e5:	eb 7f                	jmp    c010d266 <get_pid+0xd6>$/;"	l
c010d1e7	obj/kernel.asm	/^c010d1e7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d1ea	obj/kernel.asm	/^c010d1ea:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
c010d1ed	obj/kernel.asm	/^c010d1ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d1f0	obj/kernel.asm	/^c010d1f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d1f3	obj/kernel.asm	/^c010d1f3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d1f6	obj/kernel.asm	/^c010d1f6:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d1fb	obj/kernel.asm	/^c010d1fb:	39 c2                	cmp    %eax,%edx$/;"	l
c010d1fd	obj/kernel.asm	/^c010d1fd:	75 3e                	jne    c010d23d <get_pid+0xad>$/;"	l
c010d1ff	obj/kernel.asm	/^c010d1ff:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d204	obj/kernel.asm	/^c010d204:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d207	obj/kernel.asm	/^c010d207:	a3 70 6a 15 c0       	mov    %eax,0xc0156a70$/;"	l
c010d20c	obj/kernel.asm	/^c010d20c:	8b 15 70 6a 15 c0    	mov    0xc0156a70,%edx$/;"	l
c010d212	obj/kernel.asm	/^c010d212:	a1 74 6a 15 c0       	mov    0xc0156a74,%eax$/;"	l
c010d217	obj/kernel.asm	/^c010d217:	39 c2                	cmp    %eax,%edx$/;"	l
c010d219	obj/kernel.asm	/^c010d219:	7c 4b                	jl     c010d266 <get_pid+0xd6>$/;"	l
c010d21b	obj/kernel.asm	/^c010d21b:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d220	obj/kernel.asm	/^c010d220:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010d225	obj/kernel.asm	/^c010d225:	7e 0a                	jle    c010d231 <get_pid+0xa1>$/;"	l
c010d227	obj/kernel.asm	/^c010d227:	c7 05 70 6a 15 c0 01 	movl   $0x1,0xc0156a70$/;"	l
c010d22e	obj/kernel.asm	/^c010d22e:	00 00 00 $/;"	l
c010d231	obj/kernel.asm	/^c010d231:	c7 05 74 6a 15 c0 00 	movl   $0x2000,0xc0156a74$/;"	l
c010d238	obj/kernel.asm	/^c010d238:	20 00 00 $/;"	l
c010d23b	obj/kernel.asm	/^c010d23b:	eb a2                	jmp    c010d1df <get_pid+0x4f>$/;"	l
c010d23d	obj/kernel.asm	/^c010d23d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d240	obj/kernel.asm	/^c010d240:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d243	obj/kernel.asm	/^c010d243:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d248	obj/kernel.asm	/^c010d248:	39 c2                	cmp    %eax,%edx$/;"	l
c010d24a	obj/kernel.asm	/^c010d24a:	7e 1a                	jle    c010d266 <get_pid+0xd6>$/;"	l
c010d24c	obj/kernel.asm	/^c010d24c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d24f	obj/kernel.asm	/^c010d24f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d252	obj/kernel.asm	/^c010d252:	a1 74 6a 15 c0       	mov    0xc0156a74,%eax$/;"	l
c010d257	obj/kernel.asm	/^c010d257:	39 c2                	cmp    %eax,%edx$/;"	l
c010d259	obj/kernel.asm	/^c010d259:	7d 0b                	jge    c010d266 <get_pid+0xd6>$/;"	l
c010d25b	obj/kernel.asm	/^c010d25b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d25e	obj/kernel.asm	/^c010d25e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d261	obj/kernel.asm	/^c010d261:	a3 74 6a 15 c0       	mov    %eax,0xc0156a74$/;"	l
c010d266	obj/kernel.asm	/^c010d266:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d269	obj/kernel.asm	/^c010d269:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d26c	obj/kernel.asm	/^c010d26c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d26f	obj/kernel.asm	/^c010d26f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d272	obj/kernel.asm	/^c010d272:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d275	obj/kernel.asm	/^c010d275:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d278	obj/kernel.asm	/^c010d278:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c010d27b	obj/kernel.asm	/^c010d27b:	0f 85 66 ff ff ff    	jne    c010d1e7 <get_pid+0x57>$/;"	l
c010d281	obj/kernel.asm	/^c010d281:	a1 70 6a 15 c0       	mov    0xc0156a70,%eax$/;"	l
c010d286	obj/kernel.asm	/^c010d286:	c9                   	leave  $/;"	l
c010d287	obj/kernel.asm	/^c010d287:	c3                   	ret    $/;"	l
c010d288	obj/kernel.asm	/^c010d288 <proc_run>:$/;"	l
c010d288	obj/kernel.asm	/^c010d288:	55                   	push   %ebp$/;"	l
c010d289	obj/kernel.asm	/^c010d289:	89 e5                	mov    %esp,%ebp$/;"	l
c010d28b	obj/kernel.asm	/^c010d28b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d28e	obj/kernel.asm	/^c010d28e:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010d293	obj/kernel.asm	/^c010d293:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010d296	obj/kernel.asm	/^c010d296:	74 63                	je     c010d2fb <proc_run+0x73>$/;"	l
c010d298	obj/kernel.asm	/^c010d298:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010d29d	obj/kernel.asm	/^c010d29d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d2a0	obj/kernel.asm	/^c010d2a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d2a3	obj/kernel.asm	/^c010d2a3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d2a6	obj/kernel.asm	/^c010d2a6:	e8 56 f9 ff ff       	call   c010cc01 <__intr_save>$/;"	l
c010d2ab	obj/kernel.asm	/^c010d2ab:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d2ae	obj/kernel.asm	/^c010d2ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d2b1	obj/kernel.asm	/^c010d2b1:	a3 68 7f 15 c0       	mov    %eax,0xc0157f68$/;"	l
c010d2b6	obj/kernel.asm	/^c010d2b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d2b9	obj/kernel.asm	/^c010d2b9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d2bc	obj/kernel.asm	/^c010d2bc:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c010d2c1	obj/kernel.asm	/^c010d2c1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d2c4	obj/kernel.asm	/^c010d2c4:	e8 2c 6d ff ff       	call   c0103ff5 <load_esp0>$/;"	l
c010d2c9	obj/kernel.asm	/^c010d2c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d2cc	obj/kernel.asm	/^c010d2cc:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010d2cf	obj/kernel.asm	/^c010d2cf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d2d2	obj/kernel.asm	/^c010d2d2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d2d5	obj/kernel.asm	/^c010d2d5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010d2d8	obj/kernel.asm	/^c010d2d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d2db	obj/kernel.asm	/^c010d2db:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c010d2de	obj/kernel.asm	/^c010d2de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d2e1	obj/kernel.asm	/^c010d2e1:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010d2e4	obj/kernel.asm	/^c010d2e4:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010d2e8	obj/kernel.asm	/^c010d2e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d2eb	obj/kernel.asm	/^c010d2eb:	e8 a1 f8 ff ff       	call   c010cb91 <switch_to>$/;"	l
c010d2f0	obj/kernel.asm	/^c010d2f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d2f3	obj/kernel.asm	/^c010d2f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d2f6	obj/kernel.asm	/^c010d2f6:	e8 30 f9 ff ff       	call   c010cc2b <__intr_restore>$/;"	l
c010d2fb	obj/kernel.asm	/^c010d2fb:	c9                   	leave  $/;"	l
c010d2fc	obj/kernel.asm	/^c010d2fc:	c3                   	ret    $/;"	l
c010d2fd	obj/kernel.asm	/^c010d2fd <forkret>:$/;"	l
c010d2fd	obj/kernel.asm	/^c010d2fd:	55                   	push   %ebp$/;"	l
c010d2fe	obj/kernel.asm	/^c010d2fe:	89 e5                	mov    %esp,%ebp$/;"	l
c010d300	obj/kernel.asm	/^c010d300:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d303	obj/kernel.asm	/^c010d303:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010d308	obj/kernel.asm	/^c010d308:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d30b	obj/kernel.asm	/^c010d30b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d30e	obj/kernel.asm	/^c010d30e:	e8 e4 6a ff ff       	call   c0103df7 <forkrets>$/;"	l
c010d313	obj/kernel.asm	/^c010d313:	c9                   	leave  $/;"	l
c010d314	obj/kernel.asm	/^c010d314:	c3                   	ret    $/;"	l
c010d315	obj/kernel.asm	/^c010d315 <hash_proc>:$/;"	l
c010d315	obj/kernel.asm	/^c010d315:	55                   	push   %ebp$/;"	l
c010d316	obj/kernel.asm	/^c010d316:	89 e5                	mov    %esp,%ebp$/;"	l
c010d318	obj/kernel.asm	/^c010d318:	53                   	push   %ebx$/;"	l
c010d319	obj/kernel.asm	/^c010d319:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010d31c	obj/kernel.asm	/^c010d31c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d31f	obj/kernel.asm	/^c010d31f:	8d 98 84 00 00 00    	lea    0x84(%eax),%ebx$/;"	l
c010d325	obj/kernel.asm	/^c010d325:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d328	obj/kernel.asm	/^c010d328:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d32b	obj/kernel.asm	/^c010d32b:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010d332	obj/kernel.asm	/^c010d332:	00 $/;"	l
c010d333	obj/kernel.asm	/^c010d333:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d336	obj/kernel.asm	/^c010d336:	e8 e5 9b 00 00       	call   c0116f20 <hash32>$/;"	l
c010d33b	obj/kernel.asm	/^c010d33b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010d33e	obj/kernel.asm	/^c010d33e:	05 80 7f 15 c0       	add    $0xc0157f80,%eax$/;"	l
c010d343	obj/kernel.asm	/^c010d343:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d346	obj/kernel.asm	/^c010d346:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c010d349	obj/kernel.asm	/^c010d349:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d34c	obj/kernel.asm	/^c010d34c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d34f	obj/kernel.asm	/^c010d34f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d352	obj/kernel.asm	/^c010d352:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d355	obj/kernel.asm	/^c010d355:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d358	obj/kernel.asm	/^c010d358:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d35b	obj/kernel.asm	/^c010d35b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d35e	obj/kernel.asm	/^c010d35e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010d361	obj/kernel.asm	/^c010d361:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010d364	obj/kernel.asm	/^c010d364:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010d367	obj/kernel.asm	/^c010d367:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d36a	obj/kernel.asm	/^c010d36a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d36d	obj/kernel.asm	/^c010d36d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010d370	obj/kernel.asm	/^c010d370:	89 10                	mov    %edx,(%eax)$/;"	l
c010d372	obj/kernel.asm	/^c010d372:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d375	obj/kernel.asm	/^c010d375:	8b 10                	mov    (%eax),%edx$/;"	l
c010d377	obj/kernel.asm	/^c010d377:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d37a	obj/kernel.asm	/^c010d37a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d37d	obj/kernel.asm	/^c010d37d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d380	obj/kernel.asm	/^c010d380:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010d383	obj/kernel.asm	/^c010d383:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d386	obj/kernel.asm	/^c010d386:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d389	obj/kernel.asm	/^c010d389:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010d38c	obj/kernel.asm	/^c010d38c:	89 10                	mov    %edx,(%eax)$/;"	l
c010d38e	obj/kernel.asm	/^c010d38e:	83 c4 34             	add    $0x34,%esp$/;"	l
c010d391	obj/kernel.asm	/^c010d391:	5b                   	pop    %ebx$/;"	l
c010d392	obj/kernel.asm	/^c010d392:	5d                   	pop    %ebp$/;"	l
c010d393	obj/kernel.asm	/^c010d393:	c3                   	ret    $/;"	l
c010d394	obj/kernel.asm	/^c010d394 <unhash_proc>:$/;"	l
c010d394	obj/kernel.asm	/^c010d394:	55                   	push   %ebp$/;"	l
c010d395	obj/kernel.asm	/^c010d395:	89 e5                	mov    %esp,%ebp$/;"	l
c010d397	obj/kernel.asm	/^c010d397:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010d39a	obj/kernel.asm	/^c010d39a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d39d	obj/kernel.asm	/^c010d39d:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
c010d3a2	obj/kernel.asm	/^c010d3a2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d3a5	obj/kernel.asm	/^c010d3a5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d3a8	obj/kernel.asm	/^c010d3a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d3ab	obj/kernel.asm	/^c010d3ab:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010d3ae	obj/kernel.asm	/^c010d3ae:	8b 12                	mov    (%edx),%edx$/;"	l
c010d3b0	obj/kernel.asm	/^c010d3b0:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010d3b3	obj/kernel.asm	/^c010d3b3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d3b6	obj/kernel.asm	/^c010d3b6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d3b9	obj/kernel.asm	/^c010d3b9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d3bc	obj/kernel.asm	/^c010d3bc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d3bf	obj/kernel.asm	/^c010d3bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d3c2	obj/kernel.asm	/^c010d3c2:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010d3c5	obj/kernel.asm	/^c010d3c5:	89 10                	mov    %edx,(%eax)$/;"	l
c010d3c7	obj/kernel.asm	/^c010d3c7:	c9                   	leave  $/;"	l
c010d3c8	obj/kernel.asm	/^c010d3c8:	c3                   	ret    $/;"	l
c010d3c9	obj/kernel.asm	/^c010d3c9 <find_proc>:$/;"	l
c010d3c9	obj/kernel.asm	/^c010d3c9:	55                   	push   %ebp$/;"	l
c010d3ca	obj/kernel.asm	/^c010d3ca:	89 e5                	mov    %esp,%ebp$/;"	l
c010d3cc	obj/kernel.asm	/^c010d3cc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d3cf	obj/kernel.asm	/^c010d3cf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d3d3	obj/kernel.asm	/^c010d3d3:	7e 61                	jle    c010d436 <find_proc+0x6d>$/;"	l
c010d3d5	obj/kernel.asm	/^c010d3d5:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010d3dc	obj/kernel.asm	/^c010d3dc:	7f 58                	jg     c010d436 <find_proc+0x6d>$/;"	l
c010d3de	obj/kernel.asm	/^c010d3de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d3e1	obj/kernel.asm	/^c010d3e1:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c010d3e8	obj/kernel.asm	/^c010d3e8:	00 $/;"	l
c010d3e9	obj/kernel.asm	/^c010d3e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d3ec	obj/kernel.asm	/^c010d3ec:	e8 2f 9b 00 00       	call   c0116f20 <hash32>$/;"	l
c010d3f1	obj/kernel.asm	/^c010d3f1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010d3f4	obj/kernel.asm	/^c010d3f4:	05 80 7f 15 c0       	add    $0xc0157f80,%eax$/;"	l
c010d3f9	obj/kernel.asm	/^c010d3f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d3fc	obj/kernel.asm	/^c010d3fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d3ff	obj/kernel.asm	/^c010d3ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d402	obj/kernel.asm	/^c010d402:	eb 1b                	jmp    c010d41f <find_proc+0x56>$/;"	l
c010d404	obj/kernel.asm	/^c010d404:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d407	obj/kernel.asm	/^c010d407:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
c010d40c	obj/kernel.asm	/^c010d40c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d40f	obj/kernel.asm	/^c010d40f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d412	obj/kernel.asm	/^c010d412:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d415	obj/kernel.asm	/^c010d415:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010d418	obj/kernel.asm	/^c010d418:	75 05                	jne    c010d41f <find_proc+0x56>$/;"	l
c010d41a	obj/kernel.asm	/^c010d41a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d41d	obj/kernel.asm	/^c010d41d:	eb 1c                	jmp    c010d43b <find_proc+0x72>$/;"	l
c010d41f	obj/kernel.asm	/^c010d41f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d422	obj/kernel.asm	/^c010d422:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d425	obj/kernel.asm	/^c010d425:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d428	obj/kernel.asm	/^c010d428:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d42b	obj/kernel.asm	/^c010d42b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d42e	obj/kernel.asm	/^c010d42e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d431	obj/kernel.asm	/^c010d431:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010d434	obj/kernel.asm	/^c010d434:	75 ce                	jne    c010d404 <find_proc+0x3b>$/;"	l
c010d436	obj/kernel.asm	/^c010d436:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d43b	obj/kernel.asm	/^c010d43b:	c9                   	leave  $/;"	l
c010d43c	obj/kernel.asm	/^c010d43c:	c3                   	ret    $/;"	l
c010d43d	obj/kernel.asm	/^c010d43d <kernel_thread>:$/;"	l
c010d43d	obj/kernel.asm	/^c010d43d:	55                   	push   %ebp$/;"	l
c010d43e	obj/kernel.asm	/^c010d43e:	89 e5                	mov    %esp,%ebp$/;"	l
c010d440	obj/kernel.asm	/^c010d440:	83 ec 68             	sub    $0x68,%esp$/;"	l
c010d443	obj/kernel.asm	/^c010d443:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010d44a	obj/kernel.asm	/^c010d44a:	00 $/;"	l
c010d44b	obj/kernel.asm	/^c010d44b:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d452	obj/kernel.asm	/^c010d452:	00 $/;"	l
c010d453	obj/kernel.asm	/^c010d453:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010d456	obj/kernel.asm	/^c010d456:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d459	obj/kernel.asm	/^c010d459:	e8 32 92 00 00       	call   c0116690 <memset>$/;"	l
c010d45e	obj/kernel.asm	/^c010d45e:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010d464	obj/kernel.asm	/^c010d464:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c010d46a	obj/kernel.asm	/^c010d46a:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010d46e	obj/kernel.asm	/^c010d46e:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010d472	obj/kernel.asm	/^c010d472:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c010d476	obj/kernel.asm	/^c010d476:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c010d47a	obj/kernel.asm	/^c010d47a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d47d	obj/kernel.asm	/^c010d47d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010d480	obj/kernel.asm	/^c010d480:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d483	obj/kernel.asm	/^c010d483:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010d486	obj/kernel.asm	/^c010d486:	b8 88 cb 10 c0       	mov    $0xc010cb88,%eax$/;"	l
c010d48b	obj/kernel.asm	/^c010d48b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d48e	obj/kernel.asm	/^c010d48e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d491	obj/kernel.asm	/^c010d491:	80 cc 01             	or     $0x1,%ah$/;"	l
c010d494	obj/kernel.asm	/^c010d494:	89 c2                	mov    %eax,%edx$/;"	l
c010d496	obj/kernel.asm	/^c010d496:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010d499	obj/kernel.asm	/^c010d499:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d49d	obj/kernel.asm	/^c010d49d:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010d4a4	obj/kernel.asm	/^c010d4a4:	00 $/;"	l
c010d4a5	obj/kernel.asm	/^c010d4a5:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010d4a8	obj/kernel.asm	/^c010d4a8:	e8 0e 04 00 00       	call   c010d8bb <do_fork>$/;"	l
c010d4ad	obj/kernel.asm	/^c010d4ad:	c9                   	leave  $/;"	l
c010d4ae	obj/kernel.asm	/^c010d4ae:	c3                   	ret    $/;"	l
c010d4af	obj/kernel.asm	/^c010d4af <setup_kstack>:$/;"	l
c010d4af	obj/kernel.asm	/^c010d4af:	55                   	push   %ebp$/;"	l
c010d4b0	obj/kernel.asm	/^c010d4b0:	89 e5                	mov    %esp,%ebp$/;"	l
c010d4b2	obj/kernel.asm	/^c010d4b2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d4b5	obj/kernel.asm	/^c010d4b5:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c010d4bc	obj/kernel.asm	/^c010d4bc:	e8 ce 71 ff ff       	call   c010468f <alloc_pages>$/;"	l
c010d4c1	obj/kernel.asm	/^c010d4c1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d4c4	obj/kernel.asm	/^c010d4c4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d4c8	obj/kernel.asm	/^c010d4c8:	74 1a                	je     c010d4e4 <setup_kstack+0x35>$/;"	l
c010d4ca	obj/kernel.asm	/^c010d4ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d4cd	obj/kernel.asm	/^c010d4cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d4d0	obj/kernel.asm	/^c010d4d0:	e8 e8 f7 ff ff       	call   c010ccbd <page2kva>$/;"	l
c010d4d5	obj/kernel.asm	/^c010d4d5:	89 c2                	mov    %eax,%edx$/;"	l
c010d4d7	obj/kernel.asm	/^c010d4d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d4da	obj/kernel.asm	/^c010d4da:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010d4dd	obj/kernel.asm	/^c010d4dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d4e2	obj/kernel.asm	/^c010d4e2:	eb 05                	jmp    c010d4e9 <setup_kstack+0x3a>$/;"	l
c010d4e4	obj/kernel.asm	/^c010d4e4:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010d4e9	obj/kernel.asm	/^c010d4e9:	c9                   	leave  $/;"	l
c010d4ea	obj/kernel.asm	/^c010d4ea:	c3                   	ret    $/;"	l
c010d4eb	obj/kernel.asm	/^c010d4eb <put_kstack>:$/;"	l
c010d4eb	obj/kernel.asm	/^c010d4eb:	55                   	push   %ebp$/;"	l
c010d4ec	obj/kernel.asm	/^c010d4ec:	89 e5                	mov    %esp,%ebp$/;"	l
c010d4ee	obj/kernel.asm	/^c010d4ee:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d4f1	obj/kernel.asm	/^c010d4f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d4f4	obj/kernel.asm	/^c010d4f4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d4f7	obj/kernel.asm	/^c010d4f7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d4fa	obj/kernel.asm	/^c010d4fa:	e8 12 f8 ff ff       	call   c010cd11 <kva2page>$/;"	l
c010d4ff	obj/kernel.asm	/^c010d4ff:	c7 44 24 04 02 00 00 	movl   $0x2,0x4(%esp)$/;"	l
c010d506	obj/kernel.asm	/^c010d506:	00 $/;"	l
c010d507	obj/kernel.asm	/^c010d507:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d50a	obj/kernel.asm	/^c010d50a:	e8 eb 71 ff ff       	call   c01046fa <free_pages>$/;"	l
c010d50f	obj/kernel.asm	/^c010d50f:	c9                   	leave  $/;"	l
c010d510	obj/kernel.asm	/^c010d510:	c3                   	ret    $/;"	l
c010d511	obj/kernel.asm	/^c010d511 <setup_pgdir>:$/;"	l
c010d511	obj/kernel.asm	/^c010d511:	55                   	push   %ebp$/;"	l
c010d512	obj/kernel.asm	/^c010d512:	89 e5                	mov    %esp,%ebp$/;"	l
c010d514	obj/kernel.asm	/^c010d514:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d517	obj/kernel.asm	/^c010d517:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010d51e	obj/kernel.asm	/^c010d51e:	e8 6c 71 ff ff       	call   c010468f <alloc_pages>$/;"	l
c010d523	obj/kernel.asm	/^c010d523:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d526	obj/kernel.asm	/^c010d526:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d52a	obj/kernel.asm	/^c010d52a:	75 0a                	jne    c010d536 <setup_pgdir+0x25>$/;"	l
c010d52c	obj/kernel.asm	/^c010d52c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010d531	obj/kernel.asm	/^c010d531:	e9 80 00 00 00       	jmp    c010d5b6 <setup_pgdir+0xa5>$/;"	l
c010d536	obj/kernel.asm	/^c010d536:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d539	obj/kernel.asm	/^c010d539:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d53c	obj/kernel.asm	/^c010d53c:	e8 7c f7 ff ff       	call   c010ccbd <page2kva>$/;"	l
c010d541	obj/kernel.asm	/^c010d541:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d544	obj/kernel.asm	/^c010d544:	a1 c4 7e 15 c0       	mov    0xc0157ec4,%eax$/;"	l
c010d549	obj/kernel.asm	/^c010d549:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c010d550	obj/kernel.asm	/^c010d550:	00 $/;"	l
c010d551	obj/kernel.asm	/^c010d551:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d555	obj/kernel.asm	/^c010d555:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d558	obj/kernel.asm	/^c010d558:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d55b	obj/kernel.asm	/^c010d55b:	e8 12 92 00 00       	call   c0116772 <memcpy>$/;"	l
c010d560	obj/kernel.asm	/^c010d560:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d563	obj/kernel.asm	/^c010d563:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c010d569	obj/kernel.asm	/^c010d569:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d56c	obj/kernel.asm	/^c010d56c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d56f	obj/kernel.asm	/^c010d56f:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c010d576	obj/kernel.asm	/^c010d576:	77 23                	ja     c010d59b <setup_pgdir+0x8a>$/;"	l
c010d578	obj/kernel.asm	/^c010d578:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d57b	obj/kernel.asm	/^c010d57b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d57f	obj/kernel.asm	/^c010d57f:	c7 44 24 08 98 9a 11 	movl   $0xc0119a98,0x8(%esp)$/;"	l
c010d586	obj/kernel.asm	/^c010d586:	c0 $/;"	l
c010d587	obj/kernel.asm	/^c010d587:	c7 44 24 04 39 01 00 	movl   $0x139,0x4(%esp)$/;"	l
c010d58e	obj/kernel.asm	/^c010d58e:	00 $/;"	l
c010d58f	obj/kernel.asm	/^c010d58f:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010d596	obj/kernel.asm	/^c010d596:	e8 9c 36 ff ff       	call   c0100c37 <__panic>$/;"	l
c010d59b	obj/kernel.asm	/^c010d59b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d59e	obj/kernel.asm	/^c010d59e:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010d5a3	obj/kernel.asm	/^c010d5a3:	83 c8 03             	or     $0x3,%eax$/;"	l
c010d5a6	obj/kernel.asm	/^c010d5a6:	89 02                	mov    %eax,(%edx)$/;"	l
c010d5a8	obj/kernel.asm	/^c010d5a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d5ab	obj/kernel.asm	/^c010d5ab:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010d5ae	obj/kernel.asm	/^c010d5ae:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010d5b1	obj/kernel.asm	/^c010d5b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d5b6	obj/kernel.asm	/^c010d5b6:	c9                   	leave  $/;"	l
c010d5b7	obj/kernel.asm	/^c010d5b7:	c3                   	ret    $/;"	l
c010d5b8	obj/kernel.asm	/^c010d5b8 <put_pgdir>:$/;"	l
c010d5b8	obj/kernel.asm	/^c010d5b8:	55                   	push   %ebp$/;"	l
c010d5b9	obj/kernel.asm	/^c010d5b9:	89 e5                	mov    %esp,%ebp$/;"	l
c010d5bb	obj/kernel.asm	/^c010d5bb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d5be	obj/kernel.asm	/^c010d5be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d5c1	obj/kernel.asm	/^c010d5c1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d5c4	obj/kernel.asm	/^c010d5c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5c7	obj/kernel.asm	/^c010d5c7:	e8 45 f7 ff ff       	call   c010cd11 <kva2page>$/;"	l
c010d5cc	obj/kernel.asm	/^c010d5cc:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010d5d3	obj/kernel.asm	/^c010d5d3:	00 $/;"	l
c010d5d4	obj/kernel.asm	/^c010d5d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d5d7	obj/kernel.asm	/^c010d5d7:	e8 1e 71 ff ff       	call   c01046fa <free_pages>$/;"	l
c010d5dc	obj/kernel.asm	/^c010d5dc:	c9                   	leave  $/;"	l
c010d5dd	obj/kernel.asm	/^c010d5dd:	c3                   	ret    $/;"	l
c010d5de	obj/kernel.asm	/^c010d5de <copy_mm>:$/;"	l
c010d5de	obj/kernel.asm	/^c010d5de:	55                   	push   %ebp$/;"	l
c010d5df	obj/kernel.asm	/^c010d5df:	89 e5                	mov    %esp,%ebp$/;"	l
c010d5e1	obj/kernel.asm	/^c010d5e1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d5e4	obj/kernel.asm	/^c010d5e4:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010d5e9	obj/kernel.asm	/^c010d5e9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010d5ec	obj/kernel.asm	/^c010d5ec:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d5ef	obj/kernel.asm	/^c010d5ef:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010d5f3	obj/kernel.asm	/^c010d5f3:	75 0a                	jne    c010d5ff <copy_mm+0x21>$/;"	l
c010d5f5	obj/kernel.asm	/^c010d5f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d5fa	obj/kernel.asm	/^c010d5fa:	e9 f9 00 00 00       	jmp    c010d6f8 <copy_mm+0x11a>$/;"	l
c010d5ff	obj/kernel.asm	/^c010d5ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d602	obj/kernel.asm	/^c010d602:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c010d607	obj/kernel.asm	/^c010d607:	85 c0                	test   %eax,%eax$/;"	l
c010d609	obj/kernel.asm	/^c010d609:	74 08                	je     c010d613 <copy_mm+0x35>$/;"	l
c010d60b	obj/kernel.asm	/^c010d60b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d60e	obj/kernel.asm	/^c010d60e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d611	obj/kernel.asm	/^c010d611:	eb 78                	jmp    c010d68b <copy_mm+0xad>$/;"	l
c010d613	obj/kernel.asm	/^c010d613:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010d61a	obj/kernel.asm	/^c010d61a:	e8 9d 92 ff ff       	call   c01068bc <mm_create>$/;"	l
c010d61f	obj/kernel.asm	/^c010d61f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d622	obj/kernel.asm	/^c010d622:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d626	obj/kernel.asm	/^c010d626:	75 05                	jne    c010d62d <copy_mm+0x4f>$/;"	l
c010d628	obj/kernel.asm	/^c010d628:	e9 c8 00 00 00       	jmp    c010d6f5 <copy_mm+0x117>$/;"	l
c010d62d	obj/kernel.asm	/^c010d62d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d630	obj/kernel.asm	/^c010d630:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d633	obj/kernel.asm	/^c010d633:	e8 d9 fe ff ff       	call   c010d511 <setup_pgdir>$/;"	l
c010d638	obj/kernel.asm	/^c010d638:	85 c0                	test   %eax,%eax$/;"	l
c010d63a	obj/kernel.asm	/^c010d63a:	74 05                	je     c010d641 <copy_mm+0x63>$/;"	l
c010d63c	obj/kernel.asm	/^c010d63c:	e9 a9 00 00 00       	jmp    c010d6ea <copy_mm+0x10c>$/;"	l
c010d641	obj/kernel.asm	/^c010d641:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d644	obj/kernel.asm	/^c010d644:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d647	obj/kernel.asm	/^c010d647:	e8 43 f7 ff ff       	call   c010cd8f <lock_mm>$/;"	l
c010d64c	obj/kernel.asm	/^c010d64c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d64f	obj/kernel.asm	/^c010d64f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d653	obj/kernel.asm	/^c010d653:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d656	obj/kernel.asm	/^c010d656:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d659	obj/kernel.asm	/^c010d659:	e8 81 97 ff ff       	call   c0106ddf <dup_mmap>$/;"	l
c010d65e	obj/kernel.asm	/^c010d65e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d661	obj/kernel.asm	/^c010d661:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d664	obj/kernel.asm	/^c010d664:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d667	obj/kernel.asm	/^c010d667:	e8 56 f7 ff ff       	call   c010cdc2 <unlock_mm>$/;"	l
c010d66c	obj/kernel.asm	/^c010d66c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d670	obj/kernel.asm	/^c010d670:	74 19                	je     c010d68b <copy_mm+0xad>$/;"	l
c010d672	obj/kernel.asm	/^c010d672:	90                   	nop$/;"	l
c010d673	obj/kernel.asm	/^c010d673:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d676	obj/kernel.asm	/^c010d676:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d679	obj/kernel.asm	/^c010d679:	e8 62 98 ff ff       	call   c0106ee0 <exit_mmap>$/;"	l
c010d67e	obj/kernel.asm	/^c010d67e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d681	obj/kernel.asm	/^c010d681:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d684	obj/kernel.asm	/^c010d684:	e8 2f ff ff ff       	call   c010d5b8 <put_pgdir>$/;"	l
c010d689	obj/kernel.asm	/^c010d689:	eb 5f                	jmp    c010d6ea <copy_mm+0x10c>$/;"	l
c010d68b	obj/kernel.asm	/^c010d68b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d68e	obj/kernel.asm	/^c010d68e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d691	obj/kernel.asm	/^c010d691:	e8 c5 f6 ff ff       	call   c010cd5b <mm_count_inc>$/;"	l
c010d696	obj/kernel.asm	/^c010d696:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d699	obj/kernel.asm	/^c010d699:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d69c	obj/kernel.asm	/^c010d69c:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010d69f	obj/kernel.asm	/^c010d69f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6a2	obj/kernel.asm	/^c010d6a2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d6a5	obj/kernel.asm	/^c010d6a5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d6a8	obj/kernel.asm	/^c010d6a8:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c010d6af	obj/kernel.asm	/^c010d6af:	77 23                	ja     c010d6d4 <copy_mm+0xf6>$/;"	l
c010d6b1	obj/kernel.asm	/^c010d6b1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d6b4	obj/kernel.asm	/^c010d6b4:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010d6b8	obj/kernel.asm	/^c010d6b8:	c7 44 24 08 98 9a 11 	movl   $0xc0119a98,0x8(%esp)$/;"	l
c010d6bf	obj/kernel.asm	/^c010d6bf:	c0 $/;"	l
c010d6c0	obj/kernel.asm	/^c010d6c0:	c7 44 24 04 68 01 00 	movl   $0x168,0x4(%esp)$/;"	l
c010d6c7	obj/kernel.asm	/^c010d6c7:	00 $/;"	l
c010d6c8	obj/kernel.asm	/^c010d6c8:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010d6cf	obj/kernel.asm	/^c010d6cf:	e8 63 35 ff ff       	call   c0100c37 <__panic>$/;"	l
c010d6d4	obj/kernel.asm	/^c010d6d4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d6d7	obj/kernel.asm	/^c010d6d7:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c010d6dd	obj/kernel.asm	/^c010d6dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d6e0	obj/kernel.asm	/^c010d6e0:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010d6e3	obj/kernel.asm	/^c010d6e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d6e8	obj/kernel.asm	/^c010d6e8:	eb 0e                	jmp    c010d6f8 <copy_mm+0x11a>$/;"	l
c010d6ea	obj/kernel.asm	/^c010d6ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6ed	obj/kernel.asm	/^c010d6ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d6f0	obj/kernel.asm	/^c010d6f0:	e8 2c 95 ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c010d6f5	obj/kernel.asm	/^c010d6f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d6f8	obj/kernel.asm	/^c010d6f8:	c9                   	leave  $/;"	l
c010d6f9	obj/kernel.asm	/^c010d6f9:	c3                   	ret    $/;"	l
c010d6fa	obj/kernel.asm	/^c010d6fa <copy_thread>:$/;"	l
c010d6fa	obj/kernel.asm	/^c010d6fa:	55                   	push   %ebp$/;"	l
c010d6fb	obj/kernel.asm	/^c010d6fb:	89 e5                	mov    %esp,%ebp$/;"	l
c010d6fd	obj/kernel.asm	/^c010d6fd:	57                   	push   %edi$/;"	l
c010d6fe	obj/kernel.asm	/^c010d6fe:	56                   	push   %esi$/;"	l
c010d6ff	obj/kernel.asm	/^c010d6ff:	53                   	push   %ebx$/;"	l
c010d700	obj/kernel.asm	/^c010d700:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d703	obj/kernel.asm	/^c010d703:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d706	obj/kernel.asm	/^c010d706:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c010d70b	obj/kernel.asm	/^c010d70b:	89 c2                	mov    %eax,%edx$/;"	l
c010d70d	obj/kernel.asm	/^c010d70d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d710	obj/kernel.asm	/^c010d710:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010d713	obj/kernel.asm	/^c010d713:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d716	obj/kernel.asm	/^c010d716:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d719	obj/kernel.asm	/^c010d719:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010d71c	obj/kernel.asm	/^c010d71c:	bb 4c 00 00 00       	mov    $0x4c,%ebx$/;"	l
c010d721	obj/kernel.asm	/^c010d721:	89 c1                	mov    %eax,%ecx$/;"	l
c010d723	obj/kernel.asm	/^c010d723:	83 e1 01             	and    $0x1,%ecx$/;"	l
c010d726	obj/kernel.asm	/^c010d726:	85 c9                	test   %ecx,%ecx$/;"	l
c010d728	obj/kernel.asm	/^c010d728:	74 0e                	je     c010d738 <copy_thread+0x3e>$/;"	l
c010d72a	obj/kernel.asm	/^c010d72a:	0f b6 0a             	movzbl (%edx),%ecx$/;"	l
c010d72d	obj/kernel.asm	/^c010d72d:	88 08                	mov    %cl,(%eax)$/;"	l
c010d72f	obj/kernel.asm	/^c010d72f:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d732	obj/kernel.asm	/^c010d732:	83 c2 01             	add    $0x1,%edx$/;"	l
c010d735	obj/kernel.asm	/^c010d735:	83 eb 01             	sub    $0x1,%ebx$/;"	l
c010d738	obj/kernel.asm	/^c010d738:	89 c1                	mov    %eax,%ecx$/;"	l
c010d73a	obj/kernel.asm	/^c010d73a:	83 e1 02             	and    $0x2,%ecx$/;"	l
c010d73d	obj/kernel.asm	/^c010d73d:	85 c9                	test   %ecx,%ecx$/;"	l
c010d73f	obj/kernel.asm	/^c010d73f:	74 0f                	je     c010d750 <copy_thread+0x56>$/;"	l
c010d741	obj/kernel.asm	/^c010d741:	0f b7 0a             	movzwl (%edx),%ecx$/;"	l
c010d744	obj/kernel.asm	/^c010d744:	66 89 08             	mov    %cx,(%eax)$/;"	l
c010d747	obj/kernel.asm	/^c010d747:	83 c0 02             	add    $0x2,%eax$/;"	l
c010d74a	obj/kernel.asm	/^c010d74a:	83 c2 02             	add    $0x2,%edx$/;"	l
c010d74d	obj/kernel.asm	/^c010d74d:	83 eb 02             	sub    $0x2,%ebx$/;"	l
c010d750	obj/kernel.asm	/^c010d750:	89 d9                	mov    %ebx,%ecx$/;"	l
c010d752	obj/kernel.asm	/^c010d752:	c1 e9 02             	shr    $0x2,%ecx$/;"	l
c010d755	obj/kernel.asm	/^c010d755:	89 c7                	mov    %eax,%edi$/;"	l
c010d757	obj/kernel.asm	/^c010d757:	89 d6                	mov    %edx,%esi$/;"	l
c010d759	obj/kernel.asm	/^c010d759:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010d75b	obj/kernel.asm	/^c010d75b:	89 f2                	mov    %esi,%edx$/;"	l
c010d75d	obj/kernel.asm	/^c010d75d:	89 f8                	mov    %edi,%eax$/;"	l
c010d75f	obj/kernel.asm	/^c010d75f:	b9 00 00 00 00       	mov    $0x0,%ecx$/;"	l
c010d764	obj/kernel.asm	/^c010d764:	89 de                	mov    %ebx,%esi$/;"	l
c010d766	obj/kernel.asm	/^c010d766:	83 e6 02             	and    $0x2,%esi$/;"	l
c010d769	obj/kernel.asm	/^c010d769:	85 f6                	test   %esi,%esi$/;"	l
c010d76b	obj/kernel.asm	/^c010d76b:	74 0b                	je     c010d778 <copy_thread+0x7e>$/;"	l
c010d76d	obj/kernel.asm	/^c010d76d:	0f b7 34 0a          	movzwl (%edx,%ecx,1),%esi$/;"	l
c010d771	obj/kernel.asm	/^c010d771:	66 89 34 08          	mov    %si,(%eax,%ecx,1)$/;"	l
c010d775	obj/kernel.asm	/^c010d775:	83 c1 02             	add    $0x2,%ecx$/;"	l
c010d778	obj/kernel.asm	/^c010d778:	83 e3 01             	and    $0x1,%ebx$/;"	l
c010d77b	obj/kernel.asm	/^c010d77b:	85 db                	test   %ebx,%ebx$/;"	l
c010d77d	obj/kernel.asm	/^c010d77d:	74 07                	je     c010d786 <copy_thread+0x8c>$/;"	l
c010d77f	obj/kernel.asm	/^c010d77f:	0f b6 14 0a          	movzbl (%edx,%ecx,1),%edx$/;"	l
c010d783	obj/kernel.asm	/^c010d783:	88 14 08             	mov    %dl,(%eax,%ecx,1)$/;"	l
c010d786	obj/kernel.asm	/^c010d786:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d789	obj/kernel.asm	/^c010d789:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d78c	obj/kernel.asm	/^c010d78c:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010d793	obj/kernel.asm	/^c010d793:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d796	obj/kernel.asm	/^c010d796:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d799	obj/kernel.asm	/^c010d799:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010d79c	obj/kernel.asm	/^c010d79c:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010d79f	obj/kernel.asm	/^c010d79f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7a2	obj/kernel.asm	/^c010d7a2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d7a5	obj/kernel.asm	/^c010d7a5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d7a8	obj/kernel.asm	/^c010d7a8:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010d7ab	obj/kernel.asm	/^c010d7ab:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010d7ae	obj/kernel.asm	/^c010d7ae:	80 ce 02             	or     $0x2,%dh$/;"	l
c010d7b1	obj/kernel.asm	/^c010d7b1:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010d7b4	obj/kernel.asm	/^c010d7b4:	ba fd d2 10 c0       	mov    $0xc010d2fd,%edx$/;"	l
c010d7b9	obj/kernel.asm	/^c010d7b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7bc	obj/kernel.asm	/^c010d7bc:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010d7bf	obj/kernel.asm	/^c010d7bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7c2	obj/kernel.asm	/^c010d7c2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d7c5	obj/kernel.asm	/^c010d7c5:	89 c2                	mov    %eax,%edx$/;"	l
c010d7c7	obj/kernel.asm	/^c010d7c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7ca	obj/kernel.asm	/^c010d7ca:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010d7cd	obj/kernel.asm	/^c010d7cd:	5b                   	pop    %ebx$/;"	l
c010d7ce	obj/kernel.asm	/^c010d7ce:	5e                   	pop    %esi$/;"	l
c010d7cf	obj/kernel.asm	/^c010d7cf:	5f                   	pop    %edi$/;"	l
c010d7d0	obj/kernel.asm	/^c010d7d0:	5d                   	pop    %ebp$/;"	l
c010d7d1	obj/kernel.asm	/^c010d7d1:	c3                   	ret    $/;"	l
c010d7d2	obj/kernel.asm	/^c010d7d2 <copy_fs>:$/;"	l
c010d7d2	obj/kernel.asm	/^c010d7d2:	55                   	push   %ebp$/;"	l
c010d7d3	obj/kernel.asm	/^c010d7d3:	89 e5                	mov    %esp,%ebp$/;"	l
c010d7d5	obj/kernel.asm	/^c010d7d5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d7d8	obj/kernel.asm	/^c010d7d8:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010d7dd	obj/kernel.asm	/^c010d7dd:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010d7e3	obj/kernel.asm	/^c010d7e3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d7e6	obj/kernel.asm	/^c010d7e6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010d7ea	obj/kernel.asm	/^c010d7ea:	75 24                	jne    c010d810 <copy_fs+0x3e>$/;"	l
c010d7ec	obj/kernel.asm	/^c010d7ec:	c7 44 24 0c d0 9a 11 	movl   $0xc0119ad0,0xc(%esp)$/;"	l
c010d7f3	obj/kernel.asm	/^c010d7f3:	c0 $/;"	l
c010d7f4	obj/kernel.asm	/^c010d7f4:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010d7fb	obj/kernel.asm	/^c010d7fb:	c0 $/;"	l
c010d7fc	obj/kernel.asm	/^c010d7fc:	c7 44 24 04 85 01 00 	movl   $0x185,0x4(%esp)$/;"	l
c010d803	obj/kernel.asm	/^c010d803:	00 $/;"	l
c010d804	obj/kernel.asm	/^c010d804:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010d80b	obj/kernel.asm	/^c010d80b:	e8 27 34 ff ff       	call   c0100c37 <__panic>$/;"	l
c010d810	obj/kernel.asm	/^c010d810:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d813	obj/kernel.asm	/^c010d813:	25 00 08 00 00       	and    $0x800,%eax$/;"	l
c010d818	obj/kernel.asm	/^c010d818:	85 c0                	test   %eax,%eax$/;"	l
c010d81a	obj/kernel.asm	/^c010d81a:	74 08                	je     c010d824 <copy_fs+0x52>$/;"	l
c010d81c	obj/kernel.asm	/^c010d81c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d81f	obj/kernel.asm	/^c010d81f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d822	obj/kernel.asm	/^c010d822:	eb 40                	jmp    c010d864 <copy_fs+0x92>$/;"	l
c010d824	obj/kernel.asm	/^c010d824:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010d82b	obj/kernel.asm	/^c010d82b:	e8 ba f0 ff ff       	call   c010c8ea <files_create>$/;"	l
c010d830	obj/kernel.asm	/^c010d830:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d833	obj/kernel.asm	/^c010d833:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d837	obj/kernel.asm	/^c010d837:	75 02                	jne    c010d83b <copy_fs+0x69>$/;"	l
c010d839	obj/kernel.asm	/^c010d839:	eb 47                	jmp    c010d882 <copy_fs+0xb0>$/;"	l
c010d83b	obj/kernel.asm	/^c010d83b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d83e	obj/kernel.asm	/^c010d83e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d842	obj/kernel.asm	/^c010d842:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d845	obj/kernel.asm	/^c010d845:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d848	obj/kernel.asm	/^c010d848:	e8 46 f2 ff ff       	call   c010ca93 <dup_fs>$/;"	l
c010d84d	obj/kernel.asm	/^c010d84d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d850	obj/kernel.asm	/^c010d850:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d854	obj/kernel.asm	/^c010d854:	74 0e                	je     c010d864 <copy_fs+0x92>$/;"	l
c010d856	obj/kernel.asm	/^c010d856:	90                   	nop$/;"	l
c010d857	obj/kernel.asm	/^c010d857:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d85a	obj/kernel.asm	/^c010d85a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d85d	obj/kernel.asm	/^c010d85d:	e8 eb f0 ff ff       	call   c010c94d <files_destroy>$/;"	l
c010d862	obj/kernel.asm	/^c010d862:	eb 1e                	jmp    c010d882 <copy_fs+0xb0>$/;"	l
c010d864	obj/kernel.asm	/^c010d864:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d867	obj/kernel.asm	/^c010d867:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d86a	obj/kernel.asm	/^c010d86a:	e8 79 f5 ff ff       	call   c010cde8 <files_count_inc>$/;"	l
c010d86f	obj/kernel.asm	/^c010d86f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d872	obj/kernel.asm	/^c010d872:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d875	obj/kernel.asm	/^c010d875:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)$/;"	l
c010d87b	obj/kernel.asm	/^c010d87b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d880	obj/kernel.asm	/^c010d880:	eb 03                	jmp    c010d885 <copy_fs+0xb3>$/;"	l
c010d882	obj/kernel.asm	/^c010d882:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d885	obj/kernel.asm	/^c010d885:	c9                   	leave  $/;"	l
c010d886	obj/kernel.asm	/^c010d886:	c3                   	ret    $/;"	l
c010d887	obj/kernel.asm	/^c010d887 <put_fs>:$/;"	l
c010d887	obj/kernel.asm	/^c010d887:	55                   	push   %ebp$/;"	l
c010d888	obj/kernel.asm	/^c010d888:	89 e5                	mov    %esp,%ebp$/;"	l
c010d88a	obj/kernel.asm	/^c010d88a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d88d	obj/kernel.asm	/^c010d88d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d890	obj/kernel.asm	/^c010d890:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010d896	obj/kernel.asm	/^c010d896:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d899	obj/kernel.asm	/^c010d899:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d89d	obj/kernel.asm	/^c010d89d:	74 1a                	je     c010d8b9 <put_fs+0x32>$/;"	l
c010d89f	obj/kernel.asm	/^c010d89f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d8a2	obj/kernel.asm	/^c010d8a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d8a5	obj/kernel.asm	/^c010d8a5:	e8 58 f5 ff ff       	call   c010ce02 <files_count_dec>$/;"	l
c010d8aa	obj/kernel.asm	/^c010d8aa:	85 c0                	test   %eax,%eax$/;"	l
c010d8ac	obj/kernel.asm	/^c010d8ac:	75 0b                	jne    c010d8b9 <put_fs+0x32>$/;"	l
c010d8ae	obj/kernel.asm	/^c010d8ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d8b1	obj/kernel.asm	/^c010d8b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d8b4	obj/kernel.asm	/^c010d8b4:	e8 94 f0 ff ff       	call   c010c94d <files_destroy>$/;"	l
c010d8b9	obj/kernel.asm	/^c010d8b9:	c9                   	leave  $/;"	l
c010d8ba	obj/kernel.asm	/^c010d8ba:	c3                   	ret    $/;"	l
c010d8bb	obj/kernel.asm	/^c010d8bb <do_fork>:$/;"	l
c010d8bb	obj/kernel.asm	/^c010d8bb:	55                   	push   %ebp$/;"	l
c010d8bc	obj/kernel.asm	/^c010d8bc:	89 e5                	mov    %esp,%ebp$/;"	l
c010d8be	obj/kernel.asm	/^c010d8be:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d8c1	obj/kernel.asm	/^c010d8c1:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010d8c8	obj/kernel.asm	/^c010d8c8:	a1 80 9f 15 c0       	mov    0xc0159f80,%eax$/;"	l
c010d8cd	obj/kernel.asm	/^c010d8cd:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010d8d2	obj/kernel.asm	/^c010d8d2:	7e 05                	jle    c010d8d9 <do_fork+0x1e>$/;"	l
c010d8d4	obj/kernel.asm	/^c010d8d4:	e9 fe 00 00 00       	jmp    c010d9d7 <do_fork+0x11c>$/;"	l
c010d8d9	obj/kernel.asm	/^c010d8d9:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010d8e0	obj/kernel.asm	/^c010d8e0:	e8 37 f5 ff ff       	call   c010ce1c <alloc_proc>$/;"	l
c010d8e5	obj/kernel.asm	/^c010d8e5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d8e8	obj/kernel.asm	/^c010d8e8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d8ec	obj/kernel.asm	/^c010d8ec:	75 05                	jne    c010d8f3 <do_fork+0x38>$/;"	l
c010d8ee	obj/kernel.asm	/^c010d8ee:	e9 e4 00 00 00       	jmp    c010d9d7 <do_fork+0x11c>$/;"	l
c010d8f3	obj/kernel.asm	/^c010d8f3:	8b 15 68 7f 15 c0    	mov    0xc0157f68,%edx$/;"	l
c010d8f9	obj/kernel.asm	/^c010d8f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d8fc	obj/kernel.asm	/^c010d8fc:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010d8ff	obj/kernel.asm	/^c010d8ff:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010d904	obj/kernel.asm	/^c010d904:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010d90a	obj/kernel.asm	/^c010d90a:	85 c0                	test   %eax,%eax$/;"	l
c010d90c	obj/kernel.asm	/^c010d90c:	74 24                	je     c010d932 <do_fork+0x77>$/;"	l
c010d90e	obj/kernel.asm	/^c010d90e:	c7 44 24 0c f8 9a 11 	movl   $0xc0119af8,0xc(%esp)$/;"	l
c010d915	obj/kernel.asm	/^c010d915:	c0 $/;"	l
c010d916	obj/kernel.asm	/^c010d916:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010d91d	obj/kernel.asm	/^c010d91d:	c0 $/;"	l
c010d91e	obj/kernel.asm	/^c010d91e:	c7 44 24 04 de 01 00 	movl   $0x1de,0x4(%esp)$/;"	l
c010d925	obj/kernel.asm	/^c010d925:	00 $/;"	l
c010d926	obj/kernel.asm	/^c010d926:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010d92d	obj/kernel.asm	/^c010d92d:	e8 05 33 ff ff       	call   c0100c37 <__panic>$/;"	l
c010d932	obj/kernel.asm	/^c010d932:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d935	obj/kernel.asm	/^c010d935:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d938	obj/kernel.asm	/^c010d938:	e8 72 fb ff ff       	call   c010d4af <setup_kstack>$/;"	l
c010d93d	obj/kernel.asm	/^c010d93d:	85 c0                	test   %eax,%eax$/;"	l
c010d93f	obj/kernel.asm	/^c010d93f:	74 05                	je     c010d946 <do_fork+0x8b>$/;"	l
c010d941	obj/kernel.asm	/^c010d941:	e9 a1 00 00 00       	jmp    c010d9e7 <do_fork+0x12c>$/;"	l
c010d946	obj/kernel.asm	/^c010d946:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d949	obj/kernel.asm	/^c010d949:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d94d	obj/kernel.asm	/^c010d94d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d950	obj/kernel.asm	/^c010d950:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d953	obj/kernel.asm	/^c010d953:	e8 7a fe ff ff       	call   c010d7d2 <copy_fs>$/;"	l
c010d958	obj/kernel.asm	/^c010d958:	85 c0                	test   %eax,%eax$/;"	l
c010d95a	obj/kernel.asm	/^c010d95a:	74 02                	je     c010d95e <do_fork+0xa3>$/;"	l
c010d95c	obj/kernel.asm	/^c010d95c:	eb 7e                	jmp    c010d9dc <do_fork+0x121>$/;"	l
c010d95e	obj/kernel.asm	/^c010d95e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d961	obj/kernel.asm	/^c010d961:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d965	obj/kernel.asm	/^c010d965:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d968	obj/kernel.asm	/^c010d968:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d96b	obj/kernel.asm	/^c010d96b:	e8 6e fc ff ff       	call   c010d5de <copy_mm>$/;"	l
c010d970	obj/kernel.asm	/^c010d970:	85 c0                	test   %eax,%eax$/;"	l
c010d972	obj/kernel.asm	/^c010d972:	74 02                	je     c010d976 <do_fork+0xbb>$/;"	l
c010d974	obj/kernel.asm	/^c010d974:	eb 66                	jmp    c010d9dc <do_fork+0x121>$/;"	l
c010d976	obj/kernel.asm	/^c010d976:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d979	obj/kernel.asm	/^c010d979:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010d97d	obj/kernel.asm	/^c010d97d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d980	obj/kernel.asm	/^c010d980:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010d984	obj/kernel.asm	/^c010d984:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d987	obj/kernel.asm	/^c010d987:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d98a	obj/kernel.asm	/^c010d98a:	e8 6b fd ff ff       	call   c010d6fa <copy_thread>$/;"	l
c010d98f	obj/kernel.asm	/^c010d98f:	e8 6d f2 ff ff       	call   c010cc01 <__intr_save>$/;"	l
c010d994	obj/kernel.asm	/^c010d994:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d997	obj/kernel.asm	/^c010d997:	e8 f4 f7 ff ff       	call   c010d190 <get_pid>$/;"	l
c010d99c	obj/kernel.asm	/^c010d99c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010d99f	obj/kernel.asm	/^c010d99f:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c010d9a2	obj/kernel.asm	/^c010d9a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9a5	obj/kernel.asm	/^c010d9a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9a8	obj/kernel.asm	/^c010d9a8:	e8 68 f9 ff ff       	call   c010d315 <hash_proc>$/;"	l
c010d9ad	obj/kernel.asm	/^c010d9ad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9b0	obj/kernel.asm	/^c010d9b0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9b3	obj/kernel.asm	/^c010d9b3:	e8 7d f6 ff ff       	call   c010d035 <set_links>$/;"	l
c010d9b8	obj/kernel.asm	/^c010d9b8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d9bb	obj/kernel.asm	/^c010d9bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9be	obj/kernel.asm	/^c010d9be:	e8 68 f2 ff ff       	call   c010cc2b <__intr_restore>$/;"	l
c010d9c3	obj/kernel.asm	/^c010d9c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9c6	obj/kernel.asm	/^c010d9c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9c9	obj/kernel.asm	/^c010d9c9:	e8 29 17 00 00       	call   c010f0f7 <wakeup_proc>$/;"	l
c010d9ce	obj/kernel.asm	/^c010d9ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9d1	obj/kernel.asm	/^c010d9d1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d9d4	obj/kernel.asm	/^c010d9d4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d9d7	obj/kernel.asm	/^c010d9d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9da	obj/kernel.asm	/^c010d9da:	eb 18                	jmp    c010d9f4 <do_fork+0x139>$/;"	l
c010d9dc	obj/kernel.asm	/^c010d9dc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9df	obj/kernel.asm	/^c010d9df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9e2	obj/kernel.asm	/^c010d9e2:	e8 04 fb ff ff       	call   c010d4eb <put_kstack>$/;"	l
c010d9e7	obj/kernel.asm	/^c010d9e7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9ea	obj/kernel.asm	/^c010d9ea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010d9ed	obj/kernel.asm	/^c010d9ed:	e8 11 a8 ff ff       	call   c0108203 <kfree>$/;"	l
c010d9f2	obj/kernel.asm	/^c010d9f2:	eb e3                	jmp    c010d9d7 <do_fork+0x11c>$/;"	l
c010d9f4	obj/kernel.asm	/^c010d9f4:	c9                   	leave  $/;"	l
c010d9f5	obj/kernel.asm	/^c010d9f5:	c3                   	ret    $/;"	l
c010d9f6	obj/kernel.asm	/^c010d9f6 <do_exit>:$/;"	l
c010d9f6	obj/kernel.asm	/^c010d9f6:	55                   	push   %ebp$/;"	l
c010d9f7	obj/kernel.asm	/^c010d9f7:	89 e5                	mov    %esp,%ebp$/;"	l
c010d9f9	obj/kernel.asm	/^c010d9f9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d9fc	obj/kernel.asm	/^c010d9fc:	8b 15 68 7f 15 c0    	mov    0xc0157f68,%edx$/;"	l
c010da02	obj/kernel.asm	/^c010da02:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010da07	obj/kernel.asm	/^c010da07:	39 c2                	cmp    %eax,%edx$/;"	l
c010da09	obj/kernel.asm	/^c010da09:	75 1c                	jne    c010da27 <do_exit+0x31>$/;"	l
c010da0b	obj/kernel.asm	/^c010da0b:	c7 44 24 08 11 9b 11 	movl   $0xc0119b11,0x8(%esp)$/;"	l
c010da12	obj/kernel.asm	/^c010da12:	c0 $/;"	l
c010da13	obj/kernel.asm	/^c010da13:	c7 44 24 04 0b 02 00 	movl   $0x20b,0x4(%esp)$/;"	l
c010da1a	obj/kernel.asm	/^c010da1a:	00 $/;"	l
c010da1b	obj/kernel.asm	/^c010da1b:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010da22	obj/kernel.asm	/^c010da22:	e8 10 32 ff ff       	call   c0100c37 <__panic>$/;"	l
c010da27	obj/kernel.asm	/^c010da27:	8b 15 68 7f 15 c0    	mov    0xc0157f68,%edx$/;"	l
c010da2d	obj/kernel.asm	/^c010da2d:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010da32	obj/kernel.asm	/^c010da32:	39 c2                	cmp    %eax,%edx$/;"	l
c010da34	obj/kernel.asm	/^c010da34:	75 1c                	jne    c010da52 <do_exit+0x5c>$/;"	l
c010da36	obj/kernel.asm	/^c010da36:	c7 44 24 08 21 9b 11 	movl   $0xc0119b21,0x8(%esp)$/;"	l
c010da3d	obj/kernel.asm	/^c010da3d:	c0 $/;"	l
c010da3e	obj/kernel.asm	/^c010da3e:	c7 44 24 04 0e 02 00 	movl   $0x20e,0x4(%esp)$/;"	l
c010da45	obj/kernel.asm	/^c010da45:	00 $/;"	l
c010da46	obj/kernel.asm	/^c010da46:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010da4d	obj/kernel.asm	/^c010da4d:	e8 e5 31 ff ff       	call   c0100c37 <__panic>$/;"	l
c010da52	obj/kernel.asm	/^c010da52:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010da57	obj/kernel.asm	/^c010da57:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010da5a	obj/kernel.asm	/^c010da5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010da5d	obj/kernel.asm	/^c010da5d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010da61	obj/kernel.asm	/^c010da61:	74 4a                	je     c010daad <do_exit+0xb7>$/;"	l
c010da63	obj/kernel.asm	/^c010da63:	a1 74 b6 15 c0       	mov    0xc015b674,%eax$/;"	l
c010da68	obj/kernel.asm	/^c010da68:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010da6b	obj/kernel.asm	/^c010da6b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010da6e	obj/kernel.asm	/^c010da6e:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010da71	obj/kernel.asm	/^c010da71:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da74	obj/kernel.asm	/^c010da74:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da77	obj/kernel.asm	/^c010da77:	e8 f9 f2 ff ff       	call   c010cd75 <mm_count_dec>$/;"	l
c010da7c	obj/kernel.asm	/^c010da7c:	85 c0                	test   %eax,%eax$/;"	l
c010da7e	obj/kernel.asm	/^c010da7e:	75 21                	jne    c010daa1 <do_exit+0xab>$/;"	l
c010da80	obj/kernel.asm	/^c010da80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da83	obj/kernel.asm	/^c010da83:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da86	obj/kernel.asm	/^c010da86:	e8 55 94 ff ff       	call   c0106ee0 <exit_mmap>$/;"	l
c010da8b	obj/kernel.asm	/^c010da8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da8e	obj/kernel.asm	/^c010da8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da91	obj/kernel.asm	/^c010da91:	e8 22 fb ff ff       	call   c010d5b8 <put_pgdir>$/;"	l
c010da96	obj/kernel.asm	/^c010da96:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da99	obj/kernel.asm	/^c010da99:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010da9c	obj/kernel.asm	/^c010da9c:	e8 80 91 ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c010daa1	obj/kernel.asm	/^c010daa1:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010daa6	obj/kernel.asm	/^c010daa6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010daad	obj/kernel.asm	/^c010daad:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010dab2	obj/kernel.asm	/^c010dab2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dab5	obj/kernel.asm	/^c010dab5:	e8 cd fd ff ff       	call   c010d887 <put_fs>$/;"	l
c010daba	obj/kernel.asm	/^c010daba:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010dabf	obj/kernel.asm	/^c010dabf:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010dac5	obj/kernel.asm	/^c010dac5:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010daca	obj/kernel.asm	/^c010daca:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010dacd	obj/kernel.asm	/^c010dacd:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)$/;"	l
c010dad3	obj/kernel.asm	/^c010dad3:	e8 29 f1 ff ff       	call   c010cc01 <__intr_save>$/;"	l
c010dad8	obj/kernel.asm	/^c010dad8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dadb	obj/kernel.asm	/^c010dadb:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010dae0	obj/kernel.asm	/^c010dae0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010dae3	obj/kernel.asm	/^c010dae3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010dae6	obj/kernel.asm	/^c010dae6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dae9	obj/kernel.asm	/^c010dae9:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010daef	obj/kernel.asm	/^c010daef:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010daf4	obj/kernel.asm	/^c010daf4:	75 10                	jne    c010db06 <do_exit+0x110>$/;"	l
c010daf6	obj/kernel.asm	/^c010daf6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010daf9	obj/kernel.asm	/^c010daf9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dafc	obj/kernel.asm	/^c010dafc:	e8 f6 15 00 00       	call   c010f0f7 <wakeup_proc>$/;"	l
c010db01	obj/kernel.asm	/^c010db01:	e9 ac 00 00 00       	jmp    c010dbb2 <do_exit+0x1bc>$/;"	l
c010db06	obj/kernel.asm	/^c010db06:	e9 a7 00 00 00       	jmp    c010dbb2 <do_exit+0x1bc>$/;"	l
c010db0b	obj/kernel.asm	/^c010db0b:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010db10	obj/kernel.asm	/^c010db10:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010db16	obj/kernel.asm	/^c010db16:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010db19	obj/kernel.asm	/^c010db19:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010db1e	obj/kernel.asm	/^c010db1e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010db21	obj/kernel.asm	/^c010db21:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010db27	obj/kernel.asm	/^c010db27:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010db2d	obj/kernel.asm	/^c010db2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010db30	obj/kernel.asm	/^c010db30:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010db37	obj/kernel.asm	/^c010db37:	00 00 00 $/;"	l
c010db3a	obj/kernel.asm	/^c010db3a:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010db3f	obj/kernel.asm	/^c010db3f:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010db45	obj/kernel.asm	/^c010db45:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010db48	obj/kernel.asm	/^c010db48:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010db4e	obj/kernel.asm	/^c010db4e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010db51	obj/kernel.asm	/^c010db51:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010db57	obj/kernel.asm	/^c010db57:	85 c0                	test   %eax,%eax$/;"	l
c010db59	obj/kernel.asm	/^c010db59:	74 14                	je     c010db6f <do_exit+0x179>$/;"	l
c010db5b	obj/kernel.asm	/^c010db5b:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010db60	obj/kernel.asm	/^c010db60:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010db66	obj/kernel.asm	/^c010db66:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010db69	obj/kernel.asm	/^c010db69:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010db6f	obj/kernel.asm	/^c010db6f:	8b 15 64 7f 15 c0    	mov    0xc0157f64,%edx$/;"	l
c010db75	obj/kernel.asm	/^c010db75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010db78	obj/kernel.asm	/^c010db78:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010db7b	obj/kernel.asm	/^c010db7b:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010db80	obj/kernel.asm	/^c010db80:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010db83	obj/kernel.asm	/^c010db83:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010db89	obj/kernel.asm	/^c010db89:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010db8c	obj/kernel.asm	/^c010db8c:	8b 00                	mov    (%eax),%eax$/;"	l
c010db8e	obj/kernel.asm	/^c010db8e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010db91	obj/kernel.asm	/^c010db91:	75 1f                	jne    c010dbb2 <do_exit+0x1bc>$/;"	l
c010db93	obj/kernel.asm	/^c010db93:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010db98	obj/kernel.asm	/^c010db98:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010db9e	obj/kernel.asm	/^c010db9e:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010dba3	obj/kernel.asm	/^c010dba3:	75 0d                	jne    c010dbb2 <do_exit+0x1bc>$/;"	l
c010dba5	obj/kernel.asm	/^c010dba5:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010dbaa	obj/kernel.asm	/^c010dbaa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dbad	obj/kernel.asm	/^c010dbad:	e8 45 15 00 00       	call   c010f0f7 <wakeup_proc>$/;"	l
c010dbb2	obj/kernel.asm	/^c010dbb2:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010dbb7	obj/kernel.asm	/^c010dbb7:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010dbbd	obj/kernel.asm	/^c010dbbd:	85 c0                	test   %eax,%eax$/;"	l
c010dbbf	obj/kernel.asm	/^c010dbbf:	0f 85 46 ff ff ff    	jne    c010db0b <do_exit+0x115>$/;"	l
c010dbc5	obj/kernel.asm	/^c010dbc5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dbc8	obj/kernel.asm	/^c010dbc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dbcb	obj/kernel.asm	/^c010dbcb:	e8 5b f0 ff ff       	call   c010cc2b <__intr_restore>$/;"	l
c010dbd0	obj/kernel.asm	/^c010dbd0:	e8 be 15 00 00       	call   c010f193 <schedule>$/;"	l
c010dbd5	obj/kernel.asm	/^c010dbd5:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010dbda	obj/kernel.asm	/^c010dbda:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dbdd	obj/kernel.asm	/^c010dbdd:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010dbe1	obj/kernel.asm	/^c010dbe1:	c7 44 24 08 34 9b 11 	movl   $0xc0119b34,0x8(%esp)$/;"	l
c010dbe8	obj/kernel.asm	/^c010dbe8:	c0 $/;"	l
c010dbe9	obj/kernel.asm	/^c010dbe9:	c7 44 24 04 3b 02 00 	movl   $0x23b,0x4(%esp)$/;"	l
c010dbf0	obj/kernel.asm	/^c010dbf0:	00 $/;"	l
c010dbf1	obj/kernel.asm	/^c010dbf1:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010dbf8	obj/kernel.asm	/^c010dbf8:	e8 3a 30 ff ff       	call   c0100c37 <__panic>$/;"	l
c010dbfd	obj/kernel.asm	/^c010dbfd <load_icode_read>:$/;"	l
c010dbfd	obj/kernel.asm	/^c010dbfd:	55                   	push   %ebp$/;"	l
c010dbfe	obj/kernel.asm	/^c010dbfe:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc00	obj/kernel.asm	/^c010dc00:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010dc03	obj/kernel.asm	/^c010dc03:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010dc0a	obj/kernel.asm	/^c010dc0a:	00 $/;"	l
c010dc0b	obj/kernel.asm	/^c010dc0b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010dc0e	obj/kernel.asm	/^c010dc0e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dc12	obj/kernel.asm	/^c010dc12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dc15	obj/kernel.asm	/^c010dc15:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dc18	obj/kernel.asm	/^c010dc18:	e8 ac d8 ff ff       	call   c010b4c9 <sysfile_seek>$/;"	l
c010dc1d	obj/kernel.asm	/^c010dc1d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dc20	obj/kernel.asm	/^c010dc20:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010dc24	obj/kernel.asm	/^c010dc24:	74 05                	je     c010dc2b <load_icode_read+0x2e>$/;"	l
c010dc26	obj/kernel.asm	/^c010dc26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc29	obj/kernel.asm	/^c010dc29:	eb 38                	jmp    c010dc63 <load_icode_read+0x66>$/;"	l
c010dc2b	obj/kernel.asm	/^c010dc2b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010dc2e	obj/kernel.asm	/^c010dc2e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010dc32	obj/kernel.asm	/^c010dc32:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dc35	obj/kernel.asm	/^c010dc35:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dc39	obj/kernel.asm	/^c010dc39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dc3c	obj/kernel.asm	/^c010dc3c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dc3f	obj/kernel.asm	/^c010dc3f:	e8 93 d5 ff ff       	call   c010b1d7 <sysfile_read>$/;"	l
c010dc44	obj/kernel.asm	/^c010dc44:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dc47	obj/kernel.asm	/^c010dc47:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc4a	obj/kernel.asm	/^c010dc4a:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010dc4d	obj/kernel.asm	/^c010dc4d:	74 0f                	je     c010dc5e <load_icode_read+0x61>$/;"	l
c010dc4f	obj/kernel.asm	/^c010dc4f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010dc54	obj/kernel.asm	/^c010dc54:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010dc58	obj/kernel.asm	/^c010dc58:	0f 48 45 f4          	cmovs  -0xc(%ebp),%eax$/;"	l
c010dc5c	obj/kernel.asm	/^c010dc5c:	eb 05                	jmp    c010dc63 <load_icode_read+0x66>$/;"	l
c010dc5e	obj/kernel.asm	/^c010dc5e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010dc63	obj/kernel.asm	/^c010dc63:	c9                   	leave  $/;"	l
c010dc64	obj/kernel.asm	/^c010dc64:	c3                   	ret    $/;"	l
c010dc65	obj/kernel.asm	/^c010dc65 <load_icode>:$/;"	l
c010dc65	obj/kernel.asm	/^c010dc65:	55                   	push   %ebp$/;"	l
c010dc66	obj/kernel.asm	/^c010dc66:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc68	obj/kernel.asm	/^c010dc68:	53                   	push   %ebx$/;"	l
c010dc69	obj/kernel.asm	/^c010dc69:	81 ec e4 00 00 00    	sub    $0xe4,%esp$/;"	l
c010dc6f	obj/kernel.asm	/^c010dc6f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010dc73	obj/kernel.asm	/^c010dc73:	78 06                	js     c010dc7b <load_icode+0x16>$/;"	l
c010dc75	obj/kernel.asm	/^c010dc75:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010dc79	obj/kernel.asm	/^c010dc79:	7e 24                	jle    c010dc9f <load_icode+0x3a>$/;"	l
c010dc7b	obj/kernel.asm	/^c010dc7b:	c7 44 24 0c 54 9b 11 	movl   $0xc0119b54,0xc(%esp)$/;"	l
c010dc82	obj/kernel.asm	/^c010dc82:	c0 $/;"	l
c010dc83	obj/kernel.asm	/^c010dc83:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010dc8a	obj/kernel.asm	/^c010dc8a:	c0 $/;"	l
c010dc8b	obj/kernel.asm	/^c010dc8b:	c7 44 24 04 67 02 00 	movl   $0x267,0x4(%esp)$/;"	l
c010dc92	obj/kernel.asm	/^c010dc92:	00 $/;"	l
c010dc93	obj/kernel.asm	/^c010dc93:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010dc9a	obj/kernel.asm	/^c010dc9a:	e8 98 2f ff ff       	call   c0100c37 <__panic>$/;"	l
c010dc9f	obj/kernel.asm	/^c010dc9f:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010dca4	obj/kernel.asm	/^c010dca4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010dca7	obj/kernel.asm	/^c010dca7:	85 c0                	test   %eax,%eax$/;"	l
c010dca9	obj/kernel.asm	/^c010dca9:	74 1c                	je     c010dcc7 <load_icode+0x62>$/;"	l
c010dcab	obj/kernel.asm	/^c010dcab:	c7 44 24 08 7c 9b 11 	movl   $0xc0119b7c,0x8(%esp)$/;"	l
c010dcb2	obj/kernel.asm	/^c010dcb2:	c0 $/;"	l
c010dcb3	obj/kernel.asm	/^c010dcb3:	c7 44 24 04 6a 02 00 	movl   $0x26a,0x4(%esp)$/;"	l
c010dcba	obj/kernel.asm	/^c010dcba:	00 $/;"	l
c010dcbb	obj/kernel.asm	/^c010dcbb:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010dcc2	obj/kernel.asm	/^c010dcc2:	e8 70 2f ff ff       	call   c0100c37 <__panic>$/;"	l
c010dcc7	obj/kernel.asm	/^c010dcc7:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010dcce	obj/kernel.asm	/^c010dcce:	e8 e9 8b ff ff       	call   c01068bc <mm_create>$/;"	l
c010dcd3	obj/kernel.asm	/^c010dcd3:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010dcd6	obj/kernel.asm	/^c010dcd6:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010dcda	obj/kernel.asm	/^c010dcda:	75 06                	jne    c010dce2 <load_icode+0x7d>$/;"	l
c010dcdc	obj/kernel.asm	/^c010dcdc:	90                   	nop$/;"	l
c010dcdd	obj/kernel.asm	/^c010dcdd:	e9 85 07 00 00       	jmp    c010e467 <load_icode+0x802>$/;"	l
c010dce2	obj/kernel.asm	/^c010dce2:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010dce5	obj/kernel.asm	/^c010dce5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dce8	obj/kernel.asm	/^c010dce8:	e8 24 f8 ff ff       	call   c010d511 <setup_pgdir>$/;"	l
c010dced	obj/kernel.asm	/^c010dced:	85 c0                	test   %eax,%eax$/;"	l
c010dcef	obj/kernel.asm	/^c010dcef:	74 05                	je     c010dcf6 <load_icode+0x91>$/;"	l
c010dcf1	obj/kernel.asm	/^c010dcf1:	e9 8c 07 00 00       	jmp    c010e482 <load_icode+0x81d>$/;"	l
c010dcf6	obj/kernel.asm	/^c010dcf6:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax$/;"	l
c010dcfc	obj/kernel.asm	/^c010dcfc:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010dcff	obj/kernel.asm	/^c010dcff:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010dd06	obj/kernel.asm	/^c010dd06:	00 $/;"	l
c010dd07	obj/kernel.asm	/^c010dd07:	c7 44 24 08 34 00 00 	movl   $0x34,0x8(%esp)$/;"	l
c010dd0e	obj/kernel.asm	/^c010dd0e:	00 $/;"	l
c010dd0f	obj/kernel.asm	/^c010dd0f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010dd12	obj/kernel.asm	/^c010dd12:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dd16	obj/kernel.asm	/^c010dd16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd19	obj/kernel.asm	/^c010dd19:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dd1c	obj/kernel.asm	/^c010dd1c:	e8 dc fe ff ff       	call   c010dbfd <load_icode_read>$/;"	l
c010dd21	obj/kernel.asm	/^c010dd21:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dd24	obj/kernel.asm	/^c010dd24:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010dd28	obj/kernel.asm	/^c010dd28:	74 05                	je     c010dd2f <load_icode+0xca>$/;"	l
c010dd2a	obj/kernel.asm	/^c010dd2a:	e9 48 07 00 00       	jmp    c010e477 <load_icode+0x812>$/;"	l
c010dd2f	obj/kernel.asm	/^c010dd2f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010dd32	obj/kernel.asm	/^c010dd32:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd34	obj/kernel.asm	/^c010dd34:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c010dd39	obj/kernel.asm	/^c010dd39:	74 0c                	je     c010dd47 <load_icode+0xe2>$/;"	l
c010dd3b	obj/kernel.asm	/^c010dd3b:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010dd42	obj/kernel.asm	/^c010dd42:	e9 30 07 00 00       	jmp    c010e477 <load_icode+0x812>$/;"	l
c010dd47	obj/kernel.asm	/^c010dd47:	8d 85 44 ff ff ff    	lea    -0xbc(%ebp),%eax$/;"	l
c010dd4d	obj/kernel.asm	/^c010dd4d:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010dd50	obj/kernel.asm	/^c010dd50:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010dd57	obj/kernel.asm	/^c010dd57:	e9 76 03 00 00       	jmp    c010e0d2 <load_icode+0x46d>$/;"	l
c010dd5c	obj/kernel.asm	/^c010dd5c:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010dd5f	obj/kernel.asm	/^c010dd5f:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010dd62	obj/kernel.asm	/^c010dd62:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010dd65	obj/kernel.asm	/^c010dd65:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010dd68	obj/kernel.asm	/^c010dd68:	01 d0                	add    %edx,%eax$/;"	l
c010dd6a	obj/kernel.asm	/^c010dd6a:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010dd6d	obj/kernel.asm	/^c010dd6d:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010dd70	obj/kernel.asm	/^c010dd70:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010dd74	obj/kernel.asm	/^c010dd74:	c7 44 24 08 20 00 00 	movl   $0x20,0x8(%esp)$/;"	l
c010dd7b	obj/kernel.asm	/^c010dd7b:	00 $/;"	l
c010dd7c	obj/kernel.asm	/^c010dd7c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010dd7f	obj/kernel.asm	/^c010dd7f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010dd83	obj/kernel.asm	/^c010dd83:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd86	obj/kernel.asm	/^c010dd86:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dd89	obj/kernel.asm	/^c010dd89:	e8 6f fe ff ff       	call   c010dbfd <load_icode_read>$/;"	l
c010dd8e	obj/kernel.asm	/^c010dd8e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dd91	obj/kernel.asm	/^c010dd91:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010dd95	obj/kernel.asm	/^c010dd95:	74 05                	je     c010dd9c <load_icode+0x137>$/;"	l
c010dd97	obj/kernel.asm	/^c010dd97:	e9 d0 06 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010dd9c	obj/kernel.asm	/^c010dd9c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010dd9f	obj/kernel.asm	/^c010dd9f:	8b 00                	mov    (%eax),%eax$/;"	l
c010dda1	obj/kernel.asm	/^c010dda1:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010dda4	obj/kernel.asm	/^c010dda4:	74 05                	je     c010ddab <load_icode+0x146>$/;"	l
c010dda6	obj/kernel.asm	/^c010dda6:	e9 23 03 00 00       	jmp    c010e0ce <load_icode+0x469>$/;"	l
c010ddab	obj/kernel.asm	/^c010ddab:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ddae	obj/kernel.asm	/^c010ddae:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010ddb1	obj/kernel.asm	/^c010ddb1:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ddb4	obj/kernel.asm	/^c010ddb4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ddb7	obj/kernel.asm	/^c010ddb7:	39 c2                	cmp    %eax,%edx$/;"	l
c010ddb9	obj/kernel.asm	/^c010ddb9:	76 0c                	jbe    c010ddc7 <load_icode+0x162>$/;"	l
c010ddbb	obj/kernel.asm	/^c010ddbb:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010ddc2	obj/kernel.asm	/^c010ddc2:	e9 a5 06 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010ddc7	obj/kernel.asm	/^c010ddc7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ddca	obj/kernel.asm	/^c010ddca:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ddcd	obj/kernel.asm	/^c010ddcd:	85 c0                	test   %eax,%eax$/;"	l
c010ddcf	obj/kernel.asm	/^c010ddcf:	75 05                	jne    c010ddd6 <load_icode+0x171>$/;"	l
c010ddd1	obj/kernel.asm	/^c010ddd1:	e9 f8 02 00 00       	jmp    c010e0ce <load_icode+0x469>$/;"	l
c010ddd6	obj/kernel.asm	/^c010ddd6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010dddd	obj/kernel.asm	/^c010dddd:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%ebp)$/;"	l
c010dde4	obj/kernel.asm	/^c010dde4:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010dde7	obj/kernel.asm	/^c010dde7:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ddea	obj/kernel.asm	/^c010ddea:	83 e0 01             	and    $0x1,%eax$/;"	l
c010dded	obj/kernel.asm	/^c010dded:	85 c0                	test   %eax,%eax$/;"	l
c010ddef	obj/kernel.asm	/^c010ddef:	74 04                	je     c010ddf5 <load_icode+0x190>$/;"	l
c010ddf1	obj/kernel.asm	/^c010ddf1:	83 4d ec 04          	orl    $0x4,-0x14(%ebp)$/;"	l
c010ddf5	obj/kernel.asm	/^c010ddf5:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010ddf8	obj/kernel.asm	/^c010ddf8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ddfb	obj/kernel.asm	/^c010ddfb:	83 e0 02             	and    $0x2,%eax$/;"	l
c010ddfe	obj/kernel.asm	/^c010ddfe:	85 c0                	test   %eax,%eax$/;"	l
c010de00	obj/kernel.asm	/^c010de00:	74 04                	je     c010de06 <load_icode+0x1a1>$/;"	l
c010de02	obj/kernel.asm	/^c010de02:	83 4d ec 02          	orl    $0x2,-0x14(%ebp)$/;"	l
c010de06	obj/kernel.asm	/^c010de06:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de09	obj/kernel.asm	/^c010de09:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010de0c	obj/kernel.asm	/^c010de0c:	83 e0 04             	and    $0x4,%eax$/;"	l
c010de0f	obj/kernel.asm	/^c010de0f:	85 c0                	test   %eax,%eax$/;"	l
c010de11	obj/kernel.asm	/^c010de11:	74 04                	je     c010de17 <load_icode+0x1b2>$/;"	l
c010de13	obj/kernel.asm	/^c010de13:	83 4d ec 01          	orl    $0x1,-0x14(%ebp)$/;"	l
c010de17	obj/kernel.asm	/^c010de17:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de1a	obj/kernel.asm	/^c010de1a:	83 e0 02             	and    $0x2,%eax$/;"	l
c010de1d	obj/kernel.asm	/^c010de1d:	85 c0                	test   %eax,%eax$/;"	l
c010de1f	obj/kernel.asm	/^c010de1f:	74 04                	je     c010de25 <load_icode+0x1c0>$/;"	l
c010de21	obj/kernel.asm	/^c010de21:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010de25	obj/kernel.asm	/^c010de25:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de28	obj/kernel.asm	/^c010de28:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010de2b	obj/kernel.asm	/^c010de2b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de2e	obj/kernel.asm	/^c010de2e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010de31	obj/kernel.asm	/^c010de31:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010de38	obj/kernel.asm	/^c010de38:	00 $/;"	l
c010de39	obj/kernel.asm	/^c010de39:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010de3c	obj/kernel.asm	/^c010de3c:	89 4c 24 0c          	mov    %ecx,0xc(%esp)$/;"	l
c010de40	obj/kernel.asm	/^c010de40:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010de44	obj/kernel.asm	/^c010de44:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010de48	obj/kernel.asm	/^c010de48:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010de4b	obj/kernel.asm	/^c010de4b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010de4e	obj/kernel.asm	/^c010de4e:	e8 70 8e ff ff       	call   c0106cc3 <mm_map>$/;"	l
c010de53	obj/kernel.asm	/^c010de53:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de56	obj/kernel.asm	/^c010de56:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010de5a	obj/kernel.asm	/^c010de5a:	74 05                	je     c010de61 <load_icode+0x1fc>$/;"	l
c010de5c	obj/kernel.asm	/^c010de5c:	e9 0b 06 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010de61	obj/kernel.asm	/^c010de61:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de64	obj/kernel.asm	/^c010de64:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010de67	obj/kernel.asm	/^c010de67:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010de6a	obj/kernel.asm	/^c010de6a:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de6d	obj/kernel.asm	/^c010de6d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010de70	obj/kernel.asm	/^c010de70:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010de73	obj/kernel.asm	/^c010de73:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010de76	obj/kernel.asm	/^c010de76:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010de79	obj/kernel.asm	/^c010de79:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010de7c	obj/kernel.asm	/^c010de7c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010de81	obj/kernel.asm	/^c010de81:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010de84	obj/kernel.asm	/^c010de84:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010de8b	obj/kernel.asm	/^c010de8b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de8e	obj/kernel.asm	/^c010de8e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010de91	obj/kernel.asm	/^c010de91:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010de94	obj/kernel.asm	/^c010de94:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010de97	obj/kernel.asm	/^c010de97:	01 d0                	add    %edx,%eax$/;"	l
c010de99	obj/kernel.asm	/^c010de99:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010de9c	obj/kernel.asm	/^c010de9c:	e9 b1 00 00 00       	jmp    c010df52 <load_icode+0x2ed>$/;"	l
c010dea1	obj/kernel.asm	/^c010dea1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010dea4	obj/kernel.asm	/^c010dea4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010dea7	obj/kernel.asm	/^c010dea7:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010deaa	obj/kernel.asm	/^c010deaa:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010deae	obj/kernel.asm	/^c010deae:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010deb1	obj/kernel.asm	/^c010deb1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010deb5	obj/kernel.asm	/^c010deb5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010deb8	obj/kernel.asm	/^c010deb8:	e8 78 77 ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c010debd	obj/kernel.asm	/^c010debd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dec0	obj/kernel.asm	/^c010dec0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010dec4	obj/kernel.asm	/^c010dec4:	75 0c                	jne    c010ded2 <load_icode+0x26d>$/;"	l
c010dec6	obj/kernel.asm	/^c010dec6:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010decd	obj/kernel.asm	/^c010decd:	e9 9a 05 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010ded2	obj/kernel.asm	/^c010ded2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ded5	obj/kernel.asm	/^c010ded5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010ded8	obj/kernel.asm	/^c010ded8:	29 c2                	sub    %eax,%edx$/;"	l
c010deda	obj/kernel.asm	/^c010deda:	89 d0                	mov    %edx,%eax$/;"	l
c010dedc	obj/kernel.asm	/^c010dedc:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010dedf	obj/kernel.asm	/^c010dedf:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010dee4	obj/kernel.asm	/^c010dee4:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010dee7	obj/kernel.asm	/^c010dee7:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010deea	obj/kernel.asm	/^c010deea:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010def1	obj/kernel.asm	/^c010def1:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010def4	obj/kernel.asm	/^c010def4:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010def7	obj/kernel.asm	/^c010def7:	73 0d                	jae    c010df06 <load_icode+0x2a1>$/;"	l
c010def9	obj/kernel.asm	/^c010def9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010defc	obj/kernel.asm	/^c010defc:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010deff	obj/kernel.asm	/^c010deff:	29 c2                	sub    %eax,%edx$/;"	l
c010df01	obj/kernel.asm	/^c010df01:	89 d0                	mov    %edx,%eax$/;"	l
c010df03	obj/kernel.asm	/^c010df03:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010df06	obj/kernel.asm	/^c010df06:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010df09	obj/kernel.asm	/^c010df09:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010df0c	obj/kernel.asm	/^c010df0c:	e8 ac ed ff ff       	call   c010ccbd <page2kva>$/;"	l
c010df11	obj/kernel.asm	/^c010df11:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010df14	obj/kernel.asm	/^c010df14:	01 c2                	add    %eax,%edx$/;"	l
c010df16	obj/kernel.asm	/^c010df16:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010df19	obj/kernel.asm	/^c010df19:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010df1d	obj/kernel.asm	/^c010df1d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010df20	obj/kernel.asm	/^c010df20:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010df24	obj/kernel.asm	/^c010df24:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010df28	obj/kernel.asm	/^c010df28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df2b	obj/kernel.asm	/^c010df2b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010df2e	obj/kernel.asm	/^c010df2e:	e8 ca fc ff ff       	call   c010dbfd <load_icode_read>$/;"	l
c010df33	obj/kernel.asm	/^c010df33:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010df36	obj/kernel.asm	/^c010df36:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010df3a	obj/kernel.asm	/^c010df3a:	74 05                	je     c010df41 <load_icode+0x2dc>$/;"	l
c010df3c	obj/kernel.asm	/^c010df3c:	e9 2b 05 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010df41	obj/kernel.asm	/^c010df41:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010df44	obj/kernel.asm	/^c010df44:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010df47	obj/kernel.asm	/^c010df47:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010df4a	obj/kernel.asm	/^c010df4a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010df4d	obj/kernel.asm	/^c010df4d:	01 d0                	add    %edx,%eax$/;"	l
c010df4f	obj/kernel.asm	/^c010df4f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010df52	obj/kernel.asm	/^c010df52:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010df55	obj/kernel.asm	/^c010df55:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010df58	obj/kernel.asm	/^c010df58:	0f 82 43 ff ff ff    	jb     c010dea1 <load_icode+0x23c>$/;"	l
c010df5e	obj/kernel.asm	/^c010df5e:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010df61	obj/kernel.asm	/^c010df61:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010df64	obj/kernel.asm	/^c010df64:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010df67	obj/kernel.asm	/^c010df67:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010df6a	obj/kernel.asm	/^c010df6a:	01 d0                	add    %edx,%eax$/;"	l
c010df6c	obj/kernel.asm	/^c010df6c:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010df6f	obj/kernel.asm	/^c010df6f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010df72	obj/kernel.asm	/^c010df72:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010df75	obj/kernel.asm	/^c010df75:	0f 83 b0 00 00 00    	jae    c010e02b <load_icode+0x3c6>$/;"	l
c010df7b	obj/kernel.asm	/^c010df7b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010df7e	obj/kernel.asm	/^c010df7e:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010df81	obj/kernel.asm	/^c010df81:	75 05                	jne    c010df88 <load_icode+0x323>$/;"	l
c010df83	obj/kernel.asm	/^c010df83:	e9 46 01 00 00       	jmp    c010e0ce <load_icode+0x469>$/;"	l
c010df88	obj/kernel.asm	/^c010df88:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010df8b	obj/kernel.asm	/^c010df8b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010df8e	obj/kernel.asm	/^c010df8e:	29 c2                	sub    %eax,%edx$/;"	l
c010df90	obj/kernel.asm	/^c010df90:	89 d0                	mov    %edx,%eax$/;"	l
c010df92	obj/kernel.asm	/^c010df92:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010df97	obj/kernel.asm	/^c010df97:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010df9a	obj/kernel.asm	/^c010df9a:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010df9f	obj/kernel.asm	/^c010df9f:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010dfa2	obj/kernel.asm	/^c010dfa2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010dfa5	obj/kernel.asm	/^c010dfa5:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010dfa8	obj/kernel.asm	/^c010dfa8:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010dfab	obj/kernel.asm	/^c010dfab:	73 0d                	jae    c010dfba <load_icode+0x355>$/;"	l
c010dfad	obj/kernel.asm	/^c010dfad:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010dfb0	obj/kernel.asm	/^c010dfb0:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010dfb3	obj/kernel.asm	/^c010dfb3:	29 c2                	sub    %eax,%edx$/;"	l
c010dfb5	obj/kernel.asm	/^c010dfb5:	89 d0                	mov    %edx,%eax$/;"	l
c010dfb7	obj/kernel.asm	/^c010dfb7:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010dfba	obj/kernel.asm	/^c010dfba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dfbd	obj/kernel.asm	/^c010dfbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010dfc0	obj/kernel.asm	/^c010dfc0:	e8 f8 ec ff ff       	call   c010ccbd <page2kva>$/;"	l
c010dfc5	obj/kernel.asm	/^c010dfc5:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010dfc8	obj/kernel.asm	/^c010dfc8:	01 c2                	add    %eax,%edx$/;"	l
c010dfca	obj/kernel.asm	/^c010dfca:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010dfcd	obj/kernel.asm	/^c010dfcd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010dfd1	obj/kernel.asm	/^c010dfd1:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010dfd8	obj/kernel.asm	/^c010dfd8:	00 $/;"	l
c010dfd9	obj/kernel.asm	/^c010dfd9:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010dfdc	obj/kernel.asm	/^c010dfdc:	e8 af 86 00 00       	call   c0116690 <memset>$/;"	l
c010dfe1	obj/kernel.asm	/^c010dfe1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010dfe4	obj/kernel.asm	/^c010dfe4:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010dfe7	obj/kernel.asm	/^c010dfe7:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010dfea	obj/kernel.asm	/^c010dfea:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010dfed	obj/kernel.asm	/^c010dfed:	73 08                	jae    c010dff7 <load_icode+0x392>$/;"	l
c010dfef	obj/kernel.asm	/^c010dfef:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010dff2	obj/kernel.asm	/^c010dff2:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010dff5	obj/kernel.asm	/^c010dff5:	74 34                	je     c010e02b <load_icode+0x3c6>$/;"	l
c010dff7	obj/kernel.asm	/^c010dff7:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010dffa	obj/kernel.asm	/^c010dffa:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010dffd	obj/kernel.asm	/^c010dffd:	72 08                	jb     c010e007 <load_icode+0x3a2>$/;"	l
c010dfff	obj/kernel.asm	/^c010dfff:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e002	obj/kernel.asm	/^c010e002:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010e005	obj/kernel.asm	/^c010e005:	74 24                	je     c010e02b <load_icode+0x3c6>$/;"	l
c010e007	obj/kernel.asm	/^c010e007:	c7 44 24 0c a4 9b 11 	movl   $0xc0119ba4,0xc(%esp)$/;"	l
c010e00e	obj/kernel.asm	/^c010e00e:	c0 $/;"	l
c010e00f	obj/kernel.asm	/^c010e00f:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010e016	obj/kernel.asm	/^c010e016:	c0 $/;"	l
c010e017	obj/kernel.asm	/^c010e017:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
c010e01e	obj/kernel.asm	/^c010e01e:	00 $/;"	l
c010e01f	obj/kernel.asm	/^c010e01f:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e026	obj/kernel.asm	/^c010e026:	e8 0c 2c ff ff       	call   c0100c37 <__panic>$/;"	l
c010e02b	obj/kernel.asm	/^c010e02b:	e9 92 00 00 00       	jmp    c010e0c2 <load_icode+0x45d>$/;"	l
c010e030	obj/kernel.asm	/^c010e030:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e033	obj/kernel.asm	/^c010e033:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e036	obj/kernel.asm	/^c010e036:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010e039	obj/kernel.asm	/^c010e039:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e03d	obj/kernel.asm	/^c010e03d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e040	obj/kernel.asm	/^c010e040:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e044	obj/kernel.asm	/^c010e044:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e047	obj/kernel.asm	/^c010e047:	e8 e9 75 ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c010e04c	obj/kernel.asm	/^c010e04c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e04f	obj/kernel.asm	/^c010e04f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e053	obj/kernel.asm	/^c010e053:	75 0c                	jne    c010e061 <load_icode+0x3fc>$/;"	l
c010e055	obj/kernel.asm	/^c010e055:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010e05c	obj/kernel.asm	/^c010e05c:	e9 0b 04 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010e061	obj/kernel.asm	/^c010e061:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e064	obj/kernel.asm	/^c010e064:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010e067	obj/kernel.asm	/^c010e067:	29 c2                	sub    %eax,%edx$/;"	l
c010e069	obj/kernel.asm	/^c010e069:	89 d0                	mov    %edx,%eax$/;"	l
c010e06b	obj/kernel.asm	/^c010e06b:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010e06e	obj/kernel.asm	/^c010e06e:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010e073	obj/kernel.asm	/^c010e073:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010e076	obj/kernel.asm	/^c010e076:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e079	obj/kernel.asm	/^c010e079:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010e080	obj/kernel.asm	/^c010e080:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010e083	obj/kernel.asm	/^c010e083:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010e086	obj/kernel.asm	/^c010e086:	73 0d                	jae    c010e095 <load_icode+0x430>$/;"	l
c010e088	obj/kernel.asm	/^c010e088:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e08b	obj/kernel.asm	/^c010e08b:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010e08e	obj/kernel.asm	/^c010e08e:	29 c2                	sub    %eax,%edx$/;"	l
c010e090	obj/kernel.asm	/^c010e090:	89 d0                	mov    %edx,%eax$/;"	l
c010e092	obj/kernel.asm	/^c010e092:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010e095	obj/kernel.asm	/^c010e095:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e098	obj/kernel.asm	/^c010e098:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e09b	obj/kernel.asm	/^c010e09b:	e8 1d ec ff ff       	call   c010ccbd <page2kva>$/;"	l
c010e0a0	obj/kernel.asm	/^c010e0a0:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c010e0a3	obj/kernel.asm	/^c010e0a3:	01 c2                	add    %eax,%edx$/;"	l
c010e0a5	obj/kernel.asm	/^c010e0a5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e0a8	obj/kernel.asm	/^c010e0a8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e0ac	obj/kernel.asm	/^c010e0ac:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010e0b3	obj/kernel.asm	/^c010e0b3:	00 $/;"	l
c010e0b4	obj/kernel.asm	/^c010e0b4:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010e0b7	obj/kernel.asm	/^c010e0b7:	e8 d4 85 00 00       	call   c0116690 <memset>$/;"	l
c010e0bc	obj/kernel.asm	/^c010e0bc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e0bf	obj/kernel.asm	/^c010e0bf:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010e0c2	obj/kernel.asm	/^c010e0c2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e0c5	obj/kernel.asm	/^c010e0c5:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010e0c8	obj/kernel.asm	/^c010e0c8:	0f 82 62 ff ff ff    	jb     c010e030 <load_icode+0x3cb>$/;"	l
c010e0ce	obj/kernel.asm	/^c010e0ce:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
c010e0d2	obj/kernel.asm	/^c010e0d2:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010e0d5	obj/kernel.asm	/^c010e0d5:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010e0d9	obj/kernel.asm	/^c010e0d9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010e0dc	obj/kernel.asm	/^c010e0dc:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
c010e0df	obj/kernel.asm	/^c010e0df:	0f 87 77 fc ff ff    	ja     c010dd5c <load_icode+0xf7>$/;"	l
c010e0e5	obj/kernel.asm	/^c010e0e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e0e8	obj/kernel.asm	/^c010e0e8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e0eb	obj/kernel.asm	/^c010e0eb:	e8 d4 d0 ff ff       	call   c010b1c4 <sysfile_close>$/;"	l
c010e0f0	obj/kernel.asm	/^c010e0f0:	c7 45 ec 0b 00 00 00 	movl   $0xb,-0x14(%ebp)$/;"	l
c010e0f7	obj/kernel.asm	/^c010e0f7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c010e0fe	obj/kernel.asm	/^c010e0fe:	00 $/;"	l
c010e0ff	obj/kernel.asm	/^c010e0ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e102	obj/kernel.asm	/^c010e102:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e106	obj/kernel.asm	/^c010e106:	c7 44 24 08 00 00 10 	movl   $0x100000,0x8(%esp)$/;"	l
c010e10d	obj/kernel.asm	/^c010e10d:	00 $/;"	l
c010e10e	obj/kernel.asm	/^c010e10e:	c7 44 24 04 00 00 f0 	movl   $0xaff00000,0x4(%esp)$/;"	l
c010e115	obj/kernel.asm	/^c010e115:	af $/;"	l
c010e116	obj/kernel.asm	/^c010e116:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e119	obj/kernel.asm	/^c010e119:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e11c	obj/kernel.asm	/^c010e11c:	e8 a2 8b ff ff       	call   c0106cc3 <mm_map>$/;"	l
c010e121	obj/kernel.asm	/^c010e121:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e124	obj/kernel.asm	/^c010e124:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e128	obj/kernel.asm	/^c010e128:	74 05                	je     c010e12f <load_icode+0x4ca>$/;"	l
c010e12a	obj/kernel.asm	/^c010e12a:	e9 3d 03 00 00       	jmp    c010e46c <load_icode+0x807>$/;"	l
c010e12f	obj/kernel.asm	/^c010e12f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e132	obj/kernel.asm	/^c010e132:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e135	obj/kernel.asm	/^c010e135:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010e13c	obj/kernel.asm	/^c010e13c:	00 $/;"	l
c010e13d	obj/kernel.asm	/^c010e13d:	c7 44 24 04 00 f0 ff 	movl   $0xaffff000,0x4(%esp)$/;"	l
c010e144	obj/kernel.asm	/^c010e144:	af $/;"	l
c010e145	obj/kernel.asm	/^c010e145:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e148	obj/kernel.asm	/^c010e148:	e8 e8 74 ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c010e14d	obj/kernel.asm	/^c010e14d:	85 c0                	test   %eax,%eax$/;"	l
c010e14f	obj/kernel.asm	/^c010e14f:	75 24                	jne    c010e175 <load_icode+0x510>$/;"	l
c010e151	obj/kernel.asm	/^c010e151:	c7 44 24 0c e0 9b 11 	movl   $0xc0119be0,0xc(%esp)$/;"	l
c010e158	obj/kernel.asm	/^c010e158:	c0 $/;"	l
c010e159	obj/kernel.asm	/^c010e159:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010e160	obj/kernel.asm	/^c010e160:	c0 $/;"	l
c010e161	obj/kernel.asm	/^c010e161:	c7 44 24 04 d2 02 00 	movl   $0x2d2,0x4(%esp)$/;"	l
c010e168	obj/kernel.asm	/^c010e168:	00 $/;"	l
c010e169	obj/kernel.asm	/^c010e169:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e170	obj/kernel.asm	/^c010e170:	e8 c2 2a ff ff       	call   c0100c37 <__panic>$/;"	l
c010e175	obj/kernel.asm	/^c010e175:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e178	obj/kernel.asm	/^c010e178:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e17b	obj/kernel.asm	/^c010e17b:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010e182	obj/kernel.asm	/^c010e182:	00 $/;"	l
c010e183	obj/kernel.asm	/^c010e183:	c7 44 24 04 00 e0 ff 	movl   $0xafffe000,0x4(%esp)$/;"	l
c010e18a	obj/kernel.asm	/^c010e18a:	af $/;"	l
c010e18b	obj/kernel.asm	/^c010e18b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e18e	obj/kernel.asm	/^c010e18e:	e8 a2 74 ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c010e193	obj/kernel.asm	/^c010e193:	85 c0                	test   %eax,%eax$/;"	l
c010e195	obj/kernel.asm	/^c010e195:	75 24                	jne    c010e1bb <load_icode+0x556>$/;"	l
c010e197	obj/kernel.asm	/^c010e197:	c7 44 24 0c 24 9c 11 	movl   $0xc0119c24,0xc(%esp)$/;"	l
c010e19e	obj/kernel.asm	/^c010e19e:	c0 $/;"	l
c010e19f	obj/kernel.asm	/^c010e19f:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010e1a6	obj/kernel.asm	/^c010e1a6:	c0 $/;"	l
c010e1a7	obj/kernel.asm	/^c010e1a7:	c7 44 24 04 d3 02 00 	movl   $0x2d3,0x4(%esp)$/;"	l
c010e1ae	obj/kernel.asm	/^c010e1ae:	00 $/;"	l
c010e1af	obj/kernel.asm	/^c010e1af:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e1b6	obj/kernel.asm	/^c010e1b6:	e8 7c 2a ff ff       	call   c0100c37 <__panic>$/;"	l
c010e1bb	obj/kernel.asm	/^c010e1bb:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e1be	obj/kernel.asm	/^c010e1be:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e1c1	obj/kernel.asm	/^c010e1c1:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010e1c8	obj/kernel.asm	/^c010e1c8:	00 $/;"	l
c010e1c9	obj/kernel.asm	/^c010e1c9:	c7 44 24 04 00 d0 ff 	movl   $0xafffd000,0x4(%esp)$/;"	l
c010e1d0	obj/kernel.asm	/^c010e1d0:	af $/;"	l
c010e1d1	obj/kernel.asm	/^c010e1d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e1d4	obj/kernel.asm	/^c010e1d4:	e8 5c 74 ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c010e1d9	obj/kernel.asm	/^c010e1d9:	85 c0                	test   %eax,%eax$/;"	l
c010e1db	obj/kernel.asm	/^c010e1db:	75 24                	jne    c010e201 <load_icode+0x59c>$/;"	l
c010e1dd	obj/kernel.asm	/^c010e1dd:	c7 44 24 0c 68 9c 11 	movl   $0xc0119c68,0xc(%esp)$/;"	l
c010e1e4	obj/kernel.asm	/^c010e1e4:	c0 $/;"	l
c010e1e5	obj/kernel.asm	/^c010e1e5:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010e1ec	obj/kernel.asm	/^c010e1ec:	c0 $/;"	l
c010e1ed	obj/kernel.asm	/^c010e1ed:	c7 44 24 04 d4 02 00 	movl   $0x2d4,0x4(%esp)$/;"	l
c010e1f4	obj/kernel.asm	/^c010e1f4:	00 $/;"	l
c010e1f5	obj/kernel.asm	/^c010e1f5:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e1fc	obj/kernel.asm	/^c010e1fc:	e8 36 2a ff ff       	call   c0100c37 <__panic>$/;"	l
c010e201	obj/kernel.asm	/^c010e201:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e204	obj/kernel.asm	/^c010e204:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e207	obj/kernel.asm	/^c010e207:	c7 44 24 08 07 00 00 	movl   $0x7,0x8(%esp)$/;"	l
c010e20e	obj/kernel.asm	/^c010e20e:	00 $/;"	l
c010e20f	obj/kernel.asm	/^c010e20f:	c7 44 24 04 00 c0 ff 	movl   $0xafffc000,0x4(%esp)$/;"	l
c010e216	obj/kernel.asm	/^c010e216:	af $/;"	l
c010e217	obj/kernel.asm	/^c010e217:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e21a	obj/kernel.asm	/^c010e21a:	e8 16 74 ff ff       	call   c0105635 <pgdir_alloc_page>$/;"	l
c010e21f	obj/kernel.asm	/^c010e21f:	85 c0                	test   %eax,%eax$/;"	l
c010e221	obj/kernel.asm	/^c010e221:	75 24                	jne    c010e247 <load_icode+0x5e2>$/;"	l
c010e223	obj/kernel.asm	/^c010e223:	c7 44 24 0c ac 9c 11 	movl   $0xc0119cac,0xc(%esp)$/;"	l
c010e22a	obj/kernel.asm	/^c010e22a:	c0 $/;"	l
c010e22b	obj/kernel.asm	/^c010e22b:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010e232	obj/kernel.asm	/^c010e232:	c0 $/;"	l
c010e233	obj/kernel.asm	/^c010e233:	c7 44 24 04 d5 02 00 	movl   $0x2d5,0x4(%esp)$/;"	l
c010e23a	obj/kernel.asm	/^c010e23a:	00 $/;"	l
c010e23b	obj/kernel.asm	/^c010e23b:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e242	obj/kernel.asm	/^c010e242:	e8 f0 29 ff ff       	call   c0100c37 <__panic>$/;"	l
c010e247	obj/kernel.asm	/^c010e247:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e24a	obj/kernel.asm	/^c010e24a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e24d	obj/kernel.asm	/^c010e24d:	e8 09 eb ff ff       	call   c010cd5b <mm_count_inc>$/;"	l
c010e252	obj/kernel.asm	/^c010e252:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e257	obj/kernel.asm	/^c010e257:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010e25a	obj/kernel.asm	/^c010e25a:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010e25d	obj/kernel.asm	/^c010e25d:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e262	obj/kernel.asm	/^c010e262:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010e265	obj/kernel.asm	/^c010e265:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010e268	obj/kernel.asm	/^c010e268:	89 55 ac             	mov    %edx,-0x54(%ebp)$/;"	l
c010e26b	obj/kernel.asm	/^c010e26b:	81 7d ac ff ff ff bf 	cmpl   $0xbfffffff,-0x54(%ebp)$/;"	l
c010e272	obj/kernel.asm	/^c010e272:	77 23                	ja     c010e297 <load_icode+0x632>$/;"	l
c010e274	obj/kernel.asm	/^c010e274:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010e277	obj/kernel.asm	/^c010e277:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e27b	obj/kernel.asm	/^c010e27b:	c7 44 24 08 98 9a 11 	movl   $0xc0119a98,0x8(%esp)$/;"	l
c010e282	obj/kernel.asm	/^c010e282:	c0 $/;"	l
c010e283	obj/kernel.asm	/^c010e283:	c7 44 24 04 d9 02 00 	movl   $0x2d9,0x4(%esp)$/;"	l
c010e28a	obj/kernel.asm	/^c010e28a:	00 $/;"	l
c010e28b	obj/kernel.asm	/^c010e28b:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e292	obj/kernel.asm	/^c010e292:	e8 a0 29 ff ff       	call   c0100c37 <__panic>$/;"	l
c010e297	obj/kernel.asm	/^c010e297:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c010e29a	obj/kernel.asm	/^c010e29a:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010e2a0	obj/kernel.asm	/^c010e2a0:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010e2a3	obj/kernel.asm	/^c010e2a3:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e2a6	obj/kernel.asm	/^c010e2a6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e2a9	obj/kernel.asm	/^c010e2a9:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c010e2ac	obj/kernel.asm	/^c010e2ac:	81 7d a8 ff ff ff bf 	cmpl   $0xbfffffff,-0x58(%ebp)$/;"	l
c010e2b3	obj/kernel.asm	/^c010e2b3:	77 23                	ja     c010e2d8 <load_icode+0x673>$/;"	l
c010e2b5	obj/kernel.asm	/^c010e2b5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010e2b8	obj/kernel.asm	/^c010e2b8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e2bc	obj/kernel.asm	/^c010e2bc:	c7 44 24 08 98 9a 11 	movl   $0xc0119a98,0x8(%esp)$/;"	l
c010e2c3	obj/kernel.asm	/^c010e2c3:	c0 $/;"	l
c010e2c4	obj/kernel.asm	/^c010e2c4:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
c010e2cb	obj/kernel.asm	/^c010e2cb:	00 $/;"	l
c010e2cc	obj/kernel.asm	/^c010e2cc:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e2d3	obj/kernel.asm	/^c010e2d3:	e8 5f 29 ff ff       	call   c0100c37 <__panic>$/;"	l
c010e2d8	obj/kernel.asm	/^c010e2d8:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010e2db	obj/kernel.asm	/^c010e2db:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010e2e0	obj/kernel.asm	/^c010e2e0:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010e2e3	obj/kernel.asm	/^c010e2e3:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c010e2e6	obj/kernel.asm	/^c010e2e6:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010e2e9	obj/kernel.asm	/^c010e2e9:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010e2f0	obj/kernel.asm	/^c010e2f0:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010e2f7	obj/kernel.asm	/^c010e2f7:	eb 30                	jmp    c010e329 <load_icode+0x6c4>$/;"	l
c010e2f9	obj/kernel.asm	/^c010e2f9:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e2fc	obj/kernel.asm	/^c010e2fc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e303	obj/kernel.asm	/^c010e303:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e306	obj/kernel.asm	/^c010e306:	01 d0                	add    %edx,%eax$/;"	l
c010e308	obj/kernel.asm	/^c010e308:	8b 00                	mov    (%eax),%eax$/;"	l
c010e30a	obj/kernel.asm	/^c010e30a:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010e311	obj/kernel.asm	/^c010e311:	00 $/;"	l
c010e312	obj/kernel.asm	/^c010e312:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e315	obj/kernel.asm	/^c010e315:	e8 48 80 00 00       	call   c0116362 <strnlen>$/;"	l
c010e31a	obj/kernel.asm	/^c010e31a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e31d	obj/kernel.asm	/^c010e31d:	01 d0                	add    %edx,%eax$/;"	l
c010e31f	obj/kernel.asm	/^c010e31f:	83 c0 01             	add    $0x1,%eax$/;"	l
c010e322	obj/kernel.asm	/^c010e322:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e325	obj/kernel.asm	/^c010e325:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010e329	obj/kernel.asm	/^c010e329:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e32c	obj/kernel.asm	/^c010e32c:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010e32f	obj/kernel.asm	/^c010e32f:	77 c8                	ja     c010e2f9 <load_icode+0x694>$/;"	l
c010e331	obj/kernel.asm	/^c010e331:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e334	obj/kernel.asm	/^c010e334:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010e337	obj/kernel.asm	/^c010e337:	89 c2                	mov    %eax,%edx$/;"	l
c010e339	obj/kernel.asm	/^c010e339:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e33e	obj/kernel.asm	/^c010e33e:	29 d0                	sub    %edx,%eax$/;"	l
c010e340	obj/kernel.asm	/^c010e340:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010e343	obj/kernel.asm	/^c010e343:	2d 04 00 00 50       	sub    $0x50000004,%eax$/;"	l
c010e348	obj/kernel.asm	/^c010e348:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010e34b	obj/kernel.asm	/^c010e34b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e34e	obj/kernel.asm	/^c010e34e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e355	obj/kernel.asm	/^c010e355:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010e358	obj/kernel.asm	/^c010e358:	29 d0                	sub    %edx,%eax$/;"	l
c010e35a	obj/kernel.asm	/^c010e35a:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c010e35d	obj/kernel.asm	/^c010e35d:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010e364	obj/kernel.asm	/^c010e364:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010e36b	obj/kernel.asm	/^c010e36b:	eb 67                	jmp    c010e3d4 <load_icode+0x76f>$/;"	l
c010e36d	obj/kernel.asm	/^c010e36d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e370	obj/kernel.asm	/^c010e370:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e377	obj/kernel.asm	/^c010e377:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010e37a	obj/kernel.asm	/^c010e37a:	8d 1c 02             	lea    (%edx,%eax,1),%ebx$/;"	l
c010e37d	obj/kernel.asm	/^c010e37d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e380	obj/kernel.asm	/^c010e380:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e387	obj/kernel.asm	/^c010e387:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e38a	obj/kernel.asm	/^c010e38a:	01 d0                	add    %edx,%eax$/;"	l
c010e38c	obj/kernel.asm	/^c010e38c:	8b 10                	mov    (%eax),%edx$/;"	l
c010e38e	obj/kernel.asm	/^c010e38e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e391	obj/kernel.asm	/^c010e391:	8b 4d a4             	mov    -0x5c(%ebp),%ecx$/;"	l
c010e394	obj/kernel.asm	/^c010e394:	01 c8                	add    %ecx,%eax$/;"	l
c010e396	obj/kernel.asm	/^c010e396:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e39a	obj/kernel.asm	/^c010e39a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e39d	obj/kernel.asm	/^c010e39d:	e8 17 80 00 00       	call   c01163b9 <strcpy>$/;"	l
c010e3a2	obj/kernel.asm	/^c010e3a2:	89 03                	mov    %eax,(%ebx)$/;"	l
c010e3a4	obj/kernel.asm	/^c010e3a4:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010e3a7	obj/kernel.asm	/^c010e3a7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e3ae	obj/kernel.asm	/^c010e3ae:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e3b1	obj/kernel.asm	/^c010e3b1:	01 d0                	add    %edx,%eax$/;"	l
c010e3b3	obj/kernel.asm	/^c010e3b3:	8b 00                	mov    (%eax),%eax$/;"	l
c010e3b5	obj/kernel.asm	/^c010e3b5:	c7 44 24 04 00 10 00 	movl   $0x1000,0x4(%esp)$/;"	l
c010e3bc	obj/kernel.asm	/^c010e3bc:	00 $/;"	l
c010e3bd	obj/kernel.asm	/^c010e3bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e3c0	obj/kernel.asm	/^c010e3c0:	e8 9d 7f 00 00       	call   c0116362 <strnlen>$/;"	l
c010e3c5	obj/kernel.asm	/^c010e3c5:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e3c8	obj/kernel.asm	/^c010e3c8:	01 d0                	add    %edx,%eax$/;"	l
c010e3ca	obj/kernel.asm	/^c010e3ca:	83 c0 01             	add    $0x1,%eax$/;"	l
c010e3cd	obj/kernel.asm	/^c010e3cd:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e3d0	obj/kernel.asm	/^c010e3d0:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010e3d4	obj/kernel.asm	/^c010e3d4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e3d7	obj/kernel.asm	/^c010e3d7:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010e3da	obj/kernel.asm	/^c010e3da:	77 91                	ja     c010e36d <load_icode+0x708>$/;"	l
c010e3dc	obj/kernel.asm	/^c010e3dc:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010e3df	obj/kernel.asm	/^c010e3df:	83 e8 04             	sub    $0x4,%eax$/;"	l
c010e3e2	obj/kernel.asm	/^c010e3e2:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010e3e5	obj/kernel.asm	/^c010e3e5:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010e3e8	obj/kernel.asm	/^c010e3e8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010e3eb	obj/kernel.asm	/^c010e3eb:	89 10                	mov    %edx,(%eax)$/;"	l
c010e3ed	obj/kernel.asm	/^c010e3ed:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e3f2	obj/kernel.asm	/^c010e3f2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e3f5	obj/kernel.asm	/^c010e3f5:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010e3f8	obj/kernel.asm	/^c010e3f8:	c7 44 24 08 4c 00 00 	movl   $0x4c,0x8(%esp)$/;"	l
c010e3ff	obj/kernel.asm	/^c010e3ff:	00 $/;"	l
c010e400	obj/kernel.asm	/^c010e400:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010e407	obj/kernel.asm	/^c010e407:	00 $/;"	l
c010e408	obj/kernel.asm	/^c010e408:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e40b	obj/kernel.asm	/^c010e40b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e40e	obj/kernel.asm	/^c010e40e:	e8 7d 82 00 00       	call   c0116690 <memset>$/;"	l
c010e413	obj/kernel.asm	/^c010e413:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e416	obj/kernel.asm	/^c010e416:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c010e41c	obj/kernel.asm	/^c010e41c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e41f	obj/kernel.asm	/^c010e41f:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c010e425	obj/kernel.asm	/^c010e425:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e428	obj/kernel.asm	/^c010e428:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c010e42c	obj/kernel.asm	/^c010e42c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e42f	obj/kernel.asm	/^c010e42f:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c010e433	obj/kernel.asm	/^c010e433:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e436	obj/kernel.asm	/^c010e436:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c010e43a	obj/kernel.asm	/^c010e43a:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e43d	obj/kernel.asm	/^c010e43d:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c010e441	obj/kernel.asm	/^c010e441:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e444	obj/kernel.asm	/^c010e444:	8b 55 a4             	mov    -0x5c(%ebp),%edx$/;"	l
c010e447	obj/kernel.asm	/^c010e447:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010e44a	obj/kernel.asm	/^c010e44a:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010e44d	obj/kernel.asm	/^c010e44d:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010e450	obj/kernel.asm	/^c010e450:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e453	obj/kernel.asm	/^c010e453:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010e456	obj/kernel.asm	/^c010e456:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010e459	obj/kernel.asm	/^c010e459:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)$/;"	l
c010e460	obj/kernel.asm	/^c010e460:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010e467	obj/kernel.asm	/^c010e467:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e46a	obj/kernel.asm	/^c010e46a:	eb 23                	jmp    c010e48f <load_icode+0x82a>$/;"	l
c010e46c	obj/kernel.asm	/^c010e46c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e46f	obj/kernel.asm	/^c010e46f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e472	obj/kernel.asm	/^c010e472:	e8 69 8a ff ff       	call   c0106ee0 <exit_mmap>$/;"	l
c010e477	obj/kernel.asm	/^c010e477:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e47a	obj/kernel.asm	/^c010e47a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e47d	obj/kernel.asm	/^c010e47d:	e8 36 f1 ff ff       	call   c010d5b8 <put_pgdir>$/;"	l
c010e482	obj/kernel.asm	/^c010e482:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010e485	obj/kernel.asm	/^c010e485:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e488	obj/kernel.asm	/^c010e488:	e8 94 87 ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c010e48d	obj/kernel.asm	/^c010e48d:	eb d8                	jmp    c010e467 <load_icode+0x802>$/;"	l
c010e48f	obj/kernel.asm	/^c010e48f:	81 c4 e4 00 00 00    	add    $0xe4,%esp$/;"	l
c010e495	obj/kernel.asm	/^c010e495:	5b                   	pop    %ebx$/;"	l
c010e496	obj/kernel.asm	/^c010e496:	5d                   	pop    %ebp$/;"	l
c010e497	obj/kernel.asm	/^c010e497:	c3                   	ret    $/;"	l
c010e498	obj/kernel.asm	/^c010e498 <put_kargv>:$/;"	l
c010e498	obj/kernel.asm	/^c010e498:	55                   	push   %ebp$/;"	l
c010e499	obj/kernel.asm	/^c010e499:	89 e5                	mov    %esp,%ebp$/;"	l
c010e49b	obj/kernel.asm	/^c010e49b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e49e	obj/kernel.asm	/^c010e49e:	eb 1d                	jmp    c010e4bd <put_kargv+0x25>$/;"	l
c010e4a0	obj/kernel.asm	/^c010e4a0:	83 6d 08 01          	subl   $0x1,0x8(%ebp)$/;"	l
c010e4a4	obj/kernel.asm	/^c010e4a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e4a7	obj/kernel.asm	/^c010e4a7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e4ae	obj/kernel.asm	/^c010e4ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e4b1	obj/kernel.asm	/^c010e4b1:	01 d0                	add    %edx,%eax$/;"	l
c010e4b3	obj/kernel.asm	/^c010e4b3:	8b 00                	mov    (%eax),%eax$/;"	l
c010e4b5	obj/kernel.asm	/^c010e4b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e4b8	obj/kernel.asm	/^c010e4b8:	e8 46 9d ff ff       	call   c0108203 <kfree>$/;"	l
c010e4bd	obj/kernel.asm	/^c010e4bd:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e4c1	obj/kernel.asm	/^c010e4c1:	7f dd                	jg     c010e4a0 <put_kargv+0x8>$/;"	l
c010e4c3	obj/kernel.asm	/^c010e4c3:	c9                   	leave  $/;"	l
c010e4c4	obj/kernel.asm	/^c010e4c4:	c3                   	ret    $/;"	l
c010e4c5	obj/kernel.asm	/^c010e4c5 <copy_kargv>:$/;"	l
c010e4c5	obj/kernel.asm	/^c010e4c5:	55                   	push   %ebp$/;"	l
c010e4c6	obj/kernel.asm	/^c010e4c6:	89 e5                	mov    %esp,%ebp$/;"	l
c010e4c8	obj/kernel.asm	/^c010e4c8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e4cb	obj/kernel.asm	/^c010e4cb:	c7 45 f0 fd ff ff ff 	movl   $0xfffffffd,-0x10(%ebp)$/;"	l
c010e4d2	obj/kernel.asm	/^c010e4d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e4d5	obj/kernel.asm	/^c010e4d5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e4dc	obj/kernel.asm	/^c010e4dc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010e4df	obj/kernel.asm	/^c010e4df:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c010e4e6	obj/kernel.asm	/^c010e4e6:	00 $/;"	l
c010e4e7	obj/kernel.asm	/^c010e4e7:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010e4eb	obj/kernel.asm	/^c010e4eb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e4ef	obj/kernel.asm	/^c010e4ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e4f2	obj/kernel.asm	/^c010e4f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e4f5	obj/kernel.asm	/^c010e4f5:	e8 c0 94 ff ff       	call   c01079ba <user_mem_check>$/;"	l
c010e4fa	obj/kernel.asm	/^c010e4fa:	85 c0                	test   %eax,%eax$/;"	l
c010e4fc	obj/kernel.asm	/^c010e4fc:	75 08                	jne    c010e506 <copy_kargv+0x41>$/;"	l
c010e4fe	obj/kernel.asm	/^c010e4fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e501	obj/kernel.asm	/^c010e501:	e9 a4 00 00 00       	jmp    c010e5aa <copy_kargv+0xe5>$/;"	l
c010e506	obj/kernel.asm	/^c010e506:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010e50d	obj/kernel.asm	/^c010e50d:	eb 77                	jmp    c010e586 <copy_kargv+0xc1>$/;"	l
c010e50f	obj/kernel.asm	/^c010e50f:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c010e516	obj/kernel.asm	/^c010e516:	e8 cd 9c ff ff       	call   c01081e8 <kmalloc>$/;"	l
c010e51b	obj/kernel.asm	/^c010e51b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e51e	obj/kernel.asm	/^c010e51e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e522	obj/kernel.asm	/^c010e522:	75 0a                	jne    c010e52e <copy_kargv+0x69>$/;"	l
c010e524	obj/kernel.asm	/^c010e524:	90                   	nop$/;"	l
c010e525	obj/kernel.asm	/^c010e525:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010e52c	obj/kernel.asm	/^c010e52c:	eb 67                	jmp    c010e595 <copy_kargv+0xd0>$/;"	l
c010e52e	obj/kernel.asm	/^c010e52e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e531	obj/kernel.asm	/^c010e531:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e538	obj/kernel.asm	/^c010e538:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010e53b	obj/kernel.asm	/^c010e53b:	01 d0                	add    %edx,%eax$/;"	l
c010e53d	obj/kernel.asm	/^c010e53d:	8b 00                	mov    (%eax),%eax$/;"	l
c010e53f	obj/kernel.asm	/^c010e53f:	c7 44 24 0c 00 10 00 	movl   $0x1000,0xc(%esp)$/;"	l
c010e546	obj/kernel.asm	/^c010e546:	00 $/;"	l
c010e547	obj/kernel.asm	/^c010e547:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e54b	obj/kernel.asm	/^c010e54b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e54e	obj/kernel.asm	/^c010e54e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e552	obj/kernel.asm	/^c010e552:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e555	obj/kernel.asm	/^c010e555:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e558	obj/kernel.asm	/^c010e558:	e8 80 95 ff ff       	call   c0107add <copy_string>$/;"	l
c010e55d	obj/kernel.asm	/^c010e55d:	85 c0                	test   %eax,%eax$/;"	l
c010e55f	obj/kernel.asm	/^c010e55f:	75 0d                	jne    c010e56e <copy_kargv+0xa9>$/;"	l
c010e561	obj/kernel.asm	/^c010e561:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e564	obj/kernel.asm	/^c010e564:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e567	obj/kernel.asm	/^c010e567:	e8 97 9c ff ff       	call   c0108203 <kfree>$/;"	l
c010e56c	obj/kernel.asm	/^c010e56c:	eb 27                	jmp    c010e595 <copy_kargv+0xd0>$/;"	l
c010e56e	obj/kernel.asm	/^c010e56e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e571	obj/kernel.asm	/^c010e571:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010e578	obj/kernel.asm	/^c010e578:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e57b	obj/kernel.asm	/^c010e57b:	01 c2                	add    %eax,%edx$/;"	l
c010e57d	obj/kernel.asm	/^c010e57d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e580	obj/kernel.asm	/^c010e580:	89 02                	mov    %eax,(%edx)$/;"	l
c010e582	obj/kernel.asm	/^c010e582:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010e586	obj/kernel.asm	/^c010e586:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e589	obj/kernel.asm	/^c010e589:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010e58c	obj/kernel.asm	/^c010e58c:	7c 81                	jl     c010e50f <copy_kargv+0x4a>$/;"	l
c010e58e	obj/kernel.asm	/^c010e58e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e593	obj/kernel.asm	/^c010e593:	eb 15                	jmp    c010e5aa <copy_kargv+0xe5>$/;"	l
c010e595	obj/kernel.asm	/^c010e595:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e598	obj/kernel.asm	/^c010e598:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e59c	obj/kernel.asm	/^c010e59c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e59f	obj/kernel.asm	/^c010e59f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e5a2	obj/kernel.asm	/^c010e5a2:	e8 f1 fe ff ff       	call   c010e498 <put_kargv>$/;"	l
c010e5a7	obj/kernel.asm	/^c010e5a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e5aa	obj/kernel.asm	/^c010e5aa:	c9                   	leave  $/;"	l
c010e5ab	obj/kernel.asm	/^c010e5ab:	c3                   	ret    $/;"	l
c010e5ac	obj/kernel.asm	/^c010e5ac <do_execve>:$/;"	l
c010e5ac	obj/kernel.asm	/^c010e5ac:	55                   	push   %ebp$/;"	l
c010e5ad	obj/kernel.asm	/^c010e5ad:	89 e5                	mov    %esp,%ebp$/;"	l
c010e5af	obj/kernel.asm	/^c010e5af:	81 ec e8 00 00 00    	sub    $0xe8,%esp$/;"	l
c010e5b5	obj/kernel.asm	/^c010e5b5:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e5ba	obj/kernel.asm	/^c010e5ba:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010e5bd	obj/kernel.asm	/^c010e5bd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e5c0	obj/kernel.asm	/^c010e5c0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e5c4	obj/kernel.asm	/^c010e5c4:	7e 06                	jle    c010e5cc <do_execve+0x20>$/;"	l
c010e5c6	obj/kernel.asm	/^c010e5c6:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010e5ca	obj/kernel.asm	/^c010e5ca:	7e 0a                	jle    c010e5d6 <do_execve+0x2a>$/;"	l
c010e5cc	obj/kernel.asm	/^c010e5cc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010e5d1	obj/kernel.asm	/^c010e5d1:	e9 11 02 00 00       	jmp    c010e7e7 <do_execve+0x23b>$/;"	l
c010e5d6	obj/kernel.asm	/^c010e5d6:	c7 44 24 08 33 00 00 	movl   $0x33,0x8(%esp)$/;"	l
c010e5dd	obj/kernel.asm	/^c010e5dd:	00 $/;"	l
c010e5de	obj/kernel.asm	/^c010e5de:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010e5e5	obj/kernel.asm	/^c010e5e5:	00 $/;"	l
c010e5e6	obj/kernel.asm	/^c010e5e6:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010e5e9	obj/kernel.asm	/^c010e5e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e5ec	obj/kernel.asm	/^c010e5ec:	e8 9f 80 00 00       	call   c0116690 <memset>$/;"	l
c010e5f1	obj/kernel.asm	/^c010e5f1:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010e5f8	obj/kernel.asm	/^c010e5f8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e5fb	obj/kernel.asm	/^c010e5fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e5fe	obj/kernel.asm	/^c010e5fe:	e8 8c e7 ff ff       	call   c010cd8f <lock_mm>$/;"	l
c010e603	obj/kernel.asm	/^c010e603:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e607	obj/kernel.asm	/^c010e607:	75 29                	jne    c010e632 <do_execve+0x86>$/;"	l
c010e609	obj/kernel.asm	/^c010e609:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e60e	obj/kernel.asm	/^c010e60e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e611	obj/kernel.asm	/^c010e611:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e615	obj/kernel.asm	/^c010e615:	c7 44 24 08 ef 9c 11 	movl   $0xc0119cef,0x8(%esp)$/;"	l
c010e61c	obj/kernel.asm	/^c010e61c:	c0 $/;"	l
c010e61d	obj/kernel.asm	/^c010e61d:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c010e624	obj/kernel.asm	/^c010e624:	00 $/;"	l
c010e625	obj/kernel.asm	/^c010e625:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010e628	obj/kernel.asm	/^c010e628:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e62b	obj/kernel.asm	/^c010e62b:	e8 50 88 00 00       	call   c0116e80 <snprintf>$/;"	l
c010e630	obj/kernel.asm	/^c010e630:	eb 38                	jmp    c010e66a <do_execve+0xbe>$/;"	l
c010e632	obj/kernel.asm	/^c010e632:	c7 44 24 0c 33 00 00 	movl   $0x33,0xc(%esp)$/;"	l
c010e639	obj/kernel.asm	/^c010e639:	00 $/;"	l
c010e63a	obj/kernel.asm	/^c010e63a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e63d	obj/kernel.asm	/^c010e63d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e641	obj/kernel.asm	/^c010e641:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010e644	obj/kernel.asm	/^c010e644:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e648	obj/kernel.asm	/^c010e648:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e64b	obj/kernel.asm	/^c010e64b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e64e	obj/kernel.asm	/^c010e64e:	e8 8a 94 ff ff       	call   c0107add <copy_string>$/;"	l
c010e653	obj/kernel.asm	/^c010e653:	85 c0                	test   %eax,%eax$/;"	l
c010e655	obj/kernel.asm	/^c010e655:	75 13                	jne    c010e66a <do_execve+0xbe>$/;"	l
c010e657	obj/kernel.asm	/^c010e657:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e65a	obj/kernel.asm	/^c010e65a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e65d	obj/kernel.asm	/^c010e65d:	e8 60 e7 ff ff       	call   c010cdc2 <unlock_mm>$/;"	l
c010e662	obj/kernel.asm	/^c010e662:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e665	obj/kernel.asm	/^c010e665:	e9 7d 01 00 00       	jmp    c010e7e7 <do_execve+0x23b>$/;"	l
c010e66a	obj/kernel.asm	/^c010e66a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e66d	obj/kernel.asm	/^c010e66d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e671	obj/kernel.asm	/^c010e671:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010e677	obj/kernel.asm	/^c010e677:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e67b	obj/kernel.asm	/^c010e67b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e67e	obj/kernel.asm	/^c010e67e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e682	obj/kernel.asm	/^c010e682:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e685	obj/kernel.asm	/^c010e685:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e688	obj/kernel.asm	/^c010e688:	e8 38 fe ff ff       	call   c010e4c5 <copy_kargv>$/;"	l
c010e68d	obj/kernel.asm	/^c010e68d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e690	obj/kernel.asm	/^c010e690:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e694	obj/kernel.asm	/^c010e694:	74 13                	je     c010e6a9 <do_execve+0xfd>$/;"	l
c010e696	obj/kernel.asm	/^c010e696:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e699	obj/kernel.asm	/^c010e699:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e69c	obj/kernel.asm	/^c010e69c:	e8 21 e7 ff ff       	call   c010cdc2 <unlock_mm>$/;"	l
c010e6a1	obj/kernel.asm	/^c010e6a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e6a4	obj/kernel.asm	/^c010e6a4:	e9 3e 01 00 00       	jmp    c010e7e7 <do_execve+0x23b>$/;"	l
c010e6a9	obj/kernel.asm	/^c010e6a9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e6ac	obj/kernel.asm	/^c010e6ac:	8b 00                	mov    (%eax),%eax$/;"	l
c010e6ae	obj/kernel.asm	/^c010e6ae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e6b1	obj/kernel.asm	/^c010e6b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e6b4	obj/kernel.asm	/^c010e6b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e6b7	obj/kernel.asm	/^c010e6b7:	e8 06 e7 ff ff       	call   c010cdc2 <unlock_mm>$/;"	l
c010e6bc	obj/kernel.asm	/^c010e6bc:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e6c1	obj/kernel.asm	/^c010e6c1:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010e6c7	obj/kernel.asm	/^c010e6c7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e6ca	obj/kernel.asm	/^c010e6ca:	e8 46 e3 ff ff       	call   c010ca15 <files_closeall>$/;"	l
c010e6cf	obj/kernel.asm	/^c010e6cf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010e6d6	obj/kernel.asm	/^c010e6d6:	00 $/;"	l
c010e6d7	obj/kernel.asm	/^c010e6d7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e6da	obj/kernel.asm	/^c010e6da:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e6dd	obj/kernel.asm	/^c010e6dd:	e8 97 ca ff ff       	call   c010b179 <sysfile_open>$/;"	l
c010e6e2	obj/kernel.asm	/^c010e6e2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e6e5	obj/kernel.asm	/^c010e6e5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e6e8	obj/kernel.asm	/^c010e6e8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e6eb	obj/kernel.asm	/^c010e6eb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e6ef	obj/kernel.asm	/^c010e6ef:	79 05                	jns    c010e6f6 <do_execve+0x14a>$/;"	l
c010e6f1	obj/kernel.asm	/^c010e6f1:	e9 ae 00 00 00       	jmp    c010e7a4 <do_execve+0x1f8>$/;"	l
c010e6f6	obj/kernel.asm	/^c010e6f6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e6fa	obj/kernel.asm	/^c010e6fa:	74 4a                	je     c010e746 <do_execve+0x19a>$/;"	l
c010e6fc	obj/kernel.asm	/^c010e6fc:	a1 74 b6 15 c0       	mov    0xc015b674,%eax$/;"	l
c010e701	obj/kernel.asm	/^c010e701:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e704	obj/kernel.asm	/^c010e704:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e707	obj/kernel.asm	/^c010e707:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010e70a	obj/kernel.asm	/^c010e70a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e70d	obj/kernel.asm	/^c010e70d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e710	obj/kernel.asm	/^c010e710:	e8 60 e6 ff ff       	call   c010cd75 <mm_count_dec>$/;"	l
c010e715	obj/kernel.asm	/^c010e715:	85 c0                	test   %eax,%eax$/;"	l
c010e717	obj/kernel.asm	/^c010e717:	75 21                	jne    c010e73a <do_execve+0x18e>$/;"	l
c010e719	obj/kernel.asm	/^c010e719:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e71c	obj/kernel.asm	/^c010e71c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e71f	obj/kernel.asm	/^c010e71f:	e8 bc 87 ff ff       	call   c0106ee0 <exit_mmap>$/;"	l
c010e724	obj/kernel.asm	/^c010e724:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e727	obj/kernel.asm	/^c010e727:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e72a	obj/kernel.asm	/^c010e72a:	e8 89 ee ff ff       	call   c010d5b8 <put_pgdir>$/;"	l
c010e72f	obj/kernel.asm	/^c010e72f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e732	obj/kernel.asm	/^c010e732:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e735	obj/kernel.asm	/^c010e735:	e8 e7 84 ff ff       	call   c0106c21 <mm_destroy>$/;"	l
c010e73a	obj/kernel.asm	/^c010e73a:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e73f	obj/kernel.asm	/^c010e73f:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010e746	obj/kernel.asm	/^c010e746:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010e74d	obj/kernel.asm	/^c010e74d:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010e753	obj/kernel.asm	/^c010e753:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010e757	obj/kernel.asm	/^c010e757:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e75a	obj/kernel.asm	/^c010e75a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e75e	obj/kernel.asm	/^c010e75e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e761	obj/kernel.asm	/^c010e761:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e764	obj/kernel.asm	/^c010e764:	e8 fc f4 ff ff       	call   c010dc65 <load_icode>$/;"	l
c010e769	obj/kernel.asm	/^c010e769:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e76c	obj/kernel.asm	/^c010e76c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e770	obj/kernel.asm	/^c010e770:	74 02                	je     c010e774 <do_execve+0x1c8>$/;"	l
c010e772	obj/kernel.asm	/^c010e772:	eb 30                	jmp    c010e7a4 <do_execve+0x1f8>$/;"	l
c010e774	obj/kernel.asm	/^c010e774:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010e77a	obj/kernel.asm	/^c010e77a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e77e	obj/kernel.asm	/^c010e77e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e781	obj/kernel.asm	/^c010e781:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e784	obj/kernel.asm	/^c010e784:	e8 0f fd ff ff       	call   c010e498 <put_kargv>$/;"	l
c010e789	obj/kernel.asm	/^c010e789:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e78e	obj/kernel.asm	/^c010e78e:	8d 55 b1             	lea    -0x4f(%ebp),%edx$/;"	l
c010e791	obj/kernel.asm	/^c010e791:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010e795	obj/kernel.asm	/^c010e795:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e798	obj/kernel.asm	/^c010e798:	e8 13 e8 ff ff       	call   c010cfb0 <set_proc_name>$/;"	l
c010e79d	obj/kernel.asm	/^c010e79d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e7a2	obj/kernel.asm	/^c010e7a2:	eb 43                	jmp    c010e7e7 <do_execve+0x23b>$/;"	l
c010e7a4	obj/kernel.asm	/^c010e7a4:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010e7aa	obj/kernel.asm	/^c010e7aa:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e7ae	obj/kernel.asm	/^c010e7ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e7b1	obj/kernel.asm	/^c010e7b1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e7b4	obj/kernel.asm	/^c010e7b4:	e8 df fc ff ff       	call   c010e498 <put_kargv>$/;"	l
c010e7b9	obj/kernel.asm	/^c010e7b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e7bc	obj/kernel.asm	/^c010e7bc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e7bf	obj/kernel.asm	/^c010e7bf:	e8 32 f2 ff ff       	call   c010d9f6 <do_exit>$/;"	l
c010e7c4	obj/kernel.asm	/^c010e7c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e7c7	obj/kernel.asm	/^c010e7c7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010e7cb	obj/kernel.asm	/^c010e7cb:	c7 44 24 08 f9 9c 11 	movl   $0xc0119cf9,0x8(%esp)$/;"	l
c010e7d2	obj/kernel.asm	/^c010e7d2:	c0 $/;"	l
c010e7d3	obj/kernel.asm	/^c010e7d3:	c7 44 24 04 61 03 00 	movl   $0x361,0x4(%esp)$/;"	l
c010e7da	obj/kernel.asm	/^c010e7da:	00 $/;"	l
c010e7db	obj/kernel.asm	/^c010e7db:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e7e2	obj/kernel.asm	/^c010e7e2:	e8 50 24 ff ff       	call   c0100c37 <__panic>$/;"	l
c010e7e7	obj/kernel.asm	/^c010e7e7:	c9                   	leave  $/;"	l
c010e7e8	obj/kernel.asm	/^c010e7e8:	c3                   	ret    $/;"	l
c010e7e9	obj/kernel.asm	/^c010e7e9 <do_yield>:$/;"	l
c010e7e9	obj/kernel.asm	/^c010e7e9:	55                   	push   %ebp$/;"	l
c010e7ea	obj/kernel.asm	/^c010e7ea:	89 e5                	mov    %esp,%ebp$/;"	l
c010e7ec	obj/kernel.asm	/^c010e7ec:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e7f1	obj/kernel.asm	/^c010e7f1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010e7f8	obj/kernel.asm	/^c010e7f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e7fd	obj/kernel.asm	/^c010e7fd:	5d                   	pop    %ebp$/;"	l
c010e7fe	obj/kernel.asm	/^c010e7fe:	c3                   	ret    $/;"	l
c010e7ff	obj/kernel.asm	/^c010e7ff <do_wait>:$/;"	l
c010e7ff	obj/kernel.asm	/^c010e7ff:	55                   	push   %ebp$/;"	l
c010e800	obj/kernel.asm	/^c010e800:	89 e5                	mov    %esp,%ebp$/;"	l
c010e802	obj/kernel.asm	/^c010e802:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e805	obj/kernel.asm	/^c010e805:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e80a	obj/kernel.asm	/^c010e80a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010e80d	obj/kernel.asm	/^c010e80d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e810	obj/kernel.asm	/^c010e810:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e814	obj/kernel.asm	/^c010e814:	74 30                	je     c010e846 <do_wait+0x47>$/;"	l
c010e816	obj/kernel.asm	/^c010e816:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e819	obj/kernel.asm	/^c010e819:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c010e820	obj/kernel.asm	/^c010e820:	00 $/;"	l
c010e821	obj/kernel.asm	/^c010e821:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c010e828	obj/kernel.asm	/^c010e828:	00 $/;"	l
c010e829	obj/kernel.asm	/^c010e829:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010e82d	obj/kernel.asm	/^c010e82d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e830	obj/kernel.asm	/^c010e830:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e833	obj/kernel.asm	/^c010e833:	e8 82 91 ff ff       	call   c01079ba <user_mem_check>$/;"	l
c010e838	obj/kernel.asm	/^c010e838:	85 c0                	test   %eax,%eax$/;"	l
c010e83a	obj/kernel.asm	/^c010e83a:	75 0a                	jne    c010e846 <do_wait+0x47>$/;"	l
c010e83c	obj/kernel.asm	/^c010e83c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010e841	obj/kernel.asm	/^c010e841:	e9 57 01 00 00       	jmp    c010e99d <do_wait+0x19e>$/;"	l
c010e846	obj/kernel.asm	/^c010e846:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010e84d	obj/kernel.asm	/^c010e84d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e851	obj/kernel.asm	/^c010e851:	74 39                	je     c010e88c <do_wait+0x8d>$/;"	l
c010e853	obj/kernel.asm	/^c010e853:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e856	obj/kernel.asm	/^c010e856:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e859	obj/kernel.asm	/^c010e859:	e8 6b eb ff ff       	call   c010d3c9 <find_proc>$/;"	l
c010e85e	obj/kernel.asm	/^c010e85e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e861	obj/kernel.asm	/^c010e861:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e865	obj/kernel.asm	/^c010e865:	74 5a                	je     c010e8c1 <do_wait+0xc2>$/;"	l
c010e867	obj/kernel.asm	/^c010e867:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e86a	obj/kernel.asm	/^c010e86a:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010e86d	obj/kernel.asm	/^c010e86d:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e872	obj/kernel.asm	/^c010e872:	39 c2                	cmp    %eax,%edx$/;"	l
c010e874	obj/kernel.asm	/^c010e874:	75 4b                	jne    c010e8c1 <do_wait+0xc2>$/;"	l
c010e876	obj/kernel.asm	/^c010e876:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010e87d	obj/kernel.asm	/^c010e87d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e880	obj/kernel.asm	/^c010e880:	8b 00                	mov    (%eax),%eax$/;"	l
c010e882	obj/kernel.asm	/^c010e882:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010e885	obj/kernel.asm	/^c010e885:	75 3a                	jne    c010e8c1 <do_wait+0xc2>$/;"	l
c010e887	obj/kernel.asm	/^c010e887:	e9 89 00 00 00       	jmp    c010e915 <do_wait+0x116>$/;"	l
c010e88c	obj/kernel.asm	/^c010e88c:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e891	obj/kernel.asm	/^c010e891:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010e897	obj/kernel.asm	/^c010e897:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e89a	obj/kernel.asm	/^c010e89a:	eb 1f                	jmp    c010e8bb <do_wait+0xbc>$/;"	l
c010e89c	obj/kernel.asm	/^c010e89c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010e8a3	obj/kernel.asm	/^c010e8a3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e8a6	obj/kernel.asm	/^c010e8a6:	8b 00                	mov    (%eax),%eax$/;"	l
c010e8a8	obj/kernel.asm	/^c010e8a8:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010e8ab	obj/kernel.asm	/^c010e8ab:	75 02                	jne    c010e8af <do_wait+0xb0>$/;"	l
c010e8ad	obj/kernel.asm	/^c010e8ad:	eb 66                	jmp    c010e915 <do_wait+0x116>$/;"	l
c010e8af	obj/kernel.asm	/^c010e8af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e8b2	obj/kernel.asm	/^c010e8b2:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010e8b8	obj/kernel.asm	/^c010e8b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e8bb	obj/kernel.asm	/^c010e8bb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e8bf	obj/kernel.asm	/^c010e8bf:	75 db                	jne    c010e89c <do_wait+0x9d>$/;"	l
c010e8c1	obj/kernel.asm	/^c010e8c1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e8c5	obj/kernel.asm	/^c010e8c5:	74 44                	je     c010e90b <do_wait+0x10c>$/;"	l
c010e8c7	obj/kernel.asm	/^c010e8c7:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e8cc	obj/kernel.asm	/^c010e8cc:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010e8d2	obj/kernel.asm	/^c010e8d2:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e8d7	obj/kernel.asm	/^c010e8d7:	c7 80 90 00 00 00 01 	movl   $0x80000001,0x90(%eax)$/;"	l
c010e8de	obj/kernel.asm	/^c010e8de:	00 00 80 $/;"	l
c010e8e1	obj/kernel.asm	/^c010e8e1:	e8 ad 08 00 00       	call   c010f193 <schedule>$/;"	l
c010e8e6	obj/kernel.asm	/^c010e8e6:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010e8eb	obj/kernel.asm	/^c010e8eb:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010e8ee	obj/kernel.asm	/^c010e8ee:	83 e0 01             	and    $0x1,%eax$/;"	l
c010e8f1	obj/kernel.asm	/^c010e8f1:	85 c0                	test   %eax,%eax$/;"	l
c010e8f3	obj/kernel.asm	/^c010e8f3:	74 11                	je     c010e906 <do_wait+0x107>$/;"	l
c010e8f5	obj/kernel.asm	/^c010e8f5:	c7 04 24 f7 ff ff ff 	movl   $0xfffffff7,(%esp)$/;"	l
c010e8fc	obj/kernel.asm	/^c010e8fc:	e8 f5 f0 ff ff       	call   c010d9f6 <do_exit>$/;"	l
c010e901	obj/kernel.asm	/^c010e901:	e9 40 ff ff ff       	jmp    c010e846 <do_wait+0x47>$/;"	l
c010e906	obj/kernel.asm	/^c010e906:	e9 3b ff ff ff       	jmp    c010e846 <do_wait+0x47>$/;"	l
c010e90b	obj/kernel.asm	/^c010e90b:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010e910	obj/kernel.asm	/^c010e910:	e9 88 00 00 00       	jmp    c010e99d <do_wait+0x19e>$/;"	l
c010e915	obj/kernel.asm	/^c010e915:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010e91a	obj/kernel.asm	/^c010e91a:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010e91d	obj/kernel.asm	/^c010e91d:	74 0a                	je     c010e929 <do_wait+0x12a>$/;"	l
c010e91f	obj/kernel.asm	/^c010e91f:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010e924	obj/kernel.asm	/^c010e924:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010e927	obj/kernel.asm	/^c010e927:	75 1c                	jne    c010e945 <do_wait+0x146>$/;"	l
c010e929	obj/kernel.asm	/^c010e929:	c7 44 24 08 0c 9d 11 	movl   $0xc0119d0c,0x8(%esp)$/;"	l
c010e930	obj/kernel.asm	/^c010e930:	c0 $/;"	l
c010e931	obj/kernel.asm	/^c010e931:	c7 44 24 04 9a 03 00 	movl   $0x39a,0x4(%esp)$/;"	l
c010e938	obj/kernel.asm	/^c010e938:	00 $/;"	l
c010e939	obj/kernel.asm	/^c010e939:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010e940	obj/kernel.asm	/^c010e940:	e8 f2 22 ff ff       	call   c0100c37 <__panic>$/;"	l
c010e945	obj/kernel.asm	/^c010e945:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e949	obj/kernel.asm	/^c010e949:	74 0e                	je     c010e959 <do_wait+0x15a>$/;"	l
c010e94b	obj/kernel.asm	/^c010e94b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e94e	obj/kernel.asm	/^c010e94e:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx$/;"	l
c010e954	obj/kernel.asm	/^c010e954:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e957	obj/kernel.asm	/^c010e957:	89 10                	mov    %edx,(%eax)$/;"	l
c010e959	obj/kernel.asm	/^c010e959:	e8 a3 e2 ff ff       	call   c010cc01 <__intr_save>$/;"	l
c010e95e	obj/kernel.asm	/^c010e95e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e961	obj/kernel.asm	/^c010e961:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e964	obj/kernel.asm	/^c010e964:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e967	obj/kernel.asm	/^c010e967:	e8 28 ea ff ff       	call   c010d394 <unhash_proc>$/;"	l
c010e96c	obj/kernel.asm	/^c010e96c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e96f	obj/kernel.asm	/^c010e96f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e972	obj/kernel.asm	/^c010e972:	e8 78 e7 ff ff       	call   c010d0ef <remove_links>$/;"	l
c010e977	obj/kernel.asm	/^c010e977:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e97a	obj/kernel.asm	/^c010e97a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e97d	obj/kernel.asm	/^c010e97d:	e8 a9 e2 ff ff       	call   c010cc2b <__intr_restore>$/;"	l
c010e982	obj/kernel.asm	/^c010e982:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e985	obj/kernel.asm	/^c010e985:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e988	obj/kernel.asm	/^c010e988:	e8 5e eb ff ff       	call   c010d4eb <put_kstack>$/;"	l
c010e98d	obj/kernel.asm	/^c010e98d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e990	obj/kernel.asm	/^c010e990:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e993	obj/kernel.asm	/^c010e993:	e8 6b 98 ff ff       	call   c0108203 <kfree>$/;"	l
c010e998	obj/kernel.asm	/^c010e998:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e99d	obj/kernel.asm	/^c010e99d:	c9                   	leave  $/;"	l
c010e99e	obj/kernel.asm	/^c010e99e:	c3                   	ret    $/;"	l
c010e99f	obj/kernel.asm	/^c010e99f <do_kill>:$/;"	l
c010e99f	obj/kernel.asm	/^c010e99f:	55                   	push   %ebp$/;"	l
c010e9a0	obj/kernel.asm	/^c010e9a0:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9a2	obj/kernel.asm	/^c010e9a2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e9a5	obj/kernel.asm	/^c010e9a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9a8	obj/kernel.asm	/^c010e9a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e9ab	obj/kernel.asm	/^c010e9ab:	e8 19 ea ff ff       	call   c010d3c9 <find_proc>$/;"	l
c010e9b0	obj/kernel.asm	/^c010e9b0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e9b3	obj/kernel.asm	/^c010e9b3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e9b7	obj/kernel.asm	/^c010e9b7:	74 44                	je     c010e9fd <do_kill+0x5e>$/;"	l
c010e9b9	obj/kernel.asm	/^c010e9b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9bc	obj/kernel.asm	/^c010e9bc:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010e9bf	obj/kernel.asm	/^c010e9bf:	83 e0 01             	and    $0x1,%eax$/;"	l
c010e9c2	obj/kernel.asm	/^c010e9c2:	85 c0                	test   %eax,%eax$/;"	l
c010e9c4	obj/kernel.asm	/^c010e9c4:	75 30                	jne    c010e9f6 <do_kill+0x57>$/;"	l
c010e9c6	obj/kernel.asm	/^c010e9c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9c9	obj/kernel.asm	/^c010e9c9:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010e9cc	obj/kernel.asm	/^c010e9cc:	83 c8 01             	or     $0x1,%eax$/;"	l
c010e9cf	obj/kernel.asm	/^c010e9cf:	89 c2                	mov    %eax,%edx$/;"	l
c010e9d1	obj/kernel.asm	/^c010e9d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9d4	obj/kernel.asm	/^c010e9d4:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010e9d7	obj/kernel.asm	/^c010e9d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9da	obj/kernel.asm	/^c010e9da:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010e9e0	obj/kernel.asm	/^c010e9e0:	85 c0                	test   %eax,%eax$/;"	l
c010e9e2	obj/kernel.asm	/^c010e9e2:	79 0b                	jns    c010e9ef <do_kill+0x50>$/;"	l
c010e9e4	obj/kernel.asm	/^c010e9e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9e7	obj/kernel.asm	/^c010e9e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010e9ea	obj/kernel.asm	/^c010e9ea:	e8 08 07 00 00       	call   c010f0f7 <wakeup_proc>$/;"	l
c010e9ef	obj/kernel.asm	/^c010e9ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e9f4	obj/kernel.asm	/^c010e9f4:	eb 0c                	jmp    c010ea02 <do_kill+0x63>$/;"	l
c010e9f6	obj/kernel.asm	/^c010e9f6:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010e9fb	obj/kernel.asm	/^c010e9fb:	eb 05                	jmp    c010ea02 <do_kill+0x63>$/;"	l
c010e9fd	obj/kernel.asm	/^c010e9fd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ea02	obj/kernel.asm	/^c010ea02:	c9                   	leave  $/;"	l
c010ea03	obj/kernel.asm	/^c010ea03:	c3                   	ret    $/;"	l
c010ea04	obj/kernel.asm	/^c010ea04 <kernel_execve>:$/;"	l
c010ea04	obj/kernel.asm	/^c010ea04:	55                   	push   %ebp$/;"	l
c010ea05	obj/kernel.asm	/^c010ea05:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea07	obj/kernel.asm	/^c010ea07:	53                   	push   %ebx$/;"	l
c010ea08	obj/kernel.asm	/^c010ea08:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010ea0b	obj/kernel.asm	/^c010ea0b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010ea12	obj/kernel.asm	/^c010ea12:	eb 04                	jmp    c010ea18 <kernel_execve+0x14>$/;"	l
c010ea14	obj/kernel.asm	/^c010ea14:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010ea18	obj/kernel.asm	/^c010ea18:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010ea1b	obj/kernel.asm	/^c010ea1b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010ea22	obj/kernel.asm	/^c010ea22:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ea25	obj/kernel.asm	/^c010ea25:	01 d0                	add    %edx,%eax$/;"	l
c010ea27	obj/kernel.asm	/^c010ea27:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea29	obj/kernel.asm	/^c010ea29:	85 c0                	test   %eax,%eax$/;"	l
c010ea2b	obj/kernel.asm	/^c010ea2b:	75 e7                	jne    c010ea14 <kernel_execve+0x10>$/;"	l
c010ea2d	obj/kernel.asm	/^c010ea2d:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010ea32	obj/kernel.asm	/^c010ea32:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ea35	obj/kernel.asm	/^c010ea35:	8b 4d f8             	mov    -0x8(%ebp),%ecx$/;"	l
c010ea38	obj/kernel.asm	/^c010ea38:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010ea3b	obj/kernel.asm	/^c010ea3b:	cd 80                	int    $0x80$/;"	l
c010ea3d	obj/kernel.asm	/^c010ea3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea40	obj/kernel.asm	/^c010ea40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea43	obj/kernel.asm	/^c010ea43:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea46	obj/kernel.asm	/^c010ea46:	5b                   	pop    %ebx$/;"	l
c010ea47	obj/kernel.asm	/^c010ea47:	5d                   	pop    %ebp$/;"	l
c010ea48	obj/kernel.asm	/^c010ea48:	c3                   	ret    $/;"	l
c010ea49	obj/kernel.asm	/^c010ea49 <user_main>:$/;"	l
c010ea49	obj/kernel.asm	/^c010ea49:	55                   	push   %ebp$/;"	l
c010ea4a	obj/kernel.asm	/^c010ea4a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea4c	obj/kernel.asm	/^c010ea4c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ea4f	obj/kernel.asm	/^c010ea4f:	c7 45 f0 28 9d 11 c0 	movl   $0xc0119d28,-0x10(%ebp)$/;"	l
c010ea56	obj/kernel.asm	/^c010ea56:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010ea5d	obj/kernel.asm	/^c010ea5d:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ea62	obj/kernel.asm	/^c010ea62:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ea65	obj/kernel.asm	/^c010ea65:	c7 44 24 08 28 9d 11 	movl   $0xc0119d28,0x8(%esp)$/;"	l
c010ea6c	obj/kernel.asm	/^c010ea6c:	c0 $/;"	l
c010ea6d	obj/kernel.asm	/^c010ea6d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ea71	obj/kernel.asm	/^c010ea71:	c7 04 24 2c 9d 11 c0 	movl   $0xc0119d2c,(%esp)$/;"	l
c010ea78	obj/kernel.asm	/^c010ea78:	e8 63 20 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010ea7d	obj/kernel.asm	/^c010ea7d:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010ea80	obj/kernel.asm	/^c010ea80:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ea84	obj/kernel.asm	/^c010ea84:	c7 04 24 28 9d 11 c0 	movl   $0xc0119d28,(%esp)$/;"	l
c010ea8b	obj/kernel.asm	/^c010ea8b:	e8 74 ff ff ff       	call   c010ea04 <kernel_execve>$/;"	l
c010ea90	obj/kernel.asm	/^c010ea90:	c7 44 24 08 53 9d 11 	movl   $0xc0119d53,0x8(%esp)$/;"	l
c010ea97	obj/kernel.asm	/^c010ea97:	c0 $/;"	l
c010ea98	obj/kernel.asm	/^c010ea98:	c7 44 24 04 e5 03 00 	movl   $0x3e5,0x4(%esp)$/;"	l
c010ea9f	obj/kernel.asm	/^c010ea9f:	00 $/;"	l
c010eaa0	obj/kernel.asm	/^c010eaa0:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010eaa7	obj/kernel.asm	/^c010eaa7:	e8 8b 21 ff ff       	call   c0100c37 <__panic>$/;"	l
c010eaac	obj/kernel.asm	/^c010eaac <init_main>:$/;"	l
c010eaac	obj/kernel.asm	/^c010eaac:	55                   	push   %ebp$/;"	l
c010eaad	obj/kernel.asm	/^c010eaad:	89 e5                	mov    %esp,%ebp$/;"	l
c010eaaf	obj/kernel.asm	/^c010eaaf:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010eab2	obj/kernel.asm	/^c010eab2:	c7 04 24 6d 9d 11 c0 	movl   $0xc0119d6d,(%esp)$/;"	l
c010eab9	obj/kernel.asm	/^c010eab9:	e8 f8 29 00 00       	call   c01114b6 <vfs_set_bootfs>$/;"	l
c010eabe	obj/kernel.asm	/^c010eabe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eac1	obj/kernel.asm	/^c010eac1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010eac5	obj/kernel.asm	/^c010eac5:	74 23                	je     c010eaea <init_main+0x3e>$/;"	l
c010eac7	obj/kernel.asm	/^c010eac7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eaca	obj/kernel.asm	/^c010eaca:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010eace	obj/kernel.asm	/^c010eace:	c7 44 24 08 74 9d 11 	movl   $0xc0119d74,0x8(%esp)$/;"	l
c010ead5	obj/kernel.asm	/^c010ead5:	c0 $/;"	l
c010ead6	obj/kernel.asm	/^c010ead6:	c7 44 24 04 ed 03 00 	movl   $0x3ed,0x4(%esp)$/;"	l
c010eadd	obj/kernel.asm	/^c010eadd:	00 $/;"	l
c010eade	obj/kernel.asm	/^c010eade:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010eae5	obj/kernel.asm	/^c010eae5:	e8 4d 21 ff ff       	call   c0100c37 <__panic>$/;"	l
c010eaea	obj/kernel.asm	/^c010eaea:	e8 3d 5c ff ff       	call   c010472c <nr_free_pages>$/;"	l
c010eaef	obj/kernel.asm	/^c010eaef:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eaf2	obj/kernel.asm	/^c010eaf2:	e8 d4 95 ff ff       	call   c01080cb <kallocated>$/;"	l
c010eaf7	obj/kernel.asm	/^c010eaf7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eafa	obj/kernel.asm	/^c010eafa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010eb01	obj/kernel.asm	/^c010eb01:	00 $/;"	l
c010eb02	obj/kernel.asm	/^c010eb02:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010eb09	obj/kernel.asm	/^c010eb09:	00 $/;"	l
c010eb0a	obj/kernel.asm	/^c010eb0a:	c7 04 24 49 ea 10 c0 	movl   $0xc010ea49,(%esp)$/;"	l
c010eb11	obj/kernel.asm	/^c010eb11:	e8 27 e9 ff ff       	call   c010d43d <kernel_thread>$/;"	l
c010eb16	obj/kernel.asm	/^c010eb16:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010eb19	obj/kernel.asm	/^c010eb19:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010eb1d	obj/kernel.asm	/^c010eb1d:	7f 1c                	jg     c010eb3b <init_main+0x8f>$/;"	l
c010eb1f	obj/kernel.asm	/^c010eb1f:	c7 44 24 08 8d 9d 11 	movl   $0xc0119d8d,0x8(%esp)$/;"	l
c010eb26	obj/kernel.asm	/^c010eb26:	c0 $/;"	l
c010eb27	obj/kernel.asm	/^c010eb27:	c7 44 24 04 f5 03 00 	movl   $0x3f5,0x4(%esp)$/;"	l
c010eb2e	obj/kernel.asm	/^c010eb2e:	00 $/;"	l
c010eb2f	obj/kernel.asm	/^c010eb2f:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010eb36	obj/kernel.asm	/^c010eb36:	e8 fc 20 ff ff       	call   c0100c37 <__panic>$/;"	l
c010eb3b	obj/kernel.asm	/^c010eb3b:	e8 66 ba ff ff       	call   c010a5a6 <check_sync>$/;"	l
c010eb40	obj/kernel.asm	/^c010eb40:	eb 05                	jmp    c010eb47 <init_main+0x9b>$/;"	l
c010eb42	obj/kernel.asm	/^c010eb42:	e8 4c 06 00 00       	call   c010f193 <schedule>$/;"	l
c010eb47	obj/kernel.asm	/^c010eb47:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010eb4e	obj/kernel.asm	/^c010eb4e:	00 $/;"	l
c010eb4f	obj/kernel.asm	/^c010eb4f:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010eb56	obj/kernel.asm	/^c010eb56:	e8 a4 fc ff ff       	call   c010e7ff <do_wait>$/;"	l
c010eb5b	obj/kernel.asm	/^c010eb5b:	85 c0                	test   %eax,%eax$/;"	l
c010eb5d	obj/kernel.asm	/^c010eb5d:	74 e3                	je     c010eb42 <init_main+0x96>$/;"	l
c010eb5f	obj/kernel.asm	/^c010eb5f:	e8 4d dd ff ff       	call   c010c8b1 <fs_cleanup>$/;"	l
c010eb64	obj/kernel.asm	/^c010eb64:	c7 04 24 a8 9d 11 c0 	movl   $0xc0119da8,(%esp)$/;"	l
c010eb6b	obj/kernel.asm	/^c010eb6b:	e8 70 1f ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010eb70	obj/kernel.asm	/^c010eb70:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010eb75	obj/kernel.asm	/^c010eb75:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010eb7b	obj/kernel.asm	/^c010eb7b:	85 c0                	test   %eax,%eax$/;"	l
c010eb7d	obj/kernel.asm	/^c010eb7d:	75 1e                	jne    c010eb9d <init_main+0xf1>$/;"	l
c010eb7f	obj/kernel.asm	/^c010eb7f:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010eb84	obj/kernel.asm	/^c010eb84:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010eb8a	obj/kernel.asm	/^c010eb8a:	85 c0                	test   %eax,%eax$/;"	l
c010eb8c	obj/kernel.asm	/^c010eb8c:	75 0f                	jne    c010eb9d <init_main+0xf1>$/;"	l
c010eb8e	obj/kernel.asm	/^c010eb8e:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010eb93	obj/kernel.asm	/^c010eb93:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010eb99	obj/kernel.asm	/^c010eb99:	85 c0                	test   %eax,%eax$/;"	l
c010eb9b	obj/kernel.asm	/^c010eb9b:	74 24                	je     c010ebc1 <init_main+0x115>$/;"	l
c010eb9d	obj/kernel.asm	/^c010eb9d:	c7 44 24 0c cc 9d 11 	movl   $0xc0119dcc,0xc(%esp)$/;"	l
c010eba4	obj/kernel.asm	/^c010eba4:	c0 $/;"	l
c010eba5	obj/kernel.asm	/^c010eba5:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ebac	obj/kernel.asm	/^c010ebac:	c0 $/;"	l
c010ebad	obj/kernel.asm	/^c010ebad:	c7 44 24 04 01 04 00 	movl   $0x401,0x4(%esp)$/;"	l
c010ebb4	obj/kernel.asm	/^c010ebb4:	00 $/;"	l
c010ebb5	obj/kernel.asm	/^c010ebb5:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ebbc	obj/kernel.asm	/^c010ebbc:	e8 76 20 ff ff       	call   c0100c37 <__panic>$/;"	l
c010ebc1	obj/kernel.asm	/^c010ebc1:	a1 80 9f 15 c0       	mov    0xc0159f80,%eax$/;"	l
c010ebc6	obj/kernel.asm	/^c010ebc6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ebc9	obj/kernel.asm	/^c010ebc9:	74 24                	je     c010ebef <init_main+0x143>$/;"	l
c010ebcb	obj/kernel.asm	/^c010ebcb:	c7 44 24 0c 17 9e 11 	movl   $0xc0119e17,0xc(%esp)$/;"	l
c010ebd2	obj/kernel.asm	/^c010ebd2:	c0 $/;"	l
c010ebd3	obj/kernel.asm	/^c010ebd3:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ebda	obj/kernel.asm	/^c010ebda:	c0 $/;"	l
c010ebdb	obj/kernel.asm	/^c010ebdb:	c7 44 24 04 02 04 00 	movl   $0x402,0x4(%esp)$/;"	l
c010ebe2	obj/kernel.asm	/^c010ebe2:	00 $/;"	l
c010ebe3	obj/kernel.asm	/^c010ebe3:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ebea	obj/kernel.asm	/^c010ebea:	e8 48 20 ff ff       	call   c0100c37 <__panic>$/;"	l
c010ebef	obj/kernel.asm	/^c010ebef:	c7 45 e4 5c b8 15 c0 	movl   $0xc015b85c,-0x1c(%ebp)$/;"	l
c010ebf6	obj/kernel.asm	/^c010ebf6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ebf9	obj/kernel.asm	/^c010ebf9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ebfc	obj/kernel.asm	/^c010ebfc:	8b 15 64 7f 15 c0    	mov    0xc0157f64,%edx$/;"	l
c010ec02	obj/kernel.asm	/^c010ec02:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010ec05	obj/kernel.asm	/^c010ec05:	39 d0                	cmp    %edx,%eax$/;"	l
c010ec07	obj/kernel.asm	/^c010ec07:	74 24                	je     c010ec2d <init_main+0x181>$/;"	l
c010ec09	obj/kernel.asm	/^c010ec09:	c7 44 24 0c 28 9e 11 	movl   $0xc0119e28,0xc(%esp)$/;"	l
c010ec10	obj/kernel.asm	/^c010ec10:	c0 $/;"	l
c010ec11	obj/kernel.asm	/^c010ec11:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ec18	obj/kernel.asm	/^c010ec18:	c0 $/;"	l
c010ec19	obj/kernel.asm	/^c010ec19:	c7 44 24 04 03 04 00 	movl   $0x403,0x4(%esp)$/;"	l
c010ec20	obj/kernel.asm	/^c010ec20:	00 $/;"	l
c010ec21	obj/kernel.asm	/^c010ec21:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ec28	obj/kernel.asm	/^c010ec28:	e8 0a 20 ff ff       	call   c0100c37 <__panic>$/;"	l
c010ec2d	obj/kernel.asm	/^c010ec2d:	c7 45 e0 5c b8 15 c0 	movl   $0xc015b85c,-0x20(%ebp)$/;"	l
c010ec34	obj/kernel.asm	/^c010ec34:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ec37	obj/kernel.asm	/^c010ec37:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec39	obj/kernel.asm	/^c010ec39:	8b 15 64 7f 15 c0    	mov    0xc0157f64,%edx$/;"	l
c010ec3f	obj/kernel.asm	/^c010ec3f:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010ec42	obj/kernel.asm	/^c010ec42:	39 d0                	cmp    %edx,%eax$/;"	l
c010ec44	obj/kernel.asm	/^c010ec44:	74 24                	je     c010ec6a <init_main+0x1be>$/;"	l
c010ec46	obj/kernel.asm	/^c010ec46:	c7 44 24 0c 58 9e 11 	movl   $0xc0119e58,0xc(%esp)$/;"	l
c010ec4d	obj/kernel.asm	/^c010ec4d:	c0 $/;"	l
c010ec4e	obj/kernel.asm	/^c010ec4e:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ec55	obj/kernel.asm	/^c010ec55:	c0 $/;"	l
c010ec56	obj/kernel.asm	/^c010ec56:	c7 44 24 04 04 04 00 	movl   $0x404,0x4(%esp)$/;"	l
c010ec5d	obj/kernel.asm	/^c010ec5d:	00 $/;"	l
c010ec5e	obj/kernel.asm	/^c010ec5e:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ec65	obj/kernel.asm	/^c010ec65:	e8 cd 1f ff ff       	call   c0100c37 <__panic>$/;"	l
c010ec6a	obj/kernel.asm	/^c010ec6a:	e8 bd 5a ff ff       	call   c010472c <nr_free_pages>$/;"	l
c010ec6f	obj/kernel.asm	/^c010ec6f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010ec72	obj/kernel.asm	/^c010ec72:	74 24                	je     c010ec98 <init_main+0x1ec>$/;"	l
c010ec74	obj/kernel.asm	/^c010ec74:	c7 44 24 0c 88 9e 11 	movl   $0xc0119e88,0xc(%esp)$/;"	l
c010ec7b	obj/kernel.asm	/^c010ec7b:	c0 $/;"	l
c010ec7c	obj/kernel.asm	/^c010ec7c:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ec83	obj/kernel.asm	/^c010ec83:	c0 $/;"	l
c010ec84	obj/kernel.asm	/^c010ec84:	c7 44 24 04 05 04 00 	movl   $0x405,0x4(%esp)$/;"	l
c010ec8b	obj/kernel.asm	/^c010ec8b:	00 $/;"	l
c010ec8c	obj/kernel.asm	/^c010ec8c:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ec93	obj/kernel.asm	/^c010ec93:	e8 9f 1f ff ff       	call   c0100c37 <__panic>$/;"	l
c010ec98	obj/kernel.asm	/^c010ec98:	e8 2e 94 ff ff       	call   c01080cb <kallocated>$/;"	l
c010ec9d	obj/kernel.asm	/^c010ec9d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010eca0	obj/kernel.asm	/^c010eca0:	74 24                	je     c010ecc6 <init_main+0x21a>$/;"	l
c010eca2	obj/kernel.asm	/^c010eca2:	c7 44 24 0c b0 9e 11 	movl   $0xc0119eb0,0xc(%esp)$/;"	l
c010eca9	obj/kernel.asm	/^c010eca9:	c0 $/;"	l
c010ecaa	obj/kernel.asm	/^c010ecaa:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ecb1	obj/kernel.asm	/^c010ecb1:	c0 $/;"	l
c010ecb2	obj/kernel.asm	/^c010ecb2:	c7 44 24 04 06 04 00 	movl   $0x406,0x4(%esp)$/;"	l
c010ecb9	obj/kernel.asm	/^c010ecb9:	00 $/;"	l
c010ecba	obj/kernel.asm	/^c010ecba:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ecc1	obj/kernel.asm	/^c010ecc1:	e8 71 1f ff ff       	call   c0100c37 <__panic>$/;"	l
c010ecc6	obj/kernel.asm	/^c010ecc6:	c7 04 24 d7 9e 11 c0 	movl   $0xc0119ed7,(%esp)$/;"	l
c010eccd	obj/kernel.asm	/^c010eccd:	e8 0e 1e ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010ecd2	obj/kernel.asm	/^c010ecd2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ecd7	obj/kernel.asm	/^c010ecd7:	c9                   	leave  $/;"	l
c010ecd8	obj/kernel.asm	/^c010ecd8:	c3                   	ret    $/;"	l
c010ecd9	obj/kernel.asm	/^c010ecd9 <proc_init>:$/;"	l
c010ecd9	obj/kernel.asm	/^c010ecd9:	55                   	push   %ebp$/;"	l
c010ecda	obj/kernel.asm	/^c010ecda:	89 e5                	mov    %esp,%ebp$/;"	l
c010ecdc	obj/kernel.asm	/^c010ecdc:	53                   	push   %ebx$/;"	l
c010ecdd	obj/kernel.asm	/^c010ecdd:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010ece0	obj/kernel.asm	/^c010ece0:	c7 45 ec 5c b8 15 c0 	movl   $0xc015b85c,-0x14(%ebp)$/;"	l
c010ece7	obj/kernel.asm	/^c010ece7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ecea	obj/kernel.asm	/^c010ecea:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010eced	obj/kernel.asm	/^c010eced:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ecf0	obj/kernel.asm	/^c010ecf0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ecf3	obj/kernel.asm	/^c010ecf3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ecf6	obj/kernel.asm	/^c010ecf6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ecf9	obj/kernel.asm	/^c010ecf9:	89 10                	mov    %edx,(%eax)$/;"	l
c010ecfb	obj/kernel.asm	/^c010ecfb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010ed02	obj/kernel.asm	/^c010ed02:	eb 26                	jmp    c010ed2a <proc_init+0x51>$/;"	l
c010ed04	obj/kernel.asm	/^c010ed04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed07	obj/kernel.asm	/^c010ed07:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010ed0a	obj/kernel.asm	/^c010ed0a:	05 80 7f 15 c0       	add    $0xc0157f80,%eax$/;"	l
c010ed0f	obj/kernel.asm	/^c010ed0f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ed12	obj/kernel.asm	/^c010ed12:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ed15	obj/kernel.asm	/^c010ed15:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ed18	obj/kernel.asm	/^c010ed18:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ed1b	obj/kernel.asm	/^c010ed1b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ed1e	obj/kernel.asm	/^c010ed1e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ed21	obj/kernel.asm	/^c010ed21:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ed24	obj/kernel.asm	/^c010ed24:	89 10                	mov    %edx,(%eax)$/;"	l
c010ed26	obj/kernel.asm	/^c010ed26:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010ed2a	obj/kernel.asm	/^c010ed2a:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010ed31	obj/kernel.asm	/^c010ed31:	7e d1                	jle    c010ed04 <proc_init+0x2b>$/;"	l
c010ed33	obj/kernel.asm	/^c010ed33:	e8 e4 e0 ff ff       	call   c010ce1c <alloc_proc>$/;"	l
c010ed38	obj/kernel.asm	/^c010ed38:	a3 60 7f 15 c0       	mov    %eax,0xc0157f60$/;"	l
c010ed3d	obj/kernel.asm	/^c010ed3d:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ed42	obj/kernel.asm	/^c010ed42:	85 c0                	test   %eax,%eax$/;"	l
c010ed44	obj/kernel.asm	/^c010ed44:	75 1c                	jne    c010ed62 <proc_init+0x89>$/;"	l
c010ed46	obj/kernel.asm	/^c010ed46:	c7 44 24 08 f0 9e 11 	movl   $0xc0119ef0,0x8(%esp)$/;"	l
c010ed4d	obj/kernel.asm	/^c010ed4d:	c0 $/;"	l
c010ed4e	obj/kernel.asm	/^c010ed4e:	c7 44 24 04 17 04 00 	movl   $0x417,0x4(%esp)$/;"	l
c010ed55	obj/kernel.asm	/^c010ed55:	00 $/;"	l
c010ed56	obj/kernel.asm	/^c010ed56:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ed5d	obj/kernel.asm	/^c010ed5d:	e8 d5 1e ff ff       	call   c0100c37 <__panic>$/;"	l
c010ed62	obj/kernel.asm	/^c010ed62:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ed67	obj/kernel.asm	/^c010ed67:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010ed6e	obj/kernel.asm	/^c010ed6e:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ed73	obj/kernel.asm	/^c010ed73:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010ed79	obj/kernel.asm	/^c010ed79:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ed7e	obj/kernel.asm	/^c010ed7e:	ba 00 20 15 c0       	mov    $0xc0152000,%edx$/;"	l
c010ed83	obj/kernel.asm	/^c010ed83:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010ed86	obj/kernel.asm	/^c010ed86:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ed8b	obj/kernel.asm	/^c010ed8b:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010ed92	obj/kernel.asm	/^c010ed92:	8b 1d 60 7f 15 c0    	mov    0xc0157f60,%ebx$/;"	l
c010ed98	obj/kernel.asm	/^c010ed98:	e8 4d db ff ff       	call   c010c8ea <files_create>$/;"	l
c010ed9d	obj/kernel.asm	/^c010ed9d:	89 83 c4 00 00 00    	mov    %eax,0xc4(%ebx)$/;"	l
c010eda3	obj/kernel.asm	/^c010eda3:	8b 83 c4 00 00 00    	mov    0xc4(%ebx),%eax$/;"	l
c010eda9	obj/kernel.asm	/^c010eda9:	85 c0                	test   %eax,%eax$/;"	l
c010edab	obj/kernel.asm	/^c010edab:	75 1c                	jne    c010edc9 <proc_init+0xf0>$/;"	l
c010edad	obj/kernel.asm	/^c010edad:	c7 44 24 08 08 9f 11 	movl   $0xc0119f08,0x8(%esp)$/;"	l
c010edb4	obj/kernel.asm	/^c010edb4:	c0 $/;"	l
c010edb5	obj/kernel.asm	/^c010edb5:	c7 44 24 04 20 04 00 	movl   $0x420,0x4(%esp)$/;"	l
c010edbc	obj/kernel.asm	/^c010edbc:	00 $/;"	l
c010edbd	obj/kernel.asm	/^c010edbd:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010edc4	obj/kernel.asm	/^c010edc4:	e8 6e 1e ff ff       	call   c0100c37 <__panic>$/;"	l
c010edc9	obj/kernel.asm	/^c010edc9:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010edce	obj/kernel.asm	/^c010edce:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010edd4	obj/kernel.asm	/^c010edd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010edd7	obj/kernel.asm	/^c010edd7:	e8 0c e0 ff ff       	call   c010cde8 <files_count_inc>$/;"	l
c010eddc	obj/kernel.asm	/^c010eddc:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ede1	obj/kernel.asm	/^c010ede1:	c7 44 24 04 2a 9f 11 	movl   $0xc0119f2a,0x4(%esp)$/;"	l
c010ede8	obj/kernel.asm	/^c010ede8:	c0 $/;"	l
c010ede9	obj/kernel.asm	/^c010ede9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010edec	obj/kernel.asm	/^c010edec:	e8 bf e1 ff ff       	call   c010cfb0 <set_proc_name>$/;"	l
c010edf1	obj/kernel.asm	/^c010edf1:	a1 80 9f 15 c0       	mov    0xc0159f80,%eax$/;"	l
c010edf6	obj/kernel.asm	/^c010edf6:	83 c0 01             	add    $0x1,%eax$/;"	l
c010edf9	obj/kernel.asm	/^c010edf9:	a3 80 9f 15 c0       	mov    %eax,0xc0159f80$/;"	l
c010edfe	obj/kernel.asm	/^c010edfe:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ee03	obj/kernel.asm	/^c010ee03:	a3 68 7f 15 c0       	mov    %eax,0xc0157f68$/;"	l
c010ee08	obj/kernel.asm	/^c010ee08:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c010ee0f	obj/kernel.asm	/^c010ee0f:	00 $/;"	l
c010ee10	obj/kernel.asm	/^c010ee10:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c010ee17	obj/kernel.asm	/^c010ee17:	00 $/;"	l
c010ee18	obj/kernel.asm	/^c010ee18:	c7 04 24 ac ea 10 c0 	movl   $0xc010eaac,(%esp)$/;"	l
c010ee1f	obj/kernel.asm	/^c010ee1f:	e8 19 e6 ff ff       	call   c010d43d <kernel_thread>$/;"	l
c010ee24	obj/kernel.asm	/^c010ee24:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ee27	obj/kernel.asm	/^c010ee27:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ee2b	obj/kernel.asm	/^c010ee2b:	7f 1c                	jg     c010ee49 <proc_init+0x170>$/;"	l
c010ee2d	obj/kernel.asm	/^c010ee2d:	c7 44 24 08 2f 9f 11 	movl   $0xc0119f2f,0x8(%esp)$/;"	l
c010ee34	obj/kernel.asm	/^c010ee34:	c0 $/;"	l
c010ee35	obj/kernel.asm	/^c010ee35:	c7 44 24 04 2b 04 00 	movl   $0x42b,0x4(%esp)$/;"	l
c010ee3c	obj/kernel.asm	/^c010ee3c:	00 $/;"	l
c010ee3d	obj/kernel.asm	/^c010ee3d:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010ee44	obj/kernel.asm	/^c010ee44:	e8 ee 1d ff ff       	call   c0100c37 <__panic>$/;"	l
c010ee49	obj/kernel.asm	/^c010ee49:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ee4c	obj/kernel.asm	/^c010ee4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ee4f	obj/kernel.asm	/^c010ee4f:	e8 75 e5 ff ff       	call   c010d3c9 <find_proc>$/;"	l
c010ee54	obj/kernel.asm	/^c010ee54:	a3 64 7f 15 c0       	mov    %eax,0xc0157f64$/;"	l
c010ee59	obj/kernel.asm	/^c010ee59:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010ee5e	obj/kernel.asm	/^c010ee5e:	c7 44 24 04 49 9f 11 	movl   $0xc0119f49,0x4(%esp)$/;"	l
c010ee65	obj/kernel.asm	/^c010ee65:	c0 $/;"	l
c010ee66	obj/kernel.asm	/^c010ee66:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ee69	obj/kernel.asm	/^c010ee69:	e8 42 e1 ff ff       	call   c010cfb0 <set_proc_name>$/;"	l
c010ee6e	obj/kernel.asm	/^c010ee6e:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ee73	obj/kernel.asm	/^c010ee73:	85 c0                	test   %eax,%eax$/;"	l
c010ee75	obj/kernel.asm	/^c010ee75:	74 0c                	je     c010ee83 <proc_init+0x1aa>$/;"	l
c010ee77	obj/kernel.asm	/^c010ee77:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010ee7c	obj/kernel.asm	/^c010ee7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ee7f	obj/kernel.asm	/^c010ee7f:	85 c0                	test   %eax,%eax$/;"	l
c010ee81	obj/kernel.asm	/^c010ee81:	74 24                	je     c010eea7 <proc_init+0x1ce>$/;"	l
c010ee83	obj/kernel.asm	/^c010ee83:	c7 44 24 0c 50 9f 11 	movl   $0xc0119f50,0xc(%esp)$/;"	l
c010ee8a	obj/kernel.asm	/^c010ee8a:	c0 $/;"	l
c010ee8b	obj/kernel.asm	/^c010ee8b:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010ee92	obj/kernel.asm	/^c010ee92:	c0 $/;"	l
c010ee93	obj/kernel.asm	/^c010ee93:	c7 44 24 04 31 04 00 	movl   $0x431,0x4(%esp)$/;"	l
c010ee9a	obj/kernel.asm	/^c010ee9a:	00 $/;"	l
c010ee9b	obj/kernel.asm	/^c010ee9b:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010eea2	obj/kernel.asm	/^c010eea2:	e8 90 1d ff ff       	call   c0100c37 <__panic>$/;"	l
c010eea7	obj/kernel.asm	/^c010eea7:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010eeac	obj/kernel.asm	/^c010eeac:	85 c0                	test   %eax,%eax$/;"	l
c010eeae	obj/kernel.asm	/^c010eeae:	74 0d                	je     c010eebd <proc_init+0x1e4>$/;"	l
c010eeb0	obj/kernel.asm	/^c010eeb0:	a1 64 7f 15 c0       	mov    0xc0157f64,%eax$/;"	l
c010eeb5	obj/kernel.asm	/^c010eeb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010eeb8	obj/kernel.asm	/^c010eeb8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010eebb	obj/kernel.asm	/^c010eebb:	74 24                	je     c010eee1 <proc_init+0x208>$/;"	l
c010eebd	obj/kernel.asm	/^c010eebd:	c7 44 24 0c 78 9f 11 	movl   $0xc0119f78,0xc(%esp)$/;"	l
c010eec4	obj/kernel.asm	/^c010eec4:	c0 $/;"	l
c010eec5	obj/kernel.asm	/^c010eec5:	c7 44 24 08 e3 9a 11 	movl   $0xc0119ae3,0x8(%esp)$/;"	l
c010eecc	obj/kernel.asm	/^c010eecc:	c0 $/;"	l
c010eecd	obj/kernel.asm	/^c010eecd:	c7 44 24 04 32 04 00 	movl   $0x432,0x4(%esp)$/;"	l
c010eed4	obj/kernel.asm	/^c010eed4:	00 $/;"	l
c010eed5	obj/kernel.asm	/^c010eed5:	c7 04 24 bc 9a 11 c0 	movl   $0xc0119abc,(%esp)$/;"	l
c010eedc	obj/kernel.asm	/^c010eedc:	e8 56 1d ff ff       	call   c0100c37 <__panic>$/;"	l
c010eee1	obj/kernel.asm	/^c010eee1:	83 c4 24             	add    $0x24,%esp$/;"	l
c010eee4	obj/kernel.asm	/^c010eee4:	5b                   	pop    %ebx$/;"	l
c010eee5	obj/kernel.asm	/^c010eee5:	5d                   	pop    %ebp$/;"	l
c010eee6	obj/kernel.asm	/^c010eee6:	c3                   	ret    $/;"	l
c010eee7	obj/kernel.asm	/^c010eee7 <cpu_idle>:$/;"	l
c010eee7	obj/kernel.asm	/^c010eee7:	55                   	push   %ebp$/;"	l
c010eee8	obj/kernel.asm	/^c010eee8:	89 e5                	mov    %esp,%ebp$/;"	l
c010eeea	obj/kernel.asm	/^c010eeea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eeed	obj/kernel.asm	/^c010eeed:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010eef2	obj/kernel.asm	/^c010eef2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010eef5	obj/kernel.asm	/^c010eef5:	85 c0                	test   %eax,%eax$/;"	l
c010eef7	obj/kernel.asm	/^c010eef7:	74 07                	je     c010ef00 <cpu_idle+0x19>$/;"	l
c010eef9	obj/kernel.asm	/^c010eef9:	e8 95 02 00 00       	call   c010f193 <schedule>$/;"	l
c010eefe	obj/kernel.asm	/^c010eefe:	eb ed                	jmp    c010eeed <cpu_idle+0x6>$/;"	l
c010ef00	obj/kernel.asm	/^c010ef00:	eb eb                	jmp    c010eeed <cpu_idle+0x6>$/;"	l
c010ef02	obj/kernel.asm	/^c010ef02 <lab6_set_priority>:$/;"	l
c010ef02	obj/kernel.asm	/^c010ef02:	55                   	push   %ebp$/;"	l
c010ef03	obj/kernel.asm	/^c010ef03:	89 e5                	mov    %esp,%ebp$/;"	l
c010ef05	obj/kernel.asm	/^c010ef05:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ef09	obj/kernel.asm	/^c010ef09:	75 11                	jne    c010ef1c <lab6_set_priority+0x1a>$/;"	l
c010ef0b	obj/kernel.asm	/^c010ef0b:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ef10	obj/kernel.asm	/^c010ef10:	c7 80 c0 00 00 00 01 	movl   $0x1,0xc0(%eax)$/;"	l
c010ef17	obj/kernel.asm	/^c010ef17:	00 00 00 $/;"	l
c010ef1a	obj/kernel.asm	/^c010ef1a:	eb 0e                	jmp    c010ef2a <lab6_set_priority+0x28>$/;"	l
c010ef1c	obj/kernel.asm	/^c010ef1c:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ef21	obj/kernel.asm	/^c010ef21:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ef24	obj/kernel.asm	/^c010ef24:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)$/;"	l
c010ef2a	obj/kernel.asm	/^c010ef2a:	5d                   	pop    %ebp$/;"	l
c010ef2b	obj/kernel.asm	/^c010ef2b:	c3                   	ret    $/;"	l
c010ef2c	obj/kernel.asm	/^c010ef2c <do_sleep>:$/;"	l
c010ef2c	obj/kernel.asm	/^c010ef2c:	55                   	push   %ebp$/;"	l
c010ef2d	obj/kernel.asm	/^c010ef2d:	89 e5                	mov    %esp,%ebp$/;"	l
c010ef2f	obj/kernel.asm	/^c010ef2f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ef32	obj/kernel.asm	/^c010ef32:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ef36	obj/kernel.asm	/^c010ef36:	75 07                	jne    c010ef3f <do_sleep+0x13>$/;"	l
c010ef38	obj/kernel.asm	/^c010ef38:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ef3d	obj/kernel.asm	/^c010ef3d:	eb 6b                	jmp    c010efaa <do_sleep+0x7e>$/;"	l
c010ef3f	obj/kernel.asm	/^c010ef3f:	e8 bd dc ff ff       	call   c010cc01 <__intr_save>$/;"	l
c010ef44	obj/kernel.asm	/^c010ef44:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ef47	obj/kernel.asm	/^c010ef47:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ef4a	obj/kernel.asm	/^c010ef4a:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ef4f	obj/kernel.asm	/^c010ef4f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010ef53	obj/kernel.asm	/^c010ef53:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ef57	obj/kernel.asm	/^c010ef57:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010ef5a	obj/kernel.asm	/^c010ef5a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef5d	obj/kernel.asm	/^c010ef5d:	e8 66 dc ff ff       	call   c010cbc8 <timer_init>$/;"	l
c010ef62	obj/kernel.asm	/^c010ef62:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ef65	obj/kernel.asm	/^c010ef65:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ef6a	obj/kernel.asm	/^c010ef6a:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010ef70	obj/kernel.asm	/^c010ef70:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010ef75	obj/kernel.asm	/^c010ef75:	c7 80 90 00 00 00 02 	movl   $0x80000002,0x90(%eax)$/;"	l
c010ef7c	obj/kernel.asm	/^c010ef7c:	00 00 80 $/;"	l
c010ef7f	obj/kernel.asm	/^c010ef7f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ef82	obj/kernel.asm	/^c010ef82:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef85	obj/kernel.asm	/^c010ef85:	e8 94 02 00 00       	call   c010f21e <add_timer>$/;"	l
c010ef8a	obj/kernel.asm	/^c010ef8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ef8d	obj/kernel.asm	/^c010ef8d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ef90	obj/kernel.asm	/^c010ef90:	e8 96 dc ff ff       	call   c010cc2b <__intr_restore>$/;"	l
c010ef95	obj/kernel.asm	/^c010ef95:	e8 f9 01 00 00       	call   c010f193 <schedule>$/;"	l
c010ef9a	obj/kernel.asm	/^c010ef9a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ef9d	obj/kernel.asm	/^c010ef9d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010efa0	obj/kernel.asm	/^c010efa0:	e8 b7 03 00 00       	call   c010f35c <del_timer>$/;"	l
c010efa5	obj/kernel.asm	/^c010efa5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010efaa	obj/kernel.asm	/^c010efaa:	c9                   	leave  $/;"	l
c010efab	obj/kernel.asm	/^c010efab:	c3                   	ret    $/;"	l
c010efac	obj/kernel.asm	/^c010efac <__intr_save>:$/;"	l
c010efac	obj/kernel.asm	/^c010efac:	55                   	push   %ebp$/;"	l
c010efad	obj/kernel.asm	/^c010efad:	89 e5                	mov    %esp,%ebp$/;"	l
c010efaf	obj/kernel.asm	/^c010efaf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010efb2	obj/kernel.asm	/^c010efb2:	9c                   	pushf  $/;"	l
c010efb3	obj/kernel.asm	/^c010efb3:	58                   	pop    %eax$/;"	l
c010efb4	obj/kernel.asm	/^c010efb4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010efb7	obj/kernel.asm	/^c010efb7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010efba	obj/kernel.asm	/^c010efba:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010efbf	obj/kernel.asm	/^c010efbf:	85 c0                	test   %eax,%eax$/;"	l
c010efc1	obj/kernel.asm	/^c010efc1:	74 0c                	je     c010efcf <__intr_save+0x23>$/;"	l
c010efc3	obj/kernel.asm	/^c010efc3:	e8 c6 3a ff ff       	call   c0102a8e <intr_disable>$/;"	l
c010efc8	obj/kernel.asm	/^c010efc8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010efcd	obj/kernel.asm	/^c010efcd:	eb 05                	jmp    c010efd4 <__intr_save+0x28>$/;"	l
c010efcf	obj/kernel.asm	/^c010efcf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010efd4	obj/kernel.asm	/^c010efd4:	c9                   	leave  $/;"	l
c010efd5	obj/kernel.asm	/^c010efd5:	c3                   	ret    $/;"	l
c010efd6	obj/kernel.asm	/^c010efd6 <__intr_restore>:$/;"	l
c010efd6	obj/kernel.asm	/^c010efd6:	55                   	push   %ebp$/;"	l
c010efd7	obj/kernel.asm	/^c010efd7:	89 e5                	mov    %esp,%ebp$/;"	l
c010efd9	obj/kernel.asm	/^c010efd9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010efdc	obj/kernel.asm	/^c010efdc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010efe0	obj/kernel.asm	/^c010efe0:	74 05                	je     c010efe7 <__intr_restore+0x11>$/;"	l
c010efe2	obj/kernel.asm	/^c010efe2:	e8 a1 3a ff ff       	call   c0102a88 <intr_enable>$/;"	l
c010efe7	obj/kernel.asm	/^c010efe7:	c9                   	leave  $/;"	l
c010efe8	obj/kernel.asm	/^c010efe8:	c3                   	ret    $/;"	l
c010efe9	obj/kernel.asm	/^c010efe9 <sched_class_enqueue>:$/;"	l
c010efe9	obj/kernel.asm	/^c010efe9:	55                   	push   %ebp$/;"	l
c010efea	obj/kernel.asm	/^c010efea:	89 e5                	mov    %esp,%ebp$/;"	l
c010efec	obj/kernel.asm	/^c010efec:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010efef	obj/kernel.asm	/^c010efef:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010eff4	obj/kernel.asm	/^c010eff4:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010eff7	obj/kernel.asm	/^c010eff7:	74 1a                	je     c010f013 <sched_class_enqueue+0x2a>$/;"	l
c010eff9	obj/kernel.asm	/^c010eff9:	a1 dc 9f 15 c0       	mov    0xc0159fdc,%eax$/;"	l
c010effe	obj/kernel.asm	/^c010effe:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f001	obj/kernel.asm	/^c010f001:	8b 15 e0 9f 15 c0    	mov    0xc0159fe0,%edx$/;"	l
c010f007	obj/kernel.asm	/^c010f007:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010f00a	obj/kernel.asm	/^c010f00a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010f00e	obj/kernel.asm	/^c010f00e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f011	obj/kernel.asm	/^c010f011:	ff d0                	call   *%eax$/;"	l
c010f013	obj/kernel.asm	/^c010f013:	c9                   	leave  $/;"	l
c010f014	obj/kernel.asm	/^c010f014:	c3                   	ret    $/;"	l
c010f015	obj/kernel.asm	/^c010f015 <sched_class_dequeue>:$/;"	l
c010f015	obj/kernel.asm	/^c010f015:	55                   	push   %ebp$/;"	l
c010f016	obj/kernel.asm	/^c010f016:	89 e5                	mov    %esp,%ebp$/;"	l
c010f018	obj/kernel.asm	/^c010f018:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f01b	obj/kernel.asm	/^c010f01b:	a1 dc 9f 15 c0       	mov    0xc0159fdc,%eax$/;"	l
c010f020	obj/kernel.asm	/^c010f020:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f023	obj/kernel.asm	/^c010f023:	8b 15 e0 9f 15 c0    	mov    0xc0159fe0,%edx$/;"	l
c010f029	obj/kernel.asm	/^c010f029:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010f02c	obj/kernel.asm	/^c010f02c:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010f030	obj/kernel.asm	/^c010f030:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f033	obj/kernel.asm	/^c010f033:	ff d0                	call   *%eax$/;"	l
c010f035	obj/kernel.asm	/^c010f035:	c9                   	leave  $/;"	l
c010f036	obj/kernel.asm	/^c010f036:	c3                   	ret    $/;"	l
c010f037	obj/kernel.asm	/^c010f037 <sched_class_pick_next>:$/;"	l
c010f037	obj/kernel.asm	/^c010f037:	55                   	push   %ebp$/;"	l
c010f038	obj/kernel.asm	/^c010f038:	89 e5                	mov    %esp,%ebp$/;"	l
c010f03a	obj/kernel.asm	/^c010f03a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f03d	obj/kernel.asm	/^c010f03d:	a1 dc 9f 15 c0       	mov    0xc0159fdc,%eax$/;"	l
c010f042	obj/kernel.asm	/^c010f042:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010f045	obj/kernel.asm	/^c010f045:	8b 15 e0 9f 15 c0    	mov    0xc0159fe0,%edx$/;"	l
c010f04b	obj/kernel.asm	/^c010f04b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f04e	obj/kernel.asm	/^c010f04e:	ff d0                	call   *%eax$/;"	l
c010f050	obj/kernel.asm	/^c010f050:	c9                   	leave  $/;"	l
c010f051	obj/kernel.asm	/^c010f051:	c3                   	ret    $/;"	l
c010f052	obj/kernel.asm	/^c010f052 <sched_class_proc_tick>:$/;"	l
c010f052	obj/kernel.asm	/^c010f052:	55                   	push   %ebp$/;"	l
c010f053	obj/kernel.asm	/^c010f053:	89 e5                	mov    %esp,%ebp$/;"	l
c010f055	obj/kernel.asm	/^c010f055:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f058	obj/kernel.asm	/^c010f058:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010f05d	obj/kernel.asm	/^c010f05d:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010f060	obj/kernel.asm	/^c010f060:	74 1c                	je     c010f07e <sched_class_proc_tick+0x2c>$/;"	l
c010f062	obj/kernel.asm	/^c010f062:	a1 dc 9f 15 c0       	mov    0xc0159fdc,%eax$/;"	l
c010f067	obj/kernel.asm	/^c010f067:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010f06a	obj/kernel.asm	/^c010f06a:	8b 15 e0 9f 15 c0    	mov    0xc0159fe0,%edx$/;"	l
c010f070	obj/kernel.asm	/^c010f070:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010f073	obj/kernel.asm	/^c010f073:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c010f077	obj/kernel.asm	/^c010f077:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f07a	obj/kernel.asm	/^c010f07a:	ff d0                	call   *%eax$/;"	l
c010f07c	obj/kernel.asm	/^c010f07c:	eb 0a                	jmp    c010f088 <sched_class_proc_tick+0x36>$/;"	l
c010f07e	obj/kernel.asm	/^c010f07e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f081	obj/kernel.asm	/^c010f081:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010f088	obj/kernel.asm	/^c010f088:	c9                   	leave  $/;"	l
c010f089	obj/kernel.asm	/^c010f089:	c3                   	ret    $/;"	l
c010f08a	obj/kernel.asm	/^c010f08a <sched_init>:$/;"	l
c010f08a	obj/kernel.asm	/^c010f08a:	55                   	push   %ebp$/;"	l
c010f08b	obj/kernel.asm	/^c010f08b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f08d	obj/kernel.asm	/^c010f08d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f090	obj/kernel.asm	/^c010f090:	c7 45 f4 d4 9f 15 c0 	movl   $0xc0159fd4,-0xc(%ebp)$/;"	l
c010f097	obj/kernel.asm	/^c010f097:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f09a	obj/kernel.asm	/^c010f09a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f09d	obj/kernel.asm	/^c010f09d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f0a0	obj/kernel.asm	/^c010f0a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f0a3	obj/kernel.asm	/^c010f0a3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010f0a6	obj/kernel.asm	/^c010f0a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f0a9	obj/kernel.asm	/^c010f0a9:	89 10                	mov    %edx,(%eax)$/;"	l
c010f0ab	obj/kernel.asm	/^c010f0ab:	c7 05 dc 9f 15 c0 78 	movl   $0xc0156a78,0xc0159fdc$/;"	l
c010f0b2	obj/kernel.asm	/^c010f0b2:	6a 15 c0 $/;"	l
c010f0b5	obj/kernel.asm	/^c010f0b5:	c7 05 e0 9f 15 c0 e4 	movl   $0xc0159fe4,0xc0159fe0$/;"	l
c010f0bc	obj/kernel.asm	/^c010f0bc:	9f 15 c0 $/;"	l
c010f0bf	obj/kernel.asm	/^c010f0bf:	a1 e0 9f 15 c0       	mov    0xc0159fe0,%eax$/;"	l
c010f0c4	obj/kernel.asm	/^c010f0c4:	c7 40 0c 14 00 00 00 	movl   $0x14,0xc(%eax)$/;"	l
c010f0cb	obj/kernel.asm	/^c010f0cb:	a1 dc 9f 15 c0       	mov    0xc0159fdc,%eax$/;"	l
c010f0d0	obj/kernel.asm	/^c010f0d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f0d3	obj/kernel.asm	/^c010f0d3:	8b 15 e0 9f 15 c0    	mov    0xc0159fe0,%edx$/;"	l
c010f0d9	obj/kernel.asm	/^c010f0d9:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010f0dc	obj/kernel.asm	/^c010f0dc:	ff d0                	call   *%eax$/;"	l
c010f0de	obj/kernel.asm	/^c010f0de:	a1 dc 9f 15 c0       	mov    0xc0159fdc,%eax$/;"	l
c010f0e3	obj/kernel.asm	/^c010f0e3:	8b 00                	mov    (%eax),%eax$/;"	l
c010f0e5	obj/kernel.asm	/^c010f0e5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f0e9	obj/kernel.asm	/^c010f0e9:	c7 04 24 a0 9f 11 c0 	movl   $0xc0119fa0,(%esp)$/;"	l
c010f0f0	obj/kernel.asm	/^c010f0f0:	e8 eb 19 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c010f0f5	obj/kernel.asm	/^c010f0f5:	c9                   	leave  $/;"	l
c010f0f6	obj/kernel.asm	/^c010f0f6:	c3                   	ret    $/;"	l
c010f0f7	obj/kernel.asm	/^c010f0f7 <wakeup_proc>:$/;"	l
c010f0f7	obj/kernel.asm	/^c010f0f7:	55                   	push   %ebp$/;"	l
c010f0f8	obj/kernel.asm	/^c010f0f8:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0fa	obj/kernel.asm	/^c010f0fa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f0fd	obj/kernel.asm	/^c010f0fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f100	obj/kernel.asm	/^c010f100:	8b 00                	mov    (%eax),%eax$/;"	l
c010f102	obj/kernel.asm	/^c010f102:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010f105	obj/kernel.asm	/^c010f105:	75 24                	jne    c010f12b <wakeup_proc+0x34>$/;"	l
c010f107	obj/kernel.asm	/^c010f107:	c7 44 24 0c b1 9f 11 	movl   $0xc0119fb1,0xc(%esp)$/;"	l
c010f10e	obj/kernel.asm	/^c010f10e:	c0 $/;"	l
c010f10f	obj/kernel.asm	/^c010f10f:	c7 44 24 08 cc 9f 11 	movl   $0xc0119fcc,0x8(%esp)$/;"	l
c010f116	obj/kernel.asm	/^c010f116:	c0 $/;"	l
c010f117	obj/kernel.asm	/^c010f117:	c7 44 24 04 3b 00 00 	movl   $0x3b,0x4(%esp)$/;"	l
c010f11e	obj/kernel.asm	/^c010f11e:	00 $/;"	l
c010f11f	obj/kernel.asm	/^c010f11f:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f126	obj/kernel.asm	/^c010f126:	e8 0c 1b ff ff       	call   c0100c37 <__panic>$/;"	l
c010f12b	obj/kernel.asm	/^c010f12b:	e8 7c fe ff ff       	call   c010efac <__intr_save>$/;"	l
c010f130	obj/kernel.asm	/^c010f130:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f133	obj/kernel.asm	/^c010f133:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f136	obj/kernel.asm	/^c010f136:	8b 00                	mov    (%eax),%eax$/;"	l
c010f138	obj/kernel.asm	/^c010f138:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010f13b	obj/kernel.asm	/^c010f13b:	74 2d                	je     c010f16a <wakeup_proc+0x73>$/;"	l
c010f13d	obj/kernel.asm	/^c010f13d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f140	obj/kernel.asm	/^c010f140:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010f146	obj/kernel.asm	/^c010f146:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f149	obj/kernel.asm	/^c010f149:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010f150	obj/kernel.asm	/^c010f150:	00 00 00 $/;"	l
c010f153	obj/kernel.asm	/^c010f153:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f158	obj/kernel.asm	/^c010f158:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010f15b	obj/kernel.asm	/^c010f15b:	74 29                	je     c010f186 <wakeup_proc+0x8f>$/;"	l
c010f15d	obj/kernel.asm	/^c010f15d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f160	obj/kernel.asm	/^c010f160:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f163	obj/kernel.asm	/^c010f163:	e8 81 fe ff ff       	call   c010efe9 <sched_class_enqueue>$/;"	l
c010f168	obj/kernel.asm	/^c010f168:	eb 1c                	jmp    c010f186 <wakeup_proc+0x8f>$/;"	l
c010f16a	obj/kernel.asm	/^c010f16a:	c7 44 24 08 f7 9f 11 	movl   $0xc0119ff7,0x8(%esp)$/;"	l
c010f171	obj/kernel.asm	/^c010f171:	c0 $/;"	l
c010f172	obj/kernel.asm	/^c010f172:	c7 44 24 04 47 00 00 	movl   $0x47,0x4(%esp)$/;"	l
c010f179	obj/kernel.asm	/^c010f179:	00 $/;"	l
c010f17a	obj/kernel.asm	/^c010f17a:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f181	obj/kernel.asm	/^c010f181:	e8 1d 1b ff ff       	call   c0100ca3 <__warn>$/;"	l
c010f186	obj/kernel.asm	/^c010f186:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f189	obj/kernel.asm	/^c010f189:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f18c	obj/kernel.asm	/^c010f18c:	e8 45 fe ff ff       	call   c010efd6 <__intr_restore>$/;"	l
c010f191	obj/kernel.asm	/^c010f191:	c9                   	leave  $/;"	l
c010f192	obj/kernel.asm	/^c010f192:	c3                   	ret    $/;"	l
c010f193	obj/kernel.asm	/^c010f193 <schedule>:$/;"	l
c010f193	obj/kernel.asm	/^c010f193:	55                   	push   %ebp$/;"	l
c010f194	obj/kernel.asm	/^c010f194:	89 e5                	mov    %esp,%ebp$/;"	l
c010f196	obj/kernel.asm	/^c010f196:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f199	obj/kernel.asm	/^c010f199:	e8 0e fe ff ff       	call   c010efac <__intr_save>$/;"	l
c010f19e	obj/kernel.asm	/^c010f19e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f1a1	obj/kernel.asm	/^c010f1a1:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f1a6	obj/kernel.asm	/^c010f1a6:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010f1ad	obj/kernel.asm	/^c010f1ad:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f1b2	obj/kernel.asm	/^c010f1b2:	8b 00                	mov    (%eax),%eax$/;"	l
c010f1b4	obj/kernel.asm	/^c010f1b4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010f1b7	obj/kernel.asm	/^c010f1b7:	75 0d                	jne    c010f1c6 <schedule+0x33>$/;"	l
c010f1b9	obj/kernel.asm	/^c010f1b9:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f1be	obj/kernel.asm	/^c010f1be:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f1c1	obj/kernel.asm	/^c010f1c1:	e8 23 fe ff ff       	call   c010efe9 <sched_class_enqueue>$/;"	l
c010f1c6	obj/kernel.asm	/^c010f1c6:	e8 6c fe ff ff       	call   c010f037 <sched_class_pick_next>$/;"	l
c010f1cb	obj/kernel.asm	/^c010f1cb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f1ce	obj/kernel.asm	/^c010f1ce:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f1d2	obj/kernel.asm	/^c010f1d2:	74 0b                	je     c010f1df <schedule+0x4c>$/;"	l
c010f1d4	obj/kernel.asm	/^c010f1d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f1d7	obj/kernel.asm	/^c010f1d7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f1da	obj/kernel.asm	/^c010f1da:	e8 36 fe ff ff       	call   c010f015 <sched_class_dequeue>$/;"	l
c010f1df	obj/kernel.asm	/^c010f1df:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f1e3	obj/kernel.asm	/^c010f1e3:	75 08                	jne    c010f1ed <schedule+0x5a>$/;"	l
c010f1e5	obj/kernel.asm	/^c010f1e5:	a1 60 7f 15 c0       	mov    0xc0157f60,%eax$/;"	l
c010f1ea	obj/kernel.asm	/^c010f1ea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f1ed	obj/kernel.asm	/^c010f1ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f1f0	obj/kernel.asm	/^c010f1f0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f1f3	obj/kernel.asm	/^c010f1f3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f1f6	obj/kernel.asm	/^c010f1f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f1f9	obj/kernel.asm	/^c010f1f9:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f1fc	obj/kernel.asm	/^c010f1fc:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f201	obj/kernel.asm	/^c010f201:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010f204	obj/kernel.asm	/^c010f204:	74 0b                	je     c010f211 <schedule+0x7e>$/;"	l
c010f206	obj/kernel.asm	/^c010f206:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f209	obj/kernel.asm	/^c010f209:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f20c	obj/kernel.asm	/^c010f20c:	e8 77 e0 ff ff       	call   c010d288 <proc_run>$/;"	l
c010f211	obj/kernel.asm	/^c010f211:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f214	obj/kernel.asm	/^c010f214:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f217	obj/kernel.asm	/^c010f217:	e8 ba fd ff ff       	call   c010efd6 <__intr_restore>$/;"	l
c010f21c	obj/kernel.asm	/^c010f21c:	c9                   	leave  $/;"	l
c010f21d	obj/kernel.asm	/^c010f21d:	c3                   	ret    $/;"	l
c010f21e	obj/kernel.asm	/^c010f21e <add_timer>:$/;"	l
c010f21e	obj/kernel.asm	/^c010f21e:	55                   	push   %ebp$/;"	l
c010f21f	obj/kernel.asm	/^c010f21f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f221	obj/kernel.asm	/^c010f221:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010f224	obj/kernel.asm	/^c010f224:	e8 83 fd ff ff       	call   c010efac <__intr_save>$/;"	l
c010f229	obj/kernel.asm	/^c010f229:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f22c	obj/kernel.asm	/^c010f22c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f22f	obj/kernel.asm	/^c010f22f:	8b 00                	mov    (%eax),%eax$/;"	l
c010f231	obj/kernel.asm	/^c010f231:	85 c0                	test   %eax,%eax$/;"	l
c010f233	obj/kernel.asm	/^c010f233:	74 0a                	je     c010f23f <add_timer+0x21>$/;"	l
c010f235	obj/kernel.asm	/^c010f235:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f238	obj/kernel.asm	/^c010f238:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f23b	obj/kernel.asm	/^c010f23b:	85 c0                	test   %eax,%eax$/;"	l
c010f23d	obj/kernel.asm	/^c010f23d:	75 24                	jne    c010f263 <add_timer+0x45>$/;"	l
c010f23f	obj/kernel.asm	/^c010f23f:	c7 44 24 0c 14 a0 11 	movl   $0xc011a014,0xc(%esp)$/;"	l
c010f246	obj/kernel.asm	/^c010f246:	c0 $/;"	l
c010f247	obj/kernel.asm	/^c010f247:	c7 44 24 08 cc 9f 11 	movl   $0xc0119fcc,0x8(%esp)$/;"	l
c010f24e	obj/kernel.asm	/^c010f24e:	c0 $/;"	l
c010f24f	obj/kernel.asm	/^c010f24f:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c010f256	obj/kernel.asm	/^c010f256:	00 $/;"	l
c010f257	obj/kernel.asm	/^c010f257:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f25e	obj/kernel.asm	/^c010f25e:	e8 d4 19 ff ff       	call   c0100c37 <__panic>$/;"	l
c010f263	obj/kernel.asm	/^c010f263:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f266	obj/kernel.asm	/^c010f266:	83 c0 08             	add    $0x8,%eax$/;"	l
c010f269	obj/kernel.asm	/^c010f269:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f26c	obj/kernel.asm	/^c010f26c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f26f	obj/kernel.asm	/^c010f26f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f272	obj/kernel.asm	/^c010f272:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010f275	obj/kernel.asm	/^c010f275:	0f 94 c0             	sete   %al$/;"	l
c010f278	obj/kernel.asm	/^c010f278:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f27b	obj/kernel.asm	/^c010f27b:	85 c0                	test   %eax,%eax$/;"	l
c010f27d	obj/kernel.asm	/^c010f27d:	75 24                	jne    c010f2a3 <add_timer+0x85>$/;"	l
c010f27f	obj/kernel.asm	/^c010f27f:	c7 44 24 0c 40 a0 11 	movl   $0xc011a040,0xc(%esp)$/;"	l
c010f286	obj/kernel.asm	/^c010f286:	c0 $/;"	l
c010f287	obj/kernel.asm	/^c010f287:	c7 44 24 08 cc 9f 11 	movl   $0xc0119fcc,0x8(%esp)$/;"	l
c010f28e	obj/kernel.asm	/^c010f28e:	c0 $/;"	l
c010f28f	obj/kernel.asm	/^c010f28f:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c010f296	obj/kernel.asm	/^c010f296:	00 $/;"	l
c010f297	obj/kernel.asm	/^c010f297:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f29e	obj/kernel.asm	/^c010f29e:	e8 94 19 ff ff       	call   c0100c37 <__panic>$/;"	l
c010f2a3	obj/kernel.asm	/^c010f2a3:	c7 45 e4 d4 9f 15 c0 	movl   $0xc0159fd4,-0x1c(%ebp)$/;"	l
c010f2aa	obj/kernel.asm	/^c010f2aa:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f2ad	obj/kernel.asm	/^c010f2ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f2b0	obj/kernel.asm	/^c010f2b0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f2b3	obj/kernel.asm	/^c010f2b3:	eb 4a                	jmp    c010f2ff <add_timer+0xe1>$/;"	l
c010f2b5	obj/kernel.asm	/^c010f2b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f2b8	obj/kernel.asm	/^c010f2b8:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010f2bb	obj/kernel.asm	/^c010f2bb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f2be	obj/kernel.asm	/^c010f2be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2c1	obj/kernel.asm	/^c010f2c1:	8b 10                	mov    (%eax),%edx$/;"	l
c010f2c3	obj/kernel.asm	/^c010f2c3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f2c6	obj/kernel.asm	/^c010f2c6:	8b 00                	mov    (%eax),%eax$/;"	l
c010f2c8	obj/kernel.asm	/^c010f2c8:	39 c2                	cmp    %eax,%edx$/;"	l
c010f2ca	obj/kernel.asm	/^c010f2ca:	73 13                	jae    c010f2df <add_timer+0xc1>$/;"	l
c010f2cc	obj/kernel.asm	/^c010f2cc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f2cf	obj/kernel.asm	/^c010f2cf:	8b 10                	mov    (%eax),%edx$/;"	l
c010f2d1	obj/kernel.asm	/^c010f2d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2d4	obj/kernel.asm	/^c010f2d4:	8b 00                	mov    (%eax),%eax$/;"	l
c010f2d6	obj/kernel.asm	/^c010f2d6:	29 c2                	sub    %eax,%edx$/;"	l
c010f2d8	obj/kernel.asm	/^c010f2d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f2db	obj/kernel.asm	/^c010f2db:	89 10                	mov    %edx,(%eax)$/;"	l
c010f2dd	obj/kernel.asm	/^c010f2dd:	eb 29                	jmp    c010f308 <add_timer+0xea>$/;"	l
c010f2df	obj/kernel.asm	/^c010f2df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2e2	obj/kernel.asm	/^c010f2e2:	8b 10                	mov    (%eax),%edx$/;"	l
c010f2e4	obj/kernel.asm	/^c010f2e4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f2e7	obj/kernel.asm	/^c010f2e7:	8b 00                	mov    (%eax),%eax$/;"	l
c010f2e9	obj/kernel.asm	/^c010f2e9:	29 c2                	sub    %eax,%edx$/;"	l
c010f2eb	obj/kernel.asm	/^c010f2eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2ee	obj/kernel.asm	/^c010f2ee:	89 10                	mov    %edx,(%eax)$/;"	l
c010f2f0	obj/kernel.asm	/^c010f2f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f2f3	obj/kernel.asm	/^c010f2f3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010f2f6	obj/kernel.asm	/^c010f2f6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f2f9	obj/kernel.asm	/^c010f2f9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f2fc	obj/kernel.asm	/^c010f2fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f2ff	obj/kernel.asm	/^c010f2ff:	81 7d f4 d4 9f 15 c0 	cmpl   $0xc0159fd4,-0xc(%ebp)$/;"	l
c010f306	obj/kernel.asm	/^c010f306:	75 ad                	jne    c010f2b5 <add_timer+0x97>$/;"	l
c010f308	obj/kernel.asm	/^c010f308:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f30b	obj/kernel.asm	/^c010f30b:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010f30e	obj/kernel.asm	/^c010f30e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f311	obj/kernel.asm	/^c010f311:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f314	obj/kernel.asm	/^c010f314:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010f317	obj/kernel.asm	/^c010f317:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f31a	obj/kernel.asm	/^c010f31a:	8b 00                	mov    (%eax),%eax$/;"	l
c010f31c	obj/kernel.asm	/^c010f31c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f31f	obj/kernel.asm	/^c010f31f:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010f322	obj/kernel.asm	/^c010f322:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010f325	obj/kernel.asm	/^c010f325:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f328	obj/kernel.asm	/^c010f328:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010f32b	obj/kernel.asm	/^c010f32b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010f32e	obj/kernel.asm	/^c010f32e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010f331	obj/kernel.asm	/^c010f331:	89 10                	mov    %edx,(%eax)$/;"	l
c010f333	obj/kernel.asm	/^c010f333:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010f336	obj/kernel.asm	/^c010f336:	8b 10                	mov    (%eax),%edx$/;"	l
c010f338	obj/kernel.asm	/^c010f338:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f33b	obj/kernel.asm	/^c010f33b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f33e	obj/kernel.asm	/^c010f33e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010f341	obj/kernel.asm	/^c010f341:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010f344	obj/kernel.asm	/^c010f344:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f347	obj/kernel.asm	/^c010f347:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010f34a	obj/kernel.asm	/^c010f34a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010f34d	obj/kernel.asm	/^c010f34d:	89 10                	mov    %edx,(%eax)$/;"	l
c010f34f	obj/kernel.asm	/^c010f34f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f352	obj/kernel.asm	/^c010f352:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f355	obj/kernel.asm	/^c010f355:	e8 7c fc ff ff       	call   c010efd6 <__intr_restore>$/;"	l
c010f35a	obj/kernel.asm	/^c010f35a:	c9                   	leave  $/;"	l
c010f35b	obj/kernel.asm	/^c010f35b:	c3                   	ret    $/;"	l
c010f35c	obj/kernel.asm	/^c010f35c <del_timer>:$/;"	l
c010f35c	obj/kernel.asm	/^c010f35c:	55                   	push   %ebp$/;"	l
c010f35d	obj/kernel.asm	/^c010f35d:	89 e5                	mov    %esp,%ebp$/;"	l
c010f35f	obj/kernel.asm	/^c010f35f:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010f362	obj/kernel.asm	/^c010f362:	e8 45 fc ff ff       	call   c010efac <__intr_save>$/;"	l
c010f367	obj/kernel.asm	/^c010f367:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f36a	obj/kernel.asm	/^c010f36a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f36d	obj/kernel.asm	/^c010f36d:	83 c0 08             	add    $0x8,%eax$/;"	l
c010f370	obj/kernel.asm	/^c010f370:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f373	obj/kernel.asm	/^c010f373:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f376	obj/kernel.asm	/^c010f376:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f379	obj/kernel.asm	/^c010f379:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010f37c	obj/kernel.asm	/^c010f37c:	0f 94 c0             	sete   %al$/;"	l
c010f37f	obj/kernel.asm	/^c010f37f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f382	obj/kernel.asm	/^c010f382:	85 c0                	test   %eax,%eax$/;"	l
c010f384	obj/kernel.asm	/^c010f384:	0f 85 89 00 00 00    	jne    c010f413 <del_timer+0xb7>$/;"	l
c010f38a	obj/kernel.asm	/^c010f38a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f38d	obj/kernel.asm	/^c010f38d:	8b 00                	mov    (%eax),%eax$/;"	l
c010f38f	obj/kernel.asm	/^c010f38f:	85 c0                	test   %eax,%eax$/;"	l
c010f391	obj/kernel.asm	/^c010f391:	74 35                	je     c010f3c8 <del_timer+0x6c>$/;"	l
c010f393	obj/kernel.asm	/^c010f393:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f396	obj/kernel.asm	/^c010f396:	83 c0 08             	add    $0x8,%eax$/;"	l
c010f399	obj/kernel.asm	/^c010f399:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f39c	obj/kernel.asm	/^c010f39c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f39f	obj/kernel.asm	/^c010f39f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f3a2	obj/kernel.asm	/^c010f3a2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f3a5	obj/kernel.asm	/^c010f3a5:	81 7d f0 d4 9f 15 c0 	cmpl   $0xc0159fd4,-0x10(%ebp)$/;"	l
c010f3ac	obj/kernel.asm	/^c010f3ac:	74 1a                	je     c010f3c8 <del_timer+0x6c>$/;"	l
c010f3ae	obj/kernel.asm	/^c010f3ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f3b1	obj/kernel.asm	/^c010f3b1:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010f3b4	obj/kernel.asm	/^c010f3b4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f3b7	obj/kernel.asm	/^c010f3b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f3ba	obj/kernel.asm	/^c010f3ba:	8b 10                	mov    (%eax),%edx$/;"	l
c010f3bc	obj/kernel.asm	/^c010f3bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f3bf	obj/kernel.asm	/^c010f3bf:	8b 00                	mov    (%eax),%eax$/;"	l
c010f3c1	obj/kernel.asm	/^c010f3c1:	01 c2                	add    %eax,%edx$/;"	l
c010f3c3	obj/kernel.asm	/^c010f3c3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f3c6	obj/kernel.asm	/^c010f3c6:	89 10                	mov    %edx,(%eax)$/;"	l
c010f3c8	obj/kernel.asm	/^c010f3c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f3cb	obj/kernel.asm	/^c010f3cb:	83 c0 08             	add    $0x8,%eax$/;"	l
c010f3ce	obj/kernel.asm	/^c010f3ce:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010f3d1	obj/kernel.asm	/^c010f3d1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f3d4	obj/kernel.asm	/^c010f3d4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f3d7	obj/kernel.asm	/^c010f3d7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f3da	obj/kernel.asm	/^c010f3da:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f3dd	obj/kernel.asm	/^c010f3dd:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010f3e0	obj/kernel.asm	/^c010f3e0:	8b 12                	mov    (%edx),%edx$/;"	l
c010f3e2	obj/kernel.asm	/^c010f3e2:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010f3e5	obj/kernel.asm	/^c010f3e5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010f3e8	obj/kernel.asm	/^c010f3e8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f3eb	obj/kernel.asm	/^c010f3eb:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010f3ee	obj/kernel.asm	/^c010f3ee:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f3f1	obj/kernel.asm	/^c010f3f1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010f3f4	obj/kernel.asm	/^c010f3f4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f3f7	obj/kernel.asm	/^c010f3f7:	89 10                	mov    %edx,(%eax)$/;"	l
c010f3f9	obj/kernel.asm	/^c010f3f9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f3fc	obj/kernel.asm	/^c010f3fc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010f3ff	obj/kernel.asm	/^c010f3ff:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f402	obj/kernel.asm	/^c010f402:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010f405	obj/kernel.asm	/^c010f405:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f408	obj/kernel.asm	/^c010f408:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f40b	obj/kernel.asm	/^c010f40b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010f40e	obj/kernel.asm	/^c010f40e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f411	obj/kernel.asm	/^c010f411:	89 10                	mov    %edx,(%eax)$/;"	l
c010f413	obj/kernel.asm	/^c010f413:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f416	obj/kernel.asm	/^c010f416:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f419	obj/kernel.asm	/^c010f419:	e8 b8 fb ff ff       	call   c010efd6 <__intr_restore>$/;"	l
c010f41e	obj/kernel.asm	/^c010f41e:	c9                   	leave  $/;"	l
c010f41f	obj/kernel.asm	/^c010f41f:	c3                   	ret    $/;"	l
c010f420	obj/kernel.asm	/^c010f420 <run_timer_list>:$/;"	l
c010f420	obj/kernel.asm	/^c010f420:	55                   	push   %ebp$/;"	l
c010f421	obj/kernel.asm	/^c010f421:	89 e5                	mov    %esp,%ebp$/;"	l
c010f423	obj/kernel.asm	/^c010f423:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010f426	obj/kernel.asm	/^c010f426:	e8 81 fb ff ff       	call   c010efac <__intr_save>$/;"	l
c010f42b	obj/kernel.asm	/^c010f42b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f42e	obj/kernel.asm	/^c010f42e:	c7 45 e4 d4 9f 15 c0 	movl   $0xc0159fd4,-0x1c(%ebp)$/;"	l
c010f435	obj/kernel.asm	/^c010f435:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f438	obj/kernel.asm	/^c010f438:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f43b	obj/kernel.asm	/^c010f43b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f43e	obj/kernel.asm	/^c010f43e:	81 7d f4 d4 9f 15 c0 	cmpl   $0xc0159fd4,-0xc(%ebp)$/;"	l
c010f445	obj/kernel.asm	/^c010f445:	0f 84 fb 00 00 00    	je     c010f546 <run_timer_list+0x126>$/;"	l
c010f44b	obj/kernel.asm	/^c010f44b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f44e	obj/kernel.asm	/^c010f44e:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010f451	obj/kernel.asm	/^c010f451:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f454	obj/kernel.asm	/^c010f454:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f457	obj/kernel.asm	/^c010f457:	8b 00                	mov    (%eax),%eax$/;"	l
c010f459	obj/kernel.asm	/^c010f459:	85 c0                	test   %eax,%eax$/;"	l
c010f45b	obj/kernel.asm	/^c010f45b:	75 24                	jne    c010f481 <run_timer_list+0x61>$/;"	l
c010f45d	obj/kernel.asm	/^c010f45d:	c7 44 24 0c 61 a0 11 	movl   $0xc011a061,0xc(%esp)$/;"	l
c010f464	obj/kernel.asm	/^c010f464:	c0 $/;"	l
c010f465	obj/kernel.asm	/^c010f465:	c7 44 24 08 cc 9f 11 	movl   $0xc0119fcc,0x8(%esp)$/;"	l
c010f46c	obj/kernel.asm	/^c010f46c:	c0 $/;"	l
c010f46d	obj/kernel.asm	/^c010f46d:	c7 44 24 04 96 00 00 	movl   $0x96,0x4(%esp)$/;"	l
c010f474	obj/kernel.asm	/^c010f474:	00 $/;"	l
c010f475	obj/kernel.asm	/^c010f475:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f47c	obj/kernel.asm	/^c010f47c:	e8 b6 17 ff ff       	call   c0100c37 <__panic>$/;"	l
c010f481	obj/kernel.asm	/^c010f481:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f484	obj/kernel.asm	/^c010f484:	8b 00                	mov    (%eax),%eax$/;"	l
c010f486	obj/kernel.asm	/^c010f486:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f489	obj/kernel.asm	/^c010f489:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f48c	obj/kernel.asm	/^c010f48c:	89 10                	mov    %edx,(%eax)$/;"	l
c010f48e	obj/kernel.asm	/^c010f48e:	e9 a6 00 00 00       	jmp    c010f539 <run_timer_list+0x119>$/;"	l
c010f493	obj/kernel.asm	/^c010f493:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f496	obj/kernel.asm	/^c010f496:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010f499	obj/kernel.asm	/^c010f499:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f49c	obj/kernel.asm	/^c010f49c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f49f	obj/kernel.asm	/^c010f49f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f4a2	obj/kernel.asm	/^c010f4a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f4a5	obj/kernel.asm	/^c010f4a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f4a8	obj/kernel.asm	/^c010f4a8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f4ab	obj/kernel.asm	/^c010f4ab:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f4ae	obj/kernel.asm	/^c010f4ae:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010f4b4	obj/kernel.asm	/^c010f4b4:	85 c0                	test   %eax,%eax$/;"	l
c010f4b6	obj/kernel.asm	/^c010f4b6:	74 31                	je     c010f4e9 <run_timer_list+0xc9>$/;"	l
c010f4b8	obj/kernel.asm	/^c010f4b8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f4bb	obj/kernel.asm	/^c010f4bb:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010f4c1	obj/kernel.asm	/^c010f4c1:	85 c0                	test   %eax,%eax$/;"	l
c010f4c3	obj/kernel.asm	/^c010f4c3:	78 4a                	js     c010f50f <run_timer_list+0xef>$/;"	l
c010f4c5	obj/kernel.asm	/^c010f4c5:	c7 44 24 0c 78 a0 11 	movl   $0xc011a078,0xc(%esp)$/;"	l
c010f4cc	obj/kernel.asm	/^c010f4cc:	c0 $/;"	l
c010f4cd	obj/kernel.asm	/^c010f4cd:	c7 44 24 08 cc 9f 11 	movl   $0xc0119fcc,0x8(%esp)$/;"	l
c010f4d4	obj/kernel.asm	/^c010f4d4:	c0 $/;"	l
c010f4d5	obj/kernel.asm	/^c010f4d5:	c7 44 24 04 9c 00 00 	movl   $0x9c,0x4(%esp)$/;"	l
c010f4dc	obj/kernel.asm	/^c010f4dc:	00 $/;"	l
c010f4dd	obj/kernel.asm	/^c010f4dd:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f4e4	obj/kernel.asm	/^c010f4e4:	e8 4e 17 ff ff       	call   c0100c37 <__panic>$/;"	l
c010f4e9	obj/kernel.asm	/^c010f4e9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f4ec	obj/kernel.asm	/^c010f4ec:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f4ef	obj/kernel.asm	/^c010f4ef:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010f4f3	obj/kernel.asm	/^c010f4f3:	c7 44 24 08 9c a0 11 	movl   $0xc011a09c,0x8(%esp)$/;"	l
c010f4fa	obj/kernel.asm	/^c010f4fa:	c0 $/;"	l
c010f4fb	obj/kernel.asm	/^c010f4fb:	c7 44 24 04 9f 00 00 	movl   $0x9f,0x4(%esp)$/;"	l
c010f502	obj/kernel.asm	/^c010f502:	00 $/;"	l
c010f503	obj/kernel.asm	/^c010f503:	c7 04 24 e1 9f 11 c0 	movl   $0xc0119fe1,(%esp)$/;"	l
c010f50a	obj/kernel.asm	/^c010f50a:	e8 94 17 ff ff       	call   c0100ca3 <__warn>$/;"	l
c010f50f	obj/kernel.asm	/^c010f50f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f512	obj/kernel.asm	/^c010f512:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f515	obj/kernel.asm	/^c010f515:	e8 dd fb ff ff       	call   c010f0f7 <wakeup_proc>$/;"	l
c010f51a	obj/kernel.asm	/^c010f51a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f51d	obj/kernel.asm	/^c010f51d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f520	obj/kernel.asm	/^c010f520:	e8 37 fe ff ff       	call   c010f35c <del_timer>$/;"	l
c010f525	obj/kernel.asm	/^c010f525:	81 7d f4 d4 9f 15 c0 	cmpl   $0xc0159fd4,-0xc(%ebp)$/;"	l
c010f52c	obj/kernel.asm	/^c010f52c:	75 02                	jne    c010f530 <run_timer_list+0x110>$/;"	l
c010f52e	obj/kernel.asm	/^c010f52e:	eb 16                	jmp    c010f546 <run_timer_list+0x126>$/;"	l
c010f530	obj/kernel.asm	/^c010f530:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f533	obj/kernel.asm	/^c010f533:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010f536	obj/kernel.asm	/^c010f536:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f539	obj/kernel.asm	/^c010f539:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f53c	obj/kernel.asm	/^c010f53c:	8b 00                	mov    (%eax),%eax$/;"	l
c010f53e	obj/kernel.asm	/^c010f53e:	85 c0                	test   %eax,%eax$/;"	l
c010f540	obj/kernel.asm	/^c010f540:	0f 84 4d ff ff ff    	je     c010f493 <run_timer_list+0x73>$/;"	l
c010f546	obj/kernel.asm	/^c010f546:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f54b	obj/kernel.asm	/^c010f54b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f54e	obj/kernel.asm	/^c010f54e:	e8 ff fa ff ff       	call   c010f052 <sched_class_proc_tick>$/;"	l
c010f553	obj/kernel.asm	/^c010f553:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f556	obj/kernel.asm	/^c010f556:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f559	obj/kernel.asm	/^c010f559:	e8 78 fa ff ff       	call   c010efd6 <__intr_restore>$/;"	l
c010f55e	obj/kernel.asm	/^c010f55e:	c9                   	leave  $/;"	l
c010f55f	obj/kernel.asm	/^c010f55f:	c3                   	ret    $/;"	l
c010f560	obj/kernel.asm	/^c010f560 <skew_heap_merge>:$/;"	l
c010f560	obj/kernel.asm	/^c010f560:	55                   	push   %ebp$/;"	l
c010f561	obj/kernel.asm	/^c010f561:	89 e5                	mov    %esp,%ebp$/;"	l
c010f563	obj/kernel.asm	/^c010f563:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f566	obj/kernel.asm	/^c010f566:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f56a	obj/kernel.asm	/^c010f56a:	75 08                	jne    c010f574 <skew_heap_merge+0x14>$/;"	l
c010f56c	obj/kernel.asm	/^c010f56c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f56f	obj/kernel.asm	/^c010f56f:	e9 bd 00 00 00       	jmp    c010f631 <skew_heap_merge+0xd1>$/;"	l
c010f574	obj/kernel.asm	/^c010f574:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f578	obj/kernel.asm	/^c010f578:	75 08                	jne    c010f582 <skew_heap_merge+0x22>$/;"	l
c010f57a	obj/kernel.asm	/^c010f57a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f57d	obj/kernel.asm	/^c010f57d:	e9 af 00 00 00       	jmp    c010f631 <skew_heap_merge+0xd1>$/;"	l
c010f582	obj/kernel.asm	/^c010f582:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f585	obj/kernel.asm	/^c010f585:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f589	obj/kernel.asm	/^c010f589:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f58c	obj/kernel.asm	/^c010f58c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f58f	obj/kernel.asm	/^c010f58f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010f592	obj/kernel.asm	/^c010f592:	ff d0                	call   *%eax$/;"	l
c010f594	obj/kernel.asm	/^c010f594:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
c010f597	obj/kernel.asm	/^c010f597:	75 4d                	jne    c010f5e6 <skew_heap_merge+0x86>$/;"	l
c010f599	obj/kernel.asm	/^c010f599:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f59c	obj/kernel.asm	/^c010f59c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f59f	obj/kernel.asm	/^c010f59f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f5a2	obj/kernel.asm	/^c010f5a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f5a5	obj/kernel.asm	/^c010f5a5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f5a8	obj/kernel.asm	/^c010f5a8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010f5ab	obj/kernel.asm	/^c010f5ab:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010f5af	obj/kernel.asm	/^c010f5af:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010f5b2	obj/kernel.asm	/^c010f5b2:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010f5b6	obj/kernel.asm	/^c010f5b6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f5b9	obj/kernel.asm	/^c010f5b9:	e8 a2 ff ff ff       	call   c010f560 <skew_heap_merge>$/;"	l
c010f5be	obj/kernel.asm	/^c010f5be:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f5c1	obj/kernel.asm	/^c010f5c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f5c4	obj/kernel.asm	/^c010f5c4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010f5c7	obj/kernel.asm	/^c010f5c7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f5ca	obj/kernel.asm	/^c010f5ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f5cd	obj/kernel.asm	/^c010f5cd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f5d0	obj/kernel.asm	/^c010f5d0:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f5d3	obj/kernel.asm	/^c010f5d3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f5d7	obj/kernel.asm	/^c010f5d7:	74 08                	je     c010f5e1 <skew_heap_merge+0x81>$/;"	l
c010f5d9	obj/kernel.asm	/^c010f5d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f5dc	obj/kernel.asm	/^c010f5dc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f5df	obj/kernel.asm	/^c010f5df:	89 10                	mov    %edx,(%eax)$/;"	l
c010f5e1	obj/kernel.asm	/^c010f5e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f5e4	obj/kernel.asm	/^c010f5e4:	eb 4b                	jmp    c010f631 <skew_heap_merge+0xd1>$/;"	l
c010f5e6	obj/kernel.asm	/^c010f5e6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f5e9	obj/kernel.asm	/^c010f5e9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f5ec	obj/kernel.asm	/^c010f5ec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f5ef	obj/kernel.asm	/^c010f5ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f5f2	obj/kernel.asm	/^c010f5f2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f5f5	obj/kernel.asm	/^c010f5f5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010f5f8	obj/kernel.asm	/^c010f5f8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c010f5fc	obj/kernel.asm	/^c010f5fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f600	obj/kernel.asm	/^c010f600:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f603	obj/kernel.asm	/^c010f603:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f606	obj/kernel.asm	/^c010f606:	e8 55 ff ff ff       	call   c010f560 <skew_heap_merge>$/;"	l
c010f60b	obj/kernel.asm	/^c010f60b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f60e	obj/kernel.asm	/^c010f60e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f611	obj/kernel.asm	/^c010f611:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010f614	obj/kernel.asm	/^c010f614:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f617	obj/kernel.asm	/^c010f617:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f61a	obj/kernel.asm	/^c010f61a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f61d	obj/kernel.asm	/^c010f61d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f620	obj/kernel.asm	/^c010f620:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f624	obj/kernel.asm	/^c010f624:	74 08                	je     c010f62e <skew_heap_merge+0xce>$/;"	l
c010f626	obj/kernel.asm	/^c010f626:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f629	obj/kernel.asm	/^c010f629:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010f62c	obj/kernel.asm	/^c010f62c:	89 10                	mov    %edx,(%eax)$/;"	l
c010f62e	obj/kernel.asm	/^c010f62e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f631	obj/kernel.asm	/^c010f631:	c9                   	leave  $/;"	l
c010f632	obj/kernel.asm	/^c010f632:	c3                   	ret    $/;"	l
c010f633	obj/kernel.asm	/^c010f633 <proc_stride_comp_f>:$/;"	l
c010f633	obj/kernel.asm	/^c010f633:	55                   	push   %ebp$/;"	l
c010f634	obj/kernel.asm	/^c010f634:	89 e5                	mov    %esp,%ebp$/;"	l
c010f636	obj/kernel.asm	/^c010f636:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010f639	obj/kernel.asm	/^c010f639:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f63c	obj/kernel.asm	/^c010f63c:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010f641	obj/kernel.asm	/^c010f641:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010f644	obj/kernel.asm	/^c010f644:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f647	obj/kernel.asm	/^c010f647:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010f64c	obj/kernel.asm	/^c010f64c:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010f64f	obj/kernel.asm	/^c010f64f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010f652	obj/kernel.asm	/^c010f652:	8b 90 bc 00 00 00    	mov    0xbc(%eax),%edx$/;"	l
c010f658	obj/kernel.asm	/^c010f658:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f65b	obj/kernel.asm	/^c010f65b:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010f661	obj/kernel.asm	/^c010f661:	29 c2                	sub    %eax,%edx$/;"	l
c010f663	obj/kernel.asm	/^c010f663:	89 d0                	mov    %edx,%eax$/;"	l
c010f665	obj/kernel.asm	/^c010f665:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f668	obj/kernel.asm	/^c010f668:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f66c	obj/kernel.asm	/^c010f66c:	7e 07                	jle    c010f675 <proc_stride_comp_f+0x42>$/;"	l
c010f66e	obj/kernel.asm	/^c010f66e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010f673	obj/kernel.asm	/^c010f673:	eb 12                	jmp    c010f687 <proc_stride_comp_f+0x54>$/;"	l
c010f675	obj/kernel.asm	/^c010f675:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f679	obj/kernel.asm	/^c010f679:	75 07                	jne    c010f682 <proc_stride_comp_f+0x4f>$/;"	l
c010f67b	obj/kernel.asm	/^c010f67b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f680	obj/kernel.asm	/^c010f680:	eb 05                	jmp    c010f687 <proc_stride_comp_f+0x54>$/;"	l
c010f682	obj/kernel.asm	/^c010f682:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010f687	obj/kernel.asm	/^c010f687:	c9                   	leave  $/;"	l
c010f688	obj/kernel.asm	/^c010f688:	c3                   	ret    $/;"	l
c010f689	obj/kernel.asm	/^c010f689 <stride_init>:$/;"	l
c010f689	obj/kernel.asm	/^c010f689:	55                   	push   %ebp$/;"	l
c010f68a	obj/kernel.asm	/^c010f68a:	89 e5                	mov    %esp,%ebp$/;"	l
c010f68c	obj/kernel.asm	/^c010f68c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010f68f	obj/kernel.asm	/^c010f68f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f692	obj/kernel.asm	/^c010f692:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010f695	obj/kernel.asm	/^c010f695:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010f698	obj/kernel.asm	/^c010f698:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010f69b	obj/kernel.asm	/^c010f69b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f69e	obj/kernel.asm	/^c010f69e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010f6a1	obj/kernel.asm	/^c010f6a1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010f6a4	obj/kernel.asm	/^c010f6a4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010f6a7	obj/kernel.asm	/^c010f6a7:	89 10                	mov    %edx,(%eax)$/;"	l
c010f6a9	obj/kernel.asm	/^c010f6a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f6ac	obj/kernel.asm	/^c010f6ac:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010f6b3	obj/kernel.asm	/^c010f6b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f6b6	obj/kernel.asm	/^c010f6b6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010f6bd	obj/kernel.asm	/^c010f6bd:	c9                   	leave  $/;"	l
c010f6be	obj/kernel.asm	/^c010f6be:	c3                   	ret    $/;"	l
c010f6bf	obj/kernel.asm	/^c010f6bf <stride_enqueue>:$/;"	l
c010f6bf	obj/kernel.asm	/^c010f6bf:	55                   	push   %ebp$/;"	l
c010f6c0	obj/kernel.asm	/^c010f6c0:	89 e5                	mov    %esp,%ebp$/;"	l
c010f6c2	obj/kernel.asm	/^c010f6c2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f6c5	obj/kernel.asm	/^c010f6c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f6c8	obj/kernel.asm	/^c010f6c8:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010f6ce	obj/kernel.asm	/^c010f6ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f6d1	obj/kernel.asm	/^c010f6d1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010f6d4	obj/kernel.asm	/^c010f6d4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f6d7	obj/kernel.asm	/^c010f6d7:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010f6da	obj/kernel.asm	/^c010f6da:	c7 45 ec 33 f6 10 c0 	movl   $0xc010f633,-0x14(%ebp)$/;"	l
c010f6e1	obj/kernel.asm	/^c010f6e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f6e4	obj/kernel.asm	/^c010f6e4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f6e7	obj/kernel.asm	/^c010f6e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f6ea	obj/kernel.asm	/^c010f6ea:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010f6f0	obj/kernel.asm	/^c010f6f0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f6f3	obj/kernel.asm	/^c010f6f3:	8b 10                	mov    (%eax),%edx$/;"	l
c010f6f5	obj/kernel.asm	/^c010f6f5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f6f8	obj/kernel.asm	/^c010f6f8:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f6fb	obj/kernel.asm	/^c010f6fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f6fe	obj/kernel.asm	/^c010f6fe:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010f701	obj/kernel.asm	/^c010f701:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f704	obj/kernel.asm	/^c010f704:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f707	obj/kernel.asm	/^c010f707:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f70a	obj/kernel.asm	/^c010f70a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010f70e	obj/kernel.asm	/^c010f70e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f711	obj/kernel.asm	/^c010f711:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f715	obj/kernel.asm	/^c010f715:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f718	obj/kernel.asm	/^c010f718:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f71b	obj/kernel.asm	/^c010f71b:	e8 40 fe ff ff       	call   c010f560 <skew_heap_merge>$/;"	l
c010f720	obj/kernel.asm	/^c010f720:	89 c2                	mov    %eax,%edx$/;"	l
c010f722	obj/kernel.asm	/^c010f722:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f725	obj/kernel.asm	/^c010f725:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010f728	obj/kernel.asm	/^c010f728:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f72b	obj/kernel.asm	/^c010f72b:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010f731	obj/kernel.asm	/^c010f731:	85 c0                	test   %eax,%eax$/;"	l
c010f733	obj/kernel.asm	/^c010f733:	74 13                	je     c010f748 <stride_enqueue+0x89>$/;"	l
c010f735	obj/kernel.asm	/^c010f735:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f738	obj/kernel.asm	/^c010f738:	8b 90 ac 00 00 00    	mov    0xac(%eax),%edx$/;"	l
c010f73e	obj/kernel.asm	/^c010f73e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f741	obj/kernel.asm	/^c010f741:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f744	obj/kernel.asm	/^c010f744:	39 c2                	cmp    %eax,%edx$/;"	l
c010f746	obj/kernel.asm	/^c010f746:	7e 0f                	jle    c010f757 <stride_enqueue+0x98>$/;"	l
c010f748	obj/kernel.asm	/^c010f748:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f74b	obj/kernel.asm	/^c010f74b:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010f74e	obj/kernel.asm	/^c010f74e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f751	obj/kernel.asm	/^c010f751:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010f757	obj/kernel.asm	/^c010f757:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f75a	obj/kernel.asm	/^c010f75a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f75d	obj/kernel.asm	/^c010f75d:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)$/;"	l
c010f763	obj/kernel.asm	/^c010f763:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f766	obj/kernel.asm	/^c010f766:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f769	obj/kernel.asm	/^c010f769:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f76c	obj/kernel.asm	/^c010f76c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f76f	obj/kernel.asm	/^c010f76f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f772	obj/kernel.asm	/^c010f772:	c9                   	leave  $/;"	l
c010f773	obj/kernel.asm	/^c010f773:	c3                   	ret    $/;"	l
c010f774	obj/kernel.asm	/^c010f774 <stride_dequeue>:$/;"	l
c010f774	obj/kernel.asm	/^c010f774:	55                   	push   %ebp$/;"	l
c010f775	obj/kernel.asm	/^c010f775:	89 e5                	mov    %esp,%ebp$/;"	l
c010f777	obj/kernel.asm	/^c010f777:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010f77a	obj/kernel.asm	/^c010f77a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f77d	obj/kernel.asm	/^c010f77d:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010f783	obj/kernel.asm	/^c010f783:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f786	obj/kernel.asm	/^c010f786:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010f789	obj/kernel.asm	/^c010f789:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f78c	obj/kernel.asm	/^c010f78c:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010f78f	obj/kernel.asm	/^c010f78f:	c7 45 ec 33 f6 10 c0 	movl   $0xc010f633,-0x14(%ebp)$/;"	l
c010f796	obj/kernel.asm	/^c010f796:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f799	obj/kernel.asm	/^c010f799:	8b 00                	mov    (%eax),%eax$/;"	l
c010f79b	obj/kernel.asm	/^c010f79b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f79e	obj/kernel.asm	/^c010f79e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f7a1	obj/kernel.asm	/^c010f7a1:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010f7a4	obj/kernel.asm	/^c010f7a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f7a7	obj/kernel.asm	/^c010f7a7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f7aa	obj/kernel.asm	/^c010f7aa:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010f7ad	obj/kernel.asm	/^c010f7ad:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c010f7b1	obj/kernel.asm	/^c010f7b1:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010f7b5	obj/kernel.asm	/^c010f7b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f7b8	obj/kernel.asm	/^c010f7b8:	e8 a3 fd ff ff       	call   c010f560 <skew_heap_merge>$/;"	l
c010f7bd	obj/kernel.asm	/^c010f7bd:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f7c0	obj/kernel.asm	/^c010f7c0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010f7c4	obj/kernel.asm	/^c010f7c4:	74 08                	je     c010f7ce <stride_dequeue+0x5a>$/;"	l
c010f7c6	obj/kernel.asm	/^c010f7c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f7c9	obj/kernel.asm	/^c010f7c9:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010f7cc	obj/kernel.asm	/^c010f7cc:	89 10                	mov    %edx,(%eax)$/;"	l
c010f7ce	obj/kernel.asm	/^c010f7ce:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010f7d2	obj/kernel.asm	/^c010f7d2:	74 24                	je     c010f7f8 <stride_dequeue+0x84>$/;"	l
c010f7d4	obj/kernel.asm	/^c010f7d4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f7d7	obj/kernel.asm	/^c010f7d7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f7da	obj/kernel.asm	/^c010f7da:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010f7dd	obj/kernel.asm	/^c010f7dd:	75 0b                	jne    c010f7ea <stride_dequeue+0x76>$/;"	l
c010f7df	obj/kernel.asm	/^c010f7df:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f7e2	obj/kernel.asm	/^c010f7e2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010f7e5	obj/kernel.asm	/^c010f7e5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010f7e8	obj/kernel.asm	/^c010f7e8:	eb 09                	jmp    c010f7f3 <stride_dequeue+0x7f>$/;"	l
c010f7ea	obj/kernel.asm	/^c010f7ea:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f7ed	obj/kernel.asm	/^c010f7ed:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010f7f0	obj/kernel.asm	/^c010f7f0:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f7f3	obj/kernel.asm	/^c010f7f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f7f6	obj/kernel.asm	/^c010f7f6:	eb 03                	jmp    c010f7fb <stride_dequeue+0x87>$/;"	l
c010f7f8	obj/kernel.asm	/^c010f7f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f7fb	obj/kernel.asm	/^c010f7fb:	89 c2                	mov    %eax,%edx$/;"	l
c010f7fd	obj/kernel.asm	/^c010f7fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f800	obj/kernel.asm	/^c010f800:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010f803	obj/kernel.asm	/^c010f803:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f806	obj/kernel.asm	/^c010f806:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f809	obj/kernel.asm	/^c010f809:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f80c	obj/kernel.asm	/^c010f80c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f80f	obj/kernel.asm	/^c010f80f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010f812	obj/kernel.asm	/^c010f812:	c9                   	leave  $/;"	l
c010f813	obj/kernel.asm	/^c010f813:	c3                   	ret    $/;"	l
c010f814	obj/kernel.asm	/^c010f814 <stride_pick_next>:$/;"	l
c010f814	obj/kernel.asm	/^c010f814:	55                   	push   %ebp$/;"	l
c010f815	obj/kernel.asm	/^c010f815:	89 e5                	mov    %esp,%ebp$/;"	l
c010f817	obj/kernel.asm	/^c010f817:	53                   	push   %ebx$/;"	l
c010f818	obj/kernel.asm	/^c010f818:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010f81b	obj/kernel.asm	/^c010f81b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f81e	obj/kernel.asm	/^c010f81e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010f821	obj/kernel.asm	/^c010f821:	85 c0                	test   %eax,%eax$/;"	l
c010f823	obj/kernel.asm	/^c010f823:	75 07                	jne    c010f82c <stride_pick_next+0x18>$/;"	l
c010f825	obj/kernel.asm	/^c010f825:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f82a	obj/kernel.asm	/^c010f82a:	eb 62                	jmp    c010f88e <stride_pick_next+0x7a>$/;"	l
c010f82c	obj/kernel.asm	/^c010f82c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f82f	obj/kernel.asm	/^c010f82f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010f832	obj/kernel.asm	/^c010f832:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010f837	obj/kernel.asm	/^c010f837:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010f83a	obj/kernel.asm	/^c010f83a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f83d	obj/kernel.asm	/^c010f83d:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010f843	obj/kernel.asm	/^c010f843:	85 c0                	test   %eax,%eax$/;"	l
c010f845	obj/kernel.asm	/^c010f845:	75 1a                	jne    c010f861 <stride_pick_next+0x4d>$/;"	l
c010f847	obj/kernel.asm	/^c010f847:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f84a	obj/kernel.asm	/^c010f84a:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010f850	obj/kernel.asm	/^c010f850:	8d 90 ff ff ff 7f    	lea    0x7fffffff(%eax),%edx$/;"	l
c010f856	obj/kernel.asm	/^c010f856:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f859	obj/kernel.asm	/^c010f859:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010f85f	obj/kernel.asm	/^c010f85f:	eb 2a                	jmp    c010f88b <stride_pick_next+0x77>$/;"	l
c010f861	obj/kernel.asm	/^c010f861:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f864	obj/kernel.asm	/^c010f864:	8b 88 bc 00 00 00    	mov    0xbc(%eax),%ecx$/;"	l
c010f86a	obj/kernel.asm	/^c010f86a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f86d	obj/kernel.asm	/^c010f86d:	8b 98 c0 00 00 00    	mov    0xc0(%eax),%ebx$/;"	l
c010f873	obj/kernel.asm	/^c010f873:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax$/;"	l
c010f878	obj/kernel.asm	/^c010f878:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010f87d	obj/kernel.asm	/^c010f87d:	f7 f3                	div    %ebx$/;"	l
c010f87f	obj/kernel.asm	/^c010f87f:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010f882	obj/kernel.asm	/^c010f882:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f885	obj/kernel.asm	/^c010f885:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010f88b	obj/kernel.asm	/^c010f88b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010f88e	obj/kernel.asm	/^c010f88e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f891	obj/kernel.asm	/^c010f891:	5b                   	pop    %ebx$/;"	l
c010f892	obj/kernel.asm	/^c010f892:	5d                   	pop    %ebp$/;"	l
c010f893	obj/kernel.asm	/^c010f893:	c3                   	ret    $/;"	l
c010f894	obj/kernel.asm	/^c010f894 <stride_proc_tick>:$/;"	l
c010f894	obj/kernel.asm	/^c010f894:	55                   	push   %ebp$/;"	l
c010f895	obj/kernel.asm	/^c010f895:	89 e5                	mov    %esp,%ebp$/;"	l
c010f897	obj/kernel.asm	/^c010f897:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f89a	obj/kernel.asm	/^c010f89a:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010f8a0	obj/kernel.asm	/^c010f8a0:	85 c0                	test   %eax,%eax$/;"	l
c010f8a2	obj/kernel.asm	/^c010f8a2:	7e 15                	jle    c010f8b9 <stride_proc_tick+0x25>$/;"	l
c010f8a4	obj/kernel.asm	/^c010f8a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f8a7	obj/kernel.asm	/^c010f8a7:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010f8ad	obj/kernel.asm	/^c010f8ad:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f8b0	obj/kernel.asm	/^c010f8b0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f8b3	obj/kernel.asm	/^c010f8b3:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010f8b9	obj/kernel.asm	/^c010f8b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f8bc	obj/kernel.asm	/^c010f8bc:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010f8c2	obj/kernel.asm	/^c010f8c2:	85 c0                	test   %eax,%eax$/;"	l
c010f8c4	obj/kernel.asm	/^c010f8c4:	75 0a                	jne    c010f8d0 <stride_proc_tick+0x3c>$/;"	l
c010f8c6	obj/kernel.asm	/^c010f8c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f8c9	obj/kernel.asm	/^c010f8c9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010f8d0	obj/kernel.asm	/^c010f8d0:	5d                   	pop    %ebp$/;"	l
c010f8d1	obj/kernel.asm	/^c010f8d1:	c3                   	ret    $/;"	l
c010f8d2	obj/kernel.asm	/^c010f8d2 <sys_exit>:$/;"	l
c010f8d2	obj/kernel.asm	/^c010f8d2:	55                   	push   %ebp$/;"	l
c010f8d3	obj/kernel.asm	/^c010f8d3:	89 e5                	mov    %esp,%ebp$/;"	l
c010f8d5	obj/kernel.asm	/^c010f8d5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f8d8	obj/kernel.asm	/^c010f8d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f8db	obj/kernel.asm	/^c010f8db:	8b 00                	mov    (%eax),%eax$/;"	l
c010f8dd	obj/kernel.asm	/^c010f8dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f8e0	obj/kernel.asm	/^c010f8e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f8e3	obj/kernel.asm	/^c010f8e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f8e6	obj/kernel.asm	/^c010f8e6:	e8 0b e1 ff ff       	call   c010d9f6 <do_exit>$/;"	l
c010f8eb	obj/kernel.asm	/^c010f8eb:	c9                   	leave  $/;"	l
c010f8ec	obj/kernel.asm	/^c010f8ec:	c3                   	ret    $/;"	l
c010f8ed	obj/kernel.asm	/^c010f8ed <sys_fork>:$/;"	l
c010f8ed	obj/kernel.asm	/^c010f8ed:	55                   	push   %ebp$/;"	l
c010f8ee	obj/kernel.asm	/^c010f8ee:	89 e5                	mov    %esp,%ebp$/;"	l
c010f8f0	obj/kernel.asm	/^c010f8f0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f8f3	obj/kernel.asm	/^c010f8f3:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f8f8	obj/kernel.asm	/^c010f8f8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f8fb	obj/kernel.asm	/^c010f8fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f8fe	obj/kernel.asm	/^c010f8fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f901	obj/kernel.asm	/^c010f901:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010f904	obj/kernel.asm	/^c010f904:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f907	obj/kernel.asm	/^c010f907:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f90a	obj/kernel.asm	/^c010f90a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010f90e	obj/kernel.asm	/^c010f90e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f911	obj/kernel.asm	/^c010f911:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f915	obj/kernel.asm	/^c010f915:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c010f91c	obj/kernel.asm	/^c010f91c:	e8 9a df ff ff       	call   c010d8bb <do_fork>$/;"	l
c010f921	obj/kernel.asm	/^c010f921:	c9                   	leave  $/;"	l
c010f922	obj/kernel.asm	/^c010f922:	c3                   	ret    $/;"	l
c010f923	obj/kernel.asm	/^c010f923 <sys_wait>:$/;"	l
c010f923	obj/kernel.asm	/^c010f923:	55                   	push   %ebp$/;"	l
c010f924	obj/kernel.asm	/^c010f924:	89 e5                	mov    %esp,%ebp$/;"	l
c010f926	obj/kernel.asm	/^c010f926:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f929	obj/kernel.asm	/^c010f929:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f92c	obj/kernel.asm	/^c010f92c:	8b 00                	mov    (%eax),%eax$/;"	l
c010f92e	obj/kernel.asm	/^c010f92e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f931	obj/kernel.asm	/^c010f931:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f934	obj/kernel.asm	/^c010f934:	83 c0 04             	add    $0x4,%eax$/;"	l
c010f937	obj/kernel.asm	/^c010f937:	8b 00                	mov    (%eax),%eax$/;"	l
c010f939	obj/kernel.asm	/^c010f939:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f93c	obj/kernel.asm	/^c010f93c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f93f	obj/kernel.asm	/^c010f93f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f943	obj/kernel.asm	/^c010f943:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f946	obj/kernel.asm	/^c010f946:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f949	obj/kernel.asm	/^c010f949:	e8 b1 ee ff ff       	call   c010e7ff <do_wait>$/;"	l
c010f94e	obj/kernel.asm	/^c010f94e:	c9                   	leave  $/;"	l
c010f94f	obj/kernel.asm	/^c010f94f:	c3                   	ret    $/;"	l
c010f950	obj/kernel.asm	/^c010f950 <sys_exec>:$/;"	l
c010f950	obj/kernel.asm	/^c010f950:	55                   	push   %ebp$/;"	l
c010f951	obj/kernel.asm	/^c010f951:	89 e5                	mov    %esp,%ebp$/;"	l
c010f953	obj/kernel.asm	/^c010f953:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f956	obj/kernel.asm	/^c010f956:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f959	obj/kernel.asm	/^c010f959:	8b 00                	mov    (%eax),%eax$/;"	l
c010f95b	obj/kernel.asm	/^c010f95b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f95e	obj/kernel.asm	/^c010f95e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f961	obj/kernel.asm	/^c010f961:	83 c0 04             	add    $0x4,%eax$/;"	l
c010f964	obj/kernel.asm	/^c010f964:	8b 00                	mov    (%eax),%eax$/;"	l
c010f966	obj/kernel.asm	/^c010f966:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f969	obj/kernel.asm	/^c010f969:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f96c	obj/kernel.asm	/^c010f96c:	83 c0 08             	add    $0x8,%eax$/;"	l
c010f96f	obj/kernel.asm	/^c010f96f:	8b 00                	mov    (%eax),%eax$/;"	l
c010f971	obj/kernel.asm	/^c010f971:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f974	obj/kernel.asm	/^c010f974:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f977	obj/kernel.asm	/^c010f977:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010f97b	obj/kernel.asm	/^c010f97b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f97e	obj/kernel.asm	/^c010f97e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010f982	obj/kernel.asm	/^c010f982:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f985	obj/kernel.asm	/^c010f985:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f988	obj/kernel.asm	/^c010f988:	e8 1f ec ff ff       	call   c010e5ac <do_execve>$/;"	l
c010f98d	obj/kernel.asm	/^c010f98d:	c9                   	leave  $/;"	l
c010f98e	obj/kernel.asm	/^c010f98e:	c3                   	ret    $/;"	l
c010f98f	obj/kernel.asm	/^c010f98f <sys_yield>:$/;"	l
c010f98f	obj/kernel.asm	/^c010f98f:	55                   	push   %ebp$/;"	l
c010f990	obj/kernel.asm	/^c010f990:	89 e5                	mov    %esp,%ebp$/;"	l
c010f992	obj/kernel.asm	/^c010f992:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f995	obj/kernel.asm	/^c010f995:	e8 4f ee ff ff       	call   c010e7e9 <do_yield>$/;"	l
c010f99a	obj/kernel.asm	/^c010f99a:	c9                   	leave  $/;"	l
c010f99b	obj/kernel.asm	/^c010f99b:	c3                   	ret    $/;"	l
c010f99c	obj/kernel.asm	/^c010f99c <sys_kill>:$/;"	l
c010f99c	obj/kernel.asm	/^c010f99c:	55                   	push   %ebp$/;"	l
c010f99d	obj/kernel.asm	/^c010f99d:	89 e5                	mov    %esp,%ebp$/;"	l
c010f99f	obj/kernel.asm	/^c010f99f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f9a2	obj/kernel.asm	/^c010f9a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9a5	obj/kernel.asm	/^c010f9a5:	8b 00                	mov    (%eax),%eax$/;"	l
c010f9a7	obj/kernel.asm	/^c010f9a7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f9aa	obj/kernel.asm	/^c010f9aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f9ad	obj/kernel.asm	/^c010f9ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f9b0	obj/kernel.asm	/^c010f9b0:	e8 ea ef ff ff       	call   c010e99f <do_kill>$/;"	l
c010f9b5	obj/kernel.asm	/^c010f9b5:	c9                   	leave  $/;"	l
c010f9b6	obj/kernel.asm	/^c010f9b6:	c3                   	ret    $/;"	l
c010f9b7	obj/kernel.asm	/^c010f9b7 <sys_getpid>:$/;"	l
c010f9b7	obj/kernel.asm	/^c010f9b7:	55                   	push   %ebp$/;"	l
c010f9b8	obj/kernel.asm	/^c010f9b8:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9ba	obj/kernel.asm	/^c010f9ba:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010f9bf	obj/kernel.asm	/^c010f9bf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f9c2	obj/kernel.asm	/^c010f9c2:	5d                   	pop    %ebp$/;"	l
c010f9c3	obj/kernel.asm	/^c010f9c3:	c3                   	ret    $/;"	l
c010f9c4	obj/kernel.asm	/^c010f9c4 <sys_putc>:$/;"	l
c010f9c4	obj/kernel.asm	/^c010f9c4:	55                   	push   %ebp$/;"	l
c010f9c5	obj/kernel.asm	/^c010f9c5:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9c7	obj/kernel.asm	/^c010f9c7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f9ca	obj/kernel.asm	/^c010f9ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9cd	obj/kernel.asm	/^c010f9cd:	8b 00                	mov    (%eax),%eax$/;"	l
c010f9cf	obj/kernel.asm	/^c010f9cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f9d2	obj/kernel.asm	/^c010f9d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f9d5	obj/kernel.asm	/^c010f9d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010f9d8	obj/kernel.asm	/^c010f9d8:	e8 29 11 ff ff       	call   c0100b06 <cputchar>$/;"	l
c010f9dd	obj/kernel.asm	/^c010f9dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f9e2	obj/kernel.asm	/^c010f9e2:	c9                   	leave  $/;"	l
c010f9e3	obj/kernel.asm	/^c010f9e3:	c3                   	ret    $/;"	l
c010f9e4	obj/kernel.asm	/^c010f9e4 <sys_pgdir>:$/;"	l
c010f9e4	obj/kernel.asm	/^c010f9e4:	55                   	push   %ebp$/;"	l
c010f9e5	obj/kernel.asm	/^c010f9e5:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9e7	obj/kernel.asm	/^c010f9e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f9ea	obj/kernel.asm	/^c010f9ea:	e8 65 68 ff ff       	call   c0106254 <print_pgdir>$/;"	l
c010f9ef	obj/kernel.asm	/^c010f9ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f9f4	obj/kernel.asm	/^c010f9f4:	c9                   	leave  $/;"	l
c010f9f5	obj/kernel.asm	/^c010f9f5:	c3                   	ret    $/;"	l
c010f9f6	obj/kernel.asm	/^c010f9f6 <sys_gettime>:$/;"	l
c010f9f6	obj/kernel.asm	/^c010f9f6:	55                   	push   %ebp$/;"	l
c010f9f7	obj/kernel.asm	/^c010f9f7:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9f9	obj/kernel.asm	/^c010f9f9:	a1 68 b6 15 c0       	mov    0xc015b668,%eax$/;"	l
c010f9fe	obj/kernel.asm	/^c010f9fe:	5d                   	pop    %ebp$/;"	l
c010f9ff	obj/kernel.asm	/^c010f9ff:	c3                   	ret    $/;"	l
c010fa00	obj/kernel.asm	/^c010fa00 <sys_lab6_set_priority>:$/;"	l
c010fa00	obj/kernel.asm	/^c010fa00:	55                   	push   %ebp$/;"	l
c010fa01	obj/kernel.asm	/^c010fa01:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa03	obj/kernel.asm	/^c010fa03:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fa06	obj/kernel.asm	/^c010fa06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa09	obj/kernel.asm	/^c010fa09:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa0b	obj/kernel.asm	/^c010fa0b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa0e	obj/kernel.asm	/^c010fa0e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa11	obj/kernel.asm	/^c010fa11:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa14	obj/kernel.asm	/^c010fa14:	e8 e9 f4 ff ff       	call   c010ef02 <lab6_set_priority>$/;"	l
c010fa19	obj/kernel.asm	/^c010fa19:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fa1e	obj/kernel.asm	/^c010fa1e:	c9                   	leave  $/;"	l
c010fa1f	obj/kernel.asm	/^c010fa1f:	c3                   	ret    $/;"	l
c010fa20	obj/kernel.asm	/^c010fa20 <sys_sleep>:$/;"	l
c010fa20	obj/kernel.asm	/^c010fa20:	55                   	push   %ebp$/;"	l
c010fa21	obj/kernel.asm	/^c010fa21:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa23	obj/kernel.asm	/^c010fa23:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fa26	obj/kernel.asm	/^c010fa26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa29	obj/kernel.asm	/^c010fa29:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa2b	obj/kernel.asm	/^c010fa2b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa2e	obj/kernel.asm	/^c010fa2e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa31	obj/kernel.asm	/^c010fa31:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa34	obj/kernel.asm	/^c010fa34:	e8 f3 f4 ff ff       	call   c010ef2c <do_sleep>$/;"	l
c010fa39	obj/kernel.asm	/^c010fa39:	c9                   	leave  $/;"	l
c010fa3a	obj/kernel.asm	/^c010fa3a:	c3                   	ret    $/;"	l
c010fa3b	obj/kernel.asm	/^c010fa3b <sys_open>:$/;"	l
c010fa3b	obj/kernel.asm	/^c010fa3b:	55                   	push   %ebp$/;"	l
c010fa3c	obj/kernel.asm	/^c010fa3c:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa3e	obj/kernel.asm	/^c010fa3e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fa41	obj/kernel.asm	/^c010fa41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa44	obj/kernel.asm	/^c010fa44:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa46	obj/kernel.asm	/^c010fa46:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa49	obj/kernel.asm	/^c010fa49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa4c	obj/kernel.asm	/^c010fa4c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fa4f	obj/kernel.asm	/^c010fa4f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fa52	obj/kernel.asm	/^c010fa52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fa55	obj/kernel.asm	/^c010fa55:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fa59	obj/kernel.asm	/^c010fa59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa5c	obj/kernel.asm	/^c010fa5c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa5f	obj/kernel.asm	/^c010fa5f:	e8 15 b7 ff ff       	call   c010b179 <sysfile_open>$/;"	l
c010fa64	obj/kernel.asm	/^c010fa64:	c9                   	leave  $/;"	l
c010fa65	obj/kernel.asm	/^c010fa65:	c3                   	ret    $/;"	l
c010fa66	obj/kernel.asm	/^c010fa66 <sys_close>:$/;"	l
c010fa66	obj/kernel.asm	/^c010fa66:	55                   	push   %ebp$/;"	l
c010fa67	obj/kernel.asm	/^c010fa67:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa69	obj/kernel.asm	/^c010fa69:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fa6c	obj/kernel.asm	/^c010fa6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa6f	obj/kernel.asm	/^c010fa6f:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa71	obj/kernel.asm	/^c010fa71:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa74	obj/kernel.asm	/^c010fa74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa77	obj/kernel.asm	/^c010fa77:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fa7a	obj/kernel.asm	/^c010fa7a:	e8 45 b7 ff ff       	call   c010b1c4 <sysfile_close>$/;"	l
c010fa7f	obj/kernel.asm	/^c010fa7f:	c9                   	leave  $/;"	l
c010fa80	obj/kernel.asm	/^c010fa80:	c3                   	ret    $/;"	l
c010fa81	obj/kernel.asm	/^c010fa81 <sys_read>:$/;"	l
c010fa81	obj/kernel.asm	/^c010fa81:	55                   	push   %ebp$/;"	l
c010fa82	obj/kernel.asm	/^c010fa82:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa84	obj/kernel.asm	/^c010fa84:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fa87	obj/kernel.asm	/^c010fa87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa8a	obj/kernel.asm	/^c010fa8a:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa8c	obj/kernel.asm	/^c010fa8c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa8f	obj/kernel.asm	/^c010fa8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa92	obj/kernel.asm	/^c010fa92:	83 c0 04             	add    $0x4,%eax$/;"	l
c010fa95	obj/kernel.asm	/^c010fa95:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa97	obj/kernel.asm	/^c010fa97:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fa9a	obj/kernel.asm	/^c010fa9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa9d	obj/kernel.asm	/^c010fa9d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010faa0	obj/kernel.asm	/^c010faa0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010faa3	obj/kernel.asm	/^c010faa3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010faa6	obj/kernel.asm	/^c010faa6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010faaa	obj/kernel.asm	/^c010faaa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010faad	obj/kernel.asm	/^c010faad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fab1	obj/kernel.asm	/^c010fab1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fab4	obj/kernel.asm	/^c010fab4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fab7	obj/kernel.asm	/^c010fab7:	e8 1b b7 ff ff       	call   c010b1d7 <sysfile_read>$/;"	l
c010fabc	obj/kernel.asm	/^c010fabc:	c9                   	leave  $/;"	l
c010fabd	obj/kernel.asm	/^c010fabd:	c3                   	ret    $/;"	l
c010fabe	obj/kernel.asm	/^c010fabe <sys_write>:$/;"	l
c010fabe	obj/kernel.asm	/^c010fabe:	55                   	push   %ebp$/;"	l
c010fabf	obj/kernel.asm	/^c010fabf:	89 e5                	mov    %esp,%ebp$/;"	l
c010fac1	obj/kernel.asm	/^c010fac1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fac4	obj/kernel.asm	/^c010fac4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fac7	obj/kernel.asm	/^c010fac7:	8b 00                	mov    (%eax),%eax$/;"	l
c010fac9	obj/kernel.asm	/^c010fac9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010facc	obj/kernel.asm	/^c010facc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010facf	obj/kernel.asm	/^c010facf:	83 c0 04             	add    $0x4,%eax$/;"	l
c010fad2	obj/kernel.asm	/^c010fad2:	8b 00                	mov    (%eax),%eax$/;"	l
c010fad4	obj/kernel.asm	/^c010fad4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fad7	obj/kernel.asm	/^c010fad7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fada	obj/kernel.asm	/^c010fada:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fadd	obj/kernel.asm	/^c010fadd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fae0	obj/kernel.asm	/^c010fae0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fae3	obj/kernel.asm	/^c010fae3:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010fae7	obj/kernel.asm	/^c010fae7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010faea	obj/kernel.asm	/^c010faea:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010faee	obj/kernel.asm	/^c010faee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010faf1	obj/kernel.asm	/^c010faf1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010faf4	obj/kernel.asm	/^c010faf4:	e8 56 b8 ff ff       	call   c010b34f <sysfile_write>$/;"	l
c010faf9	obj/kernel.asm	/^c010faf9:	c9                   	leave  $/;"	l
c010fafa	obj/kernel.asm	/^c010fafa:	c3                   	ret    $/;"	l
c010fafb	obj/kernel.asm	/^c010fafb <sys_seek>:$/;"	l
c010fafb	obj/kernel.asm	/^c010fafb:	55                   	push   %ebp$/;"	l
c010fafc	obj/kernel.asm	/^c010fafc:	89 e5                	mov    %esp,%ebp$/;"	l
c010fafe	obj/kernel.asm	/^c010fafe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fb01	obj/kernel.asm	/^c010fb01:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb04	obj/kernel.asm	/^c010fb04:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb06	obj/kernel.asm	/^c010fb06:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb09	obj/kernel.asm	/^c010fb09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb0c	obj/kernel.asm	/^c010fb0c:	83 c0 04             	add    $0x4,%eax$/;"	l
c010fb0f	obj/kernel.asm	/^c010fb0f:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb11	obj/kernel.asm	/^c010fb11:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fb14	obj/kernel.asm	/^c010fb14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb17	obj/kernel.asm	/^c010fb17:	83 c0 08             	add    $0x8,%eax$/;"	l
c010fb1a	obj/kernel.asm	/^c010fb1a:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb1c	obj/kernel.asm	/^c010fb1c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fb1f	obj/kernel.asm	/^c010fb1f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fb22	obj/kernel.asm	/^c010fb22:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010fb26	obj/kernel.asm	/^c010fb26:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb29	obj/kernel.asm	/^c010fb29:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fb2d	obj/kernel.asm	/^c010fb2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb30	obj/kernel.asm	/^c010fb30:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fb33	obj/kernel.asm	/^c010fb33:	e8 91 b9 ff ff       	call   c010b4c9 <sysfile_seek>$/;"	l
c010fb38	obj/kernel.asm	/^c010fb38:	c9                   	leave  $/;"	l
c010fb39	obj/kernel.asm	/^c010fb39:	c3                   	ret    $/;"	l
c010fb3a	obj/kernel.asm	/^c010fb3a <sys_fstat>:$/;"	l
c010fb3a	obj/kernel.asm	/^c010fb3a:	55                   	push   %ebp$/;"	l
c010fb3b	obj/kernel.asm	/^c010fb3b:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb3d	obj/kernel.asm	/^c010fb3d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fb40	obj/kernel.asm	/^c010fb40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb43	obj/kernel.asm	/^c010fb43:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb45	obj/kernel.asm	/^c010fb45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb48	obj/kernel.asm	/^c010fb48:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb4b	obj/kernel.asm	/^c010fb4b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010fb4e	obj/kernel.asm	/^c010fb4e:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb50	obj/kernel.asm	/^c010fb50:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fb53	obj/kernel.asm	/^c010fb53:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb56	obj/kernel.asm	/^c010fb56:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fb5a	obj/kernel.asm	/^c010fb5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb5d	obj/kernel.asm	/^c010fb5d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fb60	obj/kernel.asm	/^c010fb60:	e8 85 b9 ff ff       	call   c010b4ea <sysfile_fstat>$/;"	l
c010fb65	obj/kernel.asm	/^c010fb65:	c9                   	leave  $/;"	l
c010fb66	obj/kernel.asm	/^c010fb66:	c3                   	ret    $/;"	l
c010fb67	obj/kernel.asm	/^c010fb67 <sys_fsync>:$/;"	l
c010fb67	obj/kernel.asm	/^c010fb67:	55                   	push   %ebp$/;"	l
c010fb68	obj/kernel.asm	/^c010fb68:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb6a	obj/kernel.asm	/^c010fb6a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fb6d	obj/kernel.asm	/^c010fb6d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb70	obj/kernel.asm	/^c010fb70:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb72	obj/kernel.asm	/^c010fb72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb75	obj/kernel.asm	/^c010fb75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb78	obj/kernel.asm	/^c010fb78:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fb7b	obj/kernel.asm	/^c010fb7b:	e8 e8 b9 ff ff       	call   c010b568 <sysfile_fsync>$/;"	l
c010fb80	obj/kernel.asm	/^c010fb80:	c9                   	leave  $/;"	l
c010fb81	obj/kernel.asm	/^c010fb81:	c3                   	ret    $/;"	l
c010fb82	obj/kernel.asm	/^c010fb82 <sys_getcwd>:$/;"	l
c010fb82	obj/kernel.asm	/^c010fb82:	55                   	push   %ebp$/;"	l
c010fb83	obj/kernel.asm	/^c010fb83:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb85	obj/kernel.asm	/^c010fb85:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fb88	obj/kernel.asm	/^c010fb88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb8b	obj/kernel.asm	/^c010fb8b:	8b 00                	mov    (%eax),%eax$/;"	l
c010fb8d	obj/kernel.asm	/^c010fb8d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb90	obj/kernel.asm	/^c010fb90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb93	obj/kernel.asm	/^c010fb93:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fb96	obj/kernel.asm	/^c010fb96:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fb99	obj/kernel.asm	/^c010fb99:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb9c	obj/kernel.asm	/^c010fb9c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fba0	obj/kernel.asm	/^c010fba0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fba3	obj/kernel.asm	/^c010fba3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fba6	obj/kernel.asm	/^c010fba6:	e8 5a bb ff ff       	call   c010b705 <sysfile_getcwd>$/;"	l
c010fbab	obj/kernel.asm	/^c010fbab:	c9                   	leave  $/;"	l
c010fbac	obj/kernel.asm	/^c010fbac:	c3                   	ret    $/;"	l
c010fbad	obj/kernel.asm	/^c010fbad <sys_getdirentry>:$/;"	l
c010fbad	obj/kernel.asm	/^c010fbad:	55                   	push   %ebp$/;"	l
c010fbae	obj/kernel.asm	/^c010fbae:	89 e5                	mov    %esp,%ebp$/;"	l
c010fbb0	obj/kernel.asm	/^c010fbb0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fbb3	obj/kernel.asm	/^c010fbb3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fbb6	obj/kernel.asm	/^c010fbb6:	8b 00                	mov    (%eax),%eax$/;"	l
c010fbb8	obj/kernel.asm	/^c010fbb8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fbbb	obj/kernel.asm	/^c010fbbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fbbe	obj/kernel.asm	/^c010fbbe:	83 c0 04             	add    $0x4,%eax$/;"	l
c010fbc1	obj/kernel.asm	/^c010fbc1:	8b 00                	mov    (%eax),%eax$/;"	l
c010fbc3	obj/kernel.asm	/^c010fbc3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fbc6	obj/kernel.asm	/^c010fbc6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fbc9	obj/kernel.asm	/^c010fbc9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fbcd	obj/kernel.asm	/^c010fbcd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fbd0	obj/kernel.asm	/^c010fbd0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fbd3	obj/kernel.asm	/^c010fbd3:	e8 c4 bb ff ff       	call   c010b79c <sysfile_getdirentry>$/;"	l
c010fbd8	obj/kernel.asm	/^c010fbd8:	c9                   	leave  $/;"	l
c010fbd9	obj/kernel.asm	/^c010fbd9:	c3                   	ret    $/;"	l
c010fbda	obj/kernel.asm	/^c010fbda <sys_dup>:$/;"	l
c010fbda	obj/kernel.asm	/^c010fbda:	55                   	push   %ebp$/;"	l
c010fbdb	obj/kernel.asm	/^c010fbdb:	89 e5                	mov    %esp,%ebp$/;"	l
c010fbdd	obj/kernel.asm	/^c010fbdd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fbe0	obj/kernel.asm	/^c010fbe0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fbe3	obj/kernel.asm	/^c010fbe3:	8b 00                	mov    (%eax),%eax$/;"	l
c010fbe5	obj/kernel.asm	/^c010fbe5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fbe8	obj/kernel.asm	/^c010fbe8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fbeb	obj/kernel.asm	/^c010fbeb:	83 c0 04             	add    $0x4,%eax$/;"	l
c010fbee	obj/kernel.asm	/^c010fbee:	8b 00                	mov    (%eax),%eax$/;"	l
c010fbf0	obj/kernel.asm	/^c010fbf0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fbf3	obj/kernel.asm	/^c010fbf3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fbf6	obj/kernel.asm	/^c010fbf6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010fbfa	obj/kernel.asm	/^c010fbfa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fbfd	obj/kernel.asm	/^c010fbfd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fc00	obj/kernel.asm	/^c010fc00:	e8 8b bc ff ff       	call   c010b890 <sysfile_dup>$/;"	l
c010fc05	obj/kernel.asm	/^c010fc05:	c9                   	leave  $/;"	l
c010fc06	obj/kernel.asm	/^c010fc06:	c3                   	ret    $/;"	l
c010fc07	obj/kernel.asm	/^c010fc07 <syscall>:$/;"	l
c010fc07	obj/kernel.asm	/^c010fc07:	55                   	push   %ebp$/;"	l
c010fc08	obj/kernel.asm	/^c010fc08:	89 e5                	mov    %esp,%ebp$/;"	l
c010fc0a	obj/kernel.asm	/^c010fc0a:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010fc0d	obj/kernel.asm	/^c010fc0d:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010fc12	obj/kernel.asm	/^c010fc12:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fc15	obj/kernel.asm	/^c010fc15:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc18	obj/kernel.asm	/^c010fc18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc1b	obj/kernel.asm	/^c010fc1b:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010fc1e	obj/kernel.asm	/^c010fc1e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fc21	obj/kernel.asm	/^c010fc21:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010fc25	obj/kernel.asm	/^c010fc25:	78 60                	js     c010fc87 <syscall+0x80>$/;"	l
c010fc27	obj/kernel.asm	/^c010fc27:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc2a	obj/kernel.asm	/^c010fc2a:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010fc2f	obj/kernel.asm	/^c010fc2f:	77 56                	ja     c010fc87 <syscall+0x80>$/;"	l
c010fc31	obj/kernel.asm	/^c010fc31:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc34	obj/kernel.asm	/^c010fc34:	8b 04 85 a0 6a 15 c0 	mov    -0x3fea9560(,%eax,4),%eax$/;"	l
c010fc3b	obj/kernel.asm	/^c010fc3b:	85 c0                	test   %eax,%eax$/;"	l
c010fc3d	obj/kernel.asm	/^c010fc3d:	74 48                	je     c010fc87 <syscall+0x80>$/;"	l
c010fc3f	obj/kernel.asm	/^c010fc3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc42	obj/kernel.asm	/^c010fc42:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010fc45	obj/kernel.asm	/^c010fc45:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010fc48	obj/kernel.asm	/^c010fc48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc4b	obj/kernel.asm	/^c010fc4b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010fc4e	obj/kernel.asm	/^c010fc4e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010fc51	obj/kernel.asm	/^c010fc51:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc54	obj/kernel.asm	/^c010fc54:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010fc57	obj/kernel.asm	/^c010fc57:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010fc5a	obj/kernel.asm	/^c010fc5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc5d	obj/kernel.asm	/^c010fc5d:	8b 00                	mov    (%eax),%eax$/;"	l
c010fc5f	obj/kernel.asm	/^c010fc5f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fc62	obj/kernel.asm	/^c010fc62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc65	obj/kernel.asm	/^c010fc65:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fc68	obj/kernel.asm	/^c010fc68:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fc6b	obj/kernel.asm	/^c010fc6b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc6e	obj/kernel.asm	/^c010fc6e:	8b 04 85 a0 6a 15 c0 	mov    -0x3fea9560(,%eax,4),%eax$/;"	l
c010fc75	obj/kernel.asm	/^c010fc75:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010fc78	obj/kernel.asm	/^c010fc78:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010fc7b	obj/kernel.asm	/^c010fc7b:	ff d0                	call   *%eax$/;"	l
c010fc7d	obj/kernel.asm	/^c010fc7d:	89 c2                	mov    %eax,%edx$/;"	l
c010fc7f	obj/kernel.asm	/^c010fc7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc82	obj/kernel.asm	/^c010fc82:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010fc85	obj/kernel.asm	/^c010fc85:	eb 46                	jmp    c010fccd <syscall+0xc6>$/;"	l
c010fc87	obj/kernel.asm	/^c010fc87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc8a	obj/kernel.asm	/^c010fc8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fc8d	obj/kernel.asm	/^c010fc8d:	e8 e7 2f ff ff       	call   c0102c79 <print_trapframe>$/;"	l
c010fc92	obj/kernel.asm	/^c010fc92:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010fc97	obj/kernel.asm	/^c010fc97:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010fc9a	obj/kernel.asm	/^c010fc9a:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c010fc9f	obj/kernel.asm	/^c010fc9f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fca2	obj/kernel.asm	/^c010fca2:	89 54 24 14          	mov    %edx,0x14(%esp)$/;"	l
c010fca6	obj/kernel.asm	/^c010fca6:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c010fcaa	obj/kernel.asm	/^c010fcaa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fcad	obj/kernel.asm	/^c010fcad:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010fcb1	obj/kernel.asm	/^c010fcb1:	c7 44 24 08 cc a0 11 	movl   $0xc011a0cc,0x8(%esp)$/;"	l
c010fcb8	obj/kernel.asm	/^c010fcb8:	c0 $/;"	l
c010fcb9	obj/kernel.asm	/^c010fcb9:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c010fcc0	obj/kernel.asm	/^c010fcc0:	00 $/;"	l
c010fcc1	obj/kernel.asm	/^c010fcc1:	c7 04 24 f8 a0 11 c0 	movl   $0xc011a0f8,(%esp)$/;"	l
c010fcc8	obj/kernel.asm	/^c010fcc8:	e8 6a 0f ff ff       	call   c0100c37 <__panic>$/;"	l
c010fccd	obj/kernel.asm	/^c010fccd:	c9                   	leave  $/;"	l
c010fcce	obj/kernel.asm	/^c010fcce:	c3                   	ret    $/;"	l
c010fccf	obj/kernel.asm	/^c010fccf <page2ppn>:$/;"	l
c010fccf	obj/kernel.asm	/^c010fccf:	55                   	push   %ebp$/;"	l
c010fcd0	obj/kernel.asm	/^c010fcd0:	89 e5                	mov    %esp,%ebp$/;"	l
c010fcd2	obj/kernel.asm	/^c010fcd2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010fcd5	obj/kernel.asm	/^c010fcd5:	a1 78 b6 15 c0       	mov    0xc015b678,%eax$/;"	l
c010fcda	obj/kernel.asm	/^c010fcda:	29 c2                	sub    %eax,%edx$/;"	l
c010fcdc	obj/kernel.asm	/^c010fcdc:	89 d0                	mov    %edx,%eax$/;"	l
c010fcde	obj/kernel.asm	/^c010fcde:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010fce1	obj/kernel.asm	/^c010fce1:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c010fce7	obj/kernel.asm	/^c010fce7:	5d                   	pop    %ebp$/;"	l
c010fce8	obj/kernel.asm	/^c010fce8:	c3                   	ret    $/;"	l
c010fce9	obj/kernel.asm	/^c010fce9 <page2pa>:$/;"	l
c010fce9	obj/kernel.asm	/^c010fce9:	55                   	push   %ebp$/;"	l
c010fcea	obj/kernel.asm	/^c010fcea:	89 e5                	mov    %esp,%ebp$/;"	l
c010fcec	obj/kernel.asm	/^c010fcec:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fcef	obj/kernel.asm	/^c010fcef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fcf2	obj/kernel.asm	/^c010fcf2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fcf5	obj/kernel.asm	/^c010fcf5:	e8 d5 ff ff ff       	call   c010fccf <page2ppn>$/;"	l
c010fcfa	obj/kernel.asm	/^c010fcfa:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010fcfd	obj/kernel.asm	/^c010fcfd:	c9                   	leave  $/;"	l
c010fcfe	obj/kernel.asm	/^c010fcfe:	c3                   	ret    $/;"	l
c010fcff	obj/kernel.asm	/^c010fcff <page2kva>:$/;"	l
c010fcff	obj/kernel.asm	/^c010fcff:	55                   	push   %ebp$/;"	l
c010fd00	obj/kernel.asm	/^c010fd00:	89 e5                	mov    %esp,%ebp$/;"	l
c010fd02	obj/kernel.asm	/^c010fd02:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fd05	obj/kernel.asm	/^c010fd05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fd08	obj/kernel.asm	/^c010fd08:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fd0b	obj/kernel.asm	/^c010fd0b:	e8 d9 ff ff ff       	call   c010fce9 <page2pa>$/;"	l
c010fd10	obj/kernel.asm	/^c010fd10:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fd13	obj/kernel.asm	/^c010fd13:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd16	obj/kernel.asm	/^c010fd16:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010fd19	obj/kernel.asm	/^c010fd19:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fd1c	obj/kernel.asm	/^c010fd1c:	a1 c0 7e 15 c0       	mov    0xc0157ec0,%eax$/;"	l
c010fd21	obj/kernel.asm	/^c010fd21:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010fd24	obj/kernel.asm	/^c010fd24:	72 23                	jb     c010fd49 <page2kva+0x4a>$/;"	l
c010fd26	obj/kernel.asm	/^c010fd26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd29	obj/kernel.asm	/^c010fd29:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010fd2d	obj/kernel.asm	/^c010fd2d:	c7 44 24 08 10 a1 11 	movl   $0xc011a110,0x8(%esp)$/;"	l
c010fd34	obj/kernel.asm	/^c010fd34:	c0 $/;"	l
c010fd35	obj/kernel.asm	/^c010fd35:	c7 44 24 04 65 00 00 	movl   $0x65,0x4(%esp)$/;"	l
c010fd3c	obj/kernel.asm	/^c010fd3c:	00 $/;"	l
c010fd3d	obj/kernel.asm	/^c010fd3d:	c7 04 24 33 a1 11 c0 	movl   $0xc011a133,(%esp)$/;"	l
c010fd44	obj/kernel.asm	/^c010fd44:	e8 ee 0e ff ff       	call   c0100c37 <__panic>$/;"	l
c010fd49	obj/kernel.asm	/^c010fd49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd4c	obj/kernel.asm	/^c010fd4c:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010fd51	obj/kernel.asm	/^c010fd51:	c9                   	leave  $/;"	l
c010fd52	obj/kernel.asm	/^c010fd52:	c3                   	ret    $/;"	l
c010fd53	obj/kernel.asm	/^c010fd53 <swapfs_init>:$/;"	l
c010fd53	obj/kernel.asm	/^c010fd53:	55                   	push   %ebp$/;"	l
c010fd54	obj/kernel.asm	/^c010fd54:	89 e5                	mov    %esp,%ebp$/;"	l
c010fd56	obj/kernel.asm	/^c010fd56:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fd59	obj/kernel.asm	/^c010fd59:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010fd60	obj/kernel.asm	/^c010fd60:	e8 0a 1d ff ff       	call   c0101a6f <ide_device_valid>$/;"	l
c010fd65	obj/kernel.asm	/^c010fd65:	85 c0                	test   %eax,%eax$/;"	l
c010fd67	obj/kernel.asm	/^c010fd67:	75 1c                	jne    c010fd85 <swapfs_init+0x32>$/;"	l
c010fd69	obj/kernel.asm	/^c010fd69:	c7 44 24 08 41 a1 11 	movl   $0xc011a141,0x8(%esp)$/;"	l
c010fd70	obj/kernel.asm	/^c010fd70:	c0 $/;"	l
c010fd71	obj/kernel.asm	/^c010fd71:	c7 44 24 04 0d 00 00 	movl   $0xd,0x4(%esp)$/;"	l
c010fd78	obj/kernel.asm	/^c010fd78:	00 $/;"	l
c010fd79	obj/kernel.asm	/^c010fd79:	c7 04 24 5b a1 11 c0 	movl   $0xc011a15b,(%esp)$/;"	l
c010fd80	obj/kernel.asm	/^c010fd80:	e8 b2 0e ff ff       	call   c0100c37 <__panic>$/;"	l
c010fd85	obj/kernel.asm	/^c010fd85:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010fd8c	obj/kernel.asm	/^c010fd8c:	e8 1d 1d ff ff       	call   c0101aae <ide_device_size>$/;"	l
c010fd91	obj/kernel.asm	/^c010fd91:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010fd94	obj/kernel.asm	/^c010fd94:	a3 3c b7 15 c0       	mov    %eax,0xc015b73c$/;"	l
c010fd99	obj/kernel.asm	/^c010fd99:	c9                   	leave  $/;"	l
c010fd9a	obj/kernel.asm	/^c010fd9a:	c3                   	ret    $/;"	l
c010fd9b	obj/kernel.asm	/^c010fd9b <swapfs_read>:$/;"	l
c010fd9b	obj/kernel.asm	/^c010fd9b:	55                   	push   %ebp$/;"	l
c010fd9c	obj/kernel.asm	/^c010fd9c:	89 e5                	mov    %esp,%ebp$/;"	l
c010fd9e	obj/kernel.asm	/^c010fd9e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fda1	obj/kernel.asm	/^c010fda1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fda4	obj/kernel.asm	/^c010fda4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fda7	obj/kernel.asm	/^c010fda7:	e8 53 ff ff ff       	call   c010fcff <page2kva>$/;"	l
c010fdac	obj/kernel.asm	/^c010fdac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010fdaf	obj/kernel.asm	/^c010fdaf:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010fdb2	obj/kernel.asm	/^c010fdb2:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010fdb5	obj/kernel.asm	/^c010fdb5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fdb9	obj/kernel.asm	/^c010fdb9:	74 0b                	je     c010fdc6 <swapfs_read+0x2b>$/;"	l
c010fdbb	obj/kernel.asm	/^c010fdbb:	8b 15 3c b7 15 c0    	mov    0xc015b73c,%edx$/;"	l
c010fdc1	obj/kernel.asm	/^c010fdc1:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010fdc4	obj/kernel.asm	/^c010fdc4:	72 23                	jb     c010fde9 <swapfs_read+0x4e>$/;"	l
c010fdc6	obj/kernel.asm	/^c010fdc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fdc9	obj/kernel.asm	/^c010fdc9:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010fdcd	obj/kernel.asm	/^c010fdcd:	c7 44 24 08 71 a1 11 	movl   $0xc011a171,0x8(%esp)$/;"	l
c010fdd4	obj/kernel.asm	/^c010fdd4:	c0 $/;"	l
c010fdd5	obj/kernel.asm	/^c010fdd5:	c7 44 24 04 14 00 00 	movl   $0x14,0x4(%esp)$/;"	l
c010fddc	obj/kernel.asm	/^c010fddc:	00 $/;"	l
c010fddd	obj/kernel.asm	/^c010fddd:	c7 04 24 5b a1 11 c0 	movl   $0xc011a15b,(%esp)$/;"	l
c010fde4	obj/kernel.asm	/^c010fde4:	e8 4e 0e ff ff       	call   c0100c37 <__panic>$/;"	l
c010fde9	obj/kernel.asm	/^c010fde9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010fdec	obj/kernel.asm	/^c010fdec:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c010fdef	obj/kernel.asm	/^c010fdef:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010fdf6	obj/kernel.asm	/^c010fdf6:	00 $/;"	l
c010fdf7	obj/kernel.asm	/^c010fdf7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010fdfb	obj/kernel.asm	/^c010fdfb:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010fdff	obj/kernel.asm	/^c010fdff:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010fe06	obj/kernel.asm	/^c010fe06:	e8 e2 1c ff ff       	call   c0101aed <ide_read_secs>$/;"	l
c010fe0b	obj/kernel.asm	/^c010fe0b:	c9                   	leave  $/;"	l
c010fe0c	obj/kernel.asm	/^c010fe0c:	c3                   	ret    $/;"	l
c010fe0d	obj/kernel.asm	/^c010fe0d <swapfs_write>:$/;"	l
c010fe0d	obj/kernel.asm	/^c010fe0d:	55                   	push   %ebp$/;"	l
c010fe0e	obj/kernel.asm	/^c010fe0e:	89 e5                	mov    %esp,%ebp$/;"	l
c010fe10	obj/kernel.asm	/^c010fe10:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fe13	obj/kernel.asm	/^c010fe13:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fe16	obj/kernel.asm	/^c010fe16:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010fe19	obj/kernel.asm	/^c010fe19:	e8 e1 fe ff ff       	call   c010fcff <page2kva>$/;"	l
c010fe1e	obj/kernel.asm	/^c010fe1e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010fe21	obj/kernel.asm	/^c010fe21:	c1 ea 08             	shr    $0x8,%edx$/;"	l
c010fe24	obj/kernel.asm	/^c010fe24:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010fe27	obj/kernel.asm	/^c010fe27:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fe2b	obj/kernel.asm	/^c010fe2b:	74 0b                	je     c010fe38 <swapfs_write+0x2b>$/;"	l
c010fe2d	obj/kernel.asm	/^c010fe2d:	8b 15 3c b7 15 c0    	mov    0xc015b73c,%edx$/;"	l
c010fe33	obj/kernel.asm	/^c010fe33:	39 55 f4             	cmp    %edx,-0xc(%ebp)$/;"	l
c010fe36	obj/kernel.asm	/^c010fe36:	72 23                	jb     c010fe5b <swapfs_write+0x4e>$/;"	l
c010fe38	obj/kernel.asm	/^c010fe38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe3b	obj/kernel.asm	/^c010fe3b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c010fe3f	obj/kernel.asm	/^c010fe3f:	c7 44 24 08 71 a1 11 	movl   $0xc011a171,0x8(%esp)$/;"	l
c010fe46	obj/kernel.asm	/^c010fe46:	c0 $/;"	l
c010fe47	obj/kernel.asm	/^c010fe47:	c7 44 24 04 19 00 00 	movl   $0x19,0x4(%esp)$/;"	l
c010fe4e	obj/kernel.asm	/^c010fe4e:	00 $/;"	l
c010fe4f	obj/kernel.asm	/^c010fe4f:	c7 04 24 5b a1 11 c0 	movl   $0xc011a15b,(%esp)$/;"	l
c010fe56	obj/kernel.asm	/^c010fe56:	e8 dc 0d ff ff       	call   c0100c37 <__panic>$/;"	l
c010fe5b	obj/kernel.asm	/^c010fe5b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010fe5e	obj/kernel.asm	/^c010fe5e:	c1 e2 03             	shl    $0x3,%edx$/;"	l
c010fe61	obj/kernel.asm	/^c010fe61:	c7 44 24 0c 08 00 00 	movl   $0x8,0xc(%esp)$/;"	l
c010fe68	obj/kernel.asm	/^c010fe68:	00 $/;"	l
c010fe69	obj/kernel.asm	/^c010fe69:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c010fe6d	obj/kernel.asm	/^c010fe6d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c010fe71	obj/kernel.asm	/^c010fe71:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c010fe78	obj/kernel.asm	/^c010fe78:	e8 b2 1e ff ff       	call   c0101d2f <ide_write_secs>$/;"	l
c010fe7d	obj/kernel.asm	/^c010fe7d:	c9                   	leave  $/;"	l
c010fe7e	obj/kernel.asm	/^c010fe7e:	c3                   	ret    $/;"	l
c010fe7f	obj/kernel.asm	/^c010fe7f <lock_vdev_list>:$/;"	l
c010fe7f	obj/kernel.asm	/^c010fe7f:	55                   	push   %ebp$/;"	l
c010fe80	obj/kernel.asm	/^c010fe80:	89 e5                	mov    %esp,%ebp$/;"	l
c010fe82	obj/kernel.asm	/^c010fe82:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fe85	obj/kernel.asm	/^c010fe85:	c7 04 24 00 a0 15 c0 	movl   $0xc015a000,(%esp)$/;"	l
c010fe8c	obj/kernel.asm	/^c010fe8c:	e8 f3 ae ff ff       	call   c010ad84 <down>$/;"	l
c010fe91	obj/kernel.asm	/^c010fe91:	c9                   	leave  $/;"	l
c010fe92	obj/kernel.asm	/^c010fe92:	c3                   	ret    $/;"	l
c010fe93	obj/kernel.asm	/^c010fe93 <unlock_vdev_list>:$/;"	l
c010fe93	obj/kernel.asm	/^c010fe93:	55                   	push   %ebp$/;"	l
c010fe94	obj/kernel.asm	/^c010fe94:	89 e5                	mov    %esp,%ebp$/;"	l
c010fe96	obj/kernel.asm	/^c010fe96:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fe99	obj/kernel.asm	/^c010fe99:	c7 04 24 00 a0 15 c0 	movl   $0xc015a000,(%esp)$/;"	l
c010fea0	obj/kernel.asm	/^c010fea0:	e8 c4 ae ff ff       	call   c010ad69 <up>$/;"	l
c010fea5	obj/kernel.asm	/^c010fea5:	c9                   	leave  $/;"	l
c010fea6	obj/kernel.asm	/^c010fea6:	c3                   	ret    $/;"	l
c010fea7	obj/kernel.asm	/^c010fea7 <vfs_devlist_init>:$/;"	l
c010fea7	obj/kernel.asm	/^c010fea7:	55                   	push   %ebp$/;"	l
c010fea8	obj/kernel.asm	/^c010fea8:	89 e5                	mov    %esp,%ebp$/;"	l
c010feaa	obj/kernel.asm	/^c010feaa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fead	obj/kernel.asm	/^c010fead:	c7 45 f4 f8 9f 15 c0 	movl   $0xc0159ff8,-0xc(%ebp)$/;"	l
c010feb4	obj/kernel.asm	/^c010feb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010feb7	obj/kernel.asm	/^c010feb7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010feba	obj/kernel.asm	/^c010feba:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010febd	obj/kernel.asm	/^c010febd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fec0	obj/kernel.asm	/^c010fec0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010fec3	obj/kernel.asm	/^c010fec3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fec6	obj/kernel.asm	/^c010fec6:	89 10                	mov    %edx,(%eax)$/;"	l
c010fec8	obj/kernel.asm	/^c010fec8:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c010fecf	obj/kernel.asm	/^c010fecf:	00 $/;"	l
c010fed0	obj/kernel.asm	/^c010fed0:	c7 04 24 00 a0 15 c0 	movl   $0xc015a000,(%esp)$/;"	l
c010fed7	obj/kernel.asm	/^c010fed7:	e8 1a ad ff ff       	call   c010abf6 <sem_init>$/;"	l
c010fedc	obj/kernel.asm	/^c010fedc:	c9                   	leave  $/;"	l
c010fedd	obj/kernel.asm	/^c010fedd:	c3                   	ret    $/;"	l
c010fede	obj/kernel.asm	/^c010fede <vfs_cleanup>:$/;"	l
c010fede	obj/kernel.asm	/^c010fede:	55                   	push   %ebp$/;"	l
c010fedf	obj/kernel.asm	/^c010fedf:	89 e5                	mov    %esp,%ebp$/;"	l
c010fee1	obj/kernel.asm	/^c010fee1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010fee4	obj/kernel.asm	/^c010fee4:	c7 45 e8 f8 9f 15 c0 	movl   $0xc0159ff8,-0x18(%ebp)$/;"	l
c010feeb	obj/kernel.asm	/^c010feeb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010feee	obj/kernel.asm	/^c010feee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fef1	obj/kernel.asm	/^c010fef1:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010fef4	obj/kernel.asm	/^c010fef4:	0f 94 c0             	sete   %al$/;"	l
c010fef7	obj/kernel.asm	/^c010fef7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010fefa	obj/kernel.asm	/^c010fefa:	85 c0                	test   %eax,%eax$/;"	l
c010fefc	obj/kernel.asm	/^c010fefc:	75 57                	jne    c010ff55 <vfs_cleanup+0x77>$/;"	l
c010fefe	obj/kernel.asm	/^c010fefe:	e8 7c ff ff ff       	call   c010fe7f <lock_vdev_list>$/;"	l
c010ff03	obj/kernel.asm	/^c010ff03:	c7 45 f0 f8 9f 15 c0 	movl   $0xc0159ff8,-0x10(%ebp)$/;"	l
c010ff0a	obj/kernel.asm	/^c010ff0a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ff0d	obj/kernel.asm	/^c010ff0d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ff10	obj/kernel.asm	/^c010ff10:	eb 27                	jmp    c010ff39 <vfs_cleanup+0x5b>$/;"	l
c010ff12	obj/kernel.asm	/^c010ff12:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ff15	obj/kernel.asm	/^c010ff15:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010ff18	obj/kernel.asm	/^c010ff18:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ff1b	obj/kernel.asm	/^c010ff1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ff1e	obj/kernel.asm	/^c010ff1e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ff21	obj/kernel.asm	/^c010ff21:	85 c0                	test   %eax,%eax$/;"	l
c010ff23	obj/kernel.asm	/^c010ff23:	74 14                	je     c010ff39 <vfs_cleanup+0x5b>$/;"	l
c010ff25	obj/kernel.asm	/^c010ff25:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ff28	obj/kernel.asm	/^c010ff28:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ff2b	obj/kernel.asm	/^c010ff2b:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010ff2e	obj/kernel.asm	/^c010ff2e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ff31	obj/kernel.asm	/^c010ff31:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010ff34	obj/kernel.asm	/^c010ff34:	89 14 24             	mov    %edx,(%esp)$/;"	l
c010ff37	obj/kernel.asm	/^c010ff37:	ff d0                	call   *%eax$/;"	l
c010ff39	obj/kernel.asm	/^c010ff39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ff3c	obj/kernel.asm	/^c010ff3c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ff3f	obj/kernel.asm	/^c010ff3f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ff42	obj/kernel.asm	/^c010ff42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ff45	obj/kernel.asm	/^c010ff45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ff48	obj/kernel.asm	/^c010ff48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ff4b	obj/kernel.asm	/^c010ff4b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010ff4e	obj/kernel.asm	/^c010ff4e:	75 c2                	jne    c010ff12 <vfs_cleanup+0x34>$/;"	l
c010ff50	obj/kernel.asm	/^c010ff50:	e8 3e ff ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c010ff55	obj/kernel.asm	/^c010ff55:	c9                   	leave  $/;"	l
c010ff56	obj/kernel.asm	/^c010ff56:	c3                   	ret    $/;"	l
c010ff57	obj/kernel.asm	/^c010ff57 <vfs_get_root>:$/;"	l
c010ff57	obj/kernel.asm	/^c010ff57:	55                   	push   %ebp$/;"	l
c010ff58	obj/kernel.asm	/^c010ff58:	89 e5                	mov    %esp,%ebp$/;"	l
c010ff5a	obj/kernel.asm	/^c010ff5a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ff5d	obj/kernel.asm	/^c010ff5d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ff61	obj/kernel.asm	/^c010ff61:	75 24                	jne    c010ff87 <vfs_get_root+0x30>$/;"	l
c010ff63	obj/kernel.asm	/^c010ff63:	c7 44 24 0c 90 a1 11 	movl   $0xc011a190,0xc(%esp)$/;"	l
c010ff6a	obj/kernel.asm	/^c010ff6a:	c0 $/;"	l
c010ff6b	obj/kernel.asm	/^c010ff6b:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c010ff72	obj/kernel.asm	/^c010ff72:	c0 $/;"	l
c010ff73	obj/kernel.asm	/^c010ff73:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c010ff7a	obj/kernel.asm	/^c010ff7a:	00 $/;"	l
c010ff7b	obj/kernel.asm	/^c010ff7b:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c010ff82	obj/kernel.asm	/^c010ff82:	e8 b0 0c ff ff       	call   c0100c37 <__panic>$/;"	l
c010ff87	obj/kernel.asm	/^c010ff87:	c7 45 f4 f3 ff ff ff 	movl   $0xfffffff3,-0xc(%ebp)$/;"	l
c010ff8e	obj/kernel.asm	/^c010ff8e:	c7 45 e0 f8 9f 15 c0 	movl   $0xc0159ff8,-0x20(%ebp)$/;"	l
c010ff95	obj/kernel.asm	/^c010ff95:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ff98	obj/kernel.asm	/^c010ff98:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ff9b	obj/kernel.asm	/^c010ff9b:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
c010ff9e	obj/kernel.asm	/^c010ff9e:	0f 94 c0             	sete   %al$/;"	l
c010ffa1	obj/kernel.asm	/^c010ffa1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ffa4	obj/kernel.asm	/^c010ffa4:	85 c0                	test   %eax,%eax$/;"	l
c010ffa6	obj/kernel.asm	/^c010ffa6:	0f 85 c3 00 00 00    	jne    c011006f <vfs_get_root+0x118>$/;"	l
c010ffac	obj/kernel.asm	/^c010ffac:	e8 ce fe ff ff       	call   c010fe7f <lock_vdev_list>$/;"	l
c010ffb1	obj/kernel.asm	/^c010ffb1:	c7 45 e8 f8 9f 15 c0 	movl   $0xc0159ff8,-0x18(%ebp)$/;"	l
c010ffb8	obj/kernel.asm	/^c010ffb8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ffbb	obj/kernel.asm	/^c010ffbb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ffbe	obj/kernel.asm	/^c010ffbe:	e9 8c 00 00 00       	jmp    c011004f <vfs_get_root+0xf8>$/;"	l
c010ffc3	obj/kernel.asm	/^c010ffc3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ffc6	obj/kernel.asm	/^c010ffc6:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010ffc9	obj/kernel.asm	/^c010ffc9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ffcc	obj/kernel.asm	/^c010ffcc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ffcf	obj/kernel.asm	/^c010ffcf:	8b 00                	mov    (%eax),%eax$/;"	l
c010ffd1	obj/kernel.asm	/^c010ffd1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c010ffd5	obj/kernel.asm	/^c010ffd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ffd8	obj/kernel.asm	/^c010ffd8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c010ffdb	obj/kernel.asm	/^c010ffdb:	e8 52 64 00 00       	call   c0116432 <strcmp>$/;"	l
c010ffe0	obj/kernel.asm	/^c010ffe0:	85 c0                	test   %eax,%eax$/;"	l
c010ffe2	obj/kernel.asm	/^c010ffe2:	75 6b                	jne    c011004f <vfs_get_root+0xf8>$/;"	l
c010ffe4	obj/kernel.asm	/^c010ffe4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010ffeb	obj/kernel.asm	/^c010ffeb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ffee	obj/kernel.asm	/^c010ffee:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fff1	obj/kernel.asm	/^c010fff1:	85 c0                	test   %eax,%eax$/;"	l
c010fff3	obj/kernel.asm	/^c010fff3:	74 19                	je     c011000e <vfs_get_root+0xb7>$/;"	l
c010fff5	obj/kernel.asm	/^c010fff5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fff8	obj/kernel.asm	/^c010fff8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fffb	obj/kernel.asm	/^c010fffb:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010fffe	obj/kernel.asm	/^c010fffe:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0110001	obj/kernel.asm	/^c0110001:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c0110004	obj/kernel.asm	/^c0110004:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110007	obj/kernel.asm	/^c0110007:	ff d0                	call   *%eax$/;"	l
c0110009	obj/kernel.asm	/^c0110009:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011000c	obj/kernel.asm	/^c011000c:	eb 21                	jmp    c011002f <vfs_get_root+0xd8>$/;"	l
c011000e	obj/kernel.asm	/^c011000e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110011	obj/kernel.asm	/^c0110011:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110014	obj/kernel.asm	/^c0110014:	85 c0                	test   %eax,%eax$/;"	l
c0110016	obj/kernel.asm	/^c0110016:	75 17                	jne    c011002f <vfs_get_root+0xd8>$/;"	l
c0110018	obj/kernel.asm	/^c0110018:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011001b	obj/kernel.asm	/^c011001b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011001e	obj/kernel.asm	/^c011001e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110021	obj/kernel.asm	/^c0110021:	e8 a1 0d 00 00       	call   c0110dc7 <inode_ref_inc>$/;"	l
c0110026	obj/kernel.asm	/^c0110026:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110029	obj/kernel.asm	/^c0110029:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011002c	obj/kernel.asm	/^c011002c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011002f	obj/kernel.asm	/^c011002f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110033	obj/kernel.asm	/^c0110033:	74 11                	je     c0110046 <vfs_get_root+0xef>$/;"	l
c0110035	obj/kernel.asm	/^c0110035:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c011003c	obj/kernel.asm	/^c011003c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011003f	obj/kernel.asm	/^c011003f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110042	obj/kernel.asm	/^c0110042:	89 10                	mov    %edx,(%eax)$/;"	l
c0110044	obj/kernel.asm	/^c0110044:	eb 24                	jmp    c011006a <vfs_get_root+0x113>$/;"	l
c0110046	obj/kernel.asm	/^c0110046:	c7 45 f4 f2 ff ff ff 	movl   $0xfffffff2,-0xc(%ebp)$/;"	l
c011004d	obj/kernel.asm	/^c011004d:	eb 1b                	jmp    c011006a <vfs_get_root+0x113>$/;"	l
c011004f	obj/kernel.asm	/^c011004f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110052	obj/kernel.asm	/^c0110052:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0110055	obj/kernel.asm	/^c0110055:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110058	obj/kernel.asm	/^c0110058:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011005b	obj/kernel.asm	/^c011005b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011005e	obj/kernel.asm	/^c011005e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110061	obj/kernel.asm	/^c0110061:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0110064	obj/kernel.asm	/^c0110064:	0f 85 59 ff ff ff    	jne    c010ffc3 <vfs_get_root+0x6c>$/;"	l
c011006a	obj/kernel.asm	/^c011006a:	e8 24 fe ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c011006f	obj/kernel.asm	/^c011006f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110072	obj/kernel.asm	/^c0110072:	c9                   	leave  $/;"	l
c0110073	obj/kernel.asm	/^c0110073:	c3                   	ret    $/;"	l
c0110074	obj/kernel.asm	/^c0110074 <vfs_get_devname>:$/;"	l
c0110074	obj/kernel.asm	/^c0110074:	55                   	push   %ebp$/;"	l
c0110075	obj/kernel.asm	/^c0110075:	89 e5                	mov    %esp,%ebp$/;"	l
c0110077	obj/kernel.asm	/^c0110077:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011007a	obj/kernel.asm	/^c011007a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c011007e	obj/kernel.asm	/^c011007e:	75 24                	jne    c01100a4 <vfs_get_devname+0x30>$/;"	l
c0110080	obj/kernel.asm	/^c0110080:	c7 44 24 0c ca a1 11 	movl   $0xc011a1ca,0xc(%esp)$/;"	l
c0110087	obj/kernel.asm	/^c0110087:	c0 $/;"	l
c0110088	obj/kernel.asm	/^c0110088:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c011008f	obj/kernel.asm	/^c011008f:	c0 $/;"	l
c0110090	obj/kernel.asm	/^c0110090:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0110097	obj/kernel.asm	/^c0110097:	00 $/;"	l
c0110098	obj/kernel.asm	/^c0110098:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c011009f	obj/kernel.asm	/^c011009f:	e8 93 0b ff ff       	call   c0100c37 <__panic>$/;"	l
c01100a4	obj/kernel.asm	/^c01100a4:	c7 45 f0 f8 9f 15 c0 	movl   $0xc0159ff8,-0x10(%ebp)$/;"	l
c01100ab	obj/kernel.asm	/^c01100ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01100ae	obj/kernel.asm	/^c01100ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01100b1	obj/kernel.asm	/^c01100b1:	eb 1b                	jmp    c01100ce <vfs_get_devname+0x5a>$/;"	l
c01100b3	obj/kernel.asm	/^c01100b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100b6	obj/kernel.asm	/^c01100b6:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01100b9	obj/kernel.asm	/^c01100b9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01100bc	obj/kernel.asm	/^c01100bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01100bf	obj/kernel.asm	/^c01100bf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01100c2	obj/kernel.asm	/^c01100c2:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01100c5	obj/kernel.asm	/^c01100c5:	75 07                	jne    c01100ce <vfs_get_devname+0x5a>$/;"	l
c01100c7	obj/kernel.asm	/^c01100c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01100ca	obj/kernel.asm	/^c01100ca:	8b 00                	mov    (%eax),%eax$/;"	l
c01100cc	obj/kernel.asm	/^c01100cc:	eb 1c                	jmp    c01100ea <vfs_get_devname+0x76>$/;"	l
c01100ce	obj/kernel.asm	/^c01100ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100d1	obj/kernel.asm	/^c01100d1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01100d4	obj/kernel.asm	/^c01100d4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01100d7	obj/kernel.asm	/^c01100d7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01100da	obj/kernel.asm	/^c01100da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01100dd	obj/kernel.asm	/^c01100dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100e0	obj/kernel.asm	/^c01100e0:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01100e3	obj/kernel.asm	/^c01100e3:	75 ce                	jne    c01100b3 <vfs_get_devname+0x3f>$/;"	l
c01100e5	obj/kernel.asm	/^c01100e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01100ea	obj/kernel.asm	/^c01100ea:	c9                   	leave  $/;"	l
c01100eb	obj/kernel.asm	/^c01100eb:	c3                   	ret    $/;"	l
c01100ec	obj/kernel.asm	/^c01100ec <check_devname_conflict>:$/;"	l
c01100ec	obj/kernel.asm	/^c01100ec:	55                   	push   %ebp$/;"	l
c01100ed	obj/kernel.asm	/^c01100ed:	89 e5                	mov    %esp,%ebp$/;"	l
c01100ef	obj/kernel.asm	/^c01100ef:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01100f2	obj/kernel.asm	/^c01100f2:	c7 45 f0 f8 9f 15 c0 	movl   $0xc0159ff8,-0x10(%ebp)$/;"	l
c01100f9	obj/kernel.asm	/^c01100f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01100fc	obj/kernel.asm	/^c01100fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01100ff	obj/kernel.asm	/^c01100ff:	eb 28                	jmp    c0110129 <check_devname_conflict+0x3d>$/;"	l
c0110101	obj/kernel.asm	/^c0110101:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110104	obj/kernel.asm	/^c0110104:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0110107	obj/kernel.asm	/^c0110107:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011010a	obj/kernel.asm	/^c011010a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011010d	obj/kernel.asm	/^c011010d:	8b 00                	mov    (%eax),%eax$/;"	l
c011010f	obj/kernel.asm	/^c011010f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110112	obj/kernel.asm	/^c0110112:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0110116	obj/kernel.asm	/^c0110116:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110119	obj/kernel.asm	/^c0110119:	e8 14 63 00 00       	call   c0116432 <strcmp>$/;"	l
c011011e	obj/kernel.asm	/^c011011e:	85 c0                	test   %eax,%eax$/;"	l
c0110120	obj/kernel.asm	/^c0110120:	75 07                	jne    c0110129 <check_devname_conflict+0x3d>$/;"	l
c0110122	obj/kernel.asm	/^c0110122:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110127	obj/kernel.asm	/^c0110127:	eb 1c                	jmp    c0110145 <check_devname_conflict+0x59>$/;"	l
c0110129	obj/kernel.asm	/^c0110129:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011012c	obj/kernel.asm	/^c011012c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011012f	obj/kernel.asm	/^c011012f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110132	obj/kernel.asm	/^c0110132:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110135	obj/kernel.asm	/^c0110135:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110138	obj/kernel.asm	/^c0110138:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011013b	obj/kernel.asm	/^c011013b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c011013e	obj/kernel.asm	/^c011013e:	75 c1                	jne    c0110101 <check_devname_conflict+0x15>$/;"	l
c0110140	obj/kernel.asm	/^c0110140:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0110145	obj/kernel.asm	/^c0110145:	c9                   	leave  $/;"	l
c0110146	obj/kernel.asm	/^c0110146:	c3                   	ret    $/;"	l
c0110147	obj/kernel.asm	/^c0110147 <vfs_do_add>:$/;"	l
c0110147	obj/kernel.asm	/^c0110147:	55                   	push   %ebp$/;"	l
c0110148	obj/kernel.asm	/^c0110148:	89 e5                	mov    %esp,%ebp$/;"	l
c011014a	obj/kernel.asm	/^c011014a:	83 ec 48             	sub    $0x48,%esp$/;"	l
c011014d	obj/kernel.asm	/^c011014d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0110151	obj/kernel.asm	/^c0110151:	75 24                	jne    c0110177 <vfs_do_add+0x30>$/;"	l
c0110153	obj/kernel.asm	/^c0110153:	c7 44 24 0c 90 a1 11 	movl   $0xc011a190,0xc(%esp)$/;"	l
c011015a	obj/kernel.asm	/^c011015a:	c0 $/;"	l
c011015b	obj/kernel.asm	/^c011015b:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c0110162	obj/kernel.asm	/^c0110162:	c0 $/;"	l
c0110163	obj/kernel.asm	/^c0110163:	c7 44 24 04 8e 00 00 	movl   $0x8e,0x4(%esp)$/;"	l
c011016a	obj/kernel.asm	/^c011016a:	00 $/;"	l
c011016b	obj/kernel.asm	/^c011016b:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c0110172	obj/kernel.asm	/^c0110172:	e8 c0 0a ff ff       	call   c0100c37 <__panic>$/;"	l
c0110177	obj/kernel.asm	/^c0110177:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011017b	obj/kernel.asm	/^c011017b:	75 06                	jne    c0110183 <vfs_do_add+0x3c>$/;"	l
c011017d	obj/kernel.asm	/^c011017d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0110181	obj/kernel.asm	/^c0110181:	74 37                	je     c01101ba <vfs_do_add+0x73>$/;"	l
c0110183	obj/kernel.asm	/^c0110183:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0110187	obj/kernel.asm	/^c0110187:	74 0d                	je     c0110196 <vfs_do_add+0x4f>$/;"	l
c0110189	obj/kernel.asm	/^c0110189:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011018c	obj/kernel.asm	/^c011018c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011018f	obj/kernel.asm	/^c011018f:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110194	obj/kernel.asm	/^c0110194:	74 24                	je     c01101ba <vfs_do_add+0x73>$/;"	l
c0110196	obj/kernel.asm	/^c0110196:	c7 44 24 0c d8 a1 11 	movl   $0xc011a1d8,0xc(%esp)$/;"	l
c011019d	obj/kernel.asm	/^c011019d:	c0 $/;"	l
c011019e	obj/kernel.asm	/^c011019e:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c01101a5	obj/kernel.asm	/^c01101a5:	c0 $/;"	l
c01101a6	obj/kernel.asm	/^c01101a6:	c7 44 24 04 8f 00 00 	movl   $0x8f,0x4(%esp)$/;"	l
c01101ad	obj/kernel.asm	/^c01101ad:	00 $/;"	l
c01101ae	obj/kernel.asm	/^c01101ae:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c01101b5	obj/kernel.asm	/^c01101b5:	e8 7d 0a ff ff       	call   c0100c37 <__panic>$/;"	l
c01101ba	obj/kernel.asm	/^c01101ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101bd	obj/kernel.asm	/^c01101bd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01101c0	obj/kernel.asm	/^c01101c0:	e8 75 61 00 00       	call   c011633a <strlen>$/;"	l
c01101c5	obj/kernel.asm	/^c01101c5:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c01101c8	obj/kernel.asm	/^c01101c8:	76 0a                	jbe    c01101d4 <vfs_do_add+0x8d>$/;"	l
c01101ca	obj/kernel.asm	/^c01101ca:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax$/;"	l
c01101cf	obj/kernel.asm	/^c01101cf:	e9 00 01 00 00       	jmp    c01102d4 <vfs_do_add+0x18d>$/;"	l
c01101d4	obj/kernel.asm	/^c01101d4:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01101db	obj/kernel.asm	/^c01101db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101de	obj/kernel.asm	/^c01101de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01101e1	obj/kernel.asm	/^c01101e1:	e8 be 07 ff ff       	call   c01009a4 <strdup>$/;"	l
c01101e6	obj/kernel.asm	/^c01101e6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01101e9	obj/kernel.asm	/^c01101e9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01101ed	obj/kernel.asm	/^c01101ed:	75 08                	jne    c01101f7 <vfs_do_add+0xb0>$/;"	l
c01101ef	obj/kernel.asm	/^c01101ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01101f2	obj/kernel.asm	/^c01101f2:	e9 dd 00 00 00       	jmp    c01102d4 <vfs_do_add+0x18d>$/;"	l
c01101f7	obj/kernel.asm	/^c01101f7:	c7 04 24 18 00 00 00 	movl   $0x18,(%esp)$/;"	l
c01101fe	obj/kernel.asm	/^c01101fe:	e8 e5 7f ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0110203	obj/kernel.asm	/^c0110203:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110206	obj/kernel.asm	/^c0110206:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011020a	obj/kernel.asm	/^c011020a:	75 05                	jne    c0110211 <vfs_do_add+0xca>$/;"	l
c011020c	obj/kernel.asm	/^c011020c:	e9 b5 00 00 00       	jmp    c01102c6 <vfs_do_add+0x17f>$/;"	l
c0110211	obj/kernel.asm	/^c0110211:	c7 45 f4 e9 ff ff ff 	movl   $0xffffffe9,-0xc(%ebp)$/;"	l
c0110218	obj/kernel.asm	/^c0110218:	e8 62 fc ff ff       	call   c010fe7f <lock_vdev_list>$/;"	l
c011021d	obj/kernel.asm	/^c011021d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110220	obj/kernel.asm	/^c0110220:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110223	obj/kernel.asm	/^c0110223:	e8 c4 fe ff ff       	call   c01100ec <check_devname_conflict>$/;"	l
c0110228	obj/kernel.asm	/^c0110228:	85 c0                	test   %eax,%eax$/;"	l
c011022a	obj/kernel.asm	/^c011022a:	75 16                	jne    c0110242 <vfs_do_add+0xfb>$/;"	l
c011022c	obj/kernel.asm	/^c011022c:	e8 62 fc ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c0110231	obj/kernel.asm	/^c0110231:	90                   	nop$/;"	l
c0110232	obj/kernel.asm	/^c0110232:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110235	obj/kernel.asm	/^c0110235:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110238	obj/kernel.asm	/^c0110238:	e8 c6 7f ff ff       	call   c0108203 <kfree>$/;"	l
c011023d	obj/kernel.asm	/^c011023d:	e9 84 00 00 00       	jmp    c01102c6 <vfs_do_add+0x17f>$/;"	l
c0110242	obj/kernel.asm	/^c0110242:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110245	obj/kernel.asm	/^c0110245:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110248	obj/kernel.asm	/^c0110248:	89 10                	mov    %edx,(%eax)$/;"	l
c011024a	obj/kernel.asm	/^c011024a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011024d	obj/kernel.asm	/^c011024d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110250	obj/kernel.asm	/^c0110250:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110253	obj/kernel.asm	/^c0110253:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110256	obj/kernel.asm	/^c0110256:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0110259	obj/kernel.asm	/^c0110259:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c011025c	obj/kernel.asm	/^c011025c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011025f	obj/kernel.asm	/^c011025f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110262	obj/kernel.asm	/^c0110262:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0110265	obj/kernel.asm	/^c0110265:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110268	obj/kernel.asm	/^c0110268:	83 c0 10             	add    $0x10,%eax$/;"	l
c011026b	obj/kernel.asm	/^c011026b:	c7 45 e8 f8 9f 15 c0 	movl   $0xc0159ff8,-0x18(%ebp)$/;"	l
c0110272	obj/kernel.asm	/^c0110272:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0110275	obj/kernel.asm	/^c0110275:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110278	obj/kernel.asm	/^c0110278:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011027b	obj/kernel.asm	/^c011027b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011027e	obj/kernel.asm	/^c011027e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0110281	obj/kernel.asm	/^c0110281:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110284	obj/kernel.asm	/^c0110284:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110287	obj/kernel.asm	/^c0110287:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c011028a	obj/kernel.asm	/^c011028a:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c011028d	obj/kernel.asm	/^c011028d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0110290	obj/kernel.asm	/^c0110290:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0110293	obj/kernel.asm	/^c0110293:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0110296	obj/kernel.asm	/^c0110296:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0110299	obj/kernel.asm	/^c0110299:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c011029c	obj/kernel.asm	/^c011029c:	89 10                	mov    %edx,(%eax)$/;"	l
c011029e	obj/kernel.asm	/^c011029e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01102a1	obj/kernel.asm	/^c01102a1:	8b 10                	mov    (%eax),%edx$/;"	l
c01102a3	obj/kernel.asm	/^c01102a3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01102a6	obj/kernel.asm	/^c01102a6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01102a9	obj/kernel.asm	/^c01102a9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01102ac	obj/kernel.asm	/^c01102ac:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01102af	obj/kernel.asm	/^c01102af:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01102b2	obj/kernel.asm	/^c01102b2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01102b5	obj/kernel.asm	/^c01102b5:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01102b8	obj/kernel.asm	/^c01102b8:	89 10                	mov    %edx,(%eax)$/;"	l
c01102ba	obj/kernel.asm	/^c01102ba:	e8 d4 fb ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c01102bf	obj/kernel.asm	/^c01102bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01102c4	obj/kernel.asm	/^c01102c4:	eb 0e                	jmp    c01102d4 <vfs_do_add+0x18d>$/;"	l
c01102c6	obj/kernel.asm	/^c01102c6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01102c9	obj/kernel.asm	/^c01102c9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01102cc	obj/kernel.asm	/^c01102cc:	e8 32 7f ff ff       	call   c0108203 <kfree>$/;"	l
c01102d1	obj/kernel.asm	/^c01102d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01102d4	obj/kernel.asm	/^c01102d4:	c9                   	leave  $/;"	l
c01102d5	obj/kernel.asm	/^c01102d5:	c3                   	ret    $/;"	l
c01102d6	obj/kernel.asm	/^c01102d6 <vfs_add_fs>:$/;"	l
c01102d6	obj/kernel.asm	/^c01102d6:	55                   	push   %ebp$/;"	l
c01102d7	obj/kernel.asm	/^c01102d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01102d9	obj/kernel.asm	/^c01102d9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01102dc	obj/kernel.asm	/^c01102dc:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01102e3	obj/kernel.asm	/^c01102e3:	00 $/;"	l
c01102e4	obj/kernel.asm	/^c01102e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01102e7	obj/kernel.asm	/^c01102e7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01102eb	obj/kernel.asm	/^c01102eb:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01102f2	obj/kernel.asm	/^c01102f2:	00 $/;"	l
c01102f3	obj/kernel.asm	/^c01102f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01102f6	obj/kernel.asm	/^c01102f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01102f9	obj/kernel.asm	/^c01102f9:	e8 49 fe ff ff       	call   c0110147 <vfs_do_add>$/;"	l
c01102fe	obj/kernel.asm	/^c01102fe:	c9                   	leave  $/;"	l
c01102ff	obj/kernel.asm	/^c01102ff:	c3                   	ret    $/;"	l
c0110300	obj/kernel.asm	/^c0110300 <vfs_add_dev>:$/;"	l
c0110300	obj/kernel.asm	/^c0110300:	55                   	push   %ebp$/;"	l
c0110301	obj/kernel.asm	/^c0110301:	89 e5                	mov    %esp,%ebp$/;"	l
c0110303	obj/kernel.asm	/^c0110303:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110306	obj/kernel.asm	/^c0110306:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110309	obj/kernel.asm	/^c0110309:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011030d	obj/kernel.asm	/^c011030d:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0110314	obj/kernel.asm	/^c0110314:	00 $/;"	l
c0110315	obj/kernel.asm	/^c0110315:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110318	obj/kernel.asm	/^c0110318:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011031c	obj/kernel.asm	/^c011031c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011031f	obj/kernel.asm	/^c011031f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110322	obj/kernel.asm	/^c0110322:	e8 20 fe ff ff       	call   c0110147 <vfs_do_add>$/;"	l
c0110327	obj/kernel.asm	/^c0110327:	c9                   	leave  $/;"	l
c0110328	obj/kernel.asm	/^c0110328:	c3                   	ret    $/;"	l
c0110329	obj/kernel.asm	/^c0110329 <find_mount>:$/;"	l
c0110329	obj/kernel.asm	/^c0110329:	55                   	push   %ebp$/;"	l
c011032a	obj/kernel.asm	/^c011032a:	89 e5                	mov    %esp,%ebp$/;"	l
c011032c	obj/kernel.asm	/^c011032c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011032f	obj/kernel.asm	/^c011032f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0110333	obj/kernel.asm	/^c0110333:	75 24                	jne    c0110359 <find_mount+0x30>$/;"	l
c0110335	obj/kernel.asm	/^c0110335:	c7 44 24 0c 90 a1 11 	movl   $0xc011a190,0xc(%esp)$/;"	l
c011033c	obj/kernel.asm	/^c011033c:	c0 $/;"	l
c011033d	obj/kernel.asm	/^c011033d:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c0110344	obj/kernel.asm	/^c0110344:	c0 $/;"	l
c0110345	obj/kernel.asm	/^c0110345:	c7 44 24 04 cd 00 00 	movl   $0xcd,0x4(%esp)$/;"	l
c011034c	obj/kernel.asm	/^c011034c:	00 $/;"	l
c011034d	obj/kernel.asm	/^c011034d:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c0110354	obj/kernel.asm	/^c0110354:	e8 de 08 ff ff       	call   c0100c37 <__panic>$/;"	l
c0110359	obj/kernel.asm	/^c0110359:	c7 45 f0 f8 9f 15 c0 	movl   $0xc0159ff8,-0x10(%ebp)$/;"	l
c0110360	obj/kernel.asm	/^c0110360:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110363	obj/kernel.asm	/^c0110363:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110366	obj/kernel.asm	/^c0110366:	eb 3a                	jmp    c01103a2 <find_mount+0x79>$/;"	l
c0110368	obj/kernel.asm	/^c0110368:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011036b	obj/kernel.asm	/^c011036b:	83 e8 10             	sub    $0x10,%eax$/;"	l
c011036e	obj/kernel.asm	/^c011036e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110371	obj/kernel.asm	/^c0110371:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110374	obj/kernel.asm	/^c0110374:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110377	obj/kernel.asm	/^c0110377:	85 c0                	test   %eax,%eax$/;"	l
c0110379	obj/kernel.asm	/^c0110379:	74 27                	je     c01103a2 <find_mount+0x79>$/;"	l
c011037b	obj/kernel.asm	/^c011037b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011037e	obj/kernel.asm	/^c011037e:	8b 00                	mov    (%eax),%eax$/;"	l
c0110380	obj/kernel.asm	/^c0110380:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110383	obj/kernel.asm	/^c0110383:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0110387	obj/kernel.asm	/^c0110387:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011038a	obj/kernel.asm	/^c011038a:	e8 a3 60 00 00       	call   c0116432 <strcmp>$/;"	l
c011038f	obj/kernel.asm	/^c011038f:	85 c0                	test   %eax,%eax$/;"	l
c0110391	obj/kernel.asm	/^c0110391:	75 0f                	jne    c01103a2 <find_mount+0x79>$/;"	l
c0110393	obj/kernel.asm	/^c0110393:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110396	obj/kernel.asm	/^c0110396:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110399	obj/kernel.asm	/^c0110399:	89 10                	mov    %edx,(%eax)$/;"	l
c011039b	obj/kernel.asm	/^c011039b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01103a0	obj/kernel.asm	/^c01103a0:	eb 1c                	jmp    c01103be <find_mount+0x95>$/;"	l
c01103a2	obj/kernel.asm	/^c01103a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01103a5	obj/kernel.asm	/^c01103a5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01103a8	obj/kernel.asm	/^c01103a8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01103ab	obj/kernel.asm	/^c01103ab:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01103ae	obj/kernel.asm	/^c01103ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103b1	obj/kernel.asm	/^c01103b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01103b4	obj/kernel.asm	/^c01103b4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01103b7	obj/kernel.asm	/^c01103b7:	75 af                	jne    c0110368 <find_mount+0x3f>$/;"	l
c01103b9	obj/kernel.asm	/^c01103b9:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax$/;"	l
c01103be	obj/kernel.asm	/^c01103be:	c9                   	leave  $/;"	l
c01103bf	obj/kernel.asm	/^c01103bf:	c3                   	ret    $/;"	l
c01103c0	obj/kernel.asm	/^c01103c0 <vfs_mount>:$/;"	l
c01103c0	obj/kernel.asm	/^c01103c0:	55                   	push   %ebp$/;"	l
c01103c1	obj/kernel.asm	/^c01103c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01103c3	obj/kernel.asm	/^c01103c3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01103c6	obj/kernel.asm	/^c01103c6:	e8 b4 fa ff ff       	call   c010fe7f <lock_vdev_list>$/;"	l
c01103cb	obj/kernel.asm	/^c01103cb:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01103ce	obj/kernel.asm	/^c01103ce:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01103d2	obj/kernel.asm	/^c01103d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01103d5	obj/kernel.asm	/^c01103d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01103d8	obj/kernel.asm	/^c01103d8:	e8 4c ff ff ff       	call   c0110329 <find_mount>$/;"	l
c01103dd	obj/kernel.asm	/^c01103dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103e0	obj/kernel.asm	/^c01103e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01103e4	obj/kernel.asm	/^c01103e4:	74 05                	je     c01103eb <vfs_mount+0x2b>$/;"	l
c01103e6	obj/kernel.asm	/^c01103e6:	e9 f4 00 00 00       	jmp    c01104df <vfs_mount+0x11f>$/;"	l
c01103eb	obj/kernel.asm	/^c01103eb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01103ee	obj/kernel.asm	/^c01103ee:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01103f1	obj/kernel.asm	/^c01103f1:	85 c0                	test   %eax,%eax$/;"	l
c01103f3	obj/kernel.asm	/^c01103f3:	74 0c                	je     c0110401 <vfs_mount+0x41>$/;"	l
c01103f5	obj/kernel.asm	/^c01103f5:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c01103fc	obj/kernel.asm	/^c01103fc:	e9 de 00 00 00       	jmp    c01104df <vfs_mount+0x11f>$/;"	l
c0110401	obj/kernel.asm	/^c0110401:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110404	obj/kernel.asm	/^c0110404:	8b 00                	mov    (%eax),%eax$/;"	l
c0110406	obj/kernel.asm	/^c0110406:	85 c0                	test   %eax,%eax$/;"	l
c0110408	obj/kernel.asm	/^c0110408:	74 0a                	je     c0110414 <vfs_mount+0x54>$/;"	l
c011040a	obj/kernel.asm	/^c011040a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011040d	obj/kernel.asm	/^c011040d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110410	obj/kernel.asm	/^c0110410:	85 c0                	test   %eax,%eax$/;"	l
c0110412	obj/kernel.asm	/^c0110412:	75 24                	jne    c0110438 <vfs_mount+0x78>$/;"	l
c0110414	obj/kernel.asm	/^c0110414:	c7 44 24 0c 34 a2 11 	movl   $0xc011a234,0xc(%esp)$/;"	l
c011041b	obj/kernel.asm	/^c011041b:	c0 $/;"	l
c011041c	obj/kernel.asm	/^c011041c:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c0110423	obj/kernel.asm	/^c0110423:	c0 $/;"	l
c0110424	obj/kernel.asm	/^c0110424:	c7 44 24 04 eb 00 00 	movl   $0xeb,0x4(%esp)$/;"	l
c011042b	obj/kernel.asm	/^c011042b:	00 $/;"	l
c011042c	obj/kernel.asm	/^c011042c:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c0110433	obj/kernel.asm	/^c0110433:	e8 ff 07 ff ff       	call   c0100c37 <__panic>$/;"	l
c0110438	obj/kernel.asm	/^c0110438:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011043b	obj/kernel.asm	/^c011043b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011043e	obj/kernel.asm	/^c011043e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110441	obj/kernel.asm	/^c0110441:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110445	obj/kernel.asm	/^c0110445:	74 0d                	je     c0110454 <vfs_mount+0x94>$/;"	l
c0110447	obj/kernel.asm	/^c0110447:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011044a	obj/kernel.asm	/^c011044a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011044d	obj/kernel.asm	/^c011044d:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110452	obj/kernel.asm	/^c0110452:	74 24                	je     c0110478 <vfs_mount+0xb8>$/;"	l
c0110454	obj/kernel.asm	/^c0110454:	c7 44 24 0c 60 a2 11 	movl   $0xc011a260,0xc(%esp)$/;"	l
c011045b	obj/kernel.asm	/^c011045b:	c0 $/;"	l
c011045c	obj/kernel.asm	/^c011045c:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c0110463	obj/kernel.asm	/^c0110463:	c0 $/;"	l
c0110464	obj/kernel.asm	/^c0110464:	c7 44 24 04 ed 00 00 	movl   $0xed,0x4(%esp)$/;"	l
c011046b	obj/kernel.asm	/^c011046b:	00 $/;"	l
c011046c	obj/kernel.asm	/^c011046c:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c0110473	obj/kernel.asm	/^c0110473:	e8 bf 07 ff ff       	call   c0100c37 <__panic>$/;"	l
c0110478	obj/kernel.asm	/^c0110478:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011047b	obj/kernel.asm	/^c011047b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011047e	obj/kernel.asm	/^c011047e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110481	obj/kernel.asm	/^c0110481:	83 c0 08             	add    $0x8,%eax$/;"	l
c0110484	obj/kernel.asm	/^c0110484:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110488	obj/kernel.asm	/^c0110488:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011048b	obj/kernel.asm	/^c011048b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011048e	obj/kernel.asm	/^c011048e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110491	obj/kernel.asm	/^c0110491:	ff d0                	call   *%eax$/;"	l
c0110493	obj/kernel.asm	/^c0110493:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110496	obj/kernel.asm	/^c0110496:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011049a	obj/kernel.asm	/^c011049a:	75 43                	jne    c01104df <vfs_mount+0x11f>$/;"	l
c011049c	obj/kernel.asm	/^c011049c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011049f	obj/kernel.asm	/^c011049f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01104a2	obj/kernel.asm	/^c01104a2:	85 c0                	test   %eax,%eax$/;"	l
c01104a4	obj/kernel.asm	/^c01104a4:	75 24                	jne    c01104ca <vfs_mount+0x10a>$/;"	l
c01104a6	obj/kernel.asm	/^c01104a6:	c7 44 24 0c 93 a2 11 	movl   $0xc011a293,0xc(%esp)$/;"	l
c01104ad	obj/kernel.asm	/^c01104ad:	c0 $/;"	l
c01104ae	obj/kernel.asm	/^c01104ae:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c01104b5	obj/kernel.asm	/^c01104b5:	c0 $/;"	l
c01104b6	obj/kernel.asm	/^c01104b6:	c7 44 24 04 ef 00 00 	movl   $0xef,0x4(%esp)$/;"	l
c01104bd	obj/kernel.asm	/^c01104bd:	00 $/;"	l
c01104be	obj/kernel.asm	/^c01104be:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c01104c5	obj/kernel.asm	/^c01104c5:	e8 6d 07 ff ff       	call   c0100c37 <__panic>$/;"	l
c01104ca	obj/kernel.asm	/^c01104ca:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01104cd	obj/kernel.asm	/^c01104cd:	8b 00                	mov    (%eax),%eax$/;"	l
c01104cf	obj/kernel.asm	/^c01104cf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01104d3	obj/kernel.asm	/^c01104d3:	c7 04 24 a4 a2 11 c0 	movl   $0xc011a2a4,(%esp)$/;"	l
c01104da	obj/kernel.asm	/^c01104da:	e8 01 06 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01104df	obj/kernel.asm	/^c01104df:	e8 af f9 ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c01104e4	obj/kernel.asm	/^c01104e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01104e7	obj/kernel.asm	/^c01104e7:	c9                   	leave  $/;"	l
c01104e8	obj/kernel.asm	/^c01104e8:	c3                   	ret    $/;"	l
c01104e9	obj/kernel.asm	/^c01104e9 <vfs_unmount>:$/;"	l
c01104e9	obj/kernel.asm	/^c01104e9:	55                   	push   %ebp$/;"	l
c01104ea	obj/kernel.asm	/^c01104ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01104ec	obj/kernel.asm	/^c01104ec:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01104ef	obj/kernel.asm	/^c01104ef:	e8 8b f9 ff ff       	call   c010fe7f <lock_vdev_list>$/;"	l
c01104f4	obj/kernel.asm	/^c01104f4:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01104f7	obj/kernel.asm	/^c01104f7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01104fb	obj/kernel.asm	/^c01104fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01104fe	obj/kernel.asm	/^c01104fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110501	obj/kernel.asm	/^c0110501:	e8 23 fe ff ff       	call   c0110329 <find_mount>$/;"	l
c0110506	obj/kernel.asm	/^c0110506:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110509	obj/kernel.asm	/^c0110509:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011050d	obj/kernel.asm	/^c011050d:	74 05                	je     c0110514 <vfs_unmount+0x2b>$/;"	l
c011050f	obj/kernel.asm	/^c011050f:	e9 a8 00 00 00       	jmp    c01105bc <vfs_unmount+0xd3>$/;"	l
c0110514	obj/kernel.asm	/^c0110514:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110517	obj/kernel.asm	/^c0110517:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011051a	obj/kernel.asm	/^c011051a:	85 c0                	test   %eax,%eax$/;"	l
c011051c	obj/kernel.asm	/^c011051c:	75 0c                	jne    c011052a <vfs_unmount+0x41>$/;"	l
c011051e	obj/kernel.asm	/^c011051e:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0110525	obj/kernel.asm	/^c0110525:	e9 92 00 00 00       	jmp    c01105bc <vfs_unmount+0xd3>$/;"	l
c011052a	obj/kernel.asm	/^c011052a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011052d	obj/kernel.asm	/^c011052d:	8b 00                	mov    (%eax),%eax$/;"	l
c011052f	obj/kernel.asm	/^c011052f:	85 c0                	test   %eax,%eax$/;"	l
c0110531	obj/kernel.asm	/^c0110531:	74 0a                	je     c011053d <vfs_unmount+0x54>$/;"	l
c0110533	obj/kernel.asm	/^c0110533:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110536	obj/kernel.asm	/^c0110536:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110539	obj/kernel.asm	/^c0110539:	85 c0                	test   %eax,%eax$/;"	l
c011053b	obj/kernel.asm	/^c011053b:	75 24                	jne    c0110561 <vfs_unmount+0x78>$/;"	l
c011053d	obj/kernel.asm	/^c011053d:	c7 44 24 0c 34 a2 11 	movl   $0xc011a234,0xc(%esp)$/;"	l
c0110544	obj/kernel.asm	/^c0110544:	c0 $/;"	l
c0110545	obj/kernel.asm	/^c0110545:	c7 44 24 08 a0 a1 11 	movl   $0xc011a1a0,0x8(%esp)$/;"	l
c011054c	obj/kernel.asm	/^c011054c:	c0 $/;"	l
c011054d	obj/kernel.asm	/^c011054d:	c7 44 24 04 08 01 00 	movl   $0x108,0x4(%esp)$/;"	l
c0110554	obj/kernel.asm	/^c0110554:	00 $/;"	l
c0110555	obj/kernel.asm	/^c0110555:	c7 04 24 b5 a1 11 c0 	movl   $0xc011a1b5,(%esp)$/;"	l
c011055c	obj/kernel.asm	/^c011055c:	e8 d6 06 ff ff       	call   c0100c37 <__panic>$/;"	l
c0110561	obj/kernel.asm	/^c0110561:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110564	obj/kernel.asm	/^c0110564:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110567	obj/kernel.asm	/^c0110567:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c011056a	obj/kernel.asm	/^c011056a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011056d	obj/kernel.asm	/^c011056d:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c0110570	obj/kernel.asm	/^c0110570:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110573	obj/kernel.asm	/^c0110573:	ff d0                	call   *%eax$/;"	l
c0110575	obj/kernel.asm	/^c0110575:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110578	obj/kernel.asm	/^c0110578:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011057c	obj/kernel.asm	/^c011057c:	74 02                	je     c0110580 <vfs_unmount+0x97>$/;"	l
c011057e	obj/kernel.asm	/^c011057e:	eb 3c                	jmp    c01105bc <vfs_unmount+0xd3>$/;"	l
c0110580	obj/kernel.asm	/^c0110580:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110583	obj/kernel.asm	/^c0110583:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110586	obj/kernel.asm	/^c0110586:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0110589	obj/kernel.asm	/^c0110589:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011058c	obj/kernel.asm	/^c011058c:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c011058f	obj/kernel.asm	/^c011058f:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110592	obj/kernel.asm	/^c0110592:	ff d0                	call   *%eax$/;"	l
c0110594	obj/kernel.asm	/^c0110594:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110597	obj/kernel.asm	/^c0110597:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011059b	obj/kernel.asm	/^c011059b:	75 1f                	jne    c01105bc <vfs_unmount+0xd3>$/;"	l
c011059d	obj/kernel.asm	/^c011059d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01105a0	obj/kernel.asm	/^c01105a0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01105a7	obj/kernel.asm	/^c01105a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01105aa	obj/kernel.asm	/^c01105aa:	8b 00                	mov    (%eax),%eax$/;"	l
c01105ac	obj/kernel.asm	/^c01105ac:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01105b0	obj/kernel.asm	/^c01105b0:	c7 04 24 b4 a2 11 c0 	movl   $0xc011a2b4,(%esp)$/;"	l
c01105b7	obj/kernel.asm	/^c01105b7:	e8 24 05 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01105bc	obj/kernel.asm	/^c01105bc:	e8 d2 f8 ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c01105c1	obj/kernel.asm	/^c01105c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01105c4	obj/kernel.asm	/^c01105c4:	c9                   	leave  $/;"	l
c01105c5	obj/kernel.asm	/^c01105c5:	c3                   	ret    $/;"	l
c01105c6	obj/kernel.asm	/^c01105c6 <vfs_unmount_all>:$/;"	l
c01105c6	obj/kernel.asm	/^c01105c6:	55                   	push   %ebp$/;"	l
c01105c7	obj/kernel.asm	/^c01105c7:	89 e5                	mov    %esp,%ebp$/;"	l
c01105c9	obj/kernel.asm	/^c01105c9:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01105cc	obj/kernel.asm	/^c01105cc:	c7 45 e4 f8 9f 15 c0 	movl   $0xc0159ff8,-0x1c(%ebp)$/;"	l
c01105d3	obj/kernel.asm	/^c01105d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01105d6	obj/kernel.asm	/^c01105d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01105d9	obj/kernel.asm	/^c01105d9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01105dc	obj/kernel.asm	/^c01105dc:	0f 94 c0             	sete   %al$/;"	l
c01105df	obj/kernel.asm	/^c01105df:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01105e2	obj/kernel.asm	/^c01105e2:	85 c0                	test   %eax,%eax$/;"	l
c01105e4	obj/kernel.asm	/^c01105e4:	0f 85 f1 00 00 00    	jne    c01106db <vfs_unmount_all+0x115>$/;"	l
c01105ea	obj/kernel.asm	/^c01105ea:	e8 90 f8 ff ff       	call   c010fe7f <lock_vdev_list>$/;"	l
c01105ef	obj/kernel.asm	/^c01105ef:	c7 45 f0 f8 9f 15 c0 	movl   $0xc0159ff8,-0x10(%ebp)$/;"	l
c01105f6	obj/kernel.asm	/^c01105f6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01105f9	obj/kernel.asm	/^c01105f9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01105fc	obj/kernel.asm	/^c01105fc:	e9 ba 00 00 00       	jmp    c01106bb <vfs_unmount_all+0xf5>$/;"	l
c0110601	obj/kernel.asm	/^c0110601:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110604	obj/kernel.asm	/^c0110604:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0110607	obj/kernel.asm	/^c0110607:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011060a	obj/kernel.asm	/^c011060a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011060d	obj/kernel.asm	/^c011060d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110610	obj/kernel.asm	/^c0110610:	85 c0                	test   %eax,%eax$/;"	l
c0110612	obj/kernel.asm	/^c0110612:	0f 84 a3 00 00 00    	je     c01106bb <vfs_unmount_all+0xf5>$/;"	l
c0110618	obj/kernel.asm	/^c0110618:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011061b	obj/kernel.asm	/^c011061b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011061e	obj/kernel.asm	/^c011061e:	85 c0                	test   %eax,%eax$/;"	l
c0110620	obj/kernel.asm	/^c0110620:	0f 84 95 00 00 00    	je     c01106bb <vfs_unmount_all+0xf5>$/;"	l
c0110626	obj/kernel.asm	/^c0110626:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110629	obj/kernel.asm	/^c0110629:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011062c	obj/kernel.asm	/^c011062c:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c011062f	obj/kernel.asm	/^c011062f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110632	obj/kernel.asm	/^c0110632:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c0110635	obj/kernel.asm	/^c0110635:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110638	obj/kernel.asm	/^c0110638:	ff d0                	call   *%eax$/;"	l
c011063a	obj/kernel.asm	/^c011063a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011063d	obj/kernel.asm	/^c011063d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110641	obj/kernel.asm	/^c0110641:	74 1e                	je     c0110661 <vfs_unmount_all+0x9b>$/;"	l
c0110643	obj/kernel.asm	/^c0110643:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110646	obj/kernel.asm	/^c0110646:	8b 00                	mov    (%eax),%eax$/;"	l
c0110648	obj/kernel.asm	/^c0110648:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011064b	obj/kernel.asm	/^c011064b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011064f	obj/kernel.asm	/^c011064f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110653	obj/kernel.asm	/^c0110653:	c7 04 24 c8 a2 11 c0 	movl   $0xc011a2c8,(%esp)$/;"	l
c011065a	obj/kernel.asm	/^c011065a:	e8 81 04 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c011065f	obj/kernel.asm	/^c011065f:	eb 5a                	jmp    c01106bb <vfs_unmount_all+0xf5>$/;"	l
c0110661	obj/kernel.asm	/^c0110661:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110664	obj/kernel.asm	/^c0110664:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110667	obj/kernel.asm	/^c0110667:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c011066a	obj/kernel.asm	/^c011066a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011066d	obj/kernel.asm	/^c011066d:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c0110670	obj/kernel.asm	/^c0110670:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110673	obj/kernel.asm	/^c0110673:	ff d0                	call   *%eax$/;"	l
c0110675	obj/kernel.asm	/^c0110675:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110678	obj/kernel.asm	/^c0110678:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011067c	obj/kernel.asm	/^c011067c:	74 1e                	je     c011069c <vfs_unmount_all+0xd6>$/;"	l
c011067e	obj/kernel.asm	/^c011067e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110681	obj/kernel.asm	/^c0110681:	8b 00                	mov    (%eax),%eax$/;"	l
c0110683	obj/kernel.asm	/^c0110683:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110686	obj/kernel.asm	/^c0110686:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011068a	obj/kernel.asm	/^c011068a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011068e	obj/kernel.asm	/^c011068e:	c7 04 24 f0 a2 11 c0 	movl   $0xc011a2f0,(%esp)$/;"	l
c0110695	obj/kernel.asm	/^c0110695:	e8 46 04 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c011069a	obj/kernel.asm	/^c011069a:	eb 1f                	jmp    c01106bb <vfs_unmount_all+0xf5>$/;"	l
c011069c	obj/kernel.asm	/^c011069c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011069f	obj/kernel.asm	/^c011069f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01106a6	obj/kernel.asm	/^c01106a6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01106a9	obj/kernel.asm	/^c01106a9:	8b 00                	mov    (%eax),%eax$/;"	l
c01106ab	obj/kernel.asm	/^c01106ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01106af	obj/kernel.asm	/^c01106af:	c7 04 24 b4 a2 11 c0 	movl   $0xc011a2b4,(%esp)$/;"	l
c01106b6	obj/kernel.asm	/^c01106b6:	e8 25 04 ff ff       	call   c0100ae0 <cprintf>$/;"	l
c01106bb	obj/kernel.asm	/^c01106bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106be	obj/kernel.asm	/^c01106be:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01106c1	obj/kernel.asm	/^c01106c1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01106c4	obj/kernel.asm	/^c01106c4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01106c7	obj/kernel.asm	/^c01106c7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01106ca	obj/kernel.asm	/^c01106ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106cd	obj/kernel.asm	/^c01106cd:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01106d0	obj/kernel.asm	/^c01106d0:	0f 85 2b ff ff ff    	jne    c0110601 <vfs_unmount_all+0x3b>$/;"	l
c01106d6	obj/kernel.asm	/^c01106d6:	e8 b8 f7 ff ff       	call   c010fe93 <unlock_vdev_list>$/;"	l
c01106db	obj/kernel.asm	/^c01106db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01106e0	obj/kernel.asm	/^c01106e0:	c9                   	leave  $/;"	l
c01106e1	obj/kernel.asm	/^c01106e1:	c3                   	ret    $/;"	l
c01106e2	obj/kernel.asm	/^c01106e2 <get_cwd_nolock>:$/;"	l
c01106e2	obj/kernel.asm	/^c01106e2:	55                   	push   %ebp$/;"	l
c01106e3	obj/kernel.asm	/^c01106e3:	89 e5                	mov    %esp,%ebp$/;"	l
c01106e5	obj/kernel.asm	/^c01106e5:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c01106ea	obj/kernel.asm	/^c01106ea:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c01106f0	obj/kernel.asm	/^c01106f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01106f2	obj/kernel.asm	/^c01106f2:	5d                   	pop    %ebp$/;"	l
c01106f3	obj/kernel.asm	/^c01106f3:	c3                   	ret    $/;"	l
c01106f4	obj/kernel.asm	/^c01106f4 <set_cwd_nolock>:$/;"	l
c01106f4	obj/kernel.asm	/^c01106f4:	55                   	push   %ebp$/;"	l
c01106f5	obj/kernel.asm	/^c01106f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01106f7	obj/kernel.asm	/^c01106f7:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c01106fc	obj/kernel.asm	/^c01106fc:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c0110702	obj/kernel.asm	/^c0110702:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110705	obj/kernel.asm	/^c0110705:	89 10                	mov    %edx,(%eax)$/;"	l
c0110707	obj/kernel.asm	/^c0110707:	5d                   	pop    %ebp$/;"	l
c0110708	obj/kernel.asm	/^c0110708:	c3                   	ret    $/;"	l
c0110709	obj/kernel.asm	/^c0110709 <lock_cfs>:$/;"	l
c0110709	obj/kernel.asm	/^c0110709:	55                   	push   %ebp$/;"	l
c011070a	obj/kernel.asm	/^c011070a:	89 e5                	mov    %esp,%ebp$/;"	l
c011070c	obj/kernel.asm	/^c011070c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011070f	obj/kernel.asm	/^c011070f:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c0110714	obj/kernel.asm	/^c0110714:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c011071a	obj/kernel.asm	/^c011071a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011071d	obj/kernel.asm	/^c011071d:	e8 9c c1 ff ff       	call   c010c8be <lock_files>$/;"	l
c0110722	obj/kernel.asm	/^c0110722:	c9                   	leave  $/;"	l
c0110723	obj/kernel.asm	/^c0110723:	c3                   	ret    $/;"	l
c0110724	obj/kernel.asm	/^c0110724 <unlock_cfs>:$/;"	l
c0110724	obj/kernel.asm	/^c0110724:	55                   	push   %ebp$/;"	l
c0110725	obj/kernel.asm	/^c0110725:	89 e5                	mov    %esp,%ebp$/;"	l
c0110727	obj/kernel.asm	/^c0110727:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011072a	obj/kernel.asm	/^c011072a:	a1 68 7f 15 c0       	mov    0xc0157f68,%eax$/;"	l
c011072f	obj/kernel.asm	/^c011072f:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c0110735	obj/kernel.asm	/^c0110735:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110738	obj/kernel.asm	/^c0110738:	e8 97 c1 ff ff       	call   c010c8d4 <unlock_files>$/;"	l
c011073d	obj/kernel.asm	/^c011073d:	c9                   	leave  $/;"	l
c011073e	obj/kernel.asm	/^c011073e:	c3                   	ret    $/;"	l
c011073f	obj/kernel.asm	/^c011073f <vfs_get_curdir>:$/;"	l
c011073f	obj/kernel.asm	/^c011073f:	55                   	push   %ebp$/;"	l
c0110740	obj/kernel.asm	/^c0110740:	89 e5                	mov    %esp,%ebp$/;"	l
c0110742	obj/kernel.asm	/^c0110742:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110745	obj/kernel.asm	/^c0110745:	e8 98 ff ff ff       	call   c01106e2 <get_cwd_nolock>$/;"	l
c011074a	obj/kernel.asm	/^c011074a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011074d	obj/kernel.asm	/^c011074d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110751	obj/kernel.asm	/^c0110751:	74 1a                	je     c011076d <vfs_get_curdir+0x2e>$/;"	l
c0110753	obj/kernel.asm	/^c0110753:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110756	obj/kernel.asm	/^c0110756:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110759	obj/kernel.asm	/^c0110759:	e8 69 06 00 00       	call   c0110dc7 <inode_ref_inc>$/;"	l
c011075e	obj/kernel.asm	/^c011075e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110761	obj/kernel.asm	/^c0110761:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110764	obj/kernel.asm	/^c0110764:	89 10                	mov    %edx,(%eax)$/;"	l
c0110766	obj/kernel.asm	/^c0110766:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011076b	obj/kernel.asm	/^c011076b:	eb 05                	jmp    c0110772 <vfs_get_curdir+0x33>$/;"	l
c011076d	obj/kernel.asm	/^c011076d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0110772	obj/kernel.asm	/^c0110772:	c9                   	leave  $/;"	l
c0110773	obj/kernel.asm	/^c0110773:	c3                   	ret    $/;"	l
c0110774	obj/kernel.asm	/^c0110774 <vfs_set_curdir>:$/;"	l
c0110774	obj/kernel.asm	/^c0110774:	55                   	push   %ebp$/;"	l
c0110775	obj/kernel.asm	/^c0110775:	89 e5                	mov    %esp,%ebp$/;"	l
c0110777	obj/kernel.asm	/^c0110777:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011077a	obj/kernel.asm	/^c011077a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0110781	obj/kernel.asm	/^c0110781:	e8 83 ff ff ff       	call   c0110709 <lock_cfs>$/;"	l
c0110786	obj/kernel.asm	/^c0110786:	e8 57 ff ff ff       	call   c01106e2 <get_cwd_nolock>$/;"	l
c011078b	obj/kernel.asm	/^c011078b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011078e	obj/kernel.asm	/^c011078e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110791	obj/kernel.asm	/^c0110791:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0110794	obj/kernel.asm	/^c0110794:	0f 84 c7 00 00 00    	je     c0110861 <vfs_set_curdir+0xed>$/;"	l
c011079a	obj/kernel.asm	/^c011079a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c011079e	obj/kernel.asm	/^c011079e:	0f 84 a1 00 00 00    	je     c0110845 <vfs_set_curdir+0xd1>$/;"	l
c01107a4	obj/kernel.asm	/^c01107a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01107a7	obj/kernel.asm	/^c01107a7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01107aa	obj/kernel.asm	/^c01107aa:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01107ae	obj/kernel.asm	/^c01107ae:	74 17                	je     c01107c7 <vfs_set_curdir+0x53>$/;"	l
c01107b0	obj/kernel.asm	/^c01107b0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01107b3	obj/kernel.asm	/^c01107b3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01107b6	obj/kernel.asm	/^c01107b6:	85 c0                	test   %eax,%eax$/;"	l
c01107b8	obj/kernel.asm	/^c01107b8:	74 0d                	je     c01107c7 <vfs_set_curdir+0x53>$/;"	l
c01107ba	obj/kernel.asm	/^c01107ba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01107bd	obj/kernel.asm	/^c01107bd:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01107c0	obj/kernel.asm	/^c01107c0:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01107c3	obj/kernel.asm	/^c01107c3:	85 c0                	test   %eax,%eax$/;"	l
c01107c5	obj/kernel.asm	/^c01107c5:	75 24                	jne    c01107eb <vfs_set_curdir+0x77>$/;"	l
c01107c7	obj/kernel.asm	/^c01107c7:	c7 44 24 0c 1c a3 11 	movl   $0xc011a31c,0xc(%esp)$/;"	l
c01107ce	obj/kernel.asm	/^c01107ce:	c0 $/;"	l
c01107cf	obj/kernel.asm	/^c01107cf:	c7 44 24 08 6c a3 11 	movl   $0xc011a36c,0x8(%esp)$/;"	l
c01107d6	obj/kernel.asm	/^c01107d6:	c0 $/;"	l
c01107d7	obj/kernel.asm	/^c01107d7:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
c01107de	obj/kernel.asm	/^c01107de:	00 $/;"	l
c01107df	obj/kernel.asm	/^c01107df:	c7 04 24 81 a3 11 c0 	movl   $0xc011a381,(%esp)$/;"	l
c01107e6	obj/kernel.asm	/^c01107e6:	e8 4c 04 ff ff       	call   c0100c37 <__panic>$/;"	l
c01107eb	obj/kernel.asm	/^c01107eb:	c7 44 24 04 97 a3 11 	movl   $0xc011a397,0x4(%esp)$/;"	l
c01107f2	obj/kernel.asm	/^c01107f2:	c0 $/;"	l
c01107f3	obj/kernel.asm	/^c01107f3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01107f6	obj/kernel.asm	/^c01107f6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01107f9	obj/kernel.asm	/^c01107f9:	e8 d1 07 00 00       	call   c0110fcf <inode_check>$/;"	l
c01107fe	obj/kernel.asm	/^c01107fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110801	obj/kernel.asm	/^c0110801:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110804	obj/kernel.asm	/^c0110804:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0110807	obj/kernel.asm	/^c0110807:	8d 55 e8             	lea    -0x18(%ebp),%edx$/;"	l
c011080a	obj/kernel.asm	/^c011080a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011080e	obj/kernel.asm	/^c011080e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110811	obj/kernel.asm	/^c0110811:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110814	obj/kernel.asm	/^c0110814:	ff d0                	call   *%eax$/;"	l
c0110816	obj/kernel.asm	/^c0110816:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110819	obj/kernel.asm	/^c0110819:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011081d	obj/kernel.asm	/^c011081d:	74 02                	je     c0110821 <vfs_set_curdir+0xad>$/;"	l
c011081f	obj/kernel.asm	/^c011081f:	eb 40                	jmp    c0110861 <vfs_set_curdir+0xed>$/;"	l
c0110821	obj/kernel.asm	/^c0110821:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110824	obj/kernel.asm	/^c0110824:	25 00 70 00 00       	and    $0x7000,%eax$/;"	l
c0110829	obj/kernel.asm	/^c0110829:	3d 00 20 00 00       	cmp    $0x2000,%eax$/;"	l
c011082e	obj/kernel.asm	/^c011082e:	74 0a                	je     c011083a <vfs_set_curdir+0xc6>$/;"	l
c0110830	obj/kernel.asm	/^c0110830:	c7 45 f4 ee ff ff ff 	movl   $0xffffffee,-0xc(%ebp)$/;"	l
c0110837	obj/kernel.asm	/^c0110837:	90                   	nop$/;"	l
c0110838	obj/kernel.asm	/^c0110838:	eb 27                	jmp    c0110861 <vfs_set_curdir+0xed>$/;"	l
c011083a	obj/kernel.asm	/^c011083a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011083d	obj/kernel.asm	/^c011083d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110840	obj/kernel.asm	/^c0110840:	e8 82 05 00 00       	call   c0110dc7 <inode_ref_inc>$/;"	l
c0110845	obj/kernel.asm	/^c0110845:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110848	obj/kernel.asm	/^c0110848:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011084b	obj/kernel.asm	/^c011084b:	e8 a4 fe ff ff       	call   c01106f4 <set_cwd_nolock>$/;"	l
c0110850	obj/kernel.asm	/^c0110850:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110854	obj/kernel.asm	/^c0110854:	74 0b                	je     c0110861 <vfs_set_curdir+0xed>$/;"	l
c0110856	obj/kernel.asm	/^c0110856:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110859	obj/kernel.asm	/^c0110859:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011085c	obj/kernel.asm	/^c011085c:	e8 80 05 00 00       	call   c0110de1 <inode_ref_dec>$/;"	l
c0110861	obj/kernel.asm	/^c0110861:	e8 be fe ff ff       	call   c0110724 <unlock_cfs>$/;"	l
c0110866	obj/kernel.asm	/^c0110866:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110869	obj/kernel.asm	/^c0110869:	c9                   	leave  $/;"	l
c011086a	obj/kernel.asm	/^c011086a:	c3                   	ret    $/;"	l
c011086b	obj/kernel.asm	/^c011086b <vfs_chdir>:$/;"	l
c011086b	obj/kernel.asm	/^c011086b:	55                   	push   %ebp$/;"	l
c011086c	obj/kernel.asm	/^c011086c:	89 e5                	mov    %esp,%ebp$/;"	l
c011086e	obj/kernel.asm	/^c011086e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110871	obj/kernel.asm	/^c0110871:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0110874	obj/kernel.asm	/^c0110874:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110878	obj/kernel.asm	/^c0110878:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011087b	obj/kernel.asm	/^c011087b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011087e	obj/kernel.asm	/^c011087e:	e8 2f 03 00 00       	call   c0110bb2 <vfs_lookup>$/;"	l
c0110883	obj/kernel.asm	/^c0110883:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110886	obj/kernel.asm	/^c0110886:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011088a	obj/kernel.asm	/^c011088a:	75 19                	jne    c01108a5 <vfs_chdir+0x3a>$/;"	l
c011088c	obj/kernel.asm	/^c011088c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011088f	obj/kernel.asm	/^c011088f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110892	obj/kernel.asm	/^c0110892:	e8 dd fe ff ff       	call   c0110774 <vfs_set_curdir>$/;"	l
c0110897	obj/kernel.asm	/^c0110897:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011089a	obj/kernel.asm	/^c011089a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011089d	obj/kernel.asm	/^c011089d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01108a0	obj/kernel.asm	/^c01108a0:	e8 3c 05 00 00       	call   c0110de1 <inode_ref_dec>$/;"	l
c01108a5	obj/kernel.asm	/^c01108a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01108a8	obj/kernel.asm	/^c01108a8:	c9                   	leave  $/;"	l
c01108a9	obj/kernel.asm	/^c01108a9:	c3                   	ret    $/;"	l
c01108aa	obj/kernel.asm	/^c01108aa <vfs_getcwd>:$/;"	l
c01108aa	obj/kernel.asm	/^c01108aa:	55                   	push   %ebp$/;"	l
c01108ab	obj/kernel.asm	/^c01108ab:	89 e5                	mov    %esp,%ebp$/;"	l
c01108ad	obj/kernel.asm	/^c01108ad:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01108b0	obj/kernel.asm	/^c01108b0:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01108b3	obj/kernel.asm	/^c01108b3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01108b6	obj/kernel.asm	/^c01108b6:	e8 84 fe ff ff       	call   c011073f <vfs_get_curdir>$/;"	l
c01108bb	obj/kernel.asm	/^c01108bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01108be	obj/kernel.asm	/^c01108be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01108c2	obj/kernel.asm	/^c01108c2:	74 08                	je     c01108cc <vfs_getcwd+0x22>$/;"	l
c01108c4	obj/kernel.asm	/^c01108c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01108c7	obj/kernel.asm	/^c01108c7:	e9 3a 01 00 00       	jmp    c0110a06 <vfs_getcwd+0x15c>$/;"	l
c01108cc	obj/kernel.asm	/^c01108cc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01108cf	obj/kernel.asm	/^c01108cf:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01108d2	obj/kernel.asm	/^c01108d2:	85 c0                	test   %eax,%eax$/;"	l
c01108d4	obj/kernel.asm	/^c01108d4:	75 24                	jne    c01108fa <vfs_getcwd+0x50>$/;"	l
c01108d6	obj/kernel.asm	/^c01108d6:	c7 44 24 0c 9f a3 11 	movl   $0xc011a39f,0xc(%esp)$/;"	l
c01108dd	obj/kernel.asm	/^c01108dd:	c0 $/;"	l
c01108de	obj/kernel.asm	/^c01108de:	c7 44 24 08 6c a3 11 	movl   $0xc011a36c,0x8(%esp)$/;"	l
c01108e5	obj/kernel.asm	/^c01108e5:	c0 $/;"	l
c01108e6	obj/kernel.asm	/^c01108e6:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
c01108ed	obj/kernel.asm	/^c01108ed:	00 $/;"	l
c01108ee	obj/kernel.asm	/^c01108ee:	c7 04 24 81 a3 11 c0 	movl   $0xc011a381,(%esp)$/;"	l
c01108f5	obj/kernel.asm	/^c01108f5:	e8 3d 03 ff ff       	call   c0100c37 <__panic>$/;"	l
c01108fa	obj/kernel.asm	/^c01108fa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01108fd	obj/kernel.asm	/^c01108fd:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110900	obj/kernel.asm	/^c0110900:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110903	obj/kernel.asm	/^c0110903:	e8 6c f7 ff ff       	call   c0110074 <vfs_get_devname>$/;"	l
c0110908	obj/kernel.asm	/^c0110908:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011090b	obj/kernel.asm	/^c011090b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011090e	obj/kernel.asm	/^c011090e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110911	obj/kernel.asm	/^c0110911:	e8 24 5a 00 00       	call   c011633a <strlen>$/;"	l
c0110916	obj/kernel.asm	/^c0110916:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011091d	obj/kernel.asm	/^c011091d:	00 $/;"	l
c011091e	obj/kernel.asm	/^c011091e:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0110925	obj/kernel.asm	/^c0110925:	00 $/;"	l
c0110926	obj/kernel.asm	/^c0110926:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011092a	obj/kernel.asm	/^c011092a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011092d	obj/kernel.asm	/^c011092d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110931	obj/kernel.asm	/^c0110931:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110934	obj/kernel.asm	/^c0110934:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110937	obj/kernel.asm	/^c0110937:	e8 d2 bd ff ff       	call   c010c70e <iobuf_move>$/;"	l
c011093c	obj/kernel.asm	/^c011093c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011093f	obj/kernel.asm	/^c011093f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110943	obj/kernel.asm	/^c0110943:	74 05                	je     c011094a <vfs_getcwd+0xa0>$/;"	l
c0110945	obj/kernel.asm	/^c0110945:	e9 ae 00 00 00       	jmp    c01109f8 <vfs_getcwd+0x14e>$/;"	l
c011094a	obj/kernel.asm	/^c011094a:	c6 45 e7 3a          	movb   $0x3a,-0x19(%ebp)$/;"	l
c011094e	obj/kernel.asm	/^c011094e:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0110955	obj/kernel.asm	/^c0110955:	00 $/;"	l
c0110956	obj/kernel.asm	/^c0110956:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c011095d	obj/kernel.asm	/^c011095d:	00 $/;"	l
c011095e	obj/kernel.asm	/^c011095e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0110965	obj/kernel.asm	/^c0110965:	00 $/;"	l
c0110966	obj/kernel.asm	/^c0110966:	8d 45 e7             	lea    -0x19(%ebp),%eax$/;"	l
c0110969	obj/kernel.asm	/^c0110969:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011096d	obj/kernel.asm	/^c011096d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110970	obj/kernel.asm	/^c0110970:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110973	obj/kernel.asm	/^c0110973:	e8 96 bd ff ff       	call   c010c70e <iobuf_move>$/;"	l
c0110978	obj/kernel.asm	/^c0110978:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011097b	obj/kernel.asm	/^c011097b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011097f	obj/kernel.asm	/^c011097f:	74 02                	je     c0110983 <vfs_getcwd+0xd9>$/;"	l
c0110981	obj/kernel.asm	/^c0110981:	eb 75                	jmp    c01109f8 <vfs_getcwd+0x14e>$/;"	l
c0110983	obj/kernel.asm	/^c0110983:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110986	obj/kernel.asm	/^c0110986:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110989	obj/kernel.asm	/^c0110989:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011098d	obj/kernel.asm	/^c011098d:	74 17                	je     c01109a6 <vfs_getcwd+0xfc>$/;"	l
c011098f	obj/kernel.asm	/^c011098f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110992	obj/kernel.asm	/^c0110992:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110995	obj/kernel.asm	/^c0110995:	85 c0                	test   %eax,%eax$/;"	l
c0110997	obj/kernel.asm	/^c0110997:	74 0d                	je     c01109a6 <vfs_getcwd+0xfc>$/;"	l
c0110999	obj/kernel.asm	/^c0110999:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011099c	obj/kernel.asm	/^c011099c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011099f	obj/kernel.asm	/^c011099f:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01109a2	obj/kernel.asm	/^c01109a2:	85 c0                	test   %eax,%eax$/;"	l
c01109a4	obj/kernel.asm	/^c01109a4:	75 24                	jne    c01109ca <vfs_getcwd+0x120>$/;"	l
c01109a6	obj/kernel.asm	/^c01109a6:	c7 44 24 0c b4 a3 11 	movl   $0xc011a3b4,0xc(%esp)$/;"	l
c01109ad	obj/kernel.asm	/^c01109ad:	c0 $/;"	l
c01109ae	obj/kernel.asm	/^c01109ae:	c7 44 24 08 6c a3 11 	movl   $0xc011a36c,0x8(%esp)$/;"	l
c01109b5	obj/kernel.asm	/^c01109b5:	c0 $/;"	l
c01109b6	obj/kernel.asm	/^c01109b6:	c7 44 24 04 78 00 00 	movl   $0x78,0x4(%esp)$/;"	l
c01109bd	obj/kernel.asm	/^c01109bd:	00 $/;"	l
c01109be	obj/kernel.asm	/^c01109be:	c7 04 24 81 a3 11 c0 	movl   $0xc011a381,(%esp)$/;"	l
c01109c5	obj/kernel.asm	/^c01109c5:	e8 6d 02 ff ff       	call   c0100c37 <__panic>$/;"	l
c01109ca	obj/kernel.asm	/^c01109ca:	c7 44 24 04 05 a4 11 	movl   $0xc011a405,0x4(%esp)$/;"	l
c01109d1	obj/kernel.asm	/^c01109d1:	c0 $/;"	l
c01109d2	obj/kernel.asm	/^c01109d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01109d5	obj/kernel.asm	/^c01109d5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01109d8	obj/kernel.asm	/^c01109d8:	e8 f2 05 00 00       	call   c0110fcf <inode_check>$/;"	l
c01109dd	obj/kernel.asm	/^c01109dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01109e0	obj/kernel.asm	/^c01109e0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01109e3	obj/kernel.asm	/^c01109e3:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01109e6	obj/kernel.asm	/^c01109e6:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01109e9	obj/kernel.asm	/^c01109e9:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c01109ec	obj/kernel.asm	/^c01109ec:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01109f0	obj/kernel.asm	/^c01109f0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01109f3	obj/kernel.asm	/^c01109f3:	ff d0                	call   *%eax$/;"	l
c01109f5	obj/kernel.asm	/^c01109f5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01109f8	obj/kernel.asm	/^c01109f8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01109fb	obj/kernel.asm	/^c01109fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01109fe	obj/kernel.asm	/^c01109fe:	e8 de 03 00 00       	call   c0110de1 <inode_ref_dec>$/;"	l
c0110a03	obj/kernel.asm	/^c0110a03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a06	obj/kernel.asm	/^c0110a06:	c9                   	leave  $/;"	l
c0110a07	obj/kernel.asm	/^c0110a07:	c3                   	ret    $/;"	l
c0110a08	obj/kernel.asm	/^c0110a08 <get_device>:$/;"	l
c0110a08	obj/kernel.asm	/^c0110a08:	55                   	push   %ebp$/;"	l
c0110a09	obj/kernel.asm	/^c0110a09:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a0b	obj/kernel.asm	/^c0110a0b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0110a0e	obj/kernel.asm	/^c0110a0e:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)$/;"	l
c0110a15	obj/kernel.asm	/^c0110a15:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)$/;"	l
c0110a1c	obj/kernel.asm	/^c0110a1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0110a23	obj/kernel.asm	/^c0110a23:	eb 32                	jmp    c0110a57 <get_device+0x4f>$/;"	l
c0110a25	obj/kernel.asm	/^c0110a25:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110a28	obj/kernel.asm	/^c0110a28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a2b	obj/kernel.asm	/^c0110a2b:	01 d0                	add    %edx,%eax$/;"	l
c0110a2d	obj/kernel.asm	/^c0110a2d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110a30	obj/kernel.asm	/^c0110a30:	3c 3a                	cmp    $0x3a,%al$/;"	l
c0110a32	obj/kernel.asm	/^c0110a32:	75 08                	jne    c0110a3c <get_device+0x34>$/;"	l
c0110a34	obj/kernel.asm	/^c0110a34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a37	obj/kernel.asm	/^c0110a37:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110a3a	obj/kernel.asm	/^c0110a3a:	eb 2a                	jmp    c0110a66 <get_device+0x5e>$/;"	l
c0110a3c	obj/kernel.asm	/^c0110a3c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110a3f	obj/kernel.asm	/^c0110a3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a42	obj/kernel.asm	/^c0110a42:	01 d0                	add    %edx,%eax$/;"	l
c0110a44	obj/kernel.asm	/^c0110a44:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110a47	obj/kernel.asm	/^c0110a47:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110a49	obj/kernel.asm	/^c0110a49:	75 08                	jne    c0110a53 <get_device+0x4b>$/;"	l
c0110a4b	obj/kernel.asm	/^c0110a4b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a4e	obj/kernel.asm	/^c0110a4e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110a51	obj/kernel.asm	/^c0110a51:	eb 13                	jmp    c0110a66 <get_device+0x5e>$/;"	l
c0110a53	obj/kernel.asm	/^c0110a53:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0110a57	obj/kernel.asm	/^c0110a57:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110a5a	obj/kernel.asm	/^c0110a5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a5d	obj/kernel.asm	/^c0110a5d:	01 d0                	add    %edx,%eax$/;"	l
c0110a5f	obj/kernel.asm	/^c0110a5f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110a62	obj/kernel.asm	/^c0110a62:	84 c0                	test   %al,%al$/;"	l
c0110a64	obj/kernel.asm	/^c0110a64:	75 bf                	jne    c0110a25 <get_device+0x1d>$/;"	l
c0110a66	obj/kernel.asm	/^c0110a66:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110a6a	obj/kernel.asm	/^c0110a6a:	79 1e                	jns    c0110a8a <get_device+0x82>$/;"	l
c0110a6c	obj/kernel.asm	/^c0110a6c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110a70	obj/kernel.asm	/^c0110a70:	74 18                	je     c0110a8a <get_device+0x82>$/;"	l
c0110a72	obj/kernel.asm	/^c0110a72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110a75	obj/kernel.asm	/^c0110a75:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110a78	obj/kernel.asm	/^c0110a78:	89 10                	mov    %edx,(%eax)$/;"	l
c0110a7a	obj/kernel.asm	/^c0110a7a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110a7d	obj/kernel.asm	/^c0110a7d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110a80	obj/kernel.asm	/^c0110a80:	e8 ba fc ff ff       	call   c011073f <vfs_get_curdir>$/;"	l
c0110a85	obj/kernel.asm	/^c0110a85:	e9 26 01 00 00       	jmp    c0110bb0 <get_device+0x1a8>$/;"	l
c0110a8a	obj/kernel.asm	/^c0110a8a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110a8e	obj/kernel.asm	/^c0110a8e:	7e 42                	jle    c0110ad2 <get_device+0xca>$/;"	l
c0110a90	obj/kernel.asm	/^c0110a90:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110a93	obj/kernel.asm	/^c0110a93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a96	obj/kernel.asm	/^c0110a96:	01 d0                	add    %edx,%eax$/;"	l
c0110a98	obj/kernel.asm	/^c0110a98:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0110a9b	obj/kernel.asm	/^c0110a9b:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0110a9f	obj/kernel.asm	/^c0110a9f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110aa2	obj/kernel.asm	/^c0110aa2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110aa5	obj/kernel.asm	/^c0110aa5:	01 d0                	add    %edx,%eax$/;"	l
c0110aa7	obj/kernel.asm	/^c0110aa7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110aaa	obj/kernel.asm	/^c0110aaa:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110aac	obj/kernel.asm	/^c0110aac:	74 ed                	je     c0110a9b <get_device+0x93>$/;"	l
c0110aae	obj/kernel.asm	/^c0110aae:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110ab1	obj/kernel.asm	/^c0110ab1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ab4	obj/kernel.asm	/^c0110ab4:	01 c2                	add    %eax,%edx$/;"	l
c0110ab6	obj/kernel.asm	/^c0110ab6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110ab9	obj/kernel.asm	/^c0110ab9:	89 10                	mov    %edx,(%eax)$/;"	l
c0110abb	obj/kernel.asm	/^c0110abb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110abe	obj/kernel.asm	/^c0110abe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110ac2	obj/kernel.asm	/^c0110ac2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ac5	obj/kernel.asm	/^c0110ac5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110ac8	obj/kernel.asm	/^c0110ac8:	e8 8a f4 ff ff       	call   c010ff57 <vfs_get_root>$/;"	l
c0110acd	obj/kernel.asm	/^c0110acd:	e9 de 00 00 00       	jmp    c0110bb0 <get_device+0x1a8>$/;"	l
c0110ad2	obj/kernel.asm	/^c0110ad2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ad5	obj/kernel.asm	/^c0110ad5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110ad8	obj/kernel.asm	/^c0110ad8:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110ada	obj/kernel.asm	/^c0110ada:	75 20                	jne    c0110afc <get_device+0xf4>$/;"	l
c0110adc	obj/kernel.asm	/^c0110adc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110adf	obj/kernel.asm	/^c0110adf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110ae2	obj/kernel.asm	/^c0110ae2:	e8 56 0a 00 00       	call   c011153d <vfs_get_bootfs>$/;"	l
c0110ae7	obj/kernel.asm	/^c0110ae7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110aea	obj/kernel.asm	/^c0110aea:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110aee	obj/kernel.asm	/^c0110aee:	0f 84 a1 00 00 00    	je     c0110b95 <get_device+0x18d>$/;"	l
c0110af4	obj/kernel.asm	/^c0110af4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110af7	obj/kernel.asm	/^c0110af7:	e9 b4 00 00 00       	jmp    c0110bb0 <get_device+0x1a8>$/;"	l
c0110afc	obj/kernel.asm	/^c0110afc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110aff	obj/kernel.asm	/^c0110aff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110b02	obj/kernel.asm	/^c0110b02:	3c 3a                	cmp    $0x3a,%al$/;"	l
c0110b04	obj/kernel.asm	/^c0110b04:	74 24                	je     c0110b2a <get_device+0x122>$/;"	l
c0110b06	obj/kernel.asm	/^c0110b06:	c7 44 24 0c 10 a4 11 	movl   $0xc011a410,0xc(%esp)$/;"	l
c0110b0d	obj/kernel.asm	/^c0110b0d:	c0 $/;"	l
c0110b0e	obj/kernel.asm	/^c0110b0e:	c7 44 24 08 1d a4 11 	movl   $0xc011a41d,0x8(%esp)$/;"	l
c0110b15	obj/kernel.asm	/^c0110b15:	c0 $/;"	l
c0110b16	obj/kernel.asm	/^c0110b16:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c0110b1d	obj/kernel.asm	/^c0110b1d:	00 $/;"	l
c0110b1e	obj/kernel.asm	/^c0110b1e:	c7 04 24 32 a4 11 c0 	movl   $0xc011a432,(%esp)$/;"	l
c0110b25	obj/kernel.asm	/^c0110b25:	e8 0d 01 ff ff       	call   c0100c37 <__panic>$/;"	l
c0110b2a	obj/kernel.asm	/^c0110b2a:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0110b2d	obj/kernel.asm	/^c0110b2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110b30	obj/kernel.asm	/^c0110b30:	e8 0a fc ff ff       	call   c011073f <vfs_get_curdir>$/;"	l
c0110b35	obj/kernel.asm	/^c0110b35:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110b38	obj/kernel.asm	/^c0110b38:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110b3c	obj/kernel.asm	/^c0110b3c:	74 05                	je     c0110b43 <get_device+0x13b>$/;"	l
c0110b3e	obj/kernel.asm	/^c0110b3e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110b41	obj/kernel.asm	/^c0110b41:	eb 6d                	jmp    c0110bb0 <get_device+0x1a8>$/;"	l
c0110b43	obj/kernel.asm	/^c0110b43:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110b46	obj/kernel.asm	/^c0110b46:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110b49	obj/kernel.asm	/^c0110b49:	85 c0                	test   %eax,%eax$/;"	l
c0110b4b	obj/kernel.asm	/^c0110b4b:	75 24                	jne    c0110b71 <get_device+0x169>$/;"	l
c0110b4d	obj/kernel.asm	/^c0110b4d:	c7 44 24 0c 4a a4 11 	movl   $0xc011a44a,0xc(%esp)$/;"	l
c0110b54	obj/kernel.asm	/^c0110b54:	c0 $/;"	l
c0110b55	obj/kernel.asm	/^c0110b55:	c7 44 24 08 1d a4 11 	movl   $0xc011a41d,0x8(%esp)$/;"	l
c0110b5c	obj/kernel.asm	/^c0110b5c:	c0 $/;"	l
c0110b5d	obj/kernel.asm	/^c0110b5d:	c7 44 24 04 39 00 00 	movl   $0x39,0x4(%esp)$/;"	l
c0110b64	obj/kernel.asm	/^c0110b64:	00 $/;"	l
c0110b65	obj/kernel.asm	/^c0110b65:	c7 04 24 32 a4 11 c0 	movl   $0xc011a432,(%esp)$/;"	l
c0110b6c	obj/kernel.asm	/^c0110b6c:	e8 c6 00 ff ff       	call   c0100c37 <__panic>$/;"	l
c0110b71	obj/kernel.asm	/^c0110b71:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110b74	obj/kernel.asm	/^c0110b74:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110b77	obj/kernel.asm	/^c0110b77:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c0110b7a	obj/kernel.asm	/^c0110b7a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0110b7d	obj/kernel.asm	/^c0110b7d:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
c0110b80	obj/kernel.asm	/^c0110b80:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110b83	obj/kernel.asm	/^c0110b83:	ff d0                	call   *%eax$/;"	l
c0110b85	obj/kernel.asm	/^c0110b85:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110b88	obj/kernel.asm	/^c0110b88:	89 02                	mov    %eax,(%edx)$/;"	l
c0110b8a	obj/kernel.asm	/^c0110b8a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110b8d	obj/kernel.asm	/^c0110b8d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110b90	obj/kernel.asm	/^c0110b90:	e8 4c 02 00 00       	call   c0110de1 <inode_ref_dec>$/;"	l
c0110b95	obj/kernel.asm	/^c0110b95:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0110b99	obj/kernel.asm	/^c0110b99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110b9c	obj/kernel.asm	/^c0110b9c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110b9f	obj/kernel.asm	/^c0110b9f:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0110ba1	obj/kernel.asm	/^c0110ba1:	74 f2                	je     c0110b95 <get_device+0x18d>$/;"	l
c0110ba3	obj/kernel.asm	/^c0110ba3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110ba6	obj/kernel.asm	/^c0110ba6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110ba9	obj/kernel.asm	/^c0110ba9:	89 10                	mov    %edx,(%eax)$/;"	l
c0110bab	obj/kernel.asm	/^c0110bab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110bb0	obj/kernel.asm	/^c0110bb0:	c9                   	leave  $/;"	l
c0110bb1	obj/kernel.asm	/^c0110bb1:	c3                   	ret    $/;"	l
c0110bb2	obj/kernel.asm	/^c0110bb2 <vfs_lookup>:$/;"	l
c0110bb2	obj/kernel.asm	/^c0110bb2:	55                   	push   %ebp$/;"	l
c0110bb3	obj/kernel.asm	/^c0110bb3:	89 e5                	mov    %esp,%ebp$/;"	l
c0110bb5	obj/kernel.asm	/^c0110bb5:	56                   	push   %esi$/;"	l
c0110bb6	obj/kernel.asm	/^c0110bb6:	53                   	push   %ebx$/;"	l
c0110bb7	obj/kernel.asm	/^c0110bb7:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0110bba	obj/kernel.asm	/^c0110bba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110bbd	obj/kernel.asm	/^c0110bbd:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c0110bc0	obj/kernel.asm	/^c0110bc0:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110bc4	obj/kernel.asm	/^c0110bc4:	8d 75 08             	lea    0x8(%ebp),%esi$/;"	l
c0110bc7	obj/kernel.asm	/^c0110bc7:	89 74 24 04          	mov    %esi,0x4(%esp)$/;"	l
c0110bcb	obj/kernel.asm	/^c0110bcb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110bce	obj/kernel.asm	/^c0110bce:	e8 35 fe ff ff       	call   c0110a08 <get_device>$/;"	l
c0110bd3	obj/kernel.asm	/^c0110bd3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110bd6	obj/kernel.asm	/^c0110bd6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110bda	obj/kernel.asm	/^c0110bda:	74 08                	je     c0110be4 <vfs_lookup+0x32>$/;"	l
c0110bdc	obj/kernel.asm	/^c0110bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110bdf	obj/kernel.asm	/^c0110bdf:	e9 a7 00 00 00       	jmp    c0110c8b <vfs_lookup+0xd9>$/;"	l
c0110be4	obj/kernel.asm	/^c0110be4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110be7	obj/kernel.asm	/^c0110be7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0110bea	obj/kernel.asm	/^c0110bea:	84 c0                	test   %al,%al$/;"	l
c0110bec	obj/kernel.asm	/^c0110bec:	0f 84 8c 00 00 00    	je     c0110c7e <vfs_lookup+0xcc>$/;"	l
c0110bf2	obj/kernel.asm	/^c0110bf2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110bf5	obj/kernel.asm	/^c0110bf5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110bf8	obj/kernel.asm	/^c0110bf8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110bfc	obj/kernel.asm	/^c0110bfc:	74 17                	je     c0110c15 <vfs_lookup+0x63>$/;"	l
c0110bfe	obj/kernel.asm	/^c0110bfe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c01	obj/kernel.asm	/^c0110c01:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110c04	obj/kernel.asm	/^c0110c04:	85 c0                	test   %eax,%eax$/;"	l
c0110c06	obj/kernel.asm	/^c0110c06:	74 0d                	je     c0110c15 <vfs_lookup+0x63>$/;"	l
c0110c08	obj/kernel.asm	/^c0110c08:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c0b	obj/kernel.asm	/^c0110c0b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110c0e	obj/kernel.asm	/^c0110c0e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110c11	obj/kernel.asm	/^c0110c11:	85 c0                	test   %eax,%eax$/;"	l
c0110c13	obj/kernel.asm	/^c0110c13:	75 24                	jne    c0110c39 <vfs_lookup+0x87>$/;"	l
c0110c15	obj/kernel.asm	/^c0110c15:	c7 44 24 0c 60 a4 11 	movl   $0xc011a460,0xc(%esp)$/;"	l
c0110c1c	obj/kernel.asm	/^c0110c1c:	c0 $/;"	l
c0110c1d	obj/kernel.asm	/^c0110c1d:	c7 44 24 08 1d a4 11 	movl   $0xc011a41d,0x8(%esp)$/;"	l
c0110c24	obj/kernel.asm	/^c0110c24:	c0 $/;"	l
c0110c25	obj/kernel.asm	/^c0110c25:	c7 44 24 04 4f 00 00 	movl   $0x4f,0x4(%esp)$/;"	l
c0110c2c	obj/kernel.asm	/^c0110c2c:	00 $/;"	l
c0110c2d	obj/kernel.asm	/^c0110c2d:	c7 04 24 32 a4 11 c0 	movl   $0xc011a432,(%esp)$/;"	l
c0110c34	obj/kernel.asm	/^c0110c34:	e8 fe ff fe ff       	call   c0100c37 <__panic>$/;"	l
c0110c39	obj/kernel.asm	/^c0110c39:	c7 44 24 04 af a4 11 	movl   $0xc011a4af,0x4(%esp)$/;"	l
c0110c40	obj/kernel.asm	/^c0110c40:	c0 $/;"	l
c0110c41	obj/kernel.asm	/^c0110c41:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c44	obj/kernel.asm	/^c0110c44:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110c47	obj/kernel.asm	/^c0110c47:	e8 83 03 00 00       	call   c0110fcf <inode_check>$/;"	l
c0110c4c	obj/kernel.asm	/^c0110c4c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c4f	obj/kernel.asm	/^c0110c4f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110c52	obj/kernel.asm	/^c0110c52:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110c55	obj/kernel.asm	/^c0110c55:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c0110c58	obj/kernel.asm	/^c0110c58:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110c5b	obj/kernel.asm	/^c0110c5b:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c0110c5e	obj/kernel.asm	/^c0110c5e:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0110c62	obj/kernel.asm	/^c0110c62:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0110c66	obj/kernel.asm	/^c0110c66:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110c69	obj/kernel.asm	/^c0110c69:	ff d0                	call   *%eax$/;"	l
c0110c6b	obj/kernel.asm	/^c0110c6b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110c6e	obj/kernel.asm	/^c0110c6e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110c71	obj/kernel.asm	/^c0110c71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110c74	obj/kernel.asm	/^c0110c74:	e8 68 01 00 00       	call   c0110de1 <inode_ref_dec>$/;"	l
c0110c79	obj/kernel.asm	/^c0110c79:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110c7c	obj/kernel.asm	/^c0110c7c:	eb 0d                	jmp    c0110c8b <vfs_lookup+0xd9>$/;"	l
c0110c7e	obj/kernel.asm	/^c0110c7e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110c81	obj/kernel.asm	/^c0110c81:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110c84	obj/kernel.asm	/^c0110c84:	89 10                	mov    %edx,(%eax)$/;"	l
c0110c86	obj/kernel.asm	/^c0110c86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110c8b	obj/kernel.asm	/^c0110c8b:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110c8e	obj/kernel.asm	/^c0110c8e:	5b                   	pop    %ebx$/;"	l
c0110c8f	obj/kernel.asm	/^c0110c8f:	5e                   	pop    %esi$/;"	l
c0110c90	obj/kernel.asm	/^c0110c90:	5d                   	pop    %ebp$/;"	l
c0110c91	obj/kernel.asm	/^c0110c91:	c3                   	ret    $/;"	l
c0110c92	obj/kernel.asm	/^c0110c92 <vfs_lookup_parent>:$/;"	l
c0110c92	obj/kernel.asm	/^c0110c92:	55                   	push   %ebp$/;"	l
c0110c93	obj/kernel.asm	/^c0110c93:	89 e5                	mov    %esp,%ebp$/;"	l
c0110c95	obj/kernel.asm	/^c0110c95:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110c98	obj/kernel.asm	/^c0110c98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110c9b	obj/kernel.asm	/^c0110c9b:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c0110c9e	obj/kernel.asm	/^c0110c9e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0110ca2	obj/kernel.asm	/^c0110ca2:	8d 4d 08             	lea    0x8(%ebp),%ecx$/;"	l
c0110ca5	obj/kernel.asm	/^c0110ca5:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0110ca9	obj/kernel.asm	/^c0110ca9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110cac	obj/kernel.asm	/^c0110cac:	e8 57 fd ff ff       	call   c0110a08 <get_device>$/;"	l
c0110cb1	obj/kernel.asm	/^c0110cb1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110cb4	obj/kernel.asm	/^c0110cb4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110cb8	obj/kernel.asm	/^c0110cb8:	74 05                	je     c0110cbf <vfs_lookup_parent+0x2d>$/;"	l
c0110cba	obj/kernel.asm	/^c0110cba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110cbd	obj/kernel.asm	/^c0110cbd:	eb 15                	jmp    c0110cd4 <vfs_lookup_parent+0x42>$/;"	l
c0110cbf	obj/kernel.asm	/^c0110cbf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110cc2	obj/kernel.asm	/^c0110cc2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110cc5	obj/kernel.asm	/^c0110cc5:	89 10                	mov    %edx,(%eax)$/;"	l
c0110cc7	obj/kernel.asm	/^c0110cc7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110cca	obj/kernel.asm	/^c0110cca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110ccd	obj/kernel.asm	/^c0110ccd:	89 10                	mov    %edx,(%eax)$/;"	l
c0110ccf	obj/kernel.asm	/^c0110ccf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110cd4	obj/kernel.asm	/^c0110cd4:	c9                   	leave  $/;"	l
c0110cd5	obj/kernel.asm	/^c0110cd5:	c3                   	ret    $/;"	l
c0110cd6	obj/kernel.asm	/^c0110cd6 <inode_ref_count>:$/;"	l
c0110cd6	obj/kernel.asm	/^c0110cd6:	55                   	push   %ebp$/;"	l
c0110cd7	obj/kernel.asm	/^c0110cd7:	89 e5                	mov    %esp,%ebp$/;"	l
c0110cd9	obj/kernel.asm	/^c0110cd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110cdc	obj/kernel.asm	/^c0110cdc:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110cdf	obj/kernel.asm	/^c0110cdf:	5d                   	pop    %ebp$/;"	l
c0110ce0	obj/kernel.asm	/^c0110ce0:	c3                   	ret    $/;"	l
c0110ce1	obj/kernel.asm	/^c0110ce1 <inode_open_count>:$/;"	l
c0110ce1	obj/kernel.asm	/^c0110ce1:	55                   	push   %ebp$/;"	l
c0110ce2	obj/kernel.asm	/^c0110ce2:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ce4	obj/kernel.asm	/^c0110ce4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ce7	obj/kernel.asm	/^c0110ce7:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0110cea	obj/kernel.asm	/^c0110cea:	5d                   	pop    %ebp$/;"	l
c0110ceb	obj/kernel.asm	/^c0110ceb:	c3                   	ret    $/;"	l
c0110cec	obj/kernel.asm	/^c0110cec <__alloc_inode>:$/;"	l
c0110cec	obj/kernel.asm	/^c0110cec:	55                   	push   %ebp$/;"	l
c0110ced	obj/kernel.asm	/^c0110ced:	89 e5                	mov    %esp,%ebp$/;"	l
c0110cef	obj/kernel.asm	/^c0110cef:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110cf2	obj/kernel.asm	/^c0110cf2:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)$/;"	l
c0110cf9	obj/kernel.asm	/^c0110cf9:	e8 ea 74 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0110cfe	obj/kernel.asm	/^c0110cfe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110d01	obj/kernel.asm	/^c0110d01:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110d05	obj/kernel.asm	/^c0110d05:	74 09                	je     c0110d10 <__alloc_inode+0x24>$/;"	l
c0110d07	obj/kernel.asm	/^c0110d07:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110d0a	obj/kernel.asm	/^c0110d0a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d0d	obj/kernel.asm	/^c0110d0d:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c0110d10	obj/kernel.asm	/^c0110d10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d13	obj/kernel.asm	/^c0110d13:	c9                   	leave  $/;"	l
c0110d14	obj/kernel.asm	/^c0110d14:	c3                   	ret    $/;"	l
c0110d15	obj/kernel.asm	/^c0110d15 <inode_init>:$/;"	l
c0110d15	obj/kernel.asm	/^c0110d15:	55                   	push   %ebp$/;"	l
c0110d16	obj/kernel.asm	/^c0110d16:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d18	obj/kernel.asm	/^c0110d18:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110d1b	obj/kernel.asm	/^c0110d1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d1e	obj/kernel.asm	/^c0110d1e:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)$/;"	l
c0110d25	obj/kernel.asm	/^c0110d25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d28	obj/kernel.asm	/^c0110d28:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0110d2f	obj/kernel.asm	/^c0110d2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d32	obj/kernel.asm	/^c0110d32:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110d35	obj/kernel.asm	/^c0110d35:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0110d38	obj/kernel.asm	/^c0110d38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d3b	obj/kernel.asm	/^c0110d3b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110d3e	obj/kernel.asm	/^c0110d3e:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c0110d41	obj/kernel.asm	/^c0110d41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d44	obj/kernel.asm	/^c0110d44:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110d47	obj/kernel.asm	/^c0110d47:	e8 7b 00 00 00       	call   c0110dc7 <inode_ref_inc>$/;"	l
c0110d4c	obj/kernel.asm	/^c0110d4c:	c9                   	leave  $/;"	l
c0110d4d	obj/kernel.asm	/^c0110d4d:	c3                   	ret    $/;"	l
c0110d4e	obj/kernel.asm	/^c0110d4e <inode_kill>:$/;"	l
c0110d4e	obj/kernel.asm	/^c0110d4e:	55                   	push   %ebp$/;"	l
c0110d4f	obj/kernel.asm	/^c0110d4f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d51	obj/kernel.asm	/^c0110d51:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110d54	obj/kernel.asm	/^c0110d54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d57	obj/kernel.asm	/^c0110d57:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110d5a	obj/kernel.asm	/^c0110d5a:	e8 77 ff ff ff       	call   c0110cd6 <inode_ref_count>$/;"	l
c0110d5f	obj/kernel.asm	/^c0110d5f:	85 c0                	test   %eax,%eax$/;"	l
c0110d61	obj/kernel.asm	/^c0110d61:	74 24                	je     c0110d87 <inode_kill+0x39>$/;"	l
c0110d63	obj/kernel.asm	/^c0110d63:	c7 44 24 0c b8 a4 11 	movl   $0xc011a4b8,0xc(%esp)$/;"	l
c0110d6a	obj/kernel.asm	/^c0110d6a:	c0 $/;"	l
c0110d6b	obj/kernel.asm	/^c0110d6b:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110d72	obj/kernel.asm	/^c0110d72:	c0 $/;"	l
c0110d73	obj/kernel.asm	/^c0110d73:	c7 44 24 04 29 00 00 	movl   $0x29,0x4(%esp)$/;"	l
c0110d7a	obj/kernel.asm	/^c0110d7a:	00 $/;"	l
c0110d7b	obj/kernel.asm	/^c0110d7b:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0110d82	obj/kernel.asm	/^c0110d82:	e8 b0 fe fe ff       	call   c0100c37 <__panic>$/;"	l
c0110d87	obj/kernel.asm	/^c0110d87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d8a	obj/kernel.asm	/^c0110d8a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110d8d	obj/kernel.asm	/^c0110d8d:	e8 4f ff ff ff       	call   c0110ce1 <inode_open_count>$/;"	l
c0110d92	obj/kernel.asm	/^c0110d92:	85 c0                	test   %eax,%eax$/;"	l
c0110d94	obj/kernel.asm	/^c0110d94:	74 24                	je     c0110dba <inode_kill+0x6c>$/;"	l
c0110d96	obj/kernel.asm	/^c0110d96:	c7 44 24 0c fc a4 11 	movl   $0xc011a4fc,0xc(%esp)$/;"	l
c0110d9d	obj/kernel.asm	/^c0110d9d:	c0 $/;"	l
c0110d9e	obj/kernel.asm	/^c0110d9e:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110da5	obj/kernel.asm	/^c0110da5:	c0 $/;"	l
c0110da6	obj/kernel.asm	/^c0110da6:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
c0110dad	obj/kernel.asm	/^c0110dad:	00 $/;"	l
c0110dae	obj/kernel.asm	/^c0110dae:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0110db5	obj/kernel.asm	/^c0110db5:	e8 7d fe fe ff       	call   c0100c37 <__panic>$/;"	l
c0110dba	obj/kernel.asm	/^c0110dba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dbd	obj/kernel.asm	/^c0110dbd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110dc0	obj/kernel.asm	/^c0110dc0:	e8 3e 74 ff ff       	call   c0108203 <kfree>$/;"	l
c0110dc5	obj/kernel.asm	/^c0110dc5:	c9                   	leave  $/;"	l
c0110dc6	obj/kernel.asm	/^c0110dc6:	c3                   	ret    $/;"	l
c0110dc7	obj/kernel.asm	/^c0110dc7 <inode_ref_inc>:$/;"	l
c0110dc7	obj/kernel.asm	/^c0110dc7:	55                   	push   %ebp$/;"	l
c0110dc8	obj/kernel.asm	/^c0110dc8:	89 e5                	mov    %esp,%ebp$/;"	l
c0110dca	obj/kernel.asm	/^c0110dca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dcd	obj/kernel.asm	/^c0110dcd:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110dd0	obj/kernel.asm	/^c0110dd0:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0110dd3	obj/kernel.asm	/^c0110dd3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dd6	obj/kernel.asm	/^c0110dd6:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0110dd9	obj/kernel.asm	/^c0110dd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ddc	obj/kernel.asm	/^c0110ddc:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110ddf	obj/kernel.asm	/^c0110ddf:	5d                   	pop    %ebp$/;"	l
c0110de0	obj/kernel.asm	/^c0110de0:	c3                   	ret    $/;"	l
c0110de1	obj/kernel.asm	/^c0110de1 <inode_ref_dec>:$/;"	l
c0110de1	obj/kernel.asm	/^c0110de1:	55                   	push   %ebp$/;"	l
c0110de2	obj/kernel.asm	/^c0110de2:	89 e5                	mov    %esp,%ebp$/;"	l
c0110de4	obj/kernel.asm	/^c0110de4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110de7	obj/kernel.asm	/^c0110de7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dea	obj/kernel.asm	/^c0110dea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110ded	obj/kernel.asm	/^c0110ded:	e8 e4 fe ff ff       	call   c0110cd6 <inode_ref_count>$/;"	l
c0110df2	obj/kernel.asm	/^c0110df2:	85 c0                	test   %eax,%eax$/;"	l
c0110df4	obj/kernel.asm	/^c0110df4:	7f 24                	jg     c0110e1a <inode_ref_dec+0x39>$/;"	l
c0110df6	obj/kernel.asm	/^c0110df6:	c7 44 24 0c 18 a5 11 	movl   $0xc011a518,0xc(%esp)$/;"	l
c0110dfd	obj/kernel.asm	/^c0110dfd:	c0 $/;"	l
c0110dfe	obj/kernel.asm	/^c0110dfe:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110e05	obj/kernel.asm	/^c0110e05:	c0 $/;"	l
c0110e06	obj/kernel.asm	/^c0110e06:	c7 44 24 04 3f 00 00 	movl   $0x3f,0x4(%esp)$/;"	l
c0110e0d	obj/kernel.asm	/^c0110e0d:	00 $/;"	l
c0110e0e	obj/kernel.asm	/^c0110e0e:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0110e15	obj/kernel.asm	/^c0110e15:	e8 1d fe fe ff       	call   c0100c37 <__panic>$/;"	l
c0110e1a	obj/kernel.asm	/^c0110e1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110e1d	obj/kernel.asm	/^c0110e1d:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110e20	obj/kernel.asm	/^c0110e20:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0110e23	obj/kernel.asm	/^c0110e23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110e26	obj/kernel.asm	/^c0110e26:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0110e29	obj/kernel.asm	/^c0110e29:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110e2c	obj/kernel.asm	/^c0110e2c:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110e2f	obj/kernel.asm	/^c0110e2f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110e32	obj/kernel.asm	/^c0110e32:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110e36	obj/kernel.asm	/^c0110e36:	0f 85 8d 00 00 00    	jne    c0110ec9 <inode_ref_dec+0xe8>$/;"	l
c0110e3c	obj/kernel.asm	/^c0110e3c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110e3f	obj/kernel.asm	/^c0110e3f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110e42	obj/kernel.asm	/^c0110e42:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110e46	obj/kernel.asm	/^c0110e46:	74 17                	je     c0110e5f <inode_ref_dec+0x7e>$/;"	l
c0110e48	obj/kernel.asm	/^c0110e48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e4b	obj/kernel.asm	/^c0110e4b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110e4e	obj/kernel.asm	/^c0110e4e:	85 c0                	test   %eax,%eax$/;"	l
c0110e50	obj/kernel.asm	/^c0110e50:	74 0d                	je     c0110e5f <inode_ref_dec+0x7e>$/;"	l
c0110e52	obj/kernel.asm	/^c0110e52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e55	obj/kernel.asm	/^c0110e55:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110e58	obj/kernel.asm	/^c0110e58:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c0110e5b	obj/kernel.asm	/^c0110e5b:	85 c0                	test   %eax,%eax$/;"	l
c0110e5d	obj/kernel.asm	/^c0110e5d:	75 24                	jne    c0110e83 <inode_ref_dec+0xa2>$/;"	l
c0110e5f	obj/kernel.asm	/^c0110e5f:	c7 44 24 0c 34 a5 11 	movl   $0xc011a534,0xc(%esp)$/;"	l
c0110e66	obj/kernel.asm	/^c0110e66:	c0 $/;"	l
c0110e67	obj/kernel.asm	/^c0110e67:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110e6e	obj/kernel.asm	/^c0110e6e:	c0 $/;"	l
c0110e6f	obj/kernel.asm	/^c0110e6f:	c7 44 24 04 44 00 00 	movl   $0x44,0x4(%esp)$/;"	l
c0110e76	obj/kernel.asm	/^c0110e76:	00 $/;"	l
c0110e77	obj/kernel.asm	/^c0110e77:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0110e7e	obj/kernel.asm	/^c0110e7e:	e8 b4 fd fe ff       	call   c0100c37 <__panic>$/;"	l
c0110e83	obj/kernel.asm	/^c0110e83:	c7 44 24 04 84 a5 11 	movl   $0xc011a584,0x4(%esp)$/;"	l
c0110e8a	obj/kernel.asm	/^c0110e8a:	c0 $/;"	l
c0110e8b	obj/kernel.asm	/^c0110e8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e8e	obj/kernel.asm	/^c0110e8e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110e91	obj/kernel.asm	/^c0110e91:	e8 39 01 00 00       	call   c0110fcf <inode_check>$/;"	l
c0110e96	obj/kernel.asm	/^c0110e96:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e99	obj/kernel.asm	/^c0110e99:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110e9c	obj/kernel.asm	/^c0110e9c:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c0110e9f	obj/kernel.asm	/^c0110e9f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110ea2	obj/kernel.asm	/^c0110ea2:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110ea5	obj/kernel.asm	/^c0110ea5:	ff d0                	call   *%eax$/;"	l
c0110ea7	obj/kernel.asm	/^c0110ea7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110eaa	obj/kernel.asm	/^c0110eaa:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110eae	obj/kernel.asm	/^c0110eae:	74 19                	je     c0110ec9 <inode_ref_dec+0xe8>$/;"	l
c0110eb0	obj/kernel.asm	/^c0110eb0:	83 7d ec f1          	cmpl   $0xfffffff1,-0x14(%ebp)$/;"	l
c0110eb4	obj/kernel.asm	/^c0110eb4:	74 13                	je     c0110ec9 <inode_ref_dec+0xe8>$/;"	l
c0110eb6	obj/kernel.asm	/^c0110eb6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110eb9	obj/kernel.asm	/^c0110eb9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110ebd	obj/kernel.asm	/^c0110ebd:	c7 04 24 8c a5 11 c0 	movl   $0xc011a58c,(%esp)$/;"	l
c0110ec4	obj/kernel.asm	/^c0110ec4:	e8 17 fc fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0110ec9	obj/kernel.asm	/^c0110ec9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110ecc	obj/kernel.asm	/^c0110ecc:	c9                   	leave  $/;"	l
c0110ecd	obj/kernel.asm	/^c0110ecd:	c3                   	ret    $/;"	l
c0110ece	obj/kernel.asm	/^c0110ece <inode_open_inc>:$/;"	l
c0110ece	obj/kernel.asm	/^c0110ece:	55                   	push   %ebp$/;"	l
c0110ecf	obj/kernel.asm	/^c0110ecf:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ed1	obj/kernel.asm	/^c0110ed1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ed4	obj/kernel.asm	/^c0110ed4:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0110ed7	obj/kernel.asm	/^c0110ed7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0110eda	obj/kernel.asm	/^c0110eda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110edd	obj/kernel.asm	/^c0110edd:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c0110ee0	obj/kernel.asm	/^c0110ee0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ee3	obj/kernel.asm	/^c0110ee3:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0110ee6	obj/kernel.asm	/^c0110ee6:	5d                   	pop    %ebp$/;"	l
c0110ee7	obj/kernel.asm	/^c0110ee7:	c3                   	ret    $/;"	l
c0110ee8	obj/kernel.asm	/^c0110ee8 <inode_open_dec>:$/;"	l
c0110ee8	obj/kernel.asm	/^c0110ee8:	55                   	push   %ebp$/;"	l
c0110ee9	obj/kernel.asm	/^c0110ee9:	89 e5                	mov    %esp,%ebp$/;"	l
c0110eeb	obj/kernel.asm	/^c0110eeb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110eee	obj/kernel.asm	/^c0110eee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ef1	obj/kernel.asm	/^c0110ef1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110ef4	obj/kernel.asm	/^c0110ef4:	e8 e8 fd ff ff       	call   c0110ce1 <inode_open_count>$/;"	l
c0110ef9	obj/kernel.asm	/^c0110ef9:	85 c0                	test   %eax,%eax$/;"	l
c0110efb	obj/kernel.asm	/^c0110efb:	7f 24                	jg     c0110f21 <inode_open_dec+0x39>$/;"	l
c0110efd	obj/kernel.asm	/^c0110efd:	c7 44 24 0c ac a5 11 	movl   $0xc011a5ac,0xc(%esp)$/;"	l
c0110f04	obj/kernel.asm	/^c0110f04:	c0 $/;"	l
c0110f05	obj/kernel.asm	/^c0110f05:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110f0c	obj/kernel.asm	/^c0110f0c:	c0 $/;"	l
c0110f0d	obj/kernel.asm	/^c0110f0d:	c7 44 24 04 5c 00 00 	movl   $0x5c,0x4(%esp)$/;"	l
c0110f14	obj/kernel.asm	/^c0110f14:	00 $/;"	l
c0110f15	obj/kernel.asm	/^c0110f15:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0110f1c	obj/kernel.asm	/^c0110f1c:	e8 16 fd fe ff       	call   c0100c37 <__panic>$/;"	l
c0110f21	obj/kernel.asm	/^c0110f21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f24	obj/kernel.asm	/^c0110f24:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0110f27	obj/kernel.asm	/^c0110f27:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0110f2a	obj/kernel.asm	/^c0110f2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f2d	obj/kernel.asm	/^c0110f2d:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c0110f30	obj/kernel.asm	/^c0110f30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f33	obj/kernel.asm	/^c0110f33:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0110f36	obj/kernel.asm	/^c0110f36:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110f39	obj/kernel.asm	/^c0110f39:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110f3d	obj/kernel.asm	/^c0110f3d:	0f 85 87 00 00 00    	jne    c0110fca <inode_open_dec+0xe2>$/;"	l
c0110f43	obj/kernel.asm	/^c0110f43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f46	obj/kernel.asm	/^c0110f46:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110f49	obj/kernel.asm	/^c0110f49:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110f4d	obj/kernel.asm	/^c0110f4d:	74 17                	je     c0110f66 <inode_open_dec+0x7e>$/;"	l
c0110f4f	obj/kernel.asm	/^c0110f4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110f52	obj/kernel.asm	/^c0110f52:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110f55	obj/kernel.asm	/^c0110f55:	85 c0                	test   %eax,%eax$/;"	l
c0110f57	obj/kernel.asm	/^c0110f57:	74 0d                	je     c0110f66 <inode_open_dec+0x7e>$/;"	l
c0110f59	obj/kernel.asm	/^c0110f59:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110f5c	obj/kernel.asm	/^c0110f5c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110f5f	obj/kernel.asm	/^c0110f5f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110f62	obj/kernel.asm	/^c0110f62:	85 c0                	test   %eax,%eax$/;"	l
c0110f64	obj/kernel.asm	/^c0110f64:	75 24                	jne    c0110f8a <inode_open_dec+0xa2>$/;"	l
c0110f66	obj/kernel.asm	/^c0110f66:	c7 44 24 0c c8 a5 11 	movl   $0xc011a5c8,0xc(%esp)$/;"	l
c0110f6d	obj/kernel.asm	/^c0110f6d:	c0 $/;"	l
c0110f6e	obj/kernel.asm	/^c0110f6e:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110f75	obj/kernel.asm	/^c0110f75:	c0 $/;"	l
c0110f76	obj/kernel.asm	/^c0110f76:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c0110f7d	obj/kernel.asm	/^c0110f7d:	00 $/;"	l
c0110f7e	obj/kernel.asm	/^c0110f7e:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0110f85	obj/kernel.asm	/^c0110f85:	e8 ad fc fe ff       	call   c0100c37 <__panic>$/;"	l
c0110f8a	obj/kernel.asm	/^c0110f8a:	c7 44 24 04 16 a6 11 	movl   $0xc011a616,0x4(%esp)$/;"	l
c0110f91	obj/kernel.asm	/^c0110f91:	c0 $/;"	l
c0110f92	obj/kernel.asm	/^c0110f92:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110f95	obj/kernel.asm	/^c0110f95:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0110f98	obj/kernel.asm	/^c0110f98:	e8 32 00 00 00       	call   c0110fcf <inode_check>$/;"	l
c0110f9d	obj/kernel.asm	/^c0110f9d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110fa0	obj/kernel.asm	/^c0110fa0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110fa3	obj/kernel.asm	/^c0110fa3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110fa6	obj/kernel.asm	/^c0110fa6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110fa9	obj/kernel.asm	/^c0110fa9:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0110fac	obj/kernel.asm	/^c0110fac:	ff d0                	call   *%eax$/;"	l
c0110fae	obj/kernel.asm	/^c0110fae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110fb1	obj/kernel.asm	/^c0110fb1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110fb5	obj/kernel.asm	/^c0110fb5:	74 13                	je     c0110fca <inode_open_dec+0xe2>$/;"	l
c0110fb7	obj/kernel.asm	/^c0110fb7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110fba	obj/kernel.asm	/^c0110fba:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0110fbe	obj/kernel.asm	/^c0110fbe:	c7 04 24 1c a6 11 c0 	movl   $0xc011a61c,(%esp)$/;"	l
c0110fc5	obj/kernel.asm	/^c0110fc5:	e8 16 fb fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0110fca	obj/kernel.asm	/^c0110fca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110fcd	obj/kernel.asm	/^c0110fcd:	c9                   	leave  $/;"	l
c0110fce	obj/kernel.asm	/^c0110fce:	c3                   	ret    $/;"	l
c0110fcf	obj/kernel.asm	/^c0110fcf <inode_check>:$/;"	l
c0110fcf	obj/kernel.asm	/^c0110fcf:	55                   	push   %ebp$/;"	l
c0110fd0	obj/kernel.asm	/^c0110fd0:	89 e5                	mov    %esp,%ebp$/;"	l
c0110fd2	obj/kernel.asm	/^c0110fd2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110fd5	obj/kernel.asm	/^c0110fd5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0110fd9	obj/kernel.asm	/^c0110fd9:	74 0a                	je     c0110fe5 <inode_check+0x16>$/;"	l
c0110fdb	obj/kernel.asm	/^c0110fdb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110fde	obj/kernel.asm	/^c0110fde:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110fe1	obj/kernel.asm	/^c0110fe1:	85 c0                	test   %eax,%eax$/;"	l
c0110fe3	obj/kernel.asm	/^c0110fe3:	75 24                	jne    c0111009 <inode_check+0x3a>$/;"	l
c0110fe5	obj/kernel.asm	/^c0110fe5:	c7 44 24 0c 3c a6 11 	movl   $0xc011a63c,0xc(%esp)$/;"	l
c0110fec	obj/kernel.asm	/^c0110fec:	c0 $/;"	l
c0110fed	obj/kernel.asm	/^c0110fed:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0110ff4	obj/kernel.asm	/^c0110ff4:	c0 $/;"	l
c0110ff5	obj/kernel.asm	/^c0110ff5:	c7 44 24 04 6e 00 00 	movl   $0x6e,0x4(%esp)$/;"	l
c0110ffc	obj/kernel.asm	/^c0110ffc:	00 $/;"	l
c0110ffd	obj/kernel.asm	/^c0110ffd:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0111004	obj/kernel.asm	/^c0111004:	e8 2e fc fe ff       	call   c0100c37 <__panic>$/;"	l
c0111009	obj/kernel.asm	/^c0111009:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011100c	obj/kernel.asm	/^c011100c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011100f	obj/kernel.asm	/^c011100f:	8b 00                	mov    (%eax),%eax$/;"	l
c0111011	obj/kernel.asm	/^c0111011:	3d 76 a4 4b 8c       	cmp    $0x8c4ba476,%eax$/;"	l
c0111016	obj/kernel.asm	/^c0111016:	74 24                	je     c011103c <inode_check+0x6d>$/;"	l
c0111018	obj/kernel.asm	/^c0111018:	c7 44 24 0c 64 a6 11 	movl   $0xc011a664,0xc(%esp)$/;"	l
c011101f	obj/kernel.asm	/^c011101f:	c0 $/;"	l
c0111020	obj/kernel.asm	/^c0111020:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0111027	obj/kernel.asm	/^c0111027:	c0 $/;"	l
c0111028	obj/kernel.asm	/^c0111028:	c7 44 24 04 6f 00 00 	movl   $0x6f,0x4(%esp)$/;"	l
c011102f	obj/kernel.asm	/^c011102f:	00 $/;"	l
c0111030	obj/kernel.asm	/^c0111030:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0111037	obj/kernel.asm	/^c0111037:	e8 fb fb fe ff       	call   c0100c37 <__panic>$/;"	l
c011103c	obj/kernel.asm	/^c011103c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011103f	obj/kernel.asm	/^c011103f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111042	obj/kernel.asm	/^c0111042:	e8 8f fc ff ff       	call   c0110cd6 <inode_ref_count>$/;"	l
c0111047	obj/kernel.asm	/^c0111047:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011104a	obj/kernel.asm	/^c011104a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011104d	obj/kernel.asm	/^c011104d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111050	obj/kernel.asm	/^c0111050:	e8 8c fc ff ff       	call   c0110ce1 <inode_open_count>$/;"	l
c0111055	obj/kernel.asm	/^c0111055:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111058	obj/kernel.asm	/^c0111058:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011105b	obj/kernel.asm	/^c011105b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c011105e	obj/kernel.asm	/^c011105e:	7c 06                	jl     c0111066 <inode_check+0x97>$/;"	l
c0111060	obj/kernel.asm	/^c0111060:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111064	obj/kernel.asm	/^c0111064:	79 24                	jns    c011108a <inode_check+0xbb>$/;"	l
c0111066	obj/kernel.asm	/^c0111066:	c7 44 24 0c 8c a6 11 	movl   $0xc011a68c,0xc(%esp)$/;"	l
c011106d	obj/kernel.asm	/^c011106d:	c0 $/;"	l
c011106e	obj/kernel.asm	/^c011106e:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c0111075	obj/kernel.asm	/^c0111075:	c0 $/;"	l
c0111076	obj/kernel.asm	/^c0111076:	c7 44 24 04 71 00 00 	movl   $0x71,0x4(%esp)$/;"	l
c011107d	obj/kernel.asm	/^c011107d:	00 $/;"	l
c011107e	obj/kernel.asm	/^c011107e:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c0111085	obj/kernel.asm	/^c0111085:	e8 ad fb fe ff       	call   c0100c37 <__panic>$/;"	l
c011108a	obj/kernel.asm	/^c011108a:	81 7d f4 ff ff 00 00 	cmpl   $0xffff,-0xc(%ebp)$/;"	l
c0111091	obj/kernel.asm	/^c0111091:	7f 09                	jg     c011109c <inode_check+0xcd>$/;"	l
c0111093	obj/kernel.asm	/^c0111093:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)$/;"	l
c011109a	obj/kernel.asm	/^c011109a:	7e 24                	jle    c01110c0 <inode_check+0xf1>$/;"	l
c011109c	obj/kernel.asm	/^c011109c:	c7 44 24 0c b8 a6 11 	movl   $0xc011a6b8,0xc(%esp)$/;"	l
c01110a3	obj/kernel.asm	/^c01110a3:	c0 $/;"	l
c01110a4	obj/kernel.asm	/^c01110a4:	c7 44 24 08 d3 a4 11 	movl   $0xc011a4d3,0x8(%esp)$/;"	l
c01110ab	obj/kernel.asm	/^c01110ab:	c0 $/;"	l
c01110ac	obj/kernel.asm	/^c01110ac:	c7 44 24 04 72 00 00 	movl   $0x72,0x4(%esp)$/;"	l
c01110b3	obj/kernel.asm	/^c01110b3:	00 $/;"	l
c01110b4	obj/kernel.asm	/^c01110b4:	c7 04 24 e8 a4 11 c0 	movl   $0xc011a4e8,(%esp)$/;"	l
c01110bb	obj/kernel.asm	/^c01110bb:	e8 77 fb fe ff       	call   c0100c37 <__panic>$/;"	l
c01110c0	obj/kernel.asm	/^c01110c0:	c9                   	leave  $/;"	l
c01110c1	obj/kernel.asm	/^c01110c1:	c3                   	ret    $/;"	l
c01110c2	obj/kernel.asm	/^c01110c2 <vfs_open>:$/;"	l
c01110c2	obj/kernel.asm	/^c01110c2:	55                   	push   %ebp$/;"	l
c01110c3	obj/kernel.asm	/^c01110c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01110c5	obj/kernel.asm	/^c01110c5:	53                   	push   %ebx$/;"	l
c01110c6	obj/kernel.asm	/^c01110c6:	83 ec 44             	sub    $0x44,%esp$/;"	l
c01110c9	obj/kernel.asm	/^c01110c9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01110d0	obj/kernel.asm	/^c01110d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01110d3	obj/kernel.asm	/^c01110d3:	83 e0 03             	and    $0x3,%eax$/;"	l
c01110d6	obj/kernel.asm	/^c01110d6:	85 c0                	test   %eax,%eax$/;"	l
c01110d8	obj/kernel.asm	/^c01110d8:	74 18                	je     c01110f2 <vfs_open+0x30>$/;"	l
c01110da	obj/kernel.asm	/^c01110da:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01110dd	obj/kernel.asm	/^c01110dd:	77 09                	ja     c01110e8 <vfs_open+0x26>$/;"	l
c01110df	obj/kernel.asm	/^c01110df:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c01110e6	obj/kernel.asm	/^c01110e6:	eb 0b                	jmp    c01110f3 <vfs_open+0x31>$/;"	l
c01110e8	obj/kernel.asm	/^c01110e8:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01110ed	obj/kernel.asm	/^c01110ed:	e9 ba 02 00 00       	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c01110f2	obj/kernel.asm	/^c01110f2:	90                   	nop$/;"	l
c01110f3	obj/kernel.asm	/^c01110f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01110f6	obj/kernel.asm	/^c01110f6:	83 e0 10             	and    $0x10,%eax$/;"	l
c01110f9	obj/kernel.asm	/^c01110f9:	85 c0                	test   %eax,%eax$/;"	l
c01110fb	obj/kernel.asm	/^c01110fb:	74 10                	je     c011110d <vfs_open+0x4b>$/;"	l
c01110fd	obj/kernel.asm	/^c01110fd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111101	obj/kernel.asm	/^c0111101:	75 0a                	jne    c011110d <vfs_open+0x4b>$/;"	l
c0111103	obj/kernel.asm	/^c0111103:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111108	obj/kernel.asm	/^c0111108:	e9 9f 02 00 00       	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c011110d	obj/kernel.asm	/^c011110d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111110	obj/kernel.asm	/^c0111110:	83 e0 08             	and    $0x8,%eax$/;"	l
c0111113	obj/kernel.asm	/^c0111113:	85 c0                	test   %eax,%eax$/;"	l
c0111115	obj/kernel.asm	/^c0111115:	0f 95 c0             	setne  %al$/;"	l
c0111118	obj/kernel.asm	/^c0111118:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011111b	obj/kernel.asm	/^c011111b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011111e	obj/kernel.asm	/^c011111e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111121	obj/kernel.asm	/^c0111121:	83 e0 04             	and    $0x4,%eax$/;"	l
c0111124	obj/kernel.asm	/^c0111124:	85 c0                	test   %eax,%eax$/;"	l
c0111126	obj/kernel.asm	/^c0111126:	0f 95 c0             	setne  %al$/;"	l
c0111129	obj/kernel.asm	/^c0111129:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011112c	obj/kernel.asm	/^c011112c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011112f	obj/kernel.asm	/^c011112f:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0111132	obj/kernel.asm	/^c0111132:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111136	obj/kernel.asm	/^c0111136:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111139	obj/kernel.asm	/^c0111139:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011113c	obj/kernel.asm	/^c011113c:	e8 71 fa ff ff       	call   c0110bb2 <vfs_lookup>$/;"	l
c0111141	obj/kernel.asm	/^c0111141:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111144	obj/kernel.asm	/^c0111144:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111148	obj/kernel.asm	/^c0111148:	0f 84 cc 00 00 00    	je     c011121a <vfs_open+0x158>$/;"	l
c011114e	obj/kernel.asm	/^c011114e:	83 7d e8 f0          	cmpl   $0xfffffff0,-0x18(%ebp)$/;"	l
c0111152	obj/kernel.asm	/^c0111152:	0f 85 ba 00 00 00    	jne    c0111212 <vfs_open+0x150>$/;"	l
c0111158	obj/kernel.asm	/^c0111158:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011115c	obj/kernel.asm	/^c011115c:	0f 84 b0 00 00 00    	je     c0111212 <vfs_open+0x150>$/;"	l
c0111162	obj/kernel.asm	/^c0111162:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c0111165	obj/kernel.asm	/^c0111165:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111169	obj/kernel.asm	/^c0111169:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c011116c	obj/kernel.asm	/^c011116c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111170	obj/kernel.asm	/^c0111170:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111173	obj/kernel.asm	/^c0111173:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111176	obj/kernel.asm	/^c0111176:	e8 17 fb ff ff       	call   c0110c92 <vfs_lookup_parent>$/;"	l
c011117b	obj/kernel.asm	/^c011117b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011117e	obj/kernel.asm	/^c011117e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111182	obj/kernel.asm	/^c0111182:	74 08                	je     c011118c <vfs_open+0xca>$/;"	l
c0111184	obj/kernel.asm	/^c0111184:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111187	obj/kernel.asm	/^c0111187:	e9 20 02 00 00       	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c011118c	obj/kernel.asm	/^c011118c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011118f	obj/kernel.asm	/^c011118f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111192	obj/kernel.asm	/^c0111192:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0111196	obj/kernel.asm	/^c0111196:	74 17                	je     c01111af <vfs_open+0xed>$/;"	l
c0111198	obj/kernel.asm	/^c0111198:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011119b	obj/kernel.asm	/^c011119b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011119e	obj/kernel.asm	/^c011119e:	85 c0                	test   %eax,%eax$/;"	l
c01111a0	obj/kernel.asm	/^c01111a0:	74 0d                	je     c01111af <vfs_open+0xed>$/;"	l
c01111a2	obj/kernel.asm	/^c01111a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01111a5	obj/kernel.asm	/^c01111a5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01111a8	obj/kernel.asm	/^c01111a8:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01111ab	obj/kernel.asm	/^c01111ab:	85 c0                	test   %eax,%eax$/;"	l
c01111ad	obj/kernel.asm	/^c01111ad:	75 24                	jne    c01111d3 <vfs_open+0x111>$/;"	l
c01111af	obj/kernel.asm	/^c01111af:	c7 44 24 0c f4 a6 11 	movl   $0xc011a6f4,0xc(%esp)$/;"	l
c01111b6	obj/kernel.asm	/^c01111b6:	c0 $/;"	l
c01111b7	obj/kernel.asm	/^c01111b7:	c7 44 24 08 43 a7 11 	movl   $0xc011a743,0x8(%esp)$/;"	l
c01111be	obj/kernel.asm	/^c01111be:	c0 $/;"	l
c01111bf	obj/kernel.asm	/^c01111bf:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c01111c6	obj/kernel.asm	/^c01111c6:	00 $/;"	l
c01111c7	obj/kernel.asm	/^c01111c7:	c7 04 24 58 a7 11 c0 	movl   $0xc011a758,(%esp)$/;"	l
c01111ce	obj/kernel.asm	/^c01111ce:	e8 64 fa fe ff       	call   c0100c37 <__panic>$/;"	l
c01111d3	obj/kernel.asm	/^c01111d3:	c7 44 24 04 6e a7 11 	movl   $0xc011a76e,0x4(%esp)$/;"	l
c01111da	obj/kernel.asm	/^c01111da:	c0 $/;"	l
c01111db	obj/kernel.asm	/^c01111db:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01111de	obj/kernel.asm	/^c01111de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01111e1	obj/kernel.asm	/^c01111e1:	e8 e9 fd ff ff       	call   c0110fcf <inode_check>$/;"	l
c01111e6	obj/kernel.asm	/^c01111e6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01111e9	obj/kernel.asm	/^c01111e9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01111ec	obj/kernel.asm	/^c01111ec:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01111ef	obj/kernel.asm	/^c01111ef:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c01111f2	obj/kernel.asm	/^c01111f2:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01111f5	obj/kernel.asm	/^c01111f5:	8d 5d d8             	lea    -0x28(%ebp),%ebx$/;"	l
c01111f8	obj/kernel.asm	/^c01111f8:	89 5c 24 0c          	mov    %ebx,0xc(%esp)$/;"	l
c01111fc	obj/kernel.asm	/^c01111fc:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01111ff	obj/kernel.asm	/^c01111ff:	89 5c 24 08          	mov    %ebx,0x8(%esp)$/;"	l
c0111203	obj/kernel.asm	/^c0111203:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c0111207	obj/kernel.asm	/^c0111207:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011120a	obj/kernel.asm	/^c011120a:	ff d0                	call   *%eax$/;"	l
c011120c	obj/kernel.asm	/^c011120c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011120f	obj/kernel.asm	/^c011120f:	90                   	nop$/;"	l
c0111210	obj/kernel.asm	/^c0111210:	eb 1e                	jmp    c0111230 <vfs_open+0x16e>$/;"	l
c0111212	obj/kernel.asm	/^c0111212:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111215	obj/kernel.asm	/^c0111215:	e9 92 01 00 00       	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c011121a	obj/kernel.asm	/^c011121a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011121e	obj/kernel.asm	/^c011121e:	74 10                	je     c0111230 <vfs_open+0x16e>$/;"	l
c0111220	obj/kernel.asm	/^c0111220:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111224	obj/kernel.asm	/^c0111224:	74 0a                	je     c0111230 <vfs_open+0x16e>$/;"	l
c0111226	obj/kernel.asm	/^c0111226:	b8 e9 ff ff ff       	mov    $0xffffffe9,%eax$/;"	l
c011122b	obj/kernel.asm	/^c011122b:	e9 7c 01 00 00       	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c0111230	obj/kernel.asm	/^c0111230:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111233	obj/kernel.asm	/^c0111233:	85 c0                	test   %eax,%eax$/;"	l
c0111235	obj/kernel.asm	/^c0111235:	75 24                	jne    c011125b <vfs_open+0x199>$/;"	l
c0111237	obj/kernel.asm	/^c0111237:	c7 44 24 0c 75 a7 11 	movl   $0xc011a775,0xc(%esp)$/;"	l
c011123e	obj/kernel.asm	/^c011123e:	c0 $/;"	l
c011123f	obj/kernel.asm	/^c011123f:	c7 44 24 08 43 a7 11 	movl   $0xc011a743,0x8(%esp)$/;"	l
c0111246	obj/kernel.asm	/^c0111246:	c0 $/;"	l
c0111247	obj/kernel.asm	/^c0111247:	c7 44 24 04 31 00 00 	movl   $0x31,0x4(%esp)$/;"	l
c011124e	obj/kernel.asm	/^c011124e:	00 $/;"	l
c011124f	obj/kernel.asm	/^c011124f:	c7 04 24 58 a7 11 c0 	movl   $0xc011a758,(%esp)$/;"	l
c0111256	obj/kernel.asm	/^c0111256:	e8 dc f9 fe ff       	call   c0100c37 <__panic>$/;"	l
c011125b	obj/kernel.asm	/^c011125b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011125e	obj/kernel.asm	/^c011125e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111261	obj/kernel.asm	/^c0111261:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0111265	obj/kernel.asm	/^c0111265:	74 17                	je     c011127e <vfs_open+0x1bc>$/;"	l
c0111267	obj/kernel.asm	/^c0111267:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011126a	obj/kernel.asm	/^c011126a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011126d	obj/kernel.asm	/^c011126d:	85 c0                	test   %eax,%eax$/;"	l
c011126f	obj/kernel.asm	/^c011126f:	74 0d                	je     c011127e <vfs_open+0x1bc>$/;"	l
c0111271	obj/kernel.asm	/^c0111271:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111274	obj/kernel.asm	/^c0111274:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111277	obj/kernel.asm	/^c0111277:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011127a	obj/kernel.asm	/^c011127a:	85 c0                	test   %eax,%eax$/;"	l
c011127c	obj/kernel.asm	/^c011127c:	75 24                	jne    c01112a2 <vfs_open+0x1e0>$/;"	l
c011127e	obj/kernel.asm	/^c011127e:	c7 44 24 0c 84 a7 11 	movl   $0xc011a784,0xc(%esp)$/;"	l
c0111285	obj/kernel.asm	/^c0111285:	c0 $/;"	l
c0111286	obj/kernel.asm	/^c0111286:	c7 44 24 08 43 a7 11 	movl   $0xc011a743,0x8(%esp)$/;"	l
c011128d	obj/kernel.asm	/^c011128d:	c0 $/;"	l
c011128e	obj/kernel.asm	/^c011128e:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c0111295	obj/kernel.asm	/^c0111295:	00 $/;"	l
c0111296	obj/kernel.asm	/^c0111296:	c7 04 24 58 a7 11 c0 	movl   $0xc011a758,(%esp)$/;"	l
c011129d	obj/kernel.asm	/^c011129d:	e8 95 f9 fe ff       	call   c0100c37 <__panic>$/;"	l
c01112a2	obj/kernel.asm	/^c01112a2:	c7 44 24 04 d1 a7 11 	movl   $0xc011a7d1,0x4(%esp)$/;"	l
c01112a9	obj/kernel.asm	/^c01112a9:	c0 $/;"	l
c01112aa	obj/kernel.asm	/^c01112aa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01112ad	obj/kernel.asm	/^c01112ad:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01112b0	obj/kernel.asm	/^c01112b0:	e8 1a fd ff ff       	call   c0110fcf <inode_check>$/;"	l
c01112b5	obj/kernel.asm	/^c01112b5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01112b8	obj/kernel.asm	/^c01112b8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01112bb	obj/kernel.asm	/^c01112bb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01112be	obj/kernel.asm	/^c01112be:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01112c1	obj/kernel.asm	/^c01112c1:	8b 4d 0c             	mov    0xc(%ebp),%ecx$/;"	l
c01112c4	obj/kernel.asm	/^c01112c4:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c01112c8	obj/kernel.asm	/^c01112c8:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01112cb	obj/kernel.asm	/^c01112cb:	ff d0                	call   *%eax$/;"	l
c01112cd	obj/kernel.asm	/^c01112cd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01112d0	obj/kernel.asm	/^c01112d0:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01112d4	obj/kernel.asm	/^c01112d4:	74 13                	je     c01112e9 <vfs_open+0x227>$/;"	l
c01112d6	obj/kernel.asm	/^c01112d6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01112d9	obj/kernel.asm	/^c01112d9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01112dc	obj/kernel.asm	/^c01112dc:	e8 00 fb ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c01112e1	obj/kernel.asm	/^c01112e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01112e4	obj/kernel.asm	/^c01112e4:	e9 c3 00 00 00       	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c01112e9	obj/kernel.asm	/^c01112e9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01112ec	obj/kernel.asm	/^c01112ec:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01112ef	obj/kernel.asm	/^c01112ef:	e8 da fb ff ff       	call   c0110ece <inode_open_inc>$/;"	l
c01112f4	obj/kernel.asm	/^c01112f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01112f7	obj/kernel.asm	/^c01112f7:	83 e0 10             	and    $0x10,%eax$/;"	l
c01112fa	obj/kernel.asm	/^c01112fa:	85 c0                	test   %eax,%eax$/;"	l
c01112fc	obj/kernel.asm	/^c01112fc:	75 0a                	jne    c0111308 <vfs_open+0x246>$/;"	l
c01112fe	obj/kernel.asm	/^c01112fe:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111302	obj/kernel.asm	/^c0111302:	0f 84 97 00 00 00    	je     c011139f <vfs_open+0x2dd>$/;"	l
c0111308	obj/kernel.asm	/^c0111308:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011130b	obj/kernel.asm	/^c011130b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011130e	obj/kernel.asm	/^c011130e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111312	obj/kernel.asm	/^c0111312:	74 17                	je     c011132b <vfs_open+0x269>$/;"	l
c0111314	obj/kernel.asm	/^c0111314:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111317	obj/kernel.asm	/^c0111317:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011131a	obj/kernel.asm	/^c011131a:	85 c0                	test   %eax,%eax$/;"	l
c011131c	obj/kernel.asm	/^c011131c:	74 0d                	je     c011132b <vfs_open+0x269>$/;"	l
c011131e	obj/kernel.asm	/^c011131e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111321	obj/kernel.asm	/^c0111321:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111324	obj/kernel.asm	/^c0111324:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111327	obj/kernel.asm	/^c0111327:	85 c0                	test   %eax,%eax$/;"	l
c0111329	obj/kernel.asm	/^c0111329:	75 24                	jne    c011134f <vfs_open+0x28d>$/;"	l
c011132b	obj/kernel.asm	/^c011132b:	c7 44 24 0c d8 a7 11 	movl   $0xc011a7d8,0xc(%esp)$/;"	l
c0111332	obj/kernel.asm	/^c0111332:	c0 $/;"	l
c0111333	obj/kernel.asm	/^c0111333:	c7 44 24 08 43 a7 11 	movl   $0xc011a743,0x8(%esp)$/;"	l
c011133a	obj/kernel.asm	/^c011133a:	c0 $/;"	l
c011133b	obj/kernel.asm	/^c011133b:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c0111342	obj/kernel.asm	/^c0111342:	00 $/;"	l
c0111343	obj/kernel.asm	/^c0111343:	c7 04 24 58 a7 11 c0 	movl   $0xc011a758,(%esp)$/;"	l
c011134a	obj/kernel.asm	/^c011134a:	e8 e8 f8 fe ff       	call   c0100c37 <__panic>$/;"	l
c011134f	obj/kernel.asm	/^c011134f:	c7 44 24 04 29 a8 11 	movl   $0xc011a829,0x4(%esp)$/;"	l
c0111356	obj/kernel.asm	/^c0111356:	c0 $/;"	l
c0111357	obj/kernel.asm	/^c0111357:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011135a	obj/kernel.asm	/^c011135a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011135d	obj/kernel.asm	/^c011135d:	e8 6d fc ff ff       	call   c0110fcf <inode_check>$/;"	l
c0111362	obj/kernel.asm	/^c0111362:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111365	obj/kernel.asm	/^c0111365:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111368	obj/kernel.asm	/^c0111368:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011136b	obj/kernel.asm	/^c011136b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c011136e	obj/kernel.asm	/^c011136e:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0111375	obj/kernel.asm	/^c0111375:	00 $/;"	l
c0111376	obj/kernel.asm	/^c0111376:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111379	obj/kernel.asm	/^c0111379:	ff d0                	call   *%eax$/;"	l
c011137b	obj/kernel.asm	/^c011137b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011137e	obj/kernel.asm	/^c011137e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111382	obj/kernel.asm	/^c0111382:	74 1b                	je     c011139f <vfs_open+0x2dd>$/;"	l
c0111384	obj/kernel.asm	/^c0111384:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111387	obj/kernel.asm	/^c0111387:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011138a	obj/kernel.asm	/^c011138a:	e8 59 fb ff ff       	call   c0110ee8 <inode_open_dec>$/;"	l
c011138f	obj/kernel.asm	/^c011138f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111392	obj/kernel.asm	/^c0111392:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111395	obj/kernel.asm	/^c0111395:	e8 47 fa ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c011139a	obj/kernel.asm	/^c011139a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011139d	obj/kernel.asm	/^c011139d:	eb 0d                	jmp    c01113ac <vfs_open+0x2ea>$/;"	l
c011139f	obj/kernel.asm	/^c011139f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01113a2	obj/kernel.asm	/^c01113a2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01113a5	obj/kernel.asm	/^c01113a5:	89 10                	mov    %edx,(%eax)$/;"	l
c01113a7	obj/kernel.asm	/^c01113a7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01113ac	obj/kernel.asm	/^c01113ac:	83 c4 44             	add    $0x44,%esp$/;"	l
c01113af	obj/kernel.asm	/^c01113af:	5b                   	pop    %ebx$/;"	l
c01113b0	obj/kernel.asm	/^c01113b0:	5d                   	pop    %ebp$/;"	l
c01113b1	obj/kernel.asm	/^c01113b1:	c3                   	ret    $/;"	l
c01113b2	obj/kernel.asm	/^c01113b2 <vfs_close>:$/;"	l
c01113b2	obj/kernel.asm	/^c01113b2:	55                   	push   %ebp$/;"	l
c01113b3	obj/kernel.asm	/^c01113b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01113b5	obj/kernel.asm	/^c01113b5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01113b8	obj/kernel.asm	/^c01113b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01113bb	obj/kernel.asm	/^c01113bb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01113be	obj/kernel.asm	/^c01113be:	e8 25 fb ff ff       	call   c0110ee8 <inode_open_dec>$/;"	l
c01113c3	obj/kernel.asm	/^c01113c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01113c6	obj/kernel.asm	/^c01113c6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01113c9	obj/kernel.asm	/^c01113c9:	e8 13 fa ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c01113ce	obj/kernel.asm	/^c01113ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01113d3	obj/kernel.asm	/^c01113d3:	c9                   	leave  $/;"	l
c01113d4	obj/kernel.asm	/^c01113d4:	c3                   	ret    $/;"	l
c01113d5	obj/kernel.asm	/^c01113d5 <vfs_unlink>:$/;"	l
c01113d5	obj/kernel.asm	/^c01113d5:	55                   	push   %ebp$/;"	l
c01113d6	obj/kernel.asm	/^c01113d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01113d8	obj/kernel.asm	/^c01113d8:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c01113dd	obj/kernel.asm	/^c01113dd:	5d                   	pop    %ebp$/;"	l
c01113de	obj/kernel.asm	/^c01113de:	c3                   	ret    $/;"	l
c01113df	obj/kernel.asm	/^c01113df <vfs_rename>:$/;"	l
c01113df	obj/kernel.asm	/^c01113df:	55                   	push   %ebp$/;"	l
c01113e0	obj/kernel.asm	/^c01113e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01113e2	obj/kernel.asm	/^c01113e2:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c01113e7	obj/kernel.asm	/^c01113e7:	5d                   	pop    %ebp$/;"	l
c01113e8	obj/kernel.asm	/^c01113e8:	c3                   	ret    $/;"	l
c01113e9	obj/kernel.asm	/^c01113e9 <vfs_link>:$/;"	l
c01113e9	obj/kernel.asm	/^c01113e9:	55                   	push   %ebp$/;"	l
c01113ea	obj/kernel.asm	/^c01113ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01113ec	obj/kernel.asm	/^c01113ec:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c01113f1	obj/kernel.asm	/^c01113f1:	5d                   	pop    %ebp$/;"	l
c01113f2	obj/kernel.asm	/^c01113f2:	c3                   	ret    $/;"	l
c01113f3	obj/kernel.asm	/^c01113f3 <vfs_symlink>:$/;"	l
c01113f3	obj/kernel.asm	/^c01113f3:	55                   	push   %ebp$/;"	l
c01113f4	obj/kernel.asm	/^c01113f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01113f6	obj/kernel.asm	/^c01113f6:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c01113fb	obj/kernel.asm	/^c01113fb:	5d                   	pop    %ebp$/;"	l
c01113fc	obj/kernel.asm	/^c01113fc:	c3                   	ret    $/;"	l
c01113fd	obj/kernel.asm	/^c01113fd <vfs_readlink>:$/;"	l
c01113fd	obj/kernel.asm	/^c01113fd:	55                   	push   %ebp$/;"	l
c01113fe	obj/kernel.asm	/^c01113fe:	89 e5                	mov    %esp,%ebp$/;"	l
c0111400	obj/kernel.asm	/^c0111400:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0111405	obj/kernel.asm	/^c0111405:	5d                   	pop    %ebp$/;"	l
c0111406	obj/kernel.asm	/^c0111406:	c3                   	ret    $/;"	l
c0111407	obj/kernel.asm	/^c0111407 <vfs_mkdir>:$/;"	l
c0111407	obj/kernel.asm	/^c0111407:	55                   	push   %ebp$/;"	l
c0111408	obj/kernel.asm	/^c0111408:	89 e5                	mov    %esp,%ebp$/;"	l
c011140a	obj/kernel.asm	/^c011140a:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c011140f	obj/kernel.asm	/^c011140f:	5d                   	pop    %ebp$/;"	l
c0111410	obj/kernel.asm	/^c0111410:	c3                   	ret    $/;"	l
c0111411	obj/kernel.asm	/^c0111411 <__alloc_fs>:$/;"	l
c0111411	obj/kernel.asm	/^c0111411:	55                   	push   %ebp$/;"	l
c0111412	obj/kernel.asm	/^c0111412:	89 e5                	mov    %esp,%ebp$/;"	l
c0111414	obj/kernel.asm	/^c0111414:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111417	obj/kernel.asm	/^c0111417:	c7 04 24 80 00 00 00 	movl   $0x80,(%esp)$/;"	l
c011141e	obj/kernel.asm	/^c011141e:	e8 c5 6d ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0111423	obj/kernel.asm	/^c0111423:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111426	obj/kernel.asm	/^c0111426:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011142a	obj/kernel.asm	/^c011142a:	74 09                	je     c0111435 <__alloc_fs+0x24>$/;"	l
c011142c	obj/kernel.asm	/^c011142c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011142f	obj/kernel.asm	/^c011142f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111432	obj/kernel.asm	/^c0111432:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
c0111435	obj/kernel.asm	/^c0111435:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111438	obj/kernel.asm	/^c0111438:	c9                   	leave  $/;"	l
c0111439	obj/kernel.asm	/^c0111439:	c3                   	ret    $/;"	l
c011143a	obj/kernel.asm	/^c011143a <vfs_init>:$/;"	l
c011143a	obj/kernel.asm	/^c011143a:	55                   	push   %ebp$/;"	l
c011143b	obj/kernel.asm	/^c011143b:	89 e5                	mov    %esp,%ebp$/;"	l
c011143d	obj/kernel.asm	/^c011143d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111440	obj/kernel.asm	/^c0111440:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0111447	obj/kernel.asm	/^c0111447:	00 $/;"	l
c0111448	obj/kernel.asm	/^c0111448:	c7 04 24 0c a0 15 c0 	movl   $0xc015a00c,(%esp)$/;"	l
c011144f	obj/kernel.asm	/^c011144f:	e8 a2 97 ff ff       	call   c010abf6 <sem_init>$/;"	l
c0111454	obj/kernel.asm	/^c0111454:	e8 4e ea ff ff       	call   c010fea7 <vfs_devlist_init>$/;"	l
c0111459	obj/kernel.asm	/^c0111459:	c9                   	leave  $/;"	l
c011145a	obj/kernel.asm	/^c011145a:	c3                   	ret    $/;"	l
c011145b	obj/kernel.asm	/^c011145b <lock_bootfs>:$/;"	l
c011145b	obj/kernel.asm	/^c011145b:	55                   	push   %ebp$/;"	l
c011145c	obj/kernel.asm	/^c011145c:	89 e5                	mov    %esp,%ebp$/;"	l
c011145e	obj/kernel.asm	/^c011145e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111461	obj/kernel.asm	/^c0111461:	c7 04 24 0c a0 15 c0 	movl   $0xc015a00c,(%esp)$/;"	l
c0111468	obj/kernel.asm	/^c0111468:	e8 17 99 ff ff       	call   c010ad84 <down>$/;"	l
c011146d	obj/kernel.asm	/^c011146d:	c9                   	leave  $/;"	l
c011146e	obj/kernel.asm	/^c011146e:	c3                   	ret    $/;"	l
c011146f	obj/kernel.asm	/^c011146f <unlock_bootfs>:$/;"	l
c011146f	obj/kernel.asm	/^c011146f:	55                   	push   %ebp$/;"	l
c0111470	obj/kernel.asm	/^c0111470:	89 e5                	mov    %esp,%ebp$/;"	l
c0111472	obj/kernel.asm	/^c0111472:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111475	obj/kernel.asm	/^c0111475:	c7 04 24 0c a0 15 c0 	movl   $0xc015a00c,(%esp)$/;"	l
c011147c	obj/kernel.asm	/^c011147c:	e8 e8 98 ff ff       	call   c010ad69 <up>$/;"	l
c0111481	obj/kernel.asm	/^c0111481:	c9                   	leave  $/;"	l
c0111482	obj/kernel.asm	/^c0111482:	c3                   	ret    $/;"	l
c0111483	obj/kernel.asm	/^c0111483 <change_bootfs>:$/;"	l
c0111483	obj/kernel.asm	/^c0111483:	55                   	push   %ebp$/;"	l
c0111484	obj/kernel.asm	/^c0111484:	89 e5                	mov    %esp,%ebp$/;"	l
c0111486	obj/kernel.asm	/^c0111486:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111489	obj/kernel.asm	/^c0111489:	e8 cd ff ff ff       	call   c011145b <lock_bootfs>$/;"	l
c011148e	obj/kernel.asm	/^c011148e:	a1 18 a0 15 c0       	mov    0xc015a018,%eax$/;"	l
c0111493	obj/kernel.asm	/^c0111493:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111496	obj/kernel.asm	/^c0111496:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111499	obj/kernel.asm	/^c0111499:	a3 18 a0 15 c0       	mov    %eax,0xc015a018$/;"	l
c011149e	obj/kernel.asm	/^c011149e:	e8 cc ff ff ff       	call   c011146f <unlock_bootfs>$/;"	l
c01114a3	obj/kernel.asm	/^c01114a3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01114a7	obj/kernel.asm	/^c01114a7:	74 0b                	je     c01114b4 <change_bootfs+0x31>$/;"	l
c01114a9	obj/kernel.asm	/^c01114a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01114ac	obj/kernel.asm	/^c01114ac:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01114af	obj/kernel.asm	/^c01114af:	e8 2d f9 ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c01114b4	obj/kernel.asm	/^c01114b4:	c9                   	leave  $/;"	l
c01114b5	obj/kernel.asm	/^c01114b5:	c3                   	ret    $/;"	l
c01114b6	obj/kernel.asm	/^c01114b6 <vfs_set_bootfs>:$/;"	l
c01114b6	obj/kernel.asm	/^c01114b6:	55                   	push   %ebp$/;"	l
c01114b7	obj/kernel.asm	/^c01114b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01114b9	obj/kernel.asm	/^c01114b9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01114bc	obj/kernel.asm	/^c01114bc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01114c3	obj/kernel.asm	/^c01114c3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01114c7	obj/kernel.asm	/^c01114c7:	74 62                	je     c011152b <vfs_set_bootfs+0x75>$/;"	l
c01114c9	obj/kernel.asm	/^c01114c9:	c7 44 24 04 3a 00 00 	movl   $0x3a,0x4(%esp)$/;"	l
c01114d0	obj/kernel.asm	/^c01114d0:	00 $/;"	l
c01114d1	obj/kernel.asm	/^c01114d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01114d4	obj/kernel.asm	/^c01114d4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01114d7	obj/kernel.asm	/^c01114d7:	e8 f5 4f 00 00       	call   c01164d1 <strchr>$/;"	l
c01114dc	obj/kernel.asm	/^c01114dc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01114df	obj/kernel.asm	/^c01114df:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01114e3	obj/kernel.asm	/^c01114e3:	74 0d                	je     c01114f2 <vfs_set_bootfs+0x3c>$/;"	l
c01114e5	obj/kernel.asm	/^c01114e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01114e8	obj/kernel.asm	/^c01114e8:	83 c0 01             	add    $0x1,%eax$/;"	l
c01114eb	obj/kernel.asm	/^c01114eb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01114ee	obj/kernel.asm	/^c01114ee:	84 c0                	test   %al,%al$/;"	l
c01114f0	obj/kernel.asm	/^c01114f0:	74 07                	je     c01114f9 <vfs_set_bootfs+0x43>$/;"	l
c01114f2	obj/kernel.asm	/^c01114f2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01114f7	obj/kernel.asm	/^c01114f7:	eb 42                	jmp    c011153b <vfs_set_bootfs+0x85>$/;"	l
c01114f9	obj/kernel.asm	/^c01114f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01114fc	obj/kernel.asm	/^c01114fc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01114ff	obj/kernel.asm	/^c01114ff:	e8 67 f3 ff ff       	call   c011086b <vfs_chdir>$/;"	l
c0111504	obj/kernel.asm	/^c0111504:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111507	obj/kernel.asm	/^c0111507:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011150b	obj/kernel.asm	/^c011150b:	74 05                	je     c0111512 <vfs_set_bootfs+0x5c>$/;"	l
c011150d	obj/kernel.asm	/^c011150d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111510	obj/kernel.asm	/^c0111510:	eb 29                	jmp    c011153b <vfs_set_bootfs+0x85>$/;"	l
c0111512	obj/kernel.asm	/^c0111512:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0111515	obj/kernel.asm	/^c0111515:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111518	obj/kernel.asm	/^c0111518:	e8 22 f2 ff ff       	call   c011073f <vfs_get_curdir>$/;"	l
c011151d	obj/kernel.asm	/^c011151d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111520	obj/kernel.asm	/^c0111520:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111524	obj/kernel.asm	/^c0111524:	74 05                	je     c011152b <vfs_set_bootfs+0x75>$/;"	l
c0111526	obj/kernel.asm	/^c0111526:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111529	obj/kernel.asm	/^c0111529:	eb 10                	jmp    c011153b <vfs_set_bootfs+0x85>$/;"	l
c011152b	obj/kernel.asm	/^c011152b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011152e	obj/kernel.asm	/^c011152e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111531	obj/kernel.asm	/^c0111531:	e8 4d ff ff ff       	call   c0111483 <change_bootfs>$/;"	l
c0111536	obj/kernel.asm	/^c0111536:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011153b	obj/kernel.asm	/^c011153b:	c9                   	leave  $/;"	l
c011153c	obj/kernel.asm	/^c011153c:	c3                   	ret    $/;"	l
c011153d	obj/kernel.asm	/^c011153d <vfs_get_bootfs>:$/;"	l
c011153d	obj/kernel.asm	/^c011153d:	55                   	push   %ebp$/;"	l
c011153e	obj/kernel.asm	/^c011153e:	89 e5                	mov    %esp,%ebp$/;"	l
c0111540	obj/kernel.asm	/^c0111540:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111543	obj/kernel.asm	/^c0111543:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c011154a	obj/kernel.asm	/^c011154a:	a1 18 a0 15 c0       	mov    0xc015a018,%eax$/;"	l
c011154f	obj/kernel.asm	/^c011154f:	85 c0                	test   %eax,%eax$/;"	l
c0111551	obj/kernel.asm	/^c0111551:	74 25                	je     c0111578 <vfs_get_bootfs+0x3b>$/;"	l
c0111553	obj/kernel.asm	/^c0111553:	e8 03 ff ff ff       	call   c011145b <lock_bootfs>$/;"	l
c0111558	obj/kernel.asm	/^c0111558:	a1 18 a0 15 c0       	mov    0xc015a018,%eax$/;"	l
c011155d	obj/kernel.asm	/^c011155d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111560	obj/kernel.asm	/^c0111560:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111564	obj/kernel.asm	/^c0111564:	74 0d                	je     c0111573 <vfs_get_bootfs+0x36>$/;"	l
c0111566	obj/kernel.asm	/^c0111566:	a1 18 a0 15 c0       	mov    0xc015a018,%eax$/;"	l
c011156b	obj/kernel.asm	/^c011156b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011156e	obj/kernel.asm	/^c011156e:	e8 54 f8 ff ff       	call   c0110dc7 <inode_ref_inc>$/;"	l
c0111573	obj/kernel.asm	/^c0111573:	e8 f7 fe ff ff       	call   c011146f <unlock_bootfs>$/;"	l
c0111578	obj/kernel.asm	/^c0111578:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011157c	obj/kernel.asm	/^c011157c:	75 07                	jne    c0111585 <vfs_get_bootfs+0x48>$/;"	l
c011157e	obj/kernel.asm	/^c011157e:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0111583	obj/kernel.asm	/^c0111583:	eb 0d                	jmp    c0111592 <vfs_get_bootfs+0x55>$/;"	l
c0111585	obj/kernel.asm	/^c0111585:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111588	obj/kernel.asm	/^c0111588:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c011158b	obj/kernel.asm	/^c011158b:	89 10                	mov    %edx,(%eax)$/;"	l
c011158d	obj/kernel.asm	/^c011158d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111592	obj/kernel.asm	/^c0111592:	c9                   	leave  $/;"	l
c0111593	obj/kernel.asm	/^c0111593:	c3                   	ret    $/;"	l
c0111594	obj/kernel.asm	/^c0111594 <__intr_save>:$/;"	l
c0111594	obj/kernel.asm	/^c0111594:	55                   	push   %ebp$/;"	l
c0111595	obj/kernel.asm	/^c0111595:	89 e5                	mov    %esp,%ebp$/;"	l
c0111597	obj/kernel.asm	/^c0111597:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011159a	obj/kernel.asm	/^c011159a:	9c                   	pushf  $/;"	l
c011159b	obj/kernel.asm	/^c011159b:	58                   	pop    %eax$/;"	l
c011159c	obj/kernel.asm	/^c011159c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011159f	obj/kernel.asm	/^c011159f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01115a2	obj/kernel.asm	/^c01115a2:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01115a7	obj/kernel.asm	/^c01115a7:	85 c0                	test   %eax,%eax$/;"	l
c01115a9	obj/kernel.asm	/^c01115a9:	74 0c                	je     c01115b7 <__intr_save+0x23>$/;"	l
c01115ab	obj/kernel.asm	/^c01115ab:	e8 de 14 ff ff       	call   c0102a8e <intr_disable>$/;"	l
c01115b0	obj/kernel.asm	/^c01115b0:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01115b5	obj/kernel.asm	/^c01115b5:	eb 05                	jmp    c01115bc <__intr_save+0x28>$/;"	l
c01115b7	obj/kernel.asm	/^c01115b7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01115bc	obj/kernel.asm	/^c01115bc:	c9                   	leave  $/;"	l
c01115bd	obj/kernel.asm	/^c01115bd:	c3                   	ret    $/;"	l
c01115be	obj/kernel.asm	/^c01115be <__intr_restore>:$/;"	l
c01115be	obj/kernel.asm	/^c01115be:	55                   	push   %ebp$/;"	l
c01115bf	obj/kernel.asm	/^c01115bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01115c1	obj/kernel.asm	/^c01115c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01115c4	obj/kernel.asm	/^c01115c4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01115c8	obj/kernel.asm	/^c01115c8:	74 05                	je     c01115cf <__intr_restore+0x11>$/;"	l
c01115ca	obj/kernel.asm	/^c01115ca:	e8 b9 14 ff ff       	call   c0102a88 <intr_enable>$/;"	l
c01115cf	obj/kernel.asm	/^c01115cf:	c9                   	leave  $/;"	l
c01115d0	obj/kernel.asm	/^c01115d0:	c3                   	ret    $/;"	l
c01115d1	obj/kernel.asm	/^c01115d1 <dev_stdin_write>:$/;"	l
c01115d1	obj/kernel.asm	/^c01115d1:	55                   	push   %ebp$/;"	l
c01115d2	obj/kernel.asm	/^c01115d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01115d4	obj/kernel.asm	/^c01115d4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01115d7	obj/kernel.asm	/^c01115d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01115da	obj/kernel.asm	/^c01115da:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
c01115dd	obj/kernel.asm	/^c01115dd:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
c01115e1	obj/kernel.asm	/^c01115e1:	0f 84 80 00 00 00    	je     c0111667 <dev_stdin_write+0x96>$/;"	l
c01115e7	obj/kernel.asm	/^c01115e7:	e8 a8 ff ff ff       	call   c0111594 <__intr_save>$/;"	l
c01115ec	obj/kernel.asm	/^c01115ec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01115ef	obj/kernel.asm	/^c01115ef:	a1 24 b0 15 c0       	mov    0xc015b024,%eax$/;"	l
c01115f4	obj/kernel.asm	/^c01115f4:	99                   	cltd   $/;"	l
c01115f5	obj/kernel.asm	/^c01115f5:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c01115f8	obj/kernel.asm	/^c01115f8:	01 d0                	add    %edx,%eax$/;"	l
c01115fa	obj/kernel.asm	/^c01115fa:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01115ff	obj/kernel.asm	/^c01115ff:	29 d0                	sub    %edx,%eax$/;"	l
c0111601	obj/kernel.asm	/^c0111601:	0f b6 55 e4          	movzbl -0x1c(%ebp),%edx$/;"	l
c0111605	obj/kernel.asm	/^c0111605:	88 90 20 a0 15 c0    	mov    %dl,-0x3fea5fe0(%eax)$/;"	l
c011160b	obj/kernel.asm	/^c011160b:	8b 15 24 b0 15 c0    	mov    0xc015b024,%edx$/;"	l
c0111611	obj/kernel.asm	/^c0111611:	a1 20 b0 15 c0       	mov    0xc015b020,%eax$/;"	l
c0111616	obj/kernel.asm	/^c0111616:	29 c2                	sub    %eax,%edx$/;"	l
c0111618	obj/kernel.asm	/^c0111618:	89 d0                	mov    %edx,%eax$/;"	l
c011161a	obj/kernel.asm	/^c011161a:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c011161f	obj/kernel.asm	/^c011161f:	7f 0d                	jg     c011162e <dev_stdin_write+0x5d>$/;"	l
c0111621	obj/kernel.asm	/^c0111621:	a1 24 b0 15 c0       	mov    0xc015b024,%eax$/;"	l
c0111626	obj/kernel.asm	/^c0111626:	83 c0 01             	add    $0x1,%eax$/;"	l
c0111629	obj/kernel.asm	/^c0111629:	a3 24 b0 15 c0       	mov    %eax,0xc015b024$/;"	l
c011162e	obj/kernel.asm	/^c011162e:	a1 a0 6e 15 c0       	mov    0xc0156ea0,%eax$/;"	l
c0111633	obj/kernel.asm	/^c0111633:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111636	obj/kernel.asm	/^c0111636:	e8 be 93 ff ff       	call   c010a9f9 <wait_queue_empty>$/;"	l
c011163b	obj/kernel.asm	/^c011163b:	85 c0                	test   %eax,%eax$/;"	l
c011163d	obj/kernel.asm	/^c011163d:	75 1d                	jne    c011165c <dev_stdin_write+0x8b>$/;"	l
c011163f	obj/kernel.asm	/^c011163f:	a1 a0 6e 15 c0       	mov    0xc0156ea0,%eax$/;"	l
c0111644	obj/kernel.asm	/^c0111644:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c011164b	obj/kernel.asm	/^c011164b:	00 $/;"	l
c011164c	obj/kernel.asm	/^c011164c:	c7 44 24 04 04 00 00 	movl   $0x80000004,0x4(%esp)$/;"	l
c0111653	obj/kernel.asm	/^c0111653:	80 $/;"	l
c0111654	obj/kernel.asm	/^c0111654:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111657	obj/kernel.asm	/^c0111657:	e8 54 94 ff ff       	call   c010aab0 <wakeup_queue>$/;"	l
c011165c	obj/kernel.asm	/^c011165c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011165f	obj/kernel.asm	/^c011165f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111662	obj/kernel.asm	/^c0111662:	e8 57 ff ff ff       	call   c01115be <__intr_restore>$/;"	l
c0111667	obj/kernel.asm	/^c0111667:	c9                   	leave  $/;"	l
c0111668	obj/kernel.asm	/^c0111668:	c3                   	ret    $/;"	l
c0111669	obj/kernel.asm	/^c0111669 <dev_stdin_read>:$/;"	l
c0111669	obj/kernel.asm	/^c0111669:	55                   	push   %ebp$/;"	l
c011166a	obj/kernel.asm	/^c011166a:	89 e5                	mov    %esp,%ebp$/;"	l
c011166c	obj/kernel.asm	/^c011166c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011166f	obj/kernel.asm	/^c011166f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111676	obj/kernel.asm	/^c0111676:	e8 19 ff ff ff       	call   c0111594 <__intr_save>$/;"	l
c011167b	obj/kernel.asm	/^c011167b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011167e	obj/kernel.asm	/^c011167e:	e9 bb 00 00 00       	jmp    c011173e <dev_stdin_read+0xd5>$/;"	l
c0111683	obj/kernel.asm	/^c0111683:	8b 15 20 b0 15 c0    	mov    0xc015b020,%edx$/;"	l
c0111689	obj/kernel.asm	/^c0111689:	a1 24 b0 15 c0       	mov    0xc015b024,%eax$/;"	l
c011168e	obj/kernel.asm	/^c011168e:	39 c2                	cmp    %eax,%edx$/;"	l
c0111690	obj/kernel.asm	/^c0111690:	7d 3d                	jge    c01116cf <dev_stdin_read+0x66>$/;"	l
c0111692	obj/kernel.asm	/^c0111692:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111695	obj/kernel.asm	/^c0111695:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0111698	obj/kernel.asm	/^c0111698:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c011169b	obj/kernel.asm	/^c011169b:	8b 15 20 b0 15 c0    	mov    0xc015b020,%edx$/;"	l
c01116a1	obj/kernel.asm	/^c01116a1:	89 d1                	mov    %edx,%ecx$/;"	l
c01116a3	obj/kernel.asm	/^c01116a3:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
c01116a6	obj/kernel.asm	/^c01116a6:	c1 e9 14             	shr    $0x14,%ecx$/;"	l
c01116a9	obj/kernel.asm	/^c01116a9:	01 ca                	add    %ecx,%edx$/;"	l
c01116ab	obj/kernel.asm	/^c01116ab:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
c01116b1	obj/kernel.asm	/^c01116b1:	29 ca                	sub    %ecx,%edx$/;"	l
c01116b3	obj/kernel.asm	/^c01116b3:	0f b6 92 20 a0 15 c0 	movzbl -0x3fea5fe0(%edx),%edx$/;"	l
c01116ba	obj/kernel.asm	/^c01116ba:	88 10                	mov    %dl,(%eax)$/;"	l
c01116bc	obj/kernel.asm	/^c01116bc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01116c0	obj/kernel.asm	/^c01116c0:	a1 20 b0 15 c0       	mov    0xc015b020,%eax$/;"	l
c01116c5	obj/kernel.asm	/^c01116c5:	83 c0 01             	add    $0x1,%eax$/;"	l
c01116c8	obj/kernel.asm	/^c01116c8:	a3 20 b0 15 c0       	mov    %eax,0xc015b020$/;"	l
c01116cd	obj/kernel.asm	/^c01116cd:	eb 6f                	jmp    c011173e <dev_stdin_read+0xd5>$/;"	l
c01116cf	obj/kernel.asm	/^c01116cf:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c01116d2	obj/kernel.asm	/^c01116d2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01116d5	obj/kernel.asm	/^c01116d5:	a1 a0 6e 15 c0       	mov    0xc0156ea0,%eax$/;"	l
c01116da	obj/kernel.asm	/^c01116da:	c7 44 24 08 04 00 00 	movl   $0x80000004,0x8(%esp)$/;"	l
c01116e1	obj/kernel.asm	/^c01116e1:	80 $/;"	l
c01116e2	obj/kernel.asm	/^c01116e2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01116e5	obj/kernel.asm	/^c01116e5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01116e9	obj/kernel.asm	/^c01116e9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01116ec	obj/kernel.asm	/^c01116ec:	e8 54 94 ff ff       	call   c010ab45 <wait_current_set>$/;"	l
c01116f1	obj/kernel.asm	/^c01116f1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01116f4	obj/kernel.asm	/^c01116f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01116f7	obj/kernel.asm	/^c01116f7:	e8 c2 fe ff ff       	call   c01115be <__intr_restore>$/;"	l
c01116fc	obj/kernel.asm	/^c01116fc:	e8 92 da ff ff       	call   c010f193 <schedule>$/;"	l
c0111701	obj/kernel.asm	/^c0111701:	e8 8e fe ff ff       	call   c0111594 <__intr_save>$/;"	l
c0111706	obj/kernel.asm	/^c0111706:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111709	obj/kernel.asm	/^c0111709:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011170c	obj/kernel.asm	/^c011170c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011170f	obj/kernel.asm	/^c011170f:	e8 02 93 ff ff       	call   c010aa16 <wait_in_queue>$/;"	l
c0111714	obj/kernel.asm	/^c0111714:	85 c0                	test   %eax,%eax$/;"	l
c0111716	obj/kernel.asm	/^c0111716:	74 14                	je     c011172c <dev_stdin_read+0xc3>$/;"	l
c0111718	obj/kernel.asm	/^c0111718:	a1 a0 6e 15 c0       	mov    0xc0156ea0,%eax$/;"	l
c011171d	obj/kernel.asm	/^c011171d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0111720	obj/kernel.asm	/^c0111720:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111724	obj/kernel.asm	/^c0111724:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111727	obj/kernel.asm	/^c0111727:	e8 e5 90 ff ff       	call   c010a811 <wait_queue_del>$/;"	l
c011172c	obj/kernel.asm	/^c011172c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011172f	obj/kernel.asm	/^c011172f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111732	obj/kernel.asm	/^c0111732:	3d 04 00 00 80       	cmp    $0x80000004,%eax$/;"	l
c0111737	obj/kernel.asm	/^c0111737:	75 11                	jne    c011174a <dev_stdin_read+0xe1>$/;"	l
c0111739	obj/kernel.asm	/^c0111739:	e9 45 ff ff ff       	jmp    c0111683 <dev_stdin_read+0x1a>$/;"	l
c011173e	obj/kernel.asm	/^c011173e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111741	obj/kernel.asm	/^c0111741:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0111744	obj/kernel.asm	/^c0111744:	0f 82 39 ff ff ff    	jb     c0111683 <dev_stdin_read+0x1a>$/;"	l
c011174a	obj/kernel.asm	/^c011174a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011174d	obj/kernel.asm	/^c011174d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111750	obj/kernel.asm	/^c0111750:	e8 69 fe ff ff       	call   c01115be <__intr_restore>$/;"	l
c0111755	obj/kernel.asm	/^c0111755:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111758	obj/kernel.asm	/^c0111758:	c9                   	leave  $/;"	l
c0111759	obj/kernel.asm	/^c0111759:	c3                   	ret    $/;"	l
c011175a	obj/kernel.asm	/^c011175a <stdin_open>:$/;"	l
c011175a	obj/kernel.asm	/^c011175a:	55                   	push   %ebp$/;"	l
c011175b	obj/kernel.asm	/^c011175b:	89 e5                	mov    %esp,%ebp$/;"	l
c011175d	obj/kernel.asm	/^c011175d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0111761	obj/kernel.asm	/^c0111761:	74 07                	je     c011176a <stdin_open+0x10>$/;"	l
c0111763	obj/kernel.asm	/^c0111763:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111768	obj/kernel.asm	/^c0111768:	eb 05                	jmp    c011176f <stdin_open+0x15>$/;"	l
c011176a	obj/kernel.asm	/^c011176a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011176f	obj/kernel.asm	/^c011176f:	5d                   	pop    %ebp$/;"	l
c0111770	obj/kernel.asm	/^c0111770:	c3                   	ret    $/;"	l
c0111771	obj/kernel.asm	/^c0111771 <stdin_close>:$/;"	l
c0111771	obj/kernel.asm	/^c0111771:	55                   	push   %ebp$/;"	l
c0111772	obj/kernel.asm	/^c0111772:	89 e5                	mov    %esp,%ebp$/;"	l
c0111774	obj/kernel.asm	/^c0111774:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111779	obj/kernel.asm	/^c0111779:	5d                   	pop    %ebp$/;"	l
c011177a	obj/kernel.asm	/^c011177a:	c3                   	ret    $/;"	l
c011177b	obj/kernel.asm	/^c011177b <stdin_io>:$/;"	l
c011177b	obj/kernel.asm	/^c011177b:	55                   	push   %ebp$/;"	l
c011177c	obj/kernel.asm	/^c011177c:	89 e5                	mov    %esp,%ebp$/;"	l
c011177e	obj/kernel.asm	/^c011177e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111781	obj/kernel.asm	/^c0111781:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0111785	obj/kernel.asm	/^c0111785:	75 36                	jne    c01117bd <stdin_io+0x42>$/;"	l
c0111787	obj/kernel.asm	/^c0111787:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011178a	obj/kernel.asm	/^c011178a:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c011178d	obj/kernel.asm	/^c011178d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111790	obj/kernel.asm	/^c0111790:	8b 00                	mov    (%eax),%eax$/;"	l
c0111792	obj/kernel.asm	/^c0111792:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111796	obj/kernel.asm	/^c0111796:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111799	obj/kernel.asm	/^c0111799:	e8 cb fe ff ff       	call   c0111669 <dev_stdin_read>$/;"	l
c011179e	obj/kernel.asm	/^c011179e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01117a1	obj/kernel.asm	/^c01117a1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01117a5	obj/kernel.asm	/^c01117a5:	7e 11                	jle    c01117b8 <stdin_io+0x3d>$/;"	l
c01117a7	obj/kernel.asm	/^c01117a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01117aa	obj/kernel.asm	/^c01117aa:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c01117ad	obj/kernel.asm	/^c01117ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01117b0	obj/kernel.asm	/^c01117b0:	29 c2                	sub    %eax,%edx$/;"	l
c01117b2	obj/kernel.asm	/^c01117b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01117b5	obj/kernel.asm	/^c01117b5:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01117b8	obj/kernel.asm	/^c01117b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01117bb	obj/kernel.asm	/^c01117bb:	eb 05                	jmp    c01117c2 <stdin_io+0x47>$/;"	l
c01117bd	obj/kernel.asm	/^c01117bd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01117c2	obj/kernel.asm	/^c01117c2:	c9                   	leave  $/;"	l
c01117c3	obj/kernel.asm	/^c01117c3:	c3                   	ret    $/;"	l
c01117c4	obj/kernel.asm	/^c01117c4 <stdin_ioctl>:$/;"	l
c01117c4	obj/kernel.asm	/^c01117c4:	55                   	push   %ebp$/;"	l
c01117c5	obj/kernel.asm	/^c01117c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01117c7	obj/kernel.asm	/^c01117c7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01117cc	obj/kernel.asm	/^c01117cc:	5d                   	pop    %ebp$/;"	l
c01117cd	obj/kernel.asm	/^c01117cd:	c3                   	ret    $/;"	l
c01117ce	obj/kernel.asm	/^c01117ce <stdin_device_init>:$/;"	l
c01117ce	obj/kernel.asm	/^c01117ce:	55                   	push   %ebp$/;"	l
c01117cf	obj/kernel.asm	/^c01117cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01117d1	obj/kernel.asm	/^c01117d1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01117d4	obj/kernel.asm	/^c01117d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117d7	obj/kernel.asm	/^c01117d7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01117dd	obj/kernel.asm	/^c01117dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117e0	obj/kernel.asm	/^c01117e0:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c01117e7	obj/kernel.asm	/^c01117e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117ea	obj/kernel.asm	/^c01117ea:	c7 40 08 5a 17 11 c0 	movl   $0xc011175a,0x8(%eax)$/;"	l
c01117f1	obj/kernel.asm	/^c01117f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117f4	obj/kernel.asm	/^c01117f4:	c7 40 0c 71 17 11 c0 	movl   $0xc0111771,0xc(%eax)$/;"	l
c01117fb	obj/kernel.asm	/^c01117fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01117fe	obj/kernel.asm	/^c01117fe:	c7 40 10 7b 17 11 c0 	movl   $0xc011177b,0x10(%eax)$/;"	l
c0111805	obj/kernel.asm	/^c0111805:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111808	obj/kernel.asm	/^c0111808:	c7 40 14 c4 17 11 c0 	movl   $0xc01117c4,0x14(%eax)$/;"	l
c011180f	obj/kernel.asm	/^c011180f:	c7 05 24 b0 15 c0 00 	movl   $0x0,0xc015b024$/;"	l
c0111816	obj/kernel.asm	/^c0111816:	00 00 00 $/;"	l
c0111819	obj/kernel.asm	/^c0111819:	a1 24 b0 15 c0       	mov    0xc015b024,%eax$/;"	l
c011181e	obj/kernel.asm	/^c011181e:	a3 20 b0 15 c0       	mov    %eax,0xc015b020$/;"	l
c0111823	obj/kernel.asm	/^c0111823:	a1 a0 6e 15 c0       	mov    0xc0156ea0,%eax$/;"	l
c0111828	obj/kernel.asm	/^c0111828:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011182b	obj/kernel.asm	/^c011182b:	e8 1e 8f ff ff       	call   c010a74e <wait_queue_init>$/;"	l
c0111830	obj/kernel.asm	/^c0111830:	c9                   	leave  $/;"	l
c0111831	obj/kernel.asm	/^c0111831:	c3                   	ret    $/;"	l
c0111832	obj/kernel.asm	/^c0111832 <dev_init_stdin>:$/;"	l
c0111832	obj/kernel.asm	/^c0111832:	55                   	push   %ebp$/;"	l
c0111833	obj/kernel.asm	/^c0111833:	89 e5                	mov    %esp,%ebp$/;"	l
c0111835	obj/kernel.asm	/^c0111835:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111838	obj/kernel.asm	/^c0111838:	e8 39 0b 00 00       	call   c0112376 <dev_create_inode>$/;"	l
c011183d	obj/kernel.asm	/^c011183d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111840	obj/kernel.asm	/^c0111840:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111844	obj/kernel.asm	/^c0111844:	75 1c                	jne    c0111862 <dev_init_stdin+0x30>$/;"	l
c0111846	obj/kernel.asm	/^c0111846:	c7 44 24 08 34 a8 11 	movl   $0xc011a834,0x8(%esp)$/;"	l
c011184d	obj/kernel.asm	/^c011184d:	c0 $/;"	l
c011184e	obj/kernel.asm	/^c011184e:	c7 44 24 04 75 00 00 	movl   $0x75,0x4(%esp)$/;"	l
c0111855	obj/kernel.asm	/^c0111855:	00 $/;"	l
c0111856	obj/kernel.asm	/^c0111856:	c7 04 24 4d a8 11 c0 	movl   $0xc011a84d,(%esp)$/;"	l
c011185d	obj/kernel.asm	/^c011185d:	e8 d5 f3 fe ff       	call   c0100c37 <__panic>$/;"	l
c0111862	obj/kernel.asm	/^c0111862:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111865	obj/kernel.asm	/^c0111865:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111868	obj/kernel.asm	/^c0111868:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011186c	obj/kernel.asm	/^c011186c:	74 0d                	je     c011187b <dev_init_stdin+0x49>$/;"	l
c011186e	obj/kernel.asm	/^c011186e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111871	obj/kernel.asm	/^c0111871:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111874	obj/kernel.asm	/^c0111874:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111879	obj/kernel.asm	/^c0111879:	74 24                	je     c011189f <dev_init_stdin+0x6d>$/;"	l
c011187b	obj/kernel.asm	/^c011187b:	c7 44 24 0c 68 a8 11 	movl   $0xc011a868,0xc(%esp)$/;"	l
c0111882	obj/kernel.asm	/^c0111882:	c0 $/;"	l
c0111883	obj/kernel.asm	/^c0111883:	c7 44 24 08 9b a8 11 	movl   $0xc011a89b,0x8(%esp)$/;"	l
c011188a	obj/kernel.asm	/^c011188a:	c0 $/;"	l
c011188b	obj/kernel.asm	/^c011188b:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)$/;"	l
c0111892	obj/kernel.asm	/^c0111892:	00 $/;"	l
c0111893	obj/kernel.asm	/^c0111893:	c7 04 24 4d a8 11 c0 	movl   $0xc011a84d,(%esp)$/;"	l
c011189a	obj/kernel.asm	/^c011189a:	e8 98 f3 fe ff       	call   c0100c37 <__panic>$/;"	l
c011189f	obj/kernel.asm	/^c011189f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01118a2	obj/kernel.asm	/^c01118a2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01118a5	obj/kernel.asm	/^c01118a5:	e8 24 ff ff ff       	call   c01117ce <stdin_device_init>$/;"	l
c01118aa	obj/kernel.asm	/^c01118aa:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c01118b1	obj/kernel.asm	/^c01118b1:	00 $/;"	l
c01118b2	obj/kernel.asm	/^c01118b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01118b5	obj/kernel.asm	/^c01118b5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01118b9	obj/kernel.asm	/^c01118b9:	c7 04 24 b0 a8 11 c0 	movl   $0xc011a8b0,(%esp)$/;"	l
c01118c0	obj/kernel.asm	/^c01118c0:	e8 3b ea ff ff       	call   c0110300 <vfs_add_dev>$/;"	l
c01118c5	obj/kernel.asm	/^c01118c5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01118c8	obj/kernel.asm	/^c01118c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01118cc	obj/kernel.asm	/^c01118cc:	74 23                	je     c01118f1 <dev_init_stdin+0xbf>$/;"	l
c01118ce	obj/kernel.asm	/^c01118ce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01118d1	obj/kernel.asm	/^c01118d1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01118d5	obj/kernel.asm	/^c01118d5:	c7 44 24 08 b6 a8 11 	movl   $0xc011a8b6,0x8(%esp)$/;"	l
c01118dc	obj/kernel.asm	/^c01118dc:	c0 $/;"	l
c01118dd	obj/kernel.asm	/^c01118dd:	c7 44 24 04 7b 00 00 	movl   $0x7b,0x4(%esp)$/;"	l
c01118e4	obj/kernel.asm	/^c01118e4:	00 $/;"	l
c01118e5	obj/kernel.asm	/^c01118e5:	c7 04 24 4d a8 11 c0 	movl   $0xc011a84d,(%esp)$/;"	l
c01118ec	obj/kernel.asm	/^c01118ec:	e8 46 f3 fe ff       	call   c0100c37 <__panic>$/;"	l
c01118f1	obj/kernel.asm	/^c01118f1:	c9                   	leave  $/;"	l
c01118f2	obj/kernel.asm	/^c01118f2:	c3                   	ret    $/;"	l
c01118f3	obj/kernel.asm	/^c01118f3 <lock_disk0>:$/;"	l
c01118f3	obj/kernel.asm	/^c01118f3:	55                   	push   %ebp$/;"	l
c01118f4	obj/kernel.asm	/^c01118f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01118f6	obj/kernel.asm	/^c01118f6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01118f9	obj/kernel.asm	/^c01118f9:	c7 04 24 34 b0 15 c0 	movl   $0xc015b034,(%esp)$/;"	l
c0111900	obj/kernel.asm	/^c0111900:	e8 7f 94 ff ff       	call   c010ad84 <down>$/;"	l
c0111905	obj/kernel.asm	/^c0111905:	c9                   	leave  $/;"	l
c0111906	obj/kernel.asm	/^c0111906:	c3                   	ret    $/;"	l
c0111907	obj/kernel.asm	/^c0111907 <unlock_disk0>:$/;"	l
c0111907	obj/kernel.asm	/^c0111907:	55                   	push   %ebp$/;"	l
c0111908	obj/kernel.asm	/^c0111908:	89 e5                	mov    %esp,%ebp$/;"	l
c011190a	obj/kernel.asm	/^c011190a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011190d	obj/kernel.asm	/^c011190d:	c7 04 24 34 b0 15 c0 	movl   $0xc015b034,(%esp)$/;"	l
c0111914	obj/kernel.asm	/^c0111914:	e8 50 94 ff ff       	call   c010ad69 <up>$/;"	l
c0111919	obj/kernel.asm	/^c0111919:	c9                   	leave  $/;"	l
c011191a	obj/kernel.asm	/^c011191a:	c3                   	ret    $/;"	l
c011191b	obj/kernel.asm	/^c011191b <disk0_open>:$/;"	l
c011191b	obj/kernel.asm	/^c011191b:	55                   	push   %ebp$/;"	l
c011191c	obj/kernel.asm	/^c011191c:	89 e5                	mov    %esp,%ebp$/;"	l
c011191e	obj/kernel.asm	/^c011191e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111923	obj/kernel.asm	/^c0111923:	5d                   	pop    %ebp$/;"	l
c0111924	obj/kernel.asm	/^c0111924:	c3                   	ret    $/;"	l
c0111925	obj/kernel.asm	/^c0111925 <disk0_close>:$/;"	l
c0111925	obj/kernel.asm	/^c0111925:	55                   	push   %ebp$/;"	l
c0111926	obj/kernel.asm	/^c0111926:	89 e5                	mov    %esp,%ebp$/;"	l
c0111928	obj/kernel.asm	/^c0111928:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011192d	obj/kernel.asm	/^c011192d:	5d                   	pop    %ebp$/;"	l
c011192e	obj/kernel.asm	/^c011192e:	c3                   	ret    $/;"	l
c011192f	obj/kernel.asm	/^c011192f <disk0_read_blks_nolock>:$/;"	l
c011192f	obj/kernel.asm	/^c011192f:	55                   	push   %ebp$/;"	l
c0111930	obj/kernel.asm	/^c0111930:	89 e5                	mov    %esp,%ebp$/;"	l
c0111932	obj/kernel.asm	/^c0111932:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0111935	obj/kernel.asm	/^c0111935:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111938	obj/kernel.asm	/^c0111938:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c011193b	obj/kernel.asm	/^c011193b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011193e	obj/kernel.asm	/^c011193e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111941	obj/kernel.asm	/^c0111941:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0111944	obj/kernel.asm	/^c0111944:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111947	obj/kernel.asm	/^c0111947:	a1 30 b0 15 c0       	mov    0xc015b030,%eax$/;"	l
c011194c	obj/kernel.asm	/^c011194c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011194f	obj/kernel.asm	/^c011194f:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0111953	obj/kernel.asm	/^c0111953:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0111957	obj/kernel.asm	/^c0111957:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011195a	obj/kernel.asm	/^c011195a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011195e	obj/kernel.asm	/^c011195e:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0111965	obj/kernel.asm	/^c0111965:	e8 83 01 ff ff       	call   c0101aed <ide_read_secs>$/;"	l
c011196a	obj/kernel.asm	/^c011196a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011196d	obj/kernel.asm	/^c011196d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111971	obj/kernel.asm	/^c0111971:	74 3f                	je     c01119b2 <disk0_read_blks_nolock+0x83>$/;"	l
c0111973	obj/kernel.asm	/^c0111973:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111976	obj/kernel.asm	/^c0111976:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c011197a	obj/kernel.asm	/^c011197a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011197d	obj/kernel.asm	/^c011197d:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c0111981	obj/kernel.asm	/^c0111981:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111984	obj/kernel.asm	/^c0111984:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0111988	obj/kernel.asm	/^c0111988:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011198b	obj/kernel.asm	/^c011198b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c011198f	obj/kernel.asm	/^c011198f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111992	obj/kernel.asm	/^c0111992:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111996	obj/kernel.asm	/^c0111996:	c7 44 24 08 d0 a8 11 	movl   $0xc011a8d0,0x8(%esp)$/;"	l
c011199d	obj/kernel.asm	/^c011199d:	c0 $/;"	l
c011199e	obj/kernel.asm	/^c011199e:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
c01119a5	obj/kernel.asm	/^c01119a5:	00 $/;"	l
c01119a6	obj/kernel.asm	/^c01119a6:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c01119ad	obj/kernel.asm	/^c01119ad:	e8 85 f2 fe ff       	call   c0100c37 <__panic>$/;"	l
c01119b2	obj/kernel.asm	/^c01119b2:	c9                   	leave  $/;"	l
c01119b3	obj/kernel.asm	/^c01119b3:	c3                   	ret    $/;"	l
c01119b4	obj/kernel.asm	/^c01119b4 <disk0_write_blks_nolock>:$/;"	l
c01119b4	obj/kernel.asm	/^c01119b4:	55                   	push   %ebp$/;"	l
c01119b5	obj/kernel.asm	/^c01119b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01119b7	obj/kernel.asm	/^c01119b7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01119ba	obj/kernel.asm	/^c01119ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01119bd	obj/kernel.asm	/^c01119bd:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01119c0	obj/kernel.asm	/^c01119c0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01119c3	obj/kernel.asm	/^c01119c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01119c6	obj/kernel.asm	/^c01119c6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01119c9	obj/kernel.asm	/^c01119c9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01119cc	obj/kernel.asm	/^c01119cc:	a1 30 b0 15 c0       	mov    0xc015b030,%eax$/;"	l
c01119d1	obj/kernel.asm	/^c01119d1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01119d4	obj/kernel.asm	/^c01119d4:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01119d8	obj/kernel.asm	/^c01119d8:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01119dc	obj/kernel.asm	/^c01119dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01119df	obj/kernel.asm	/^c01119df:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01119e3	obj/kernel.asm	/^c01119e3:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c01119ea	obj/kernel.asm	/^c01119ea:	e8 40 03 ff ff       	call   c0101d2f <ide_write_secs>$/;"	l
c01119ef	obj/kernel.asm	/^c01119ef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01119f2	obj/kernel.asm	/^c01119f2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01119f6	obj/kernel.asm	/^c01119f6:	74 3f                	je     c0111a37 <disk0_write_blks_nolock+0x83>$/;"	l
c01119f8	obj/kernel.asm	/^c01119f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01119fb	obj/kernel.asm	/^c01119fb:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c01119ff	obj/kernel.asm	/^c01119ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111a02	obj/kernel.asm	/^c0111a02:	89 44 24 18          	mov    %eax,0x18(%esp)$/;"	l
c0111a06	obj/kernel.asm	/^c0111a06:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111a09	obj/kernel.asm	/^c0111a09:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0111a0d	obj/kernel.asm	/^c0111a0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a10	obj/kernel.asm	/^c0111a10:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0111a14	obj/kernel.asm	/^c0111a14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111a17	obj/kernel.asm	/^c0111a17:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111a1b	obj/kernel.asm	/^c0111a1b:	c7 44 24 08 34 a9 11 	movl   $0xc011a934,0x8(%esp)$/;"	l
c0111a22	obj/kernel.asm	/^c0111a22:	c0 $/;"	l
c0111a23	obj/kernel.asm	/^c0111a23:	c7 44 24 04 38 00 00 	movl   $0x38,0x4(%esp)$/;"	l
c0111a2a	obj/kernel.asm	/^c0111a2a:	00 $/;"	l
c0111a2b	obj/kernel.asm	/^c0111a2b:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111a32	obj/kernel.asm	/^c0111a32:	e8 00 f2 fe ff       	call   c0100c37 <__panic>$/;"	l
c0111a37	obj/kernel.asm	/^c0111a37:	c9                   	leave  $/;"	l
c0111a38	obj/kernel.asm	/^c0111a38:	c3                   	ret    $/;"	l
c0111a39	obj/kernel.asm	/^c0111a39 <disk0_io>:$/;"	l
c0111a39	obj/kernel.asm	/^c0111a39:	55                   	push   %ebp$/;"	l
c0111a3a	obj/kernel.asm	/^c0111a3a:	89 e5                	mov    %esp,%ebp$/;"	l
c0111a3c	obj/kernel.asm	/^c0111a3c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0111a3f	obj/kernel.asm	/^c0111a3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111a42	obj/kernel.asm	/^c0111a42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111a45	obj/kernel.asm	/^c0111a45:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111a48	obj/kernel.asm	/^c0111a48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111a4b	obj/kernel.asm	/^c0111a4b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111a4e	obj/kernel.asm	/^c0111a4e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111a51	obj/kernel.asm	/^c0111a51:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111a54	obj/kernel.asm	/^c0111a54:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0111a5a	obj/kernel.asm	/^c0111a5a:	85 c0                	test   %eax,%eax$/;"	l
c0111a5c	obj/kernel.asm	/^c0111a5c:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0111a5f	obj/kernel.asm	/^c0111a5f:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0111a62	obj/kernel.asm	/^c0111a62:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111a65	obj/kernel.asm	/^c0111a65:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a68	obj/kernel.asm	/^c0111a68:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0111a6b	obj/kernel.asm	/^c0111a6b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111a6e	obj/kernel.asm	/^c0111a6e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111a71	obj/kernel.asm	/^c0111a71:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0111a76	obj/kernel.asm	/^c0111a76:	85 c0                	test   %eax,%eax$/;"	l
c0111a78	obj/kernel.asm	/^c0111a78:	75 0c                	jne    c0111a86 <disk0_io+0x4d>$/;"	l
c0111a7a	obj/kernel.asm	/^c0111a7a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a7d	obj/kernel.asm	/^c0111a7d:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0111a82	obj/kernel.asm	/^c0111a82:	85 c0                	test   %eax,%eax$/;"	l
c0111a84	obj/kernel.asm	/^c0111a84:	74 0a                	je     c0111a90 <disk0_io+0x57>$/;"	l
c0111a86	obj/kernel.asm	/^c0111a86:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111a8b	obj/kernel.asm	/^c0111a8b:	e9 7a 01 00 00       	jmp    c0111c0a <disk0_io+0x1d1>$/;"	l
c0111a90	obj/kernel.asm	/^c0111a90:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a93	obj/kernel.asm	/^c0111a93:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111a96	obj/kernel.asm	/^c0111a96:	01 c2                	add    %eax,%edx$/;"	l
c0111a98	obj/kernel.asm	/^c0111a98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111a9b	obj/kernel.asm	/^c0111a9b:	8b 00                	mov    (%eax),%eax$/;"	l
c0111a9d	obj/kernel.asm	/^c0111a9d:	39 c2                	cmp    %eax,%edx$/;"	l
c0111a9f	obj/kernel.asm	/^c0111a9f:	76 0a                	jbe    c0111aab <disk0_io+0x72>$/;"	l
c0111aa1	obj/kernel.asm	/^c0111aa1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111aa6	obj/kernel.asm	/^c0111aa6:	e9 5f 01 00 00       	jmp    c0111c0a <disk0_io+0x1d1>$/;"	l
c0111aab	obj/kernel.asm	/^c0111aab:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111aaf	obj/kernel.asm	/^c0111aaf:	75 0a                	jne    c0111abb <disk0_io+0x82>$/;"	l
c0111ab1	obj/kernel.asm	/^c0111ab1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111ab6	obj/kernel.asm	/^c0111ab6:	e9 4f 01 00 00       	jmp    c0111c0a <disk0_io+0x1d1>$/;"	l
c0111abb	obj/kernel.asm	/^c0111abb:	e8 33 fe ff ff       	call   c01118f3 <lock_disk0>$/;"	l
c0111ac0	obj/kernel.asm	/^c0111ac0:	e9 31 01 00 00       	jmp    c0111bf6 <disk0_io+0x1bd>$/;"	l
c0111ac5	obj/kernel.asm	/^c0111ac5:	c7 45 e8 00 40 00 00 	movl   $0x4000,-0x18(%ebp)$/;"	l
c0111acc	obj/kernel.asm	/^c0111acc:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0111ad0	obj/kernel.asm	/^c0111ad0:	0f 84 89 00 00 00    	je     c0111b5f <disk0_io+0x126>$/;"	l
c0111ad6	obj/kernel.asm	/^c0111ad6:	a1 30 b0 15 c0       	mov    0xc015b030,%eax$/;"	l
c0111adb	obj/kernel.asm	/^c0111adb:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0111ade	obj/kernel.asm	/^c0111ade:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0111ae2	obj/kernel.asm	/^c0111ae2:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0111ae9	obj/kernel.asm	/^c0111ae9:	00 $/;"	l
c0111aea	obj/kernel.asm	/^c0111aea:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0111aed	obj/kernel.asm	/^c0111aed:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0111af1	obj/kernel.asm	/^c0111af1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111af5	obj/kernel.asm	/^c0111af5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111af8	obj/kernel.asm	/^c0111af8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111afb	obj/kernel.asm	/^c0111afb:	e8 0e ac ff ff       	call   c010c70e <iobuf_move>$/;"	l
c0111b00	obj/kernel.asm	/^c0111b00:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111b03	obj/kernel.asm	/^c0111b03:	85 c0                	test   %eax,%eax$/;"	l
c0111b05	obj/kernel.asm	/^c0111b05:	74 14                	je     c0111b1b <disk0_io+0xe2>$/;"	l
c0111b07	obj/kernel.asm	/^c0111b07:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111b0a	obj/kernel.asm	/^c0111b0a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0111b0d	obj/kernel.asm	/^c0111b0d:	77 0c                	ja     c0111b1b <disk0_io+0xe2>$/;"	l
c0111b0f	obj/kernel.asm	/^c0111b0f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111b12	obj/kernel.asm	/^c0111b12:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0111b17	obj/kernel.asm	/^c0111b17:	85 c0                	test   %eax,%eax$/;"	l
c0111b19	obj/kernel.asm	/^c0111b19:	74 24                	je     c0111b3f <disk0_io+0x106>$/;"	l
c0111b1b	obj/kernel.asm	/^c0111b1b:	c7 44 24 0c 80 a9 11 	movl   $0xc011a980,0xc(%esp)$/;"	l
c0111b22	obj/kernel.asm	/^c0111b22:	c0 $/;"	l
c0111b23	obj/kernel.asm	/^c0111b23:	c7 44 24 08 be a9 11 	movl   $0xc011a9be,0x8(%esp)$/;"	l
c0111b2a	obj/kernel.asm	/^c0111b2a:	c0 $/;"	l
c0111b2b	obj/kernel.asm	/^c0111b2b:	c7 44 24 04 57 00 00 	movl   $0x57,0x4(%esp)$/;"	l
c0111b32	obj/kernel.asm	/^c0111b32:	00 $/;"	l
c0111b33	obj/kernel.asm	/^c0111b33:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111b3a	obj/kernel.asm	/^c0111b3a:	e8 f8 f0 fe ff       	call   c0100c37 <__panic>$/;"	l
c0111b3f	obj/kernel.asm	/^c0111b3f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111b42	obj/kernel.asm	/^c0111b42:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0111b45	obj/kernel.asm	/^c0111b45:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111b48	obj/kernel.asm	/^c0111b48:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111b4b	obj/kernel.asm	/^c0111b4b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111b4f	obj/kernel.asm	/^c0111b4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111b52	obj/kernel.asm	/^c0111b52:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111b55	obj/kernel.asm	/^c0111b55:	e8 5a fe ff ff       	call   c01119b4 <disk0_write_blks_nolock>$/;"	l
c0111b5a	obj/kernel.asm	/^c0111b5a:	e9 8b 00 00 00       	jmp    c0111bea <disk0_io+0x1b1>$/;"	l
c0111b5f	obj/kernel.asm	/^c0111b5f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111b62	obj/kernel.asm	/^c0111b62:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0111b65	obj/kernel.asm	/^c0111b65:	76 06                	jbe    c0111b6d <disk0_io+0x134>$/;"	l
c0111b67	obj/kernel.asm	/^c0111b67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111b6a	obj/kernel.asm	/^c0111b6a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111b6d	obj/kernel.asm	/^c0111b6d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111b70	obj/kernel.asm	/^c0111b70:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0111b73	obj/kernel.asm	/^c0111b73:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111b76	obj/kernel.asm	/^c0111b76:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111b79	obj/kernel.asm	/^c0111b79:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111b7d	obj/kernel.asm	/^c0111b7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111b80	obj/kernel.asm	/^c0111b80:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111b83	obj/kernel.asm	/^c0111b83:	e8 a7 fd ff ff       	call   c011192f <disk0_read_blks_nolock>$/;"	l
c0111b88	obj/kernel.asm	/^c0111b88:	a1 30 b0 15 c0       	mov    0xc015b030,%eax$/;"	l
c0111b8d	obj/kernel.asm	/^c0111b8d:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0111b90	obj/kernel.asm	/^c0111b90:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0111b94	obj/kernel.asm	/^c0111b94:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0111b9b	obj/kernel.asm	/^c0111b9b:	00 $/;"	l
c0111b9c	obj/kernel.asm	/^c0111b9c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0111b9f	obj/kernel.asm	/^c0111b9f:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0111ba3	obj/kernel.asm	/^c0111ba3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111ba7	obj/kernel.asm	/^c0111ba7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111baa	obj/kernel.asm	/^c0111baa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111bad	obj/kernel.asm	/^c0111bad:	e8 5c ab ff ff       	call   c010c70e <iobuf_move>$/;"	l
c0111bb2	obj/kernel.asm	/^c0111bb2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111bb5	obj/kernel.asm	/^c0111bb5:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0111bb8	obj/kernel.asm	/^c0111bb8:	75 0c                	jne    c0111bc6 <disk0_io+0x18d>$/;"	l
c0111bba	obj/kernel.asm	/^c0111bba:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111bbd	obj/kernel.asm	/^c0111bbd:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0111bc2	obj/kernel.asm	/^c0111bc2:	85 c0                	test   %eax,%eax$/;"	l
c0111bc4	obj/kernel.asm	/^c0111bc4:	74 24                	je     c0111bea <disk0_io+0x1b1>$/;"	l
c0111bc6	obj/kernel.asm	/^c0111bc6:	c7 44 24 0c d4 a9 11 	movl   $0xc011a9d4,0xc(%esp)$/;"	l
c0111bcd	obj/kernel.asm	/^c0111bcd:	c0 $/;"	l
c0111bce	obj/kernel.asm	/^c0111bce:	c7 44 24 08 be a9 11 	movl   $0xc011a9be,0x8(%esp)$/;"	l
c0111bd5	obj/kernel.asm	/^c0111bd5:	c0 $/;"	l
c0111bd6	obj/kernel.asm	/^c0111bd6:	c7 44 24 04 62 00 00 	movl   $0x62,0x4(%esp)$/;"	l
c0111bdd	obj/kernel.asm	/^c0111bdd:	00 $/;"	l
c0111bde	obj/kernel.asm	/^c0111bde:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111be5	obj/kernel.asm	/^c0111be5:	e8 4d f0 fe ff       	call   c0100c37 <__panic>$/;"	l
c0111bea	obj/kernel.asm	/^c0111bea:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111bed	obj/kernel.asm	/^c0111bed:	29 45 f4             	sub    %eax,-0xc(%ebp)$/;"	l
c0111bf0	obj/kernel.asm	/^c0111bf0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111bf3	obj/kernel.asm	/^c0111bf3:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0111bf6	obj/kernel.asm	/^c0111bf6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111bfa	obj/kernel.asm	/^c0111bfa:	0f 85 c5 fe ff ff    	jne    c0111ac5 <disk0_io+0x8c>$/;"	l
c0111c00	obj/kernel.asm	/^c0111c00:	e8 02 fd ff ff       	call   c0111907 <unlock_disk0>$/;"	l
c0111c05	obj/kernel.asm	/^c0111c05:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111c0a	obj/kernel.asm	/^c0111c0a:	c9                   	leave  $/;"	l
c0111c0b	obj/kernel.asm	/^c0111c0b:	c3                   	ret    $/;"	l
c0111c0c	obj/kernel.asm	/^c0111c0c <disk0_ioctl>:$/;"	l
c0111c0c	obj/kernel.asm	/^c0111c0c:	55                   	push   %ebp$/;"	l
c0111c0d	obj/kernel.asm	/^c0111c0d:	89 e5                	mov    %esp,%ebp$/;"	l
c0111c0f	obj/kernel.asm	/^c0111c0f:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0111c14	obj/kernel.asm	/^c0111c14:	5d                   	pop    %ebp$/;"	l
c0111c15	obj/kernel.asm	/^c0111c15:	c3                   	ret    $/;"	l
c0111c16	obj/kernel.asm	/^c0111c16 <disk0_device_init>:$/;"	l
c0111c16	obj/kernel.asm	/^c0111c16:	55                   	push   %ebp$/;"	l
c0111c17	obj/kernel.asm	/^c0111c17:	89 e5                	mov    %esp,%ebp$/;"	l
c0111c19	obj/kernel.asm	/^c0111c19:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111c1c	obj/kernel.asm	/^c0111c1c:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0111c23	obj/kernel.asm	/^c0111c23:	e8 47 fe fe ff       	call   c0101a6f <ide_device_valid>$/;"	l
c0111c28	obj/kernel.asm	/^c0111c28:	85 c0                	test   %eax,%eax$/;"	l
c0111c2a	obj/kernel.asm	/^c0111c2a:	75 1c                	jne    c0111c48 <disk0_device_init+0x32>$/;"	l
c0111c2c	obj/kernel.asm	/^c0111c2c:	c7 44 24 08 04 aa 11 	movl   $0xc011aa04,0x8(%esp)$/;"	l
c0111c33	obj/kernel.asm	/^c0111c33:	c0 $/;"	l
c0111c34	obj/kernel.asm	/^c0111c34:	c7 44 24 04 73 00 00 	movl   $0x73,0x4(%esp)$/;"	l
c0111c3b	obj/kernel.asm	/^c0111c3b:	00 $/;"	l
c0111c3c	obj/kernel.asm	/^c0111c3c:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111c43	obj/kernel.asm	/^c0111c43:	e8 ef ef fe ff       	call   c0100c37 <__panic>$/;"	l
c0111c48	obj/kernel.asm	/^c0111c48:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0111c4f	obj/kernel.asm	/^c0111c4f:	e8 5a fe fe ff       	call   c0101aae <ide_device_size>$/;"	l
c0111c54	obj/kernel.asm	/^c0111c54:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0111c57	obj/kernel.asm	/^c0111c57:	89 c2                	mov    %eax,%edx$/;"	l
c0111c59	obj/kernel.asm	/^c0111c59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c5c	obj/kernel.asm	/^c0111c5c:	89 10                	mov    %edx,(%eax)$/;"	l
c0111c5e	obj/kernel.asm	/^c0111c5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c61	obj/kernel.asm	/^c0111c61:	c7 40 04 00 10 00 00 	movl   $0x1000,0x4(%eax)$/;"	l
c0111c68	obj/kernel.asm	/^c0111c68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c6b	obj/kernel.asm	/^c0111c6b:	c7 40 08 1b 19 11 c0 	movl   $0xc011191b,0x8(%eax)$/;"	l
c0111c72	obj/kernel.asm	/^c0111c72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c75	obj/kernel.asm	/^c0111c75:	c7 40 0c 25 19 11 c0 	movl   $0xc0111925,0xc(%eax)$/;"	l
c0111c7c	obj/kernel.asm	/^c0111c7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c7f	obj/kernel.asm	/^c0111c7f:	c7 40 10 39 1a 11 c0 	movl   $0xc0111a39,0x10(%eax)$/;"	l
c0111c86	obj/kernel.asm	/^c0111c86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111c89	obj/kernel.asm	/^c0111c89:	c7 40 14 0c 1c 11 c0 	movl   $0xc0111c0c,0x14(%eax)$/;"	l
c0111c90	obj/kernel.asm	/^c0111c90:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0111c97	obj/kernel.asm	/^c0111c97:	00 $/;"	l
c0111c98	obj/kernel.asm	/^c0111c98:	c7 04 24 34 b0 15 c0 	movl   $0xc015b034,(%esp)$/;"	l
c0111c9f	obj/kernel.asm	/^c0111c9f:	e8 52 8f ff ff       	call   c010abf6 <sem_init>$/;"	l
c0111ca4	obj/kernel.asm	/^c0111ca4:	c7 04 24 00 40 00 00 	movl   $0x4000,(%esp)$/;"	l
c0111cab	obj/kernel.asm	/^c0111cab:	e8 38 65 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0111cb0	obj/kernel.asm	/^c0111cb0:	a3 30 b0 15 c0       	mov    %eax,0xc015b030$/;"	l
c0111cb5	obj/kernel.asm	/^c0111cb5:	a1 30 b0 15 c0       	mov    0xc015b030,%eax$/;"	l
c0111cba	obj/kernel.asm	/^c0111cba:	85 c0                	test   %eax,%eax$/;"	l
c0111cbc	obj/kernel.asm	/^c0111cbc:	75 1c                	jne    c0111cda <disk0_device_init+0xc4>$/;"	l
c0111cbe	obj/kernel.asm	/^c0111cbe:	c7 44 24 08 23 aa 11 	movl   $0xc011aa23,0x8(%esp)$/;"	l
c0111cc5	obj/kernel.asm	/^c0111cc5:	c0 $/;"	l
c0111cc6	obj/kernel.asm	/^c0111cc6:	c7 44 24 04 7f 00 00 	movl   $0x7f,0x4(%esp)$/;"	l
c0111ccd	obj/kernel.asm	/^c0111ccd:	00 $/;"	l
c0111cce	obj/kernel.asm	/^c0111cce:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111cd5	obj/kernel.asm	/^c0111cd5:	e8 5d ef fe ff       	call   c0100c37 <__panic>$/;"	l
c0111cda	obj/kernel.asm	/^c0111cda:	c9                   	leave  $/;"	l
c0111cdb	obj/kernel.asm	/^c0111cdb:	c3                   	ret    $/;"	l
c0111cdc	obj/kernel.asm	/^c0111cdc <dev_init_disk0>:$/;"	l
c0111cdc	obj/kernel.asm	/^c0111cdc:	55                   	push   %ebp$/;"	l
c0111cdd	obj/kernel.asm	/^c0111cdd:	89 e5                	mov    %esp,%ebp$/;"	l
c0111cdf	obj/kernel.asm	/^c0111cdf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111ce2	obj/kernel.asm	/^c0111ce2:	e8 8f 06 00 00       	call   c0112376 <dev_create_inode>$/;"	l
c0111ce7	obj/kernel.asm	/^c0111ce7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111cea	obj/kernel.asm	/^c0111cea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111cee	obj/kernel.asm	/^c0111cee:	75 1c                	jne    c0111d0c <dev_init_disk0+0x30>$/;"	l
c0111cf0	obj/kernel.asm	/^c0111cf0:	c7 44 24 08 3f aa 11 	movl   $0xc011aa3f,0x8(%esp)$/;"	l
c0111cf7	obj/kernel.asm	/^c0111cf7:	c0 $/;"	l
c0111cf8	obj/kernel.asm	/^c0111cf8:	c7 44 24 04 87 00 00 	movl   $0x87,0x4(%esp)$/;"	l
c0111cff	obj/kernel.asm	/^c0111cff:	00 $/;"	l
c0111d00	obj/kernel.asm	/^c0111d00:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111d07	obj/kernel.asm	/^c0111d07:	e8 2b ef fe ff       	call   c0100c37 <__panic>$/;"	l
c0111d0c	obj/kernel.asm	/^c0111d0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111d0f	obj/kernel.asm	/^c0111d0f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111d12	obj/kernel.asm	/^c0111d12:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111d16	obj/kernel.asm	/^c0111d16:	74 0d                	je     c0111d25 <dev_init_disk0+0x49>$/;"	l
c0111d18	obj/kernel.asm	/^c0111d18:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111d1b	obj/kernel.asm	/^c0111d1b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111d1e	obj/kernel.asm	/^c0111d1e:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111d23	obj/kernel.asm	/^c0111d23:	74 24                	je     c0111d49 <dev_init_disk0+0x6d>$/;"	l
c0111d25	obj/kernel.asm	/^c0111d25:	c7 44 24 0c 58 aa 11 	movl   $0xc011aa58,0xc(%esp)$/;"	l
c0111d2c	obj/kernel.asm	/^c0111d2c:	c0 $/;"	l
c0111d2d	obj/kernel.asm	/^c0111d2d:	c7 44 24 08 be a9 11 	movl   $0xc011a9be,0x8(%esp)$/;"	l
c0111d34	obj/kernel.asm	/^c0111d34:	c0 $/;"	l
c0111d35	obj/kernel.asm	/^c0111d35:	c7 44 24 04 89 00 00 	movl   $0x89,0x4(%esp)$/;"	l
c0111d3c	obj/kernel.asm	/^c0111d3c:	00 $/;"	l
c0111d3d	obj/kernel.asm	/^c0111d3d:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111d44	obj/kernel.asm	/^c0111d44:	e8 ee ee fe ff       	call   c0100c37 <__panic>$/;"	l
c0111d49	obj/kernel.asm	/^c0111d49:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111d4c	obj/kernel.asm	/^c0111d4c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111d4f	obj/kernel.asm	/^c0111d4f:	e8 c2 fe ff ff       	call   c0111c16 <disk0_device_init>$/;"	l
c0111d54	obj/kernel.asm	/^c0111d54:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0111d5b	obj/kernel.asm	/^c0111d5b:	00 $/;"	l
c0111d5c	obj/kernel.asm	/^c0111d5c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111d5f	obj/kernel.asm	/^c0111d5f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111d63	obj/kernel.asm	/^c0111d63:	c7 04 24 8b aa 11 c0 	movl   $0xc011aa8b,(%esp)$/;"	l
c0111d6a	obj/kernel.asm	/^c0111d6a:	e8 91 e5 ff ff       	call   c0110300 <vfs_add_dev>$/;"	l
c0111d6f	obj/kernel.asm	/^c0111d6f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111d72	obj/kernel.asm	/^c0111d72:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111d76	obj/kernel.asm	/^c0111d76:	74 23                	je     c0111d9b <dev_init_disk0+0xbf>$/;"	l
c0111d78	obj/kernel.asm	/^c0111d78:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111d7b	obj/kernel.asm	/^c0111d7b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111d7f	obj/kernel.asm	/^c0111d7f:	c7 44 24 08 91 aa 11 	movl   $0xc011aa91,0x8(%esp)$/;"	l
c0111d86	obj/kernel.asm	/^c0111d86:	c0 $/;"	l
c0111d87	obj/kernel.asm	/^c0111d87:	c7 44 24 04 8d 00 00 	movl   $0x8d,0x4(%esp)$/;"	l
c0111d8e	obj/kernel.asm	/^c0111d8e:	00 $/;"	l
c0111d8f	obj/kernel.asm	/^c0111d8f:	c7 04 24 18 a9 11 c0 	movl   $0xc011a918,(%esp)$/;"	l
c0111d96	obj/kernel.asm	/^c0111d96:	e8 9c ee fe ff       	call   c0100c37 <__panic>$/;"	l
c0111d9b	obj/kernel.asm	/^c0111d9b:	c9                   	leave  $/;"	l
c0111d9c	obj/kernel.asm	/^c0111d9c:	c3                   	ret    $/;"	l
c0111d9d	obj/kernel.asm	/^c0111d9d <stdout_open>:$/;"	l
c0111d9d	obj/kernel.asm	/^c0111d9d:	55                   	push   %ebp$/;"	l
c0111d9e	obj/kernel.asm	/^c0111d9e:	89 e5                	mov    %esp,%ebp$/;"	l
c0111da0	obj/kernel.asm	/^c0111da0:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0111da4	obj/kernel.asm	/^c0111da4:	74 07                	je     c0111dad <stdout_open+0x10>$/;"	l
c0111da6	obj/kernel.asm	/^c0111da6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111dab	obj/kernel.asm	/^c0111dab:	eb 05                	jmp    c0111db2 <stdout_open+0x15>$/;"	l
c0111dad	obj/kernel.asm	/^c0111dad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111db2	obj/kernel.asm	/^c0111db2:	5d                   	pop    %ebp$/;"	l
c0111db3	obj/kernel.asm	/^c0111db3:	c3                   	ret    $/;"	l
c0111db4	obj/kernel.asm	/^c0111db4 <stdout_close>:$/;"	l
c0111db4	obj/kernel.asm	/^c0111db4:	55                   	push   %ebp$/;"	l
c0111db5	obj/kernel.asm	/^c0111db5:	89 e5                	mov    %esp,%ebp$/;"	l
c0111db7	obj/kernel.asm	/^c0111db7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111dbc	obj/kernel.asm	/^c0111dbc:	5d                   	pop    %ebp$/;"	l
c0111dbd	obj/kernel.asm	/^c0111dbd:	c3                   	ret    $/;"	l
c0111dbe	obj/kernel.asm	/^c0111dbe <stdout_io>:$/;"	l
c0111dbe	obj/kernel.asm	/^c0111dbe:	55                   	push   %ebp$/;"	l
c0111dbf	obj/kernel.asm	/^c0111dbf:	89 e5                	mov    %esp,%ebp$/;"	l
c0111dc1	obj/kernel.asm	/^c0111dc1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111dc4	obj/kernel.asm	/^c0111dc4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0111dc8	obj/kernel.asm	/^c0111dc8:	74 41                	je     c0111e0b <stdout_io+0x4d>$/;"	l
c0111dca	obj/kernel.asm	/^c0111dca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111dcd	obj/kernel.asm	/^c0111dcd:	8b 00                	mov    (%eax),%eax$/;"	l
c0111dcf	obj/kernel.asm	/^c0111dcf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111dd2	obj/kernel.asm	/^c0111dd2:	eb 26                	jmp    c0111dfa <stdout_io+0x3c>$/;"	l
c0111dd4	obj/kernel.asm	/^c0111dd4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111dd7	obj/kernel.asm	/^c0111dd7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0111dda	obj/kernel.asm	/^c0111dda:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0111ddd	obj/kernel.asm	/^c0111ddd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0111de0	obj/kernel.asm	/^c0111de0:	0f be c0             	movsbl %al,%eax$/;"	l
c0111de3	obj/kernel.asm	/^c0111de3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111de6	obj/kernel.asm	/^c0111de6:	e8 1b ed fe ff       	call   c0100b06 <cputchar>$/;"	l
c0111deb	obj/kernel.asm	/^c0111deb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111dee	obj/kernel.asm	/^c0111dee:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111df1	obj/kernel.asm	/^c0111df1:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0111df4	obj/kernel.asm	/^c0111df4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111df7	obj/kernel.asm	/^c0111df7:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0111dfa	obj/kernel.asm	/^c0111dfa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111dfd	obj/kernel.asm	/^c0111dfd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111e00	obj/kernel.asm	/^c0111e00:	85 c0                	test   %eax,%eax$/;"	l
c0111e02	obj/kernel.asm	/^c0111e02:	75 d0                	jne    c0111dd4 <stdout_io+0x16>$/;"	l
c0111e04	obj/kernel.asm	/^c0111e04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111e09	obj/kernel.asm	/^c0111e09:	eb 05                	jmp    c0111e10 <stdout_io+0x52>$/;"	l
c0111e0b	obj/kernel.asm	/^c0111e0b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111e10	obj/kernel.asm	/^c0111e10:	c9                   	leave  $/;"	l
c0111e11	obj/kernel.asm	/^c0111e11:	c3                   	ret    $/;"	l
c0111e12	obj/kernel.asm	/^c0111e12 <stdout_ioctl>:$/;"	l
c0111e12	obj/kernel.asm	/^c0111e12:	55                   	push   %ebp$/;"	l
c0111e13	obj/kernel.asm	/^c0111e13:	89 e5                	mov    %esp,%ebp$/;"	l
c0111e15	obj/kernel.asm	/^c0111e15:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111e1a	obj/kernel.asm	/^c0111e1a:	5d                   	pop    %ebp$/;"	l
c0111e1b	obj/kernel.asm	/^c0111e1b:	c3                   	ret    $/;"	l
c0111e1c	obj/kernel.asm	/^c0111e1c <stdout_device_init>:$/;"	l
c0111e1c	obj/kernel.asm	/^c0111e1c:	55                   	push   %ebp$/;"	l
c0111e1d	obj/kernel.asm	/^c0111e1d:	89 e5                	mov    %esp,%ebp$/;"	l
c0111e1f	obj/kernel.asm	/^c0111e1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e22	obj/kernel.asm	/^c0111e22:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0111e28	obj/kernel.asm	/^c0111e28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e2b	obj/kernel.asm	/^c0111e2b:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c0111e32	obj/kernel.asm	/^c0111e32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e35	obj/kernel.asm	/^c0111e35:	c7 40 08 9d 1d 11 c0 	movl   $0xc0111d9d,0x8(%eax)$/;"	l
c0111e3c	obj/kernel.asm	/^c0111e3c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e3f	obj/kernel.asm	/^c0111e3f:	c7 40 0c b4 1d 11 c0 	movl   $0xc0111db4,0xc(%eax)$/;"	l
c0111e46	obj/kernel.asm	/^c0111e46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e49	obj/kernel.asm	/^c0111e49:	c7 40 10 be 1d 11 c0 	movl   $0xc0111dbe,0x10(%eax)$/;"	l
c0111e50	obj/kernel.asm	/^c0111e50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e53	obj/kernel.asm	/^c0111e53:	c7 40 14 12 1e 11 c0 	movl   $0xc0111e12,0x14(%eax)$/;"	l
c0111e5a	obj/kernel.asm	/^c0111e5a:	5d                   	pop    %ebp$/;"	l
c0111e5b	obj/kernel.asm	/^c0111e5b:	c3                   	ret    $/;"	l
c0111e5c	obj/kernel.asm	/^c0111e5c <dev_init_stdout>:$/;"	l
c0111e5c	obj/kernel.asm	/^c0111e5c:	55                   	push   %ebp$/;"	l
c0111e5d	obj/kernel.asm	/^c0111e5d:	89 e5                	mov    %esp,%ebp$/;"	l
c0111e5f	obj/kernel.asm	/^c0111e5f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111e62	obj/kernel.asm	/^c0111e62:	e8 0f 05 00 00       	call   c0112376 <dev_create_inode>$/;"	l
c0111e67	obj/kernel.asm	/^c0111e67:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111e6a	obj/kernel.asm	/^c0111e6a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111e6e	obj/kernel.asm	/^c0111e6e:	75 1c                	jne    c0111e8c <dev_init_stdout+0x30>$/;"	l
c0111e70	obj/kernel.asm	/^c0111e70:	c7 44 24 08 ac aa 11 	movl   $0xc011aaac,0x8(%esp)$/;"	l
c0111e77	obj/kernel.asm	/^c0111e77:	c0 $/;"	l
c0111e78	obj/kernel.asm	/^c0111e78:	c7 44 24 04 37 00 00 	movl   $0x37,0x4(%esp)$/;"	l
c0111e7f	obj/kernel.asm	/^c0111e7f:	00 $/;"	l
c0111e80	obj/kernel.asm	/^c0111e80:	c7 04 24 c6 aa 11 c0 	movl   $0xc011aac6,(%esp)$/;"	l
c0111e87	obj/kernel.asm	/^c0111e87:	e8 ab ed fe ff       	call   c0100c37 <__panic>$/;"	l
c0111e8c	obj/kernel.asm	/^c0111e8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111e8f	obj/kernel.asm	/^c0111e8f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111e92	obj/kernel.asm	/^c0111e92:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111e96	obj/kernel.asm	/^c0111e96:	74 0d                	je     c0111ea5 <dev_init_stdout+0x49>$/;"	l
c0111e98	obj/kernel.asm	/^c0111e98:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111e9b	obj/kernel.asm	/^c0111e9b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111e9e	obj/kernel.asm	/^c0111e9e:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111ea3	obj/kernel.asm	/^c0111ea3:	74 24                	je     c0111ec9 <dev_init_stdout+0x6d>$/;"	l
c0111ea5	obj/kernel.asm	/^c0111ea5:	c7 44 24 0c e0 aa 11 	movl   $0xc011aae0,0xc(%esp)$/;"	l
c0111eac	obj/kernel.asm	/^c0111eac:	c0 $/;"	l
c0111ead	obj/kernel.asm	/^c0111ead:	c7 44 24 08 13 ab 11 	movl   $0xc011ab13,0x8(%esp)$/;"	l
c0111eb4	obj/kernel.asm	/^c0111eb4:	c0 $/;"	l
c0111eb5	obj/kernel.asm	/^c0111eb5:	c7 44 24 04 39 00 00 	movl   $0x39,0x4(%esp)$/;"	l
c0111ebc	obj/kernel.asm	/^c0111ebc:	00 $/;"	l
c0111ebd	obj/kernel.asm	/^c0111ebd:	c7 04 24 c6 aa 11 c0 	movl   $0xc011aac6,(%esp)$/;"	l
c0111ec4	obj/kernel.asm	/^c0111ec4:	e8 6e ed fe ff       	call   c0100c37 <__panic>$/;"	l
c0111ec9	obj/kernel.asm	/^c0111ec9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111ecc	obj/kernel.asm	/^c0111ecc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0111ecf	obj/kernel.asm	/^c0111ecf:	e8 48 ff ff ff       	call   c0111e1c <stdout_device_init>$/;"	l
c0111ed4	obj/kernel.asm	/^c0111ed4:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0111edb	obj/kernel.asm	/^c0111edb:	00 $/;"	l
c0111edc	obj/kernel.asm	/^c0111edc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111edf	obj/kernel.asm	/^c0111edf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0111ee3	obj/kernel.asm	/^c0111ee3:	c7 04 24 28 ab 11 c0 	movl   $0xc011ab28,(%esp)$/;"	l
c0111eea	obj/kernel.asm	/^c0111eea:	e8 11 e4 ff ff       	call   c0110300 <vfs_add_dev>$/;"	l
c0111eef	obj/kernel.asm	/^c0111eef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111ef2	obj/kernel.asm	/^c0111ef2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111ef6	obj/kernel.asm	/^c0111ef6:	74 23                	je     c0111f1b <dev_init_stdout+0xbf>$/;"	l
c0111ef8	obj/kernel.asm	/^c0111ef8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111efb	obj/kernel.asm	/^c0111efb:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0111eff	obj/kernel.asm	/^c0111eff:	c7 44 24 08 2f ab 11 	movl   $0xc011ab2f,0x8(%esp)$/;"	l
c0111f06	obj/kernel.asm	/^c0111f06:	c0 $/;"	l
c0111f07	obj/kernel.asm	/^c0111f07:	c7 44 24 04 3d 00 00 	movl   $0x3d,0x4(%esp)$/;"	l
c0111f0e	obj/kernel.asm	/^c0111f0e:	00 $/;"	l
c0111f0f	obj/kernel.asm	/^c0111f0f:	c7 04 24 c6 aa 11 c0 	movl   $0xc011aac6,(%esp)$/;"	l
c0111f16	obj/kernel.asm	/^c0111f16:	e8 1c ed fe ff       	call   c0100c37 <__panic>$/;"	l
c0111f1b	obj/kernel.asm	/^c0111f1b:	c9                   	leave  $/;"	l
c0111f1c	obj/kernel.asm	/^c0111f1c:	c3                   	ret    $/;"	l
c0111f1d	obj/kernel.asm	/^c0111f1d <dev_open>:$/;"	l
c0111f1d	obj/kernel.asm	/^c0111f1d:	55                   	push   %ebp$/;"	l
c0111f1e	obj/kernel.asm	/^c0111f1e:	89 e5                	mov    %esp,%ebp$/;"	l
c0111f20	obj/kernel.asm	/^c0111f20:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111f23	obj/kernel.asm	/^c0111f23:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111f26	obj/kernel.asm	/^c0111f26:	83 e0 3c             	and    $0x3c,%eax$/;"	l
c0111f29	obj/kernel.asm	/^c0111f29:	85 c0                	test   %eax,%eax$/;"	l
c0111f2b	obj/kernel.asm	/^c0111f2b:	74 07                	je     c0111f34 <dev_open+0x17>$/;"	l
c0111f2d	obj/kernel.asm	/^c0111f2d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111f32	obj/kernel.asm	/^c0111f32:	eb 58                	jmp    c0111f8c <dev_open+0x6f>$/;"	l
c0111f34	obj/kernel.asm	/^c0111f34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111f37	obj/kernel.asm	/^c0111f37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111f3a	obj/kernel.asm	/^c0111f3a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111f3e	obj/kernel.asm	/^c0111f3e:	74 0d                	je     c0111f4d <dev_open+0x30>$/;"	l
c0111f40	obj/kernel.asm	/^c0111f40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111f43	obj/kernel.asm	/^c0111f43:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111f46	obj/kernel.asm	/^c0111f46:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111f4b	obj/kernel.asm	/^c0111f4b:	74 24                	je     c0111f71 <dev_open+0x54>$/;"	l
c0111f4d	obj/kernel.asm	/^c0111f4d:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c0111f54	obj/kernel.asm	/^c0111f54:	c0 $/;"	l
c0111f55	obj/kernel.asm	/^c0111f55:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c0111f5c	obj/kernel.asm	/^c0111f5c:	c0 $/;"	l
c0111f5d	obj/kernel.asm	/^c0111f5d:	c7 44 24 04 11 00 00 	movl   $0x11,0x4(%esp)$/;"	l
c0111f64	obj/kernel.asm	/^c0111f64:	00 $/;"	l
c0111f65	obj/kernel.asm	/^c0111f65:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c0111f6c	obj/kernel.asm	/^c0111f6c:	e8 c6 ec fe ff       	call   c0100c37 <__panic>$/;"	l
c0111f71	obj/kernel.asm	/^c0111f71:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111f74	obj/kernel.asm	/^c0111f74:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111f77	obj/kernel.asm	/^c0111f77:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111f7a	obj/kernel.asm	/^c0111f7a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111f7d	obj/kernel.asm	/^c0111f7d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0111f80	obj/kernel.asm	/^c0111f80:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0111f84	obj/kernel.asm	/^c0111f84:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111f87	obj/kernel.asm	/^c0111f87:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111f8a	obj/kernel.asm	/^c0111f8a:	ff d0                	call   *%eax$/;"	l
c0111f8c	obj/kernel.asm	/^c0111f8c:	c9                   	leave  $/;"	l
c0111f8d	obj/kernel.asm	/^c0111f8d:	c3                   	ret    $/;"	l
c0111f8e	obj/kernel.asm	/^c0111f8e <dev_close>:$/;"	l
c0111f8e	obj/kernel.asm	/^c0111f8e:	55                   	push   %ebp$/;"	l
c0111f8f	obj/kernel.asm	/^c0111f8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0111f91	obj/kernel.asm	/^c0111f91:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111f94	obj/kernel.asm	/^c0111f94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111f97	obj/kernel.asm	/^c0111f97:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111f9a	obj/kernel.asm	/^c0111f9a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111f9e	obj/kernel.asm	/^c0111f9e:	74 0d                	je     c0111fad <dev_close+0x1f>$/;"	l
c0111fa0	obj/kernel.asm	/^c0111fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111fa3	obj/kernel.asm	/^c0111fa3:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111fa6	obj/kernel.asm	/^c0111fa6:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0111fab	obj/kernel.asm	/^c0111fab:	74 24                	je     c0111fd1 <dev_close+0x43>$/;"	l
c0111fad	obj/kernel.asm	/^c0111fad:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c0111fb4	obj/kernel.asm	/^c0111fb4:	c0 $/;"	l
c0111fb5	obj/kernel.asm	/^c0111fb5:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c0111fbc	obj/kernel.asm	/^c0111fbc:	c0 $/;"	l
c0111fbd	obj/kernel.asm	/^c0111fbd:	c7 44 24 04 1a 00 00 	movl   $0x1a,0x4(%esp)$/;"	l
c0111fc4	obj/kernel.asm	/^c0111fc4:	00 $/;"	l
c0111fc5	obj/kernel.asm	/^c0111fc5:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c0111fcc	obj/kernel.asm	/^c0111fcc:	e8 66 ec fe ff       	call   c0100c37 <__panic>$/;"	l
c0111fd1	obj/kernel.asm	/^c0111fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111fd4	obj/kernel.asm	/^c0111fd4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111fd7	obj/kernel.asm	/^c0111fd7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111fda	obj/kernel.asm	/^c0111fda:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111fdd	obj/kernel.asm	/^c0111fdd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111fe0	obj/kernel.asm	/^c0111fe0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0111fe3	obj/kernel.asm	/^c0111fe3:	ff d0                	call   *%eax$/;"	l
c0111fe5	obj/kernel.asm	/^c0111fe5:	c9                   	leave  $/;"	l
c0111fe6	obj/kernel.asm	/^c0111fe6:	c3                   	ret    $/;"	l
c0111fe7	obj/kernel.asm	/^c0111fe7 <dev_read>:$/;"	l
c0111fe7	obj/kernel.asm	/^c0111fe7:	55                   	push   %ebp$/;"	l
c0111fe8	obj/kernel.asm	/^c0111fe8:	89 e5                	mov    %esp,%ebp$/;"	l
c0111fea	obj/kernel.asm	/^c0111fea:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111fed	obj/kernel.asm	/^c0111fed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111ff0	obj/kernel.asm	/^c0111ff0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111ff3	obj/kernel.asm	/^c0111ff3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111ff7	obj/kernel.asm	/^c0111ff7:	74 0d                	je     c0112006 <dev_read+0x1f>$/;"	l
c0111ff9	obj/kernel.asm	/^c0111ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111ffc	obj/kernel.asm	/^c0111ffc:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111fff	obj/kernel.asm	/^c0111fff:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0112004	obj/kernel.asm	/^c0112004:	74 24                	je     c011202a <dev_read+0x43>$/;"	l
c0112006	obj/kernel.asm	/^c0112006:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c011200d	obj/kernel.asm	/^c011200d:	c0 $/;"	l
c011200e	obj/kernel.asm	/^c011200e:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c0112015	obj/kernel.asm	/^c0112015:	c0 $/;"	l
c0112016	obj/kernel.asm	/^c0112016:	c7 44 24 04 23 00 00 	movl   $0x23,0x4(%esp)$/;"	l
c011201d	obj/kernel.asm	/^c011201d:	00 $/;"	l
c011201e	obj/kernel.asm	/^c011201e:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c0112025	obj/kernel.asm	/^c0112025:	e8 0d ec fe ff       	call   c0100c37 <__panic>$/;"	l
c011202a	obj/kernel.asm	/^c011202a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011202d	obj/kernel.asm	/^c011202d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112030	obj/kernel.asm	/^c0112030:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112033	obj/kernel.asm	/^c0112033:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0112036	obj/kernel.asm	/^c0112036:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c011203d	obj/kernel.asm	/^c011203d:	00 $/;"	l
c011203e	obj/kernel.asm	/^c011203e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112041	obj/kernel.asm	/^c0112041:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112045	obj/kernel.asm	/^c0112045:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112048	obj/kernel.asm	/^c0112048:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011204b	obj/kernel.asm	/^c011204b:	ff d0                	call   *%eax$/;"	l
c011204d	obj/kernel.asm	/^c011204d:	c9                   	leave  $/;"	l
c011204e	obj/kernel.asm	/^c011204e:	c3                   	ret    $/;"	l
c011204f	obj/kernel.asm	/^c011204f <dev_write>:$/;"	l
c011204f	obj/kernel.asm	/^c011204f:	55                   	push   %ebp$/;"	l
c0112050	obj/kernel.asm	/^c0112050:	89 e5                	mov    %esp,%ebp$/;"	l
c0112052	obj/kernel.asm	/^c0112052:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112055	obj/kernel.asm	/^c0112055:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112058	obj/kernel.asm	/^c0112058:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011205b	obj/kernel.asm	/^c011205b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011205f	obj/kernel.asm	/^c011205f:	74 0d                	je     c011206e <dev_write+0x1f>$/;"	l
c0112061	obj/kernel.asm	/^c0112061:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112064	obj/kernel.asm	/^c0112064:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112067	obj/kernel.asm	/^c0112067:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011206c	obj/kernel.asm	/^c011206c:	74 24                	je     c0112092 <dev_write+0x43>$/;"	l
c011206e	obj/kernel.asm	/^c011206e:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c0112075	obj/kernel.asm	/^c0112075:	c0 $/;"	l
c0112076	obj/kernel.asm	/^c0112076:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c011207d	obj/kernel.asm	/^c011207d:	c0 $/;"	l
c011207e	obj/kernel.asm	/^c011207e:	c7 44 24 04 2c 00 00 	movl   $0x2c,0x4(%esp)$/;"	l
c0112085	obj/kernel.asm	/^c0112085:	00 $/;"	l
c0112086	obj/kernel.asm	/^c0112086:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c011208d	obj/kernel.asm	/^c011208d:	e8 a5 eb fe ff       	call   c0100c37 <__panic>$/;"	l
c0112092	obj/kernel.asm	/^c0112092:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112095	obj/kernel.asm	/^c0112095:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112098	obj/kernel.asm	/^c0112098:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011209b	obj/kernel.asm	/^c011209b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011209e	obj/kernel.asm	/^c011209e:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01120a5	obj/kernel.asm	/^c01120a5:	00 $/;"	l
c01120a6	obj/kernel.asm	/^c01120a6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01120a9	obj/kernel.asm	/^c01120a9:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01120ad	obj/kernel.asm	/^c01120ad:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01120b0	obj/kernel.asm	/^c01120b0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01120b3	obj/kernel.asm	/^c01120b3:	ff d0                	call   *%eax$/;"	l
c01120b5	obj/kernel.asm	/^c01120b5:	c9                   	leave  $/;"	l
c01120b6	obj/kernel.asm	/^c01120b6:	c3                   	ret    $/;"	l
c01120b7	obj/kernel.asm	/^c01120b7 <dev_ioctl>:$/;"	l
c01120b7	obj/kernel.asm	/^c01120b7:	55                   	push   %ebp$/;"	l
c01120b8	obj/kernel.asm	/^c01120b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01120ba	obj/kernel.asm	/^c01120ba:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01120bd	obj/kernel.asm	/^c01120bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01120c0	obj/kernel.asm	/^c01120c0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01120c3	obj/kernel.asm	/^c01120c3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01120c7	obj/kernel.asm	/^c01120c7:	74 0d                	je     c01120d6 <dev_ioctl+0x1f>$/;"	l
c01120c9	obj/kernel.asm	/^c01120c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01120cc	obj/kernel.asm	/^c01120cc:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01120cf	obj/kernel.asm	/^c01120cf:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01120d4	obj/kernel.asm	/^c01120d4:	74 24                	je     c01120fa <dev_ioctl+0x43>$/;"	l
c01120d6	obj/kernel.asm	/^c01120d6:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c01120dd	obj/kernel.asm	/^c01120dd:	c0 $/;"	l
c01120de	obj/kernel.asm	/^c01120de:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c01120e5	obj/kernel.asm	/^c01120e5:	c0 $/;"	l
c01120e6	obj/kernel.asm	/^c01120e6:	c7 44 24 04 35 00 00 	movl   $0x35,0x4(%esp)$/;"	l
c01120ed	obj/kernel.asm	/^c01120ed:	00 $/;"	l
c01120ee	obj/kernel.asm	/^c01120ee:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c01120f5	obj/kernel.asm	/^c01120f5:	e8 3d eb fe ff       	call   c0100c37 <__panic>$/;"	l
c01120fa	obj/kernel.asm	/^c01120fa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01120fd	obj/kernel.asm	/^c01120fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112100	obj/kernel.asm	/^c0112100:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112103	obj/kernel.asm	/^c0112103:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0112106	obj/kernel.asm	/^c0112106:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112109	obj/kernel.asm	/^c0112109:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011210d	obj/kernel.asm	/^c011210d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112110	obj/kernel.asm	/^c0112110:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112114	obj/kernel.asm	/^c0112114:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112117	obj/kernel.asm	/^c0112117:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011211a	obj/kernel.asm	/^c011211a:	ff d0                	call   *%eax$/;"	l
c011211c	obj/kernel.asm	/^c011211c:	c9                   	leave  $/;"	l
c011211d	obj/kernel.asm	/^c011211d:	c3                   	ret    $/;"	l
c011211e	obj/kernel.asm	/^c011211e <dev_fstat>:$/;"	l
c011211e	obj/kernel.asm	/^c011211e:	55                   	push   %ebp$/;"	l
c011211f	obj/kernel.asm	/^c011211f:	89 e5                	mov    %esp,%ebp$/;"	l
c0112121	obj/kernel.asm	/^c0112121:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112124	obj/kernel.asm	/^c0112124:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c011212b	obj/kernel.asm	/^c011212b:	00 $/;"	l
c011212c	obj/kernel.asm	/^c011212c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0112133	obj/kernel.asm	/^c0112133:	00 $/;"	l
c0112134	obj/kernel.asm	/^c0112134:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112137	obj/kernel.asm	/^c0112137:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011213a	obj/kernel.asm	/^c011213a:	e8 51 45 00 00       	call   c0116690 <memset>$/;"	l
c011213f	obj/kernel.asm	/^c011213f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112142	obj/kernel.asm	/^c0112142:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112145	obj/kernel.asm	/^c0112145:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112149	obj/kernel.asm	/^c0112149:	74 17                	je     c0112162 <dev_fstat+0x44>$/;"	l
c011214b	obj/kernel.asm	/^c011214b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011214e	obj/kernel.asm	/^c011214e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112151	obj/kernel.asm	/^c0112151:	85 c0                	test   %eax,%eax$/;"	l
c0112153	obj/kernel.asm	/^c0112153:	74 0d                	je     c0112162 <dev_fstat+0x44>$/;"	l
c0112155	obj/kernel.asm	/^c0112155:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112158	obj/kernel.asm	/^c0112158:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011215b	obj/kernel.asm	/^c011215b:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c011215e	obj/kernel.asm	/^c011215e:	85 c0                	test   %eax,%eax$/;"	l
c0112160	obj/kernel.asm	/^c0112160:	75 24                	jne    c0112186 <dev_fstat+0x68>$/;"	l
c0112162	obj/kernel.asm	/^c0112162:	c7 44 24 0c bc ab 11 	movl   $0xc011abbc,0xc(%esp)$/;"	l
c0112169	obj/kernel.asm	/^c0112169:	c0 $/;"	l
c011216a	obj/kernel.asm	/^c011216a:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c0112171	obj/kernel.asm	/^c0112171:	c0 $/;"	l
c0112172	obj/kernel.asm	/^c0112172:	c7 44 24 04 42 00 00 	movl   $0x42,0x4(%esp)$/;"	l
c0112179	obj/kernel.asm	/^c0112179:	00 $/;"	l
c011217a	obj/kernel.asm	/^c011217a:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c0112181	obj/kernel.asm	/^c0112181:	e8 b1 ea fe ff       	call   c0100c37 <__panic>$/;"	l
c0112186	obj/kernel.asm	/^c0112186:	c7 44 24 04 0c ac 11 	movl   $0xc011ac0c,0x4(%esp)$/;"	l
c011218d	obj/kernel.asm	/^c011218d:	c0 $/;"	l
c011218e	obj/kernel.asm	/^c011218e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112191	obj/kernel.asm	/^c0112191:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112194	obj/kernel.asm	/^c0112194:	e8 36 ee ff ff       	call   c0110fcf <inode_check>$/;"	l
c0112199	obj/kernel.asm	/^c0112199:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011219c	obj/kernel.asm	/^c011219c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011219f	obj/kernel.asm	/^c011219f:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01121a2	obj/kernel.asm	/^c01121a2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01121a5	obj/kernel.asm	/^c01121a5:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01121a9	obj/kernel.asm	/^c01121a9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01121ac	obj/kernel.asm	/^c01121ac:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01121af	obj/kernel.asm	/^c01121af:	ff d0                	call   *%eax$/;"	l
c01121b1	obj/kernel.asm	/^c01121b1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01121b4	obj/kernel.asm	/^c01121b4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01121b8	obj/kernel.asm	/^c01121b8:	74 05                	je     c01121bf <dev_fstat+0xa1>$/;"	l
c01121ba	obj/kernel.asm	/^c01121ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01121bd	obj/kernel.asm	/^c01121bd:	eb 72                	jmp    c0112231 <dev_fstat+0x113>$/;"	l
c01121bf	obj/kernel.asm	/^c01121bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01121c2	obj/kernel.asm	/^c01121c2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01121c5	obj/kernel.asm	/^c01121c5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01121c9	obj/kernel.asm	/^c01121c9:	74 0d                	je     c01121d8 <dev_fstat+0xba>$/;"	l
c01121cb	obj/kernel.asm	/^c01121cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01121ce	obj/kernel.asm	/^c01121ce:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01121d1	obj/kernel.asm	/^c01121d1:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01121d6	obj/kernel.asm	/^c01121d6:	74 24                	je     c01121fc <dev_fstat+0xde>$/;"	l
c01121d8	obj/kernel.asm	/^c01121d8:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c01121df	obj/kernel.asm	/^c01121df:	c0 $/;"	l
c01121e0	obj/kernel.asm	/^c01121e0:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c01121e7	obj/kernel.asm	/^c01121e7:	c0 $/;"	l
c01121e8	obj/kernel.asm	/^c01121e8:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c01121ef	obj/kernel.asm	/^c01121ef:	00 $/;"	l
c01121f0	obj/kernel.asm	/^c01121f0:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c01121f7	obj/kernel.asm	/^c01121f7:	e8 3b ea fe ff       	call   c0100c37 <__panic>$/;"	l
c01121fc	obj/kernel.asm	/^c01121fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01121ff	obj/kernel.asm	/^c01121ff:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112202	obj/kernel.asm	/^c0112202:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112205	obj/kernel.asm	/^c0112205:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c011220c	obj/kernel.asm	/^c011220c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011220f	obj/kernel.asm	/^c011220f:	8b 10                	mov    (%eax),%edx$/;"	l
c0112211	obj/kernel.asm	/^c0112211:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112214	obj/kernel.asm	/^c0112214:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112217	obj/kernel.asm	/^c0112217:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011221a	obj/kernel.asm	/^c011221a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c011221d	obj/kernel.asm	/^c011221d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112220	obj/kernel.asm	/^c0112220:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112223	obj/kernel.asm	/^c0112223:	0f af d0             	imul   %eax,%edx$/;"	l
c0112226	obj/kernel.asm	/^c0112226:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112229	obj/kernel.asm	/^c0112229:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c011222c	obj/kernel.asm	/^c011222c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112231	obj/kernel.asm	/^c0112231:	c9                   	leave  $/;"	l
c0112232	obj/kernel.asm	/^c0112232:	c3                   	ret    $/;"	l
c0112233	obj/kernel.asm	/^c0112233 <dev_gettype>:$/;"	l
c0112233	obj/kernel.asm	/^c0112233:	55                   	push   %ebp$/;"	l
c0112234	obj/kernel.asm	/^c0112234:	89 e5                	mov    %esp,%ebp$/;"	l
c0112236	obj/kernel.asm	/^c0112236:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112239	obj/kernel.asm	/^c0112239:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011223c	obj/kernel.asm	/^c011223c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011223f	obj/kernel.asm	/^c011223f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112243	obj/kernel.asm	/^c0112243:	74 0d                	je     c0112252 <dev_gettype+0x1f>$/;"	l
c0112245	obj/kernel.asm	/^c0112245:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112248	obj/kernel.asm	/^c0112248:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011224b	obj/kernel.asm	/^c011224b:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0112250	obj/kernel.asm	/^c0112250:	74 24                	je     c0112276 <dev_gettype+0x43>$/;"	l
c0112252	obj/kernel.asm	/^c0112252:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c0112259	obj/kernel.asm	/^c0112259:	c0 $/;"	l
c011225a	obj/kernel.asm	/^c011225a:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c0112261	obj/kernel.asm	/^c0112261:	c0 $/;"	l
c0112262	obj/kernel.asm	/^c0112262:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c0112269	obj/kernel.asm	/^c0112269:	00 $/;"	l
c011226a	obj/kernel.asm	/^c011226a:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c0112271	obj/kernel.asm	/^c0112271:	e8 c1 e9 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112276	obj/kernel.asm	/^c0112276:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112279	obj/kernel.asm	/^c0112279:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011227c	obj/kernel.asm	/^c011227c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011227f	obj/kernel.asm	/^c011227f:	8b 00                	mov    (%eax),%eax$/;"	l
c0112281	obj/kernel.asm	/^c0112281:	85 c0                	test   %eax,%eax$/;"	l
c0112283	obj/kernel.asm	/^c0112283:	74 07                	je     c011228c <dev_gettype+0x59>$/;"	l
c0112285	obj/kernel.asm	/^c0112285:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c011228a	obj/kernel.asm	/^c011228a:	eb 05                	jmp    c0112291 <dev_gettype+0x5e>$/;"	l
c011228c	obj/kernel.asm	/^c011228c:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0112291	obj/kernel.asm	/^c0112291:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112294	obj/kernel.asm	/^c0112294:	89 02                	mov    %eax,(%edx)$/;"	l
c0112296	obj/kernel.asm	/^c0112296:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011229b	obj/kernel.asm	/^c011229b:	c9                   	leave  $/;"	l
c011229c	obj/kernel.asm	/^c011229c:	c3                   	ret    $/;"	l
c011229d	obj/kernel.asm	/^c011229d <dev_tryseek>:$/;"	l
c011229d	obj/kernel.asm	/^c011229d:	55                   	push   %ebp$/;"	l
c011229e	obj/kernel.asm	/^c011229e:	89 e5                	mov    %esp,%ebp$/;"	l
c01122a0	obj/kernel.asm	/^c01122a0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01122a3	obj/kernel.asm	/^c01122a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122a6	obj/kernel.asm	/^c01122a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01122a9	obj/kernel.asm	/^c01122a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01122ad	obj/kernel.asm	/^c01122ad:	74 0d                	je     c01122bc <dev_tryseek+0x1f>$/;"	l
c01122af	obj/kernel.asm	/^c01122af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01122b2	obj/kernel.asm	/^c01122b2:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01122b5	obj/kernel.asm	/^c01122b5:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01122ba	obj/kernel.asm	/^c01122ba:	74 24                	je     c01122e0 <dev_tryseek+0x43>$/;"	l
c01122bc	obj/kernel.asm	/^c01122bc:	c7 44 24 0c 60 ab 11 	movl   $0xc011ab60,0xc(%esp)$/;"	l
c01122c3	obj/kernel.asm	/^c01122c3:	c0 $/;"	l
c01122c4	obj/kernel.asm	/^c01122c4:	c7 44 24 08 93 ab 11 	movl   $0xc011ab93,0x8(%esp)$/;"	l
c01122cb	obj/kernel.asm	/^c01122cb:	c0 $/;"	l
c01122cc	obj/kernel.asm	/^c01122cc:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c01122d3	obj/kernel.asm	/^c01122d3:	00 $/;"	l
c01122d4	obj/kernel.asm	/^c01122d4:	c7 04 24 a8 ab 11 c0 	movl   $0xc011aba8,(%esp)$/;"	l
c01122db	obj/kernel.asm	/^c01122db:	e8 57 e9 fe ff       	call   c0100c37 <__panic>$/;"	l
c01122e0	obj/kernel.asm	/^c01122e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01122e3	obj/kernel.asm	/^c01122e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01122e6	obj/kernel.asm	/^c01122e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01122e9	obj/kernel.asm	/^c01122e9:	8b 00                	mov    (%eax),%eax$/;"	l
c01122eb	obj/kernel.asm	/^c01122eb:	85 c0                	test   %eax,%eax$/;"	l
c01122ed	obj/kernel.asm	/^c01122ed:	74 38                	je     c0112327 <dev_tryseek+0x8a>$/;"	l
c01122ef	obj/kernel.asm	/^c01122ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01122f2	obj/kernel.asm	/^c01122f2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01122f5	obj/kernel.asm	/^c01122f5:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c01122f8	obj/kernel.asm	/^c01122f8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01122fd	obj/kernel.asm	/^c01122fd:	f7 f1                	div    %ecx$/;"	l
c01122ff	obj/kernel.asm	/^c01122ff:	89 d0                	mov    %edx,%eax$/;"	l
c0112301	obj/kernel.asm	/^c0112301:	85 c0                	test   %eax,%eax$/;"	l
c0112303	obj/kernel.asm	/^c0112303:	75 22                	jne    c0112327 <dev_tryseek+0x8a>$/;"	l
c0112305	obj/kernel.asm	/^c0112305:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0112309	obj/kernel.asm	/^c0112309:	78 1c                	js     c0112327 <dev_tryseek+0x8a>$/;"	l
c011230b	obj/kernel.asm	/^c011230b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011230e	obj/kernel.asm	/^c011230e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112311	obj/kernel.asm	/^c0112311:	8b 08                	mov    (%eax),%ecx$/;"	l
c0112313	obj/kernel.asm	/^c0112313:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112316	obj/kernel.asm	/^c0112316:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112319	obj/kernel.asm	/^c0112319:	0f af c1             	imul   %ecx,%eax$/;"	l
c011231c	obj/kernel.asm	/^c011231c:	39 c2                	cmp    %eax,%edx$/;"	l
c011231e	obj/kernel.asm	/^c011231e:	73 07                	jae    c0112327 <dev_tryseek+0x8a>$/;"	l
c0112320	obj/kernel.asm	/^c0112320:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112325	obj/kernel.asm	/^c0112325:	eb 05                	jmp    c011232c <dev_tryseek+0x8f>$/;"	l
c0112327	obj/kernel.asm	/^c0112327:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011232c	obj/kernel.asm	/^c011232c:	c9                   	leave  $/;"	l
c011232d	obj/kernel.asm	/^c011232d:	c3                   	ret    $/;"	l
c011232e	obj/kernel.asm	/^c011232e <dev_lookup>:$/;"	l
c011232e	obj/kernel.asm	/^c011232e:	55                   	push   %ebp$/;"	l
c011232f	obj/kernel.asm	/^c011232f:	89 e5                	mov    %esp,%ebp$/;"	l
c0112331	obj/kernel.asm	/^c0112331:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112334	obj/kernel.asm	/^c0112334:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112337	obj/kernel.asm	/^c0112337:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011233a	obj/kernel.asm	/^c011233a:	84 c0                	test   %al,%al$/;"	l
c011233c	obj/kernel.asm	/^c011233c:	74 07                	je     c0112345 <dev_lookup+0x17>$/;"	l
c011233e	obj/kernel.asm	/^c011233e:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0112343	obj/kernel.asm	/^c0112343:	eb 18                	jmp    c011235d <dev_lookup+0x2f>$/;"	l
c0112345	obj/kernel.asm	/^c0112345:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112348	obj/kernel.asm	/^c0112348:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011234b	obj/kernel.asm	/^c011234b:	e8 77 ea ff ff       	call   c0110dc7 <inode_ref_inc>$/;"	l
c0112350	obj/kernel.asm	/^c0112350:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112353	obj/kernel.asm	/^c0112353:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112356	obj/kernel.asm	/^c0112356:	89 10                	mov    %edx,(%eax)$/;"	l
c0112358	obj/kernel.asm	/^c0112358:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011235d	obj/kernel.asm	/^c011235d:	c9                   	leave  $/;"	l
c011235e	obj/kernel.asm	/^c011235e:	c3                   	ret    $/;"	l
c011235f	obj/kernel.asm	/^c011235f <dev_init>:$/;"	l
c011235f	obj/kernel.asm	/^c011235f:	55                   	push   %ebp$/;"	l
c0112360	obj/kernel.asm	/^c0112360:	89 e5                	mov    %esp,%ebp$/;"	l
c0112362	obj/kernel.asm	/^c0112362:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112365	obj/kernel.asm	/^c0112365:	e8 c8 f4 ff ff       	call   c0111832 <dev_init_stdin>$/;"	l
c011236a	obj/kernel.asm	/^c011236a:	e8 ed fa ff ff       	call   c0111e5c <dev_init_stdout>$/;"	l
c011236f	obj/kernel.asm	/^c011236f:	e8 68 f9 ff ff       	call   c0111cdc <dev_init_disk0>$/;"	l
c0112374	obj/kernel.asm	/^c0112374:	c9                   	leave  $/;"	l
c0112375	obj/kernel.asm	/^c0112375:	c3                   	ret    $/;"	l
c0112376	obj/kernel.asm	/^c0112376 <dev_create_inode>:$/;"	l
c0112376	obj/kernel.asm	/^c0112376:	55                   	push   %ebp$/;"	l
c0112377	obj/kernel.asm	/^c0112377:	89 e5                	mov    %esp,%ebp$/;"	l
c0112379	obj/kernel.asm	/^c0112379:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011237c	obj/kernel.asm	/^c011237c:	c7 04 24 34 12 00 00 	movl   $0x1234,(%esp)$/;"	l
c0112383	obj/kernel.asm	/^c0112383:	e8 64 e9 ff ff       	call   c0110cec <__alloc_inode>$/;"	l
c0112388	obj/kernel.asm	/^c0112388:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011238b	obj/kernel.asm	/^c011238b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011238f	obj/kernel.asm	/^c011238f:	74 1b                	je     c01123ac <dev_create_inode+0x36>$/;"	l
c0112391	obj/kernel.asm	/^c0112391:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0112398	obj/kernel.asm	/^c0112398:	00 $/;"	l
c0112399	obj/kernel.asm	/^c0112399:	c7 44 24 04 20 ac 11 	movl   $0xc011ac20,0x4(%esp)$/;"	l
c01123a0	obj/kernel.asm	/^c01123a0:	c0 $/;"	l
c01123a1	obj/kernel.asm	/^c01123a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01123a4	obj/kernel.asm	/^c01123a4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01123a7	obj/kernel.asm	/^c01123a7:	e8 69 e9 ff ff       	call   c0110d15 <inode_init>$/;"	l
c01123ac	obj/kernel.asm	/^c01123ac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01123af	obj/kernel.asm	/^c01123af:	c9                   	leave  $/;"	l
c01123b0	obj/kernel.asm	/^c01123b0:	c3                   	ret    $/;"	l
c01123b1	obj/kernel.asm	/^c01123b1 <sfs_init>:$/;"	l
c01123b1	obj/kernel.asm	/^c01123b1:	55                   	push   %ebp$/;"	l
c01123b2	obj/kernel.asm	/^c01123b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01123b4	obj/kernel.asm	/^c01123b4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01123b7	obj/kernel.asm	/^c01123b7:	c7 04 24 60 ac 11 c0 	movl   $0xc011ac60,(%esp)$/;"	l
c01123be	obj/kernel.asm	/^c01123be:	e8 44 2c 00 00       	call   c0115007 <sfs_mount>$/;"	l
c01123c3	obj/kernel.asm	/^c01123c3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01123c6	obj/kernel.asm	/^c01123c6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01123ca	obj/kernel.asm	/^c01123ca:	74 23                	je     c01123ef <sfs_init+0x3e>$/;"	l
c01123cc	obj/kernel.asm	/^c01123cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01123cf	obj/kernel.asm	/^c01123cf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01123d3	obj/kernel.asm	/^c01123d3:	c7 44 24 08 66 ac 11 	movl   $0xc011ac66,0x8(%esp)$/;"	l
c01123da	obj/kernel.asm	/^c01123da:	c0 $/;"	l
c01123db	obj/kernel.asm	/^c01123db:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c01123e2	obj/kernel.asm	/^c01123e2:	00 $/;"	l
c01123e3	obj/kernel.asm	/^c01123e3:	c7 04 24 83 ac 11 c0 	movl   $0xc011ac83,(%esp)$/;"	l
c01123ea	obj/kernel.asm	/^c01123ea:	e8 48 e8 fe ff       	call   c0100c37 <__panic>$/;"	l
c01123ef	obj/kernel.asm	/^c01123ef:	c9                   	leave  $/;"	l
c01123f0	obj/kernel.asm	/^c01123f0:	c3                   	ret    $/;"	l
c01123f1	obj/kernel.asm	/^c01123f1 <lock_sfs_fs>:$/;"	l
c01123f1	obj/kernel.asm	/^c01123f1:	55                   	push   %ebp$/;"	l
c01123f2	obj/kernel.asm	/^c01123f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01123f4	obj/kernel.asm	/^c01123f4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01123f7	obj/kernel.asm	/^c01123f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01123fa	obj/kernel.asm	/^c01123fa:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c01123fd	obj/kernel.asm	/^c01123fd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112400	obj/kernel.asm	/^c0112400:	e8 7f 89 ff ff       	call   c010ad84 <down>$/;"	l
c0112405	obj/kernel.asm	/^c0112405:	c9                   	leave  $/;"	l
c0112406	obj/kernel.asm	/^c0112406:	c3                   	ret    $/;"	l
c0112407	obj/kernel.asm	/^c0112407 <lock_sfs_io>:$/;"	l
c0112407	obj/kernel.asm	/^c0112407:	55                   	push   %ebp$/;"	l
c0112408	obj/kernel.asm	/^c0112408:	89 e5                	mov    %esp,%ebp$/;"	l
c011240a	obj/kernel.asm	/^c011240a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011240d	obj/kernel.asm	/^c011240d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112410	obj/kernel.asm	/^c0112410:	83 c0 48             	add    $0x48,%eax$/;"	l
c0112413	obj/kernel.asm	/^c0112413:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112416	obj/kernel.asm	/^c0112416:	e8 69 89 ff ff       	call   c010ad84 <down>$/;"	l
c011241b	obj/kernel.asm	/^c011241b:	c9                   	leave  $/;"	l
c011241c	obj/kernel.asm	/^c011241c:	c3                   	ret    $/;"	l
c011241d	obj/kernel.asm	/^c011241d <unlock_sfs_fs>:$/;"	l
c011241d	obj/kernel.asm	/^c011241d:	55                   	push   %ebp$/;"	l
c011241e	obj/kernel.asm	/^c011241e:	89 e5                	mov    %esp,%ebp$/;"	l
c0112420	obj/kernel.asm	/^c0112420:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112423	obj/kernel.asm	/^c0112423:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112426	obj/kernel.asm	/^c0112426:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0112429	obj/kernel.asm	/^c0112429:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011242c	obj/kernel.asm	/^c011242c:	e8 38 89 ff ff       	call   c010ad69 <up>$/;"	l
c0112431	obj/kernel.asm	/^c0112431:	c9                   	leave  $/;"	l
c0112432	obj/kernel.asm	/^c0112432:	c3                   	ret    $/;"	l
c0112433	obj/kernel.asm	/^c0112433 <unlock_sfs_io>:$/;"	l
c0112433	obj/kernel.asm	/^c0112433:	55                   	push   %ebp$/;"	l
c0112434	obj/kernel.asm	/^c0112434:	89 e5                	mov    %esp,%ebp$/;"	l
c0112436	obj/kernel.asm	/^c0112436:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112439	obj/kernel.asm	/^c0112439:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011243c	obj/kernel.asm	/^c011243c:	83 c0 48             	add    $0x48,%eax$/;"	l
c011243f	obj/kernel.asm	/^c011243f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112442	obj/kernel.asm	/^c0112442:	e8 22 89 ff ff       	call   c010ad69 <up>$/;"	l
c0112447	obj/kernel.asm	/^c0112447:	c9                   	leave  $/;"	l
c0112448	obj/kernel.asm	/^c0112448:	c3                   	ret    $/;"	l
c0112449	obj/kernel.asm	/^c0112449 <inode_ref_count>:$/;"	l
c0112449	obj/kernel.asm	/^c0112449:	55                   	push   %ebp$/;"	l
c011244a	obj/kernel.asm	/^c011244a:	89 e5                	mov    %esp,%ebp$/;"	l
c011244c	obj/kernel.asm	/^c011244c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011244f	obj/kernel.asm	/^c011244f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112452	obj/kernel.asm	/^c0112452:	5d                   	pop    %ebp$/;"	l
c0112453	obj/kernel.asm	/^c0112453:	c3                   	ret    $/;"	l
c0112454	obj/kernel.asm	/^c0112454 <lock_sin>:$/;"	l
c0112454	obj/kernel.asm	/^c0112454:	55                   	push   %ebp$/;"	l
c0112455	obj/kernel.asm	/^c0112455:	89 e5                	mov    %esp,%ebp$/;"	l
c0112457	obj/kernel.asm	/^c0112457:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011245a	obj/kernel.asm	/^c011245a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011245d	obj/kernel.asm	/^c011245d:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112460	obj/kernel.asm	/^c0112460:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112463	obj/kernel.asm	/^c0112463:	e8 1c 89 ff ff       	call   c010ad84 <down>$/;"	l
c0112468	obj/kernel.asm	/^c0112468:	c9                   	leave  $/;"	l
c0112469	obj/kernel.asm	/^c0112469:	c3                   	ret    $/;"	l
c011246a	obj/kernel.asm	/^c011246a <unlock_sin>:$/;"	l
c011246a	obj/kernel.asm	/^c011246a:	55                   	push   %ebp$/;"	l
c011246b	obj/kernel.asm	/^c011246b:	89 e5                	mov    %esp,%ebp$/;"	l
c011246d	obj/kernel.asm	/^c011246d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112470	obj/kernel.asm	/^c0112470:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112473	obj/kernel.asm	/^c0112473:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112476	obj/kernel.asm	/^c0112476:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112479	obj/kernel.asm	/^c0112479:	e8 eb 88 ff ff       	call   c010ad69 <up>$/;"	l
c011247e	obj/kernel.asm	/^c011247e:	c9                   	leave  $/;"	l
c011247f	obj/kernel.asm	/^c011247f:	c3                   	ret    $/;"	l
c0112480	obj/kernel.asm	/^c0112480 <sfs_get_ops>:$/;"	l
c0112480	obj/kernel.asm	/^c0112480:	55                   	push   %ebp$/;"	l
c0112481	obj/kernel.asm	/^c0112481:	89 e5                	mov    %esp,%ebp$/;"	l
c0112483	obj/kernel.asm	/^c0112483:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112486	obj/kernel.asm	/^c0112486:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112489	obj/kernel.asm	/^c0112489:	66 89 45 f4          	mov    %ax,-0xc(%ebp)$/;"	l
c011248d	obj/kernel.asm	/^c011248d:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0112491	obj/kernel.asm	/^c0112491:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0112494	obj/kernel.asm	/^c0112494:	74 0c                	je     c01124a2 <sfs_get_ops+0x22>$/;"	l
c0112496	obj/kernel.asm	/^c0112496:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0112499	obj/kernel.asm	/^c0112499:	75 0e                	jne    c01124a9 <sfs_get_ops+0x29>$/;"	l
c011249b	obj/kernel.asm	/^c011249b:	b8 a0 ac 11 c0       	mov    $0xc011aca0,%eax$/;"	l
c01124a0	obj/kernel.asm	/^c01124a0:	eb 2b                	jmp    c01124cd <sfs_get_ops+0x4d>$/;"	l
c01124a2	obj/kernel.asm	/^c01124a2:	b8 e0 ac 11 c0       	mov    $0xc011ace0,%eax$/;"	l
c01124a7	obj/kernel.asm	/^c01124a7:	eb 24                	jmp    c01124cd <sfs_get_ops+0x4d>$/;"	l
c01124a9	obj/kernel.asm	/^c01124a9:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01124ad	obj/kernel.asm	/^c01124ad:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01124b1	obj/kernel.asm	/^c01124b1:	c7 44 24 08 20 ad 11 	movl   $0xc011ad20,0x8(%esp)$/;"	l
c01124b8	obj/kernel.asm	/^c01124b8:	c0 $/;"	l
c01124b9	obj/kernel.asm	/^c01124b9:	c7 44 24 04 2e 00 00 	movl   $0x2e,0x4(%esp)$/;"	l
c01124c0	obj/kernel.asm	/^c01124c0:	00 $/;"	l
c01124c1	obj/kernel.asm	/^c01124c1:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01124c8	obj/kernel.asm	/^c01124c8:	e8 6a e7 fe ff       	call   c0100c37 <__panic>$/;"	l
c01124cd	obj/kernel.asm	/^c01124cd:	c9                   	leave  $/;"	l
c01124ce	obj/kernel.asm	/^c01124ce:	c3                   	ret    $/;"	l
c01124cf	obj/kernel.asm	/^c01124cf <sfs_hash_list>:$/;"	l
c01124cf	obj/kernel.asm	/^c01124cf:	55                   	push   %ebp$/;"	l
c01124d0	obj/kernel.asm	/^c01124d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01124d2	obj/kernel.asm	/^c01124d2:	53                   	push   %ebx$/;"	l
c01124d3	obj/kernel.asm	/^c01124d3:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01124d6	obj/kernel.asm	/^c01124d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124d9	obj/kernel.asm	/^c01124d9:	8b 58 68             	mov    0x68(%eax),%ebx$/;"	l
c01124dc	obj/kernel.asm	/^c01124dc:	c7 44 24 04 0a 00 00 	movl   $0xa,0x4(%esp)$/;"	l
c01124e3	obj/kernel.asm	/^c01124e3:	00 $/;"	l
c01124e4	obj/kernel.asm	/^c01124e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01124e7	obj/kernel.asm	/^c01124e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01124ea	obj/kernel.asm	/^c01124ea:	e8 31 4a 00 00       	call   c0116f20 <hash32>$/;"	l
c01124ef	obj/kernel.asm	/^c01124ef:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01124f2	obj/kernel.asm	/^c01124f2:	01 d8                	add    %ebx,%eax$/;"	l
c01124f4	obj/kernel.asm	/^c01124f4:	83 c4 14             	add    $0x14,%esp$/;"	l
c01124f7	obj/kernel.asm	/^c01124f7:	5b                   	pop    %ebx$/;"	l
c01124f8	obj/kernel.asm	/^c01124f8:	5d                   	pop    %ebp$/;"	l
c01124f9	obj/kernel.asm	/^c01124f9:	c3                   	ret    $/;"	l
c01124fa	obj/kernel.asm	/^c01124fa <sfs_set_links>:$/;"	l
c01124fa	obj/kernel.asm	/^c01124fa:	55                   	push   %ebp$/;"	l
c01124fb	obj/kernel.asm	/^c01124fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01124fd	obj/kernel.asm	/^c01124fd:	53                   	push   %ebx$/;"	l
c01124fe	obj/kernel.asm	/^c01124fe:	83 ec 54             	sub    $0x54,%esp$/;"	l
c0112501	obj/kernel.asm	/^c0112501:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112504	obj/kernel.asm	/^c0112504:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0112507	obj/kernel.asm	/^c0112507:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011250a	obj/kernel.asm	/^c011250a:	83 c2 60             	add    $0x60,%edx$/;"	l
c011250d	obj/kernel.asm	/^c011250d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0112510	obj/kernel.asm	/^c0112510:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112513	obj/kernel.asm	/^c0112513:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112516	obj/kernel.asm	/^c0112516:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112519	obj/kernel.asm	/^c0112519:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011251c	obj/kernel.asm	/^c011251c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011251f	obj/kernel.asm	/^c011251f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112522	obj/kernel.asm	/^c0112522:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112525	obj/kernel.asm	/^c0112525:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112528	obj/kernel.asm	/^c0112528:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011252b	obj/kernel.asm	/^c011252b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011252e	obj/kernel.asm	/^c011252e:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0112531	obj/kernel.asm	/^c0112531:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0112534	obj/kernel.asm	/^c0112534:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112537	obj/kernel.asm	/^c0112537:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011253a	obj/kernel.asm	/^c011253a:	89 10                	mov    %edx,(%eax)$/;"	l
c011253c	obj/kernel.asm	/^c011253c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011253f	obj/kernel.asm	/^c011253f:	8b 10                	mov    (%eax),%edx$/;"	l
c0112541	obj/kernel.asm	/^c0112541:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112544	obj/kernel.asm	/^c0112544:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112547	obj/kernel.asm	/^c0112547:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011254a	obj/kernel.asm	/^c011254a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c011254d	obj/kernel.asm	/^c011254d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112550	obj/kernel.asm	/^c0112550:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112553	obj/kernel.asm	/^c0112553:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0112556	obj/kernel.asm	/^c0112556:	89 10                	mov    %edx,(%eax)$/;"	l
c0112558	obj/kernel.asm	/^c0112558:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011255b	obj/kernel.asm	/^c011255b:	8d 58 24             	lea    0x24(%eax),%ebx$/;"	l
c011255e	obj/kernel.asm	/^c011255e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112561	obj/kernel.asm	/^c0112561:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112564	obj/kernel.asm	/^c0112564:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112568	obj/kernel.asm	/^c0112568:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011256b	obj/kernel.asm	/^c011256b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011256e	obj/kernel.asm	/^c011256e:	e8 5c ff ff ff       	call   c01124cf <sfs_hash_list>$/;"	l
c0112573	obj/kernel.asm	/^c0112573:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0112576	obj/kernel.asm	/^c0112576:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
c0112579	obj/kernel.asm	/^c0112579:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011257c	obj/kernel.asm	/^c011257c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011257f	obj/kernel.asm	/^c011257f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0112582	obj/kernel.asm	/^c0112582:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0112585	obj/kernel.asm	/^c0112585:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0112588	obj/kernel.asm	/^c0112588:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011258b	obj/kernel.asm	/^c011258b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c011258e	obj/kernel.asm	/^c011258e:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0112591	obj/kernel.asm	/^c0112591:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0112594	obj/kernel.asm	/^c0112594:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
c0112597	obj/kernel.asm	/^c0112597:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c011259a	obj/kernel.asm	/^c011259a:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c011259d	obj/kernel.asm	/^c011259d:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01125a0	obj/kernel.asm	/^c01125a0:	89 10                	mov    %edx,(%eax)$/;"	l
c01125a2	obj/kernel.asm	/^c01125a2:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c01125a5	obj/kernel.asm	/^c01125a5:	8b 10                	mov    (%eax),%edx$/;"	l
c01125a7	obj/kernel.asm	/^c01125a7:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01125aa	obj/kernel.asm	/^c01125aa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01125ad	obj/kernel.asm	/^c01125ad:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01125b0	obj/kernel.asm	/^c01125b0:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01125b3	obj/kernel.asm	/^c01125b3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01125b6	obj/kernel.asm	/^c01125b6:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01125b9	obj/kernel.asm	/^c01125b9:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c01125bc	obj/kernel.asm	/^c01125bc:	89 10                	mov    %edx,(%eax)$/;"	l
c01125be	obj/kernel.asm	/^c01125be:	83 c4 54             	add    $0x54,%esp$/;"	l
c01125c1	obj/kernel.asm	/^c01125c1:	5b                   	pop    %ebx$/;"	l
c01125c2	obj/kernel.asm	/^c01125c2:	5d                   	pop    %ebp$/;"	l
c01125c3	obj/kernel.asm	/^c01125c3:	c3                   	ret    $/;"	l
c01125c4	obj/kernel.asm	/^c01125c4 <sfs_remove_links>:$/;"	l
c01125c4	obj/kernel.asm	/^c01125c4:	55                   	push   %ebp$/;"	l
c01125c5	obj/kernel.asm	/^c01125c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01125c7	obj/kernel.asm	/^c01125c7:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01125ca	obj/kernel.asm	/^c01125ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01125cd	obj/kernel.asm	/^c01125cd:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01125d0	obj/kernel.asm	/^c01125d0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01125d3	obj/kernel.asm	/^c01125d3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01125d6	obj/kernel.asm	/^c01125d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01125d9	obj/kernel.asm	/^c01125d9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01125dc	obj/kernel.asm	/^c01125dc:	8b 12                	mov    (%edx),%edx$/;"	l
c01125de	obj/kernel.asm	/^c01125de:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01125e1	obj/kernel.asm	/^c01125e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01125e4	obj/kernel.asm	/^c01125e4:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01125e7	obj/kernel.asm	/^c01125e7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01125ea	obj/kernel.asm	/^c01125ea:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01125ed	obj/kernel.asm	/^c01125ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01125f0	obj/kernel.asm	/^c01125f0:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01125f3	obj/kernel.asm	/^c01125f3:	89 10                	mov    %edx,(%eax)$/;"	l
c01125f5	obj/kernel.asm	/^c01125f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01125f8	obj/kernel.asm	/^c01125f8:	83 c0 24             	add    $0x24,%eax$/;"	l
c01125fb	obj/kernel.asm	/^c01125fb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01125fe	obj/kernel.asm	/^c01125fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112601	obj/kernel.asm	/^c0112601:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112604	obj/kernel.asm	/^c0112604:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112607	obj/kernel.asm	/^c0112607:	8b 12                	mov    (%edx),%edx$/;"	l
c0112609	obj/kernel.asm	/^c0112609:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c011260c	obj/kernel.asm	/^c011260c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011260f	obj/kernel.asm	/^c011260f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112612	obj/kernel.asm	/^c0112612:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112615	obj/kernel.asm	/^c0112615:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112618	obj/kernel.asm	/^c0112618:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011261b	obj/kernel.asm	/^c011261b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c011261e	obj/kernel.asm	/^c011261e:	89 10                	mov    %edx,(%eax)$/;"	l
c0112620	obj/kernel.asm	/^c0112620:	c9                   	leave  $/;"	l
c0112621	obj/kernel.asm	/^c0112621:	c3                   	ret    $/;"	l
c0112622	obj/kernel.asm	/^c0112622 <sfs_block_inuse>:$/;"	l
c0112622	obj/kernel.asm	/^c0112622:	55                   	push   %ebp$/;"	l
c0112623	obj/kernel.asm	/^c0112623:	89 e5                	mov    %esp,%ebp$/;"	l
c0112625	obj/kernel.asm	/^c0112625:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112628	obj/kernel.asm	/^c0112628:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011262c	obj/kernel.asm	/^c011262c:	74 2a                	je     c0112658 <sfs_block_inuse+0x36>$/;"	l
c011262e	obj/kernel.asm	/^c011262e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112631	obj/kernel.asm	/^c0112631:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112634	obj/kernel.asm	/^c0112634:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0112637	obj/kernel.asm	/^c0112637:	76 1f                	jbe    c0112658 <sfs_block_inuse+0x36>$/;"	l
c0112639	obj/kernel.asm	/^c0112639:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011263c	obj/kernel.asm	/^c011263c:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011263f	obj/kernel.asm	/^c011263f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112642	obj/kernel.asm	/^c0112642:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0112646	obj/kernel.asm	/^c0112646:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112649	obj/kernel.asm	/^c0112649:	e8 dc 2c 00 00       	call   c011532a <bitmap_test>$/;"	l
c011264e	obj/kernel.asm	/^c011264e:	85 c0                	test   %eax,%eax$/;"	l
c0112650	obj/kernel.asm	/^c0112650:	0f 94 c0             	sete   %al$/;"	l
c0112653	obj/kernel.asm	/^c0112653:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112656	obj/kernel.asm	/^c0112656:	eb 2d                	jmp    c0112685 <sfs_block_inuse+0x63>$/;"	l
c0112658	obj/kernel.asm	/^c0112658:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011265b	obj/kernel.asm	/^c011265b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011265e	obj/kernel.asm	/^c011265e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112661	obj/kernel.asm	/^c0112661:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0112665	obj/kernel.asm	/^c0112665:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112669	obj/kernel.asm	/^c0112669:	c7 44 24 08 50 ad 11 	movl   $0xc011ad50,0x8(%esp)$/;"	l
c0112670	obj/kernel.asm	/^c0112670:	c0 $/;"	l
c0112671	obj/kernel.asm	/^c0112671:	c7 44 24 04 53 00 00 	movl   $0x53,0x4(%esp)$/;"	l
c0112678	obj/kernel.asm	/^c0112678:	00 $/;"	l
c0112679	obj/kernel.asm	/^c0112679:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112680	obj/kernel.asm	/^c0112680:	e8 b2 e5 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112685	obj/kernel.asm	/^c0112685:	c9                   	leave  $/;"	l
c0112686	obj/kernel.asm	/^c0112686:	c3                   	ret    $/;"	l
c0112687	obj/kernel.asm	/^c0112687 <sfs_block_alloc>:$/;"	l
c0112687	obj/kernel.asm	/^c0112687:	55                   	push   %ebp$/;"	l
c0112688	obj/kernel.asm	/^c0112688:	89 e5                	mov    %esp,%ebp$/;"	l
c011268a	obj/kernel.asm	/^c011268a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011268d	obj/kernel.asm	/^c011268d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112690	obj/kernel.asm	/^c0112690:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112693	obj/kernel.asm	/^c0112693:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112696	obj/kernel.asm	/^c0112696:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011269a	obj/kernel.asm	/^c011269a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011269d	obj/kernel.asm	/^c011269d:	e8 26 2b 00 00       	call   c01151c8 <bitmap_alloc>$/;"	l
c01126a2	obj/kernel.asm	/^c01126a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01126a5	obj/kernel.asm	/^c01126a5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01126a9	obj/kernel.asm	/^c01126a9:	74 08                	je     c01126b3 <sfs_block_alloc+0x2c>$/;"	l
c01126ab	obj/kernel.asm	/^c01126ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01126ae	obj/kernel.asm	/^c01126ae:	e9 9f 00 00 00       	jmp    c0112752 <sfs_block_alloc+0xcb>$/;"	l
c01126b3	obj/kernel.asm	/^c01126b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126b6	obj/kernel.asm	/^c01126b6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01126b9	obj/kernel.asm	/^c01126b9:	85 c0                	test   %eax,%eax$/;"	l
c01126bb	obj/kernel.asm	/^c01126bb:	75 24                	jne    c01126e1 <sfs_block_alloc+0x5a>$/;"	l
c01126bd	obj/kernel.asm	/^c01126bd:	c7 44 24 0c 82 ad 11 	movl   $0xc011ad82,0xc(%esp)$/;"	l
c01126c4	obj/kernel.asm	/^c01126c4:	c0 $/;"	l
c01126c5	obj/kernel.asm	/^c01126c5:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01126cc	obj/kernel.asm	/^c01126cc:	c0 $/;"	l
c01126cd	obj/kernel.asm	/^c01126cd:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c01126d4	obj/kernel.asm	/^c01126d4:	00 $/;"	l
c01126d5	obj/kernel.asm	/^c01126d5:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01126dc	obj/kernel.asm	/^c01126dc:	e8 56 e5 fe ff       	call   c0100c37 <__panic>$/;"	l
c01126e1	obj/kernel.asm	/^c01126e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126e4	obj/kernel.asm	/^c01126e4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01126e7	obj/kernel.asm	/^c01126e7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01126ea	obj/kernel.asm	/^c01126ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126ed	obj/kernel.asm	/^c01126ed:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01126f0	obj/kernel.asm	/^c01126f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126f3	obj/kernel.asm	/^c01126f3:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c01126fa	obj/kernel.asm	/^c01126fa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01126fd	obj/kernel.asm	/^c01126fd:	8b 00                	mov    (%eax),%eax$/;"	l
c01126ff	obj/kernel.asm	/^c01126ff:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112703	obj/kernel.asm	/^c0112703:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112706	obj/kernel.asm	/^c0112706:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112709	obj/kernel.asm	/^c0112709:	e8 14 ff ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c011270e	obj/kernel.asm	/^c011270e:	85 c0                	test   %eax,%eax$/;"	l
c0112710	obj/kernel.asm	/^c0112710:	75 24                	jne    c0112736 <sfs_block_alloc+0xaf>$/;"	l
c0112712	obj/kernel.asm	/^c0112712:	c7 44 24 0c b4 ad 11 	movl   $0xc011adb4,0xc(%esp)$/;"	l
c0112719	obj/kernel.asm	/^c0112719:	c0 $/;"	l
c011271a	obj/kernel.asm	/^c011271a:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112721	obj/kernel.asm	/^c0112721:	c0 $/;"	l
c0112722	obj/kernel.asm	/^c0112722:	c7 44 24 04 61 00 00 	movl   $0x61,0x4(%esp)$/;"	l
c0112729	obj/kernel.asm	/^c0112729:	00 $/;"	l
c011272a	obj/kernel.asm	/^c011272a:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112731	obj/kernel.asm	/^c0112731:	e8 01 e5 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112736	obj/kernel.asm	/^c0112736:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112739	obj/kernel.asm	/^c0112739:	8b 00                	mov    (%eax),%eax$/;"	l
c011273b	obj/kernel.asm	/^c011273b:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0112742	obj/kernel.asm	/^c0112742:	00 $/;"	l
c0112743	obj/kernel.asm	/^c0112743:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112747	obj/kernel.asm	/^c0112747:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011274a	obj/kernel.asm	/^c011274a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011274d	obj/kernel.asm	/^c011274d:	e8 9e 30 00 00       	call   c01157f0 <sfs_clear_block>$/;"	l
c0112752	obj/kernel.asm	/^c0112752:	c9                   	leave  $/;"	l
c0112753	obj/kernel.asm	/^c0112753:	c3                   	ret    $/;"	l
c0112754	obj/kernel.asm	/^c0112754 <sfs_block_free>:$/;"	l
c0112754	obj/kernel.asm	/^c0112754:	55                   	push   %ebp$/;"	l
c0112755	obj/kernel.asm	/^c0112755:	89 e5                	mov    %esp,%ebp$/;"	l
c0112757	obj/kernel.asm	/^c0112757:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011275a	obj/kernel.asm	/^c011275a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011275d	obj/kernel.asm	/^c011275d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112761	obj/kernel.asm	/^c0112761:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112764	obj/kernel.asm	/^c0112764:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112767	obj/kernel.asm	/^c0112767:	e8 b6 fe ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c011276c	obj/kernel.asm	/^c011276c:	85 c0                	test   %eax,%eax$/;"	l
c011276e	obj/kernel.asm	/^c011276e:	75 24                	jne    c0112794 <sfs_block_free+0x40>$/;"	l
c0112770	obj/kernel.asm	/^c0112770:	c7 44 24 0c d5 ad 11 	movl   $0xc011add5,0xc(%esp)$/;"	l
c0112777	obj/kernel.asm	/^c0112777:	c0 $/;"	l
c0112778	obj/kernel.asm	/^c0112778:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c011277f	obj/kernel.asm	/^c011277f:	c0 $/;"	l
c0112780	obj/kernel.asm	/^c0112780:	c7 44 24 04 6a 00 00 	movl   $0x6a,0x4(%esp)$/;"	l
c0112787	obj/kernel.asm	/^c0112787:	00 $/;"	l
c0112788	obj/kernel.asm	/^c0112788:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c011278f	obj/kernel.asm	/^c011278f:	e8 a3 e4 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112794	obj/kernel.asm	/^c0112794:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112797	obj/kernel.asm	/^c0112797:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011279a	obj/kernel.asm	/^c011279a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011279d	obj/kernel.asm	/^c011279d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c01127a1	obj/kernel.asm	/^c01127a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01127a4	obj/kernel.asm	/^c01127a4:	e8 b3 2b 00 00       	call   c011535c <bitmap_free>$/;"	l
c01127a9	obj/kernel.asm	/^c01127a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127ac	obj/kernel.asm	/^c01127ac:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01127af	obj/kernel.asm	/^c01127af:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01127b2	obj/kernel.asm	/^c01127b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127b5	obj/kernel.asm	/^c01127b5:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01127b8	obj/kernel.asm	/^c01127b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127bb	obj/kernel.asm	/^c01127bb:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c01127c2	obj/kernel.asm	/^c01127c2:	c9                   	leave  $/;"	l
c01127c3	obj/kernel.asm	/^c01127c3:	c3                   	ret    $/;"	l
c01127c4	obj/kernel.asm	/^c01127c4 <sfs_create_inode>:$/;"	l
c01127c4	obj/kernel.asm	/^c01127c4:	55                   	push   %ebp$/;"	l
c01127c5	obj/kernel.asm	/^c01127c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01127c7	obj/kernel.asm	/^c01127c7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01127ca	obj/kernel.asm	/^c01127ca:	c7 04 24 35 12 00 00 	movl   $0x1235,(%esp)$/;"	l
c01127d1	obj/kernel.asm	/^c01127d1:	e8 16 e5 ff ff       	call   c0110cec <__alloc_inode>$/;"	l
c01127d6	obj/kernel.asm	/^c01127d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01127d9	obj/kernel.asm	/^c01127d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01127dd	obj/kernel.asm	/^c01127dd:	0f 84 b5 00 00 00    	je     c0112898 <sfs_create_inode+0xd4>$/;"	l
c01127e3	obj/kernel.asm	/^c01127e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01127e6	obj/kernel.asm	/^c01127e6:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01127ea	obj/kernel.asm	/^c01127ea:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01127ed	obj/kernel.asm	/^c01127ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01127f0	obj/kernel.asm	/^c01127f0:	e8 8b fc ff ff       	call   c0112480 <sfs_get_ops>$/;"	l
c01127f5	obj/kernel.asm	/^c01127f5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01127f8	obj/kernel.asm	/^c01127f8:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01127fc	obj/kernel.asm	/^c01127fc:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112800	obj/kernel.asm	/^c0112800:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112803	obj/kernel.asm	/^c0112803:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112806	obj/kernel.asm	/^c0112806:	e8 0a e5 ff ff       	call   c0110d15 <inode_init>$/;"	l
c011280b	obj/kernel.asm	/^c011280b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011280e	obj/kernel.asm	/^c011280e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112811	obj/kernel.asm	/^c0112811:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112815	obj/kernel.asm	/^c0112815:	74 0d                	je     c0112824 <sfs_create_inode+0x60>$/;"	l
c0112817	obj/kernel.asm	/^c0112817:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011281a	obj/kernel.asm	/^c011281a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011281d	obj/kernel.asm	/^c011281d:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112822	obj/kernel.asm	/^c0112822:	74 24                	je     c0112848 <sfs_create_inode+0x84>$/;"	l
c0112824	obj/kernel.asm	/^c0112824:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c011282b	obj/kernel.asm	/^c011282b:	c0 $/;"	l
c011282c	obj/kernel.asm	/^c011282c:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112833	obj/kernel.asm	/^c0112833:	c0 $/;"	l
c0112834	obj/kernel.asm	/^c0112834:	c7 44 24 04 77 00 00 	movl   $0x77,0x4(%esp)$/;"	l
c011283b	obj/kernel.asm	/^c011283b:	00 $/;"	l
c011283c	obj/kernel.asm	/^c011283c:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112843	obj/kernel.asm	/^c0112843:	e8 ef e3 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112848	obj/kernel.asm	/^c0112848:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011284b	obj/kernel.asm	/^c011284b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011284e	obj/kernel.asm	/^c011284e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112851	obj/kernel.asm	/^c0112851:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112854	obj/kernel.asm	/^c0112854:	89 10                	mov    %edx,(%eax)$/;"	l
c0112856	obj/kernel.asm	/^c0112856:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112859	obj/kernel.asm	/^c0112859:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c011285c	obj/kernel.asm	/^c011285c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011285f	obj/kernel.asm	/^c011285f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112862	obj/kernel.asm	/^c0112862:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0112869	obj/kernel.asm	/^c0112869:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011286c	obj/kernel.asm	/^c011286c:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)$/;"	l
c0112873	obj/kernel.asm	/^c0112873:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112876	obj/kernel.asm	/^c0112876:	83 c0 10             	add    $0x10,%eax$/;"	l
c0112879	obj/kernel.asm	/^c0112879:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0112880	obj/kernel.asm	/^c0112880:	00 $/;"	l
c0112881	obj/kernel.asm	/^c0112881:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112884	obj/kernel.asm	/^c0112884:	e8 6d 83 ff ff       	call   c010abf6 <sem_init>$/;"	l
c0112889	obj/kernel.asm	/^c0112889:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011288c	obj/kernel.asm	/^c011288c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c011288f	obj/kernel.asm	/^c011288f:	89 10                	mov    %edx,(%eax)$/;"	l
c0112891	obj/kernel.asm	/^c0112891:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112896	obj/kernel.asm	/^c0112896:	eb 05                	jmp    c011289d <sfs_create_inode+0xd9>$/;"	l
c0112898	obj/kernel.asm	/^c0112898:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c011289d	obj/kernel.asm	/^c011289d:	c9                   	leave  $/;"	l
c011289e	obj/kernel.asm	/^c011289e:	c3                   	ret    $/;"	l
c011289f	obj/kernel.asm	/^c011289f <lookup_sfs_nolock>:$/;"	l
c011289f	obj/kernel.asm	/^c011289f:	55                   	push   %ebp$/;"	l
c01128a0	obj/kernel.asm	/^c01128a0:	89 e5                	mov    %esp,%ebp$/;"	l
c01128a2	obj/kernel.asm	/^c01128a2:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01128a5	obj/kernel.asm	/^c01128a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01128a8	obj/kernel.asm	/^c01128a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01128ac	obj/kernel.asm	/^c01128ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128af	obj/kernel.asm	/^c01128af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01128b2	obj/kernel.asm	/^c01128b2:	e8 18 fc ff ff       	call   c01124cf <sfs_hash_list>$/;"	l
c01128b7	obj/kernel.asm	/^c01128b7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01128ba	obj/kernel.asm	/^c01128ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01128bd	obj/kernel.asm	/^c01128bd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01128c0	obj/kernel.asm	/^c01128c0:	eb 3e                	jmp    c0112900 <lookup_sfs_nolock+0x61>$/;"	l
c01128c2	obj/kernel.asm	/^c01128c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128c5	obj/kernel.asm	/^c01128c5:	83 e8 24             	sub    $0x24,%eax$/;"	l
c01128c8	obj/kernel.asm	/^c01128c8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01128cb	obj/kernel.asm	/^c01128cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01128ce	obj/kernel.asm	/^c01128ce:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01128d1	obj/kernel.asm	/^c01128d1:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01128d4	obj/kernel.asm	/^c01128d4:	75 2a                	jne    c0112900 <lookup_sfs_nolock+0x61>$/;"	l
c01128d6	obj/kernel.asm	/^c01128d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01128d9	obj/kernel.asm	/^c01128d9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01128dc	obj/kernel.asm	/^c01128dc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01128df	obj/kernel.asm	/^c01128df:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01128e2	obj/kernel.asm	/^c01128e2:	e8 e0 e4 ff ff       	call   c0110dc7 <inode_ref_inc>$/;"	l
c01128e7	obj/kernel.asm	/^c01128e7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01128ea	obj/kernel.asm	/^c01128ea:	75 0f                	jne    c01128fb <lookup_sfs_nolock+0x5c>$/;"	l
c01128ec	obj/kernel.asm	/^c01128ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01128ef	obj/kernel.asm	/^c01128ef:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01128f2	obj/kernel.asm	/^c01128f2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01128f5	obj/kernel.asm	/^c01128f5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01128f8	obj/kernel.asm	/^c01128f8:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01128fb	obj/kernel.asm	/^c01128fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01128fe	obj/kernel.asm	/^c01128fe:	eb 1c                	jmp    c011291c <lookup_sfs_nolock+0x7d>$/;"	l
c0112900	obj/kernel.asm	/^c0112900:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112903	obj/kernel.asm	/^c0112903:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112906	obj/kernel.asm	/^c0112906:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112909	obj/kernel.asm	/^c0112909:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011290c	obj/kernel.asm	/^c011290c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011290f	obj/kernel.asm	/^c011290f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112912	obj/kernel.asm	/^c0112912:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0112915	obj/kernel.asm	/^c0112915:	75 ab                	jne    c01128c2 <lookup_sfs_nolock+0x23>$/;"	l
c0112917	obj/kernel.asm	/^c0112917:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011291c	obj/kernel.asm	/^c011291c:	c9                   	leave  $/;"	l
c011291d	obj/kernel.asm	/^c011291d:	c3                   	ret    $/;"	l
c011291e	obj/kernel.asm	/^c011291e <sfs_load_inode>:$/;"	l
c011291e	obj/kernel.asm	/^c011291e:	55                   	push   %ebp$/;"	l
c011291f	obj/kernel.asm	/^c011291f:	89 e5                	mov    %esp,%ebp$/;"	l
c0112921	obj/kernel.asm	/^c0112921:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112924	obj/kernel.asm	/^c0112924:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112927	obj/kernel.asm	/^c0112927:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011292a	obj/kernel.asm	/^c011292a:	e8 c2 fa ff ff       	call   c01123f1 <lock_sfs_fs>$/;"	l
c011292f	obj/kernel.asm	/^c011292f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112932	obj/kernel.asm	/^c0112932:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112936	obj/kernel.asm	/^c0112936:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112939	obj/kernel.asm	/^c0112939:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011293c	obj/kernel.asm	/^c011293c:	e8 5e ff ff ff       	call   c011289f <lookup_sfs_nolock>$/;"	l
c0112941	obj/kernel.asm	/^c0112941:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112944	obj/kernel.asm	/^c0112944:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112947	obj/kernel.asm	/^c0112947:	85 c0                	test   %eax,%eax$/;"	l
c0112949	obj/kernel.asm	/^c0112949:	74 05                	je     c0112950 <sfs_load_inode+0x32>$/;"	l
c011294b	obj/kernel.asm	/^c011294b:	e9 3c 01 00 00       	jmp    c0112a8c <sfs_load_inode+0x16e>$/;"	l
c0112950	obj/kernel.asm	/^c0112950:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0112957	obj/kernel.asm	/^c0112957:	c7 04 24 40 00 00 00 	movl   $0x40,(%esp)$/;"	l
c011295e	obj/kernel.asm	/^c011295e:	e8 85 58 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0112963	obj/kernel.asm	/^c0112963:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112966	obj/kernel.asm	/^c0112966:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011296a	obj/kernel.asm	/^c011296a:	75 05                	jne    c0112971 <sfs_load_inode+0x53>$/;"	l
c011296c	obj/kernel.asm	/^c011296c:	e9 40 01 00 00       	jmp    c0112ab1 <sfs_load_inode+0x193>$/;"	l
c0112971	obj/kernel.asm	/^c0112971:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112974	obj/kernel.asm	/^c0112974:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112978	obj/kernel.asm	/^c0112978:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011297b	obj/kernel.asm	/^c011297b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011297e	obj/kernel.asm	/^c011297e:	e8 9f fc ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c0112983	obj/kernel.asm	/^c0112983:	85 c0                	test   %eax,%eax$/;"	l
c0112985	obj/kernel.asm	/^c0112985:	75 24                	jne    c01129ab <sfs_load_inode+0x8d>$/;"	l
c0112987	obj/kernel.asm	/^c0112987:	c7 44 24 0c d5 ad 11 	movl   $0xc011add5,0xc(%esp)$/;"	l
c011298e	obj/kernel.asm	/^c011298e:	c0 $/;"	l
c011298f	obj/kernel.asm	/^c011298f:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112996	obj/kernel.asm	/^c0112996:	c0 $/;"	l
c0112997	obj/kernel.asm	/^c0112997:	c7 44 24 04 a8 00 00 	movl   $0xa8,0x4(%esp)$/;"	l
c011299e	obj/kernel.asm	/^c011299e:	00 $/;"	l
c011299f	obj/kernel.asm	/^c011299f:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01129a6	obj/kernel.asm	/^c01129a6:	e8 8c e2 fe ff       	call   c0100c37 <__panic>$/;"	l
c01129ab	obj/kernel.asm	/^c01129ab:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c01129b2	obj/kernel.asm	/^c01129b2:	00 $/;"	l
c01129b3	obj/kernel.asm	/^c01129b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01129b6	obj/kernel.asm	/^c01129b6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01129ba	obj/kernel.asm	/^c01129ba:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)$/;"	l
c01129c1	obj/kernel.asm	/^c01129c1:	00 $/;"	l
c01129c2	obj/kernel.asm	/^c01129c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01129c5	obj/kernel.asm	/^c01129c5:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01129c9	obj/kernel.asm	/^c01129c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01129cc	obj/kernel.asm	/^c01129cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01129cf	obj/kernel.asm	/^c01129cf:	e8 93 2b 00 00       	call   c0115567 <sfs_rbuf>$/;"	l
c01129d4	obj/kernel.asm	/^c01129d4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01129d7	obj/kernel.asm	/^c01129d7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01129db	obj/kernel.asm	/^c01129db:	74 05                	je     c01129e2 <sfs_load_inode+0xc4>$/;"	l
c01129dd	obj/kernel.asm	/^c01129dd:	e9 c4 00 00 00       	jmp    c0112aa6 <sfs_load_inode+0x188>$/;"	l
c01129e2	obj/kernel.asm	/^c01129e2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01129e5	obj/kernel.asm	/^c01129e5:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01129e9	obj/kernel.asm	/^c01129e9:	66 85 c0             	test   %ax,%ax$/;"	l
c01129ec	obj/kernel.asm	/^c01129ec:	75 24                	jne    c0112a12 <sfs_load_inode+0xf4>$/;"	l
c01129ee	obj/kernel.asm	/^c01129ee:	c7 44 24 0c 26 ae 11 	movl   $0xc011ae26,0xc(%esp)$/;"	l
c01129f5	obj/kernel.asm	/^c01129f5:	c0 $/;"	l
c01129f6	obj/kernel.asm	/^c01129f6:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01129fd	obj/kernel.asm	/^c01129fd:	c0 $/;"	l
c01129fe	obj/kernel.asm	/^c01129fe:	c7 44 24 04 ad 00 00 	movl   $0xad,0x4(%esp)$/;"	l
c0112a05	obj/kernel.asm	/^c0112a05:	00 $/;"	l
c0112a06	obj/kernel.asm	/^c0112a06:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112a0d	obj/kernel.asm	/^c0112a0d:	e8 25 e2 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112a12	obj/kernel.asm	/^c0112a12:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112a15	obj/kernel.asm	/^c0112a15:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112a19	obj/kernel.asm	/^c0112a19:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112a1c	obj/kernel.asm	/^c0112a1c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112a20	obj/kernel.asm	/^c0112a20:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112a23	obj/kernel.asm	/^c0112a23:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112a27	obj/kernel.asm	/^c0112a27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a2a	obj/kernel.asm	/^c0112a2a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a2d	obj/kernel.asm	/^c0112a2d:	e8 92 fd ff ff       	call   c01127c4 <sfs_create_inode>$/;"	l
c0112a32	obj/kernel.asm	/^c0112a32:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112a35	obj/kernel.asm	/^c0112a35:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112a39	obj/kernel.asm	/^c0112a39:	74 02                	je     c0112a3d <sfs_load_inode+0x11f>$/;"	l
c0112a3b	obj/kernel.asm	/^c0112a3b:	eb 69                	jmp    c0112aa6 <sfs_load_inode+0x188>$/;"	l
c0112a3d	obj/kernel.asm	/^c0112a3d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112a40	obj/kernel.asm	/^c0112a40:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112a43	obj/kernel.asm	/^c0112a43:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112a47	obj/kernel.asm	/^c0112a47:	74 0d                	je     c0112a56 <sfs_load_inode+0x138>$/;"	l
c0112a49	obj/kernel.asm	/^c0112a49:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a4c	obj/kernel.asm	/^c0112a4c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112a4f	obj/kernel.asm	/^c0112a4f:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112a54	obj/kernel.asm	/^c0112a54:	74 24                	je     c0112a7a <sfs_load_inode+0x15c>$/;"	l
c0112a56	obj/kernel.asm	/^c0112a56:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c0112a5d	obj/kernel.asm	/^c0112a5d:	c0 $/;"	l
c0112a5e	obj/kernel.asm	/^c0112a5e:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112a65	obj/kernel.asm	/^c0112a65:	c0 $/;"	l
c0112a66	obj/kernel.asm	/^c0112a66:	c7 44 24 04 b1 00 00 	movl   $0xb1,0x4(%esp)$/;"	l
c0112a6d	obj/kernel.asm	/^c0112a6d:	00 $/;"	l
c0112a6e	obj/kernel.asm	/^c0112a6e:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112a75	obj/kernel.asm	/^c0112a75:	e8 bd e1 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112a7a	obj/kernel.asm	/^c0112a7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a7d	obj/kernel.asm	/^c0112a7d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112a81	obj/kernel.asm	/^c0112a81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a84	obj/kernel.asm	/^c0112a84:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a87	obj/kernel.asm	/^c0112a87:	e8 6e fa ff ff       	call   c01124fa <sfs_set_links>$/;"	l
c0112a8c	obj/kernel.asm	/^c0112a8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a8f	obj/kernel.asm	/^c0112a8f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112a92	obj/kernel.asm	/^c0112a92:	e8 86 f9 ff ff       	call   c011241d <unlock_sfs_fs>$/;"	l
c0112a97	obj/kernel.asm	/^c0112a97:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112a9a	obj/kernel.asm	/^c0112a9a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112a9d	obj/kernel.asm	/^c0112a9d:	89 10                	mov    %edx,(%eax)$/;"	l
c0112a9f	obj/kernel.asm	/^c0112a9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112aa4	obj/kernel.asm	/^c0112aa4:	eb 19                	jmp    c0112abf <sfs_load_inode+0x1a1>$/;"	l
c0112aa6	obj/kernel.asm	/^c0112aa6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112aa9	obj/kernel.asm	/^c0112aa9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112aac	obj/kernel.asm	/^c0112aac:	e8 52 57 ff ff       	call   c0108203 <kfree>$/;"	l
c0112ab1	obj/kernel.asm	/^c0112ab1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ab4	obj/kernel.asm	/^c0112ab4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ab7	obj/kernel.asm	/^c0112ab7:	e8 61 f9 ff ff       	call   c011241d <unlock_sfs_fs>$/;"	l
c0112abc	obj/kernel.asm	/^c0112abc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112abf	obj/kernel.asm	/^c0112abf:	c9                   	leave  $/;"	l
c0112ac0	obj/kernel.asm	/^c0112ac0:	c3                   	ret    $/;"	l
c0112ac1	obj/kernel.asm	/^c0112ac1 <sfs_bmap_get_sub_nolock>:$/;"	l
c0112ac1	obj/kernel.asm	/^c0112ac1:	55                   	push   %ebp$/;"	l
c0112ac2	obj/kernel.asm	/^c0112ac2:	89 e5                	mov    %esp,%ebp$/;"	l
c0112ac4	obj/kernel.asm	/^c0112ac4:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112ac7	obj/kernel.asm	/^c0112ac7:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112ace	obj/kernel.asm	/^c0112ace:	76 24                	jbe    c0112af4 <sfs_bmap_get_sub_nolock+0x33>$/;"	l
c0112ad0	obj/kernel.asm	/^c0112ad0:	c7 44 24 0c 37 ae 11 	movl   $0xc011ae37,0xc(%esp)$/;"	l
c0112ad7	obj/kernel.asm	/^c0112ad7:	c0 $/;"	l
c0112ad8	obj/kernel.asm	/^c0112ad8:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112adf	obj/kernel.asm	/^c0112adf:	c0 $/;"	l
c0112ae0	obj/kernel.asm	/^c0112ae0:	c7 44 24 04 ca 00 00 	movl   $0xca,0x4(%esp)$/;"	l
c0112ae7	obj/kernel.asm	/^c0112ae7:	00 $/;"	l
c0112ae8	obj/kernel.asm	/^c0112ae8:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112aef	obj/kernel.asm	/^c0112aef:	e8 43 e1 fe ff       	call   c0100c37 <__panic>$/;"	l
c0112af4	obj/kernel.asm	/^c0112af4:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0112afb	obj/kernel.asm	/^c0112afb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112afe	obj/kernel.asm	/^c0112afe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0112b01	obj/kernel.asm	/^c0112b01:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112b04	obj/kernel.asm	/^c0112b04:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112b07	obj/kernel.asm	/^c0112b07:	8b 00                	mov    (%eax),%eax$/;"	l
c0112b09	obj/kernel.asm	/^c0112b09:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112b0c	obj/kernel.asm	/^c0112b0c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112b0f	obj/kernel.asm	/^c0112b0f:	85 c0                	test   %eax,%eax$/;"	l
c0112b11	obj/kernel.asm	/^c0112b11:	74 50                	je     c0112b63 <sfs_bmap_get_sub_nolock+0xa2>$/;"	l
c0112b13	obj/kernel.asm	/^c0112b13:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112b16	obj/kernel.asm	/^c0112b16:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112b19	obj/kernel.asm	/^c0112b19:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0112b1d	obj/kernel.asm	/^c0112b1d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112b21	obj/kernel.asm	/^c0112b21:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112b28	obj/kernel.asm	/^c0112b28:	00 $/;"	l
c0112b29	obj/kernel.asm	/^c0112b29:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112b2c	obj/kernel.asm	/^c0112b2c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b30	obj/kernel.asm	/^c0112b30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b33	obj/kernel.asm	/^c0112b33:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b36	obj/kernel.asm	/^c0112b36:	e8 2c 2a 00 00       	call   c0115567 <sfs_rbuf>$/;"	l
c0112b3b	obj/kernel.asm	/^c0112b3b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b3e	obj/kernel.asm	/^c0112b3e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112b42	obj/kernel.asm	/^c0112b42:	74 08                	je     c0112b4c <sfs_bmap_get_sub_nolock+0x8b>$/;"	l
c0112b44	obj/kernel.asm	/^c0112b44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112b47	obj/kernel.asm	/^c0112b47:	e9 eb 00 00 00       	jmp    c0112c37 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c0112b4c	obj/kernel.asm	/^c0112b4c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112b4f	obj/kernel.asm	/^c0112b4f:	85 c0                	test   %eax,%eax$/;"	l
c0112b51	obj/kernel.asm	/^c0112b51:	0f 85 9c 00 00 00    	jne    c0112bf3 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112b57	obj/kernel.asm	/^c0112b57:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112b5b	obj/kernel.asm	/^c0112b5b:	0f 84 92 00 00 00    	je     c0112bf3 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112b61	obj/kernel.asm	/^c0112b61:	eb 2e                	jmp    c0112b91 <sfs_bmap_get_sub_nolock+0xd0>$/;"	l
c0112b63	obj/kernel.asm	/^c0112b63:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112b67	obj/kernel.asm	/^c0112b67:	75 05                	jne    c0112b6e <sfs_bmap_get_sub_nolock+0xad>$/;"	l
c0112b69	obj/kernel.asm	/^c0112b69:	e9 85 00 00 00       	jmp    c0112bf3 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112b6e	obj/kernel.asm	/^c0112b6e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112b71	obj/kernel.asm	/^c0112b71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b75	obj/kernel.asm	/^c0112b75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b78	obj/kernel.asm	/^c0112b78:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b7b	obj/kernel.asm	/^c0112b7b:	e8 07 fb ff ff       	call   c0112687 <sfs_block_alloc>$/;"	l
c0112b80	obj/kernel.asm	/^c0112b80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b83	obj/kernel.asm	/^c0112b83:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112b87	obj/kernel.asm	/^c0112b87:	74 08                	je     c0112b91 <sfs_bmap_get_sub_nolock+0xd0>$/;"	l
c0112b89	obj/kernel.asm	/^c0112b89:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112b8c	obj/kernel.asm	/^c0112b8c:	e9 a6 00 00 00       	jmp    c0112c37 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c0112b91	obj/kernel.asm	/^c0112b91:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112b94	obj/kernel.asm	/^c0112b94:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112b98	obj/kernel.asm	/^c0112b98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b9b	obj/kernel.asm	/^c0112b9b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112b9e	obj/kernel.asm	/^c0112b9e:	e8 e4 fa ff ff       	call   c0112687 <sfs_block_alloc>$/;"	l
c0112ba3	obj/kernel.asm	/^c0112ba3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112ba6	obj/kernel.asm	/^c0112ba6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112baa	obj/kernel.asm	/^c0112baa:	74 02                	je     c0112bae <sfs_bmap_get_sub_nolock+0xed>$/;"	l
c0112bac	obj/kernel.asm	/^c0112bac:	eb 68                	jmp    c0112c16 <sfs_bmap_get_sub_nolock+0x155>$/;"	l
c0112bae	obj/kernel.asm	/^c0112bae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112bb1	obj/kernel.asm	/^c0112bb1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112bb4	obj/kernel.asm	/^c0112bb4:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0112bb8	obj/kernel.asm	/^c0112bb8:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112bbc	obj/kernel.asm	/^c0112bbc:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112bc3	obj/kernel.asm	/^c0112bc3:	00 $/;"	l
c0112bc4	obj/kernel.asm	/^c0112bc4:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112bc7	obj/kernel.asm	/^c0112bc7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112bcb	obj/kernel.asm	/^c0112bcb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112bce	obj/kernel.asm	/^c0112bce:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112bd1	obj/kernel.asm	/^c0112bd1:	e8 4a 2a 00 00       	call   c0115620 <sfs_wbuf>$/;"	l
c0112bd6	obj/kernel.asm	/^c0112bd6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112bd9	obj/kernel.asm	/^c0112bd9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112bdd	obj/kernel.asm	/^c0112bdd:	74 14                	je     c0112bf3 <sfs_bmap_get_sub_nolock+0x132>$/;"	l
c0112bdf	obj/kernel.asm	/^c0112bdf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112be2	obj/kernel.asm	/^c0112be2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112be6	obj/kernel.asm	/^c0112be6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112be9	obj/kernel.asm	/^c0112be9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112bec	obj/kernel.asm	/^c0112bec:	e8 63 fb ff ff       	call   c0112754 <sfs_block_free>$/;"	l
c0112bf1	obj/kernel.asm	/^c0112bf1:	eb 23                	jmp    c0112c16 <sfs_bmap_get_sub_nolock+0x155>$/;"	l
c0112bf3	obj/kernel.asm	/^c0112bf3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112bf6	obj/kernel.asm	/^c0112bf6:	8b 10                	mov    (%eax),%edx$/;"	l
c0112bf8	obj/kernel.asm	/^c0112bf8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112bfb	obj/kernel.asm	/^c0112bfb:	39 c2                	cmp    %eax,%edx$/;"	l
c0112bfd	obj/kernel.asm	/^c0112bfd:	74 08                	je     c0112c07 <sfs_bmap_get_sub_nolock+0x146>$/;"	l
c0112bff	obj/kernel.asm	/^c0112bff:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0112c02	obj/kernel.asm	/^c0112c02:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c05	obj/kernel.asm	/^c0112c05:	89 10                	mov    %edx,(%eax)$/;"	l
c0112c07	obj/kernel.asm	/^c0112c07:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112c0a	obj/kernel.asm	/^c0112c0a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112c0d	obj/kernel.asm	/^c0112c0d:	89 10                	mov    %edx,(%eax)$/;"	l
c0112c0f	obj/kernel.asm	/^c0112c0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112c14	obj/kernel.asm	/^c0112c14:	eb 21                	jmp    c0112c37 <sfs_bmap_get_sub_nolock+0x176>$/;"	l
c0112c16	obj/kernel.asm	/^c0112c16:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c19	obj/kernel.asm	/^c0112c19:	8b 10                	mov    (%eax),%edx$/;"	l
c0112c1b	obj/kernel.asm	/^c0112c1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c1e	obj/kernel.asm	/^c0112c1e:	39 c2                	cmp    %eax,%edx$/;"	l
c0112c20	obj/kernel.asm	/^c0112c20:	74 12                	je     c0112c34 <sfs_bmap_get_sub_nolock+0x173>$/;"	l
c0112c22	obj/kernel.asm	/^c0112c22:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c25	obj/kernel.asm	/^c0112c25:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c29	obj/kernel.asm	/^c0112c29:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c2c	obj/kernel.asm	/^c0112c2c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c2f	obj/kernel.asm	/^c0112c2f:	e8 20 fb ff ff       	call   c0112754 <sfs_block_free>$/;"	l
c0112c34	obj/kernel.asm	/^c0112c34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c37	obj/kernel.asm	/^c0112c37:	c9                   	leave  $/;"	l
c0112c38	obj/kernel.asm	/^c0112c38:	c3                   	ret    $/;"	l
c0112c39	obj/kernel.asm	/^c0112c39 <sfs_bmap_get_nolock>:$/;"	l
c0112c39	obj/kernel.asm	/^c0112c39:	55                   	push   %ebp$/;"	l
c0112c3a	obj/kernel.asm	/^c0112c3a:	89 e5                	mov    %esp,%ebp$/;"	l
c0112c3c	obj/kernel.asm	/^c0112c3c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112c3f	obj/kernel.asm	/^c0112c3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c42	obj/kernel.asm	/^c0112c42:	8b 00                	mov    (%eax),%eax$/;"	l
c0112c44	obj/kernel.asm	/^c0112c44:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112c47	obj/kernel.asm	/^c0112c47:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c0112c4b	obj/kernel.asm	/^c0112c4b:	77 5e                	ja     c0112cab <sfs_bmap_get_nolock+0x72>$/;"	l
c0112c4d	obj/kernel.asm	/^c0112c4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c50	obj/kernel.asm	/^c0112c50:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112c53	obj/kernel.asm	/^c0112c53:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0112c57	obj/kernel.asm	/^c0112c57:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112c5a	obj/kernel.asm	/^c0112c5a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112c5d	obj/kernel.asm	/^c0112c5d:	85 c0                	test   %eax,%eax$/;"	l
c0112c5f	obj/kernel.asm	/^c0112c5f:	75 45                	jne    c0112ca6 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0112c61	obj/kernel.asm	/^c0112c61:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0112c65	obj/kernel.asm	/^c0112c65:	74 3f                	je     c0112ca6 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0112c67	obj/kernel.asm	/^c0112c67:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112c6a	obj/kernel.asm	/^c0112c6a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112c6e	obj/kernel.asm	/^c0112c6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c71	obj/kernel.asm	/^c0112c71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112c74	obj/kernel.asm	/^c0112c74:	e8 0e fa ff ff       	call   c0112687 <sfs_block_alloc>$/;"	l
c0112c79	obj/kernel.asm	/^c0112c79:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112c7c	obj/kernel.asm	/^c0112c7c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112c80	obj/kernel.asm	/^c0112c80:	74 08                	je     c0112c8a <sfs_bmap_get_nolock+0x51>$/;"	l
c0112c82	obj/kernel.asm	/^c0112c82:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112c85	obj/kernel.asm	/^c0112c85:	e9 2f 01 00 00       	jmp    c0112db9 <sfs_bmap_get_nolock+0x180>$/;"	l
c0112c8a	obj/kernel.asm	/^c0112c8a:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0112c8d	obj/kernel.asm	/^c0112c8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c90	obj/kernel.asm	/^c0112c90:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112c93	obj/kernel.asm	/^c0112c93:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)$/;"	l
c0112c97	obj/kernel.asm	/^c0112c97:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c9a	obj/kernel.asm	/^c0112c9a:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112ca1	obj/kernel.asm	/^c0112ca1:	e9 c5 00 00 00       	jmp    c0112d6b <sfs_bmap_get_nolock+0x132>$/;"	l
c0112ca6	obj/kernel.asm	/^c0112ca6:	e9 c0 00 00 00       	jmp    c0112d6b <sfs_bmap_get_nolock+0x132>$/;"	l
c0112cab	obj/kernel.asm	/^c0112cab:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0112caf	obj/kernel.asm	/^c0112caf:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112cb6	obj/kernel.asm	/^c0112cb6:	0f 87 93 00 00 00    	ja     c0112d4f <sfs_bmap_get_nolock+0x116>$/;"	l
c0112cbc	obj/kernel.asm	/^c0112cbc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112cbf	obj/kernel.asm	/^c0112cbf:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112cc2	obj/kernel.asm	/^c0112cc2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112cc5	obj/kernel.asm	/^c0112cc5:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112cc8	obj/kernel.asm	/^c0112cc8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112ccc	obj/kernel.asm	/^c0112ccc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112ccf	obj/kernel.asm	/^c0112ccf:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112cd3	obj/kernel.asm	/^c0112cd3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112cd6	obj/kernel.asm	/^c0112cd6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112cda	obj/kernel.asm	/^c0112cda:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112cdd	obj/kernel.asm	/^c0112cdd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112ce1	obj/kernel.asm	/^c0112ce1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ce4	obj/kernel.asm	/^c0112ce4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ce7	obj/kernel.asm	/^c0112ce7:	e8 d5 fd ff ff       	call   c0112ac1 <sfs_bmap_get_sub_nolock>$/;"	l
c0112cec	obj/kernel.asm	/^c0112cec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112cef	obj/kernel.asm	/^c0112cef:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112cf3	obj/kernel.asm	/^c0112cf3:	74 08                	je     c0112cfd <sfs_bmap_get_nolock+0xc4>$/;"	l
c0112cf5	obj/kernel.asm	/^c0112cf5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112cf8	obj/kernel.asm	/^c0112cf8:	e9 bc 00 00 00       	jmp    c0112db9 <sfs_bmap_get_nolock+0x180>$/;"	l
c0112cfd	obj/kernel.asm	/^c0112cfd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d00	obj/kernel.asm	/^c0112d00:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
c0112d03	obj/kernel.asm	/^c0112d03:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112d06	obj/kernel.asm	/^c0112d06:	39 c2                	cmp    %eax,%edx$/;"	l
c0112d08	obj/kernel.asm	/^c0112d08:	74 43                	je     c0112d4d <sfs_bmap_get_nolock+0x114>$/;"	l
c0112d0a	obj/kernel.asm	/^c0112d0a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d0d	obj/kernel.asm	/^c0112d0d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112d10	obj/kernel.asm	/^c0112d10:	85 c0                	test   %eax,%eax$/;"	l
c0112d12	obj/kernel.asm	/^c0112d12:	74 24                	je     c0112d38 <sfs_bmap_get_nolock+0xff>$/;"	l
c0112d14	obj/kernel.asm	/^c0112d14:	c7 44 24 0c 4e ae 11 	movl   $0xc011ae4e,0xc(%esp)$/;"	l
c0112d1b	obj/kernel.asm	/^c0112d1b:	c0 $/;"	l
c0112d1c	obj/kernel.asm	/^c0112d1c:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112d23	obj/kernel.asm	/^c0112d23:	c0 $/;"	l
c0112d24	obj/kernel.asm	/^c0112d24:	c7 44 24 04 18 01 00 	movl   $0x118,0x4(%esp)$/;"	l
c0112d2b	obj/kernel.asm	/^c0112d2b:	00 $/;"	l
c0112d2c	obj/kernel.asm	/^c0112d2c:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112d33	obj/kernel.asm	/^c0112d33:	e8 ff de fe ff       	call   c0100c37 <__panic>$/;"	l
c0112d38	obj/kernel.asm	/^c0112d38:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0112d3b	obj/kernel.asm	/^c0112d3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d3e	obj/kernel.asm	/^c0112d3e:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0112d41	obj/kernel.asm	/^c0112d41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d44	obj/kernel.asm	/^c0112d44:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112d4b	obj/kernel.asm	/^c0112d4b:	eb 1e                	jmp    c0112d6b <sfs_bmap_get_nolock+0x132>$/;"	l
c0112d4d	obj/kernel.asm	/^c0112d4d:	eb 1c                	jmp    c0112d6b <sfs_bmap_get_nolock+0x132>$/;"	l
c0112d4f	obj/kernel.asm	/^c0112d4f:	c7 44 24 08 64 ae 11 	movl   $0xc011ae64,0x8(%esp)$/;"	l
c0112d56	obj/kernel.asm	/^c0112d56:	c0 $/;"	l
c0112d57	obj/kernel.asm	/^c0112d57:	c7 44 24 04 1e 01 00 	movl   $0x11e,0x4(%esp)$/;"	l
c0112d5e	obj/kernel.asm	/^c0112d5e:	00 $/;"	l
c0112d5f	obj/kernel.asm	/^c0112d5f:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112d66	obj/kernel.asm	/^c0112d66:	e8 cc de fe ff       	call   c0100c37 <__panic>$/;"	l
c0112d6b	obj/kernel.asm	/^c0112d6b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112d6e	obj/kernel.asm	/^c0112d6e:	85 c0                	test   %eax,%eax$/;"	l
c0112d70	obj/kernel.asm	/^c0112d70:	74 3a                	je     c0112dac <sfs_bmap_get_nolock+0x173>$/;"	l
c0112d72	obj/kernel.asm	/^c0112d72:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112d75	obj/kernel.asm	/^c0112d75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112d79	obj/kernel.asm	/^c0112d79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d7c	obj/kernel.asm	/^c0112d7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112d7f	obj/kernel.asm	/^c0112d7f:	e8 9e f8 ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c0112d84	obj/kernel.asm	/^c0112d84:	85 c0                	test   %eax,%eax$/;"	l
c0112d86	obj/kernel.asm	/^c0112d86:	75 24                	jne    c0112dac <sfs_bmap_get_nolock+0x173>$/;"	l
c0112d88	obj/kernel.asm	/^c0112d88:	c7 44 24 0c 90 ae 11 	movl   $0xc011ae90,0xc(%esp)$/;"	l
c0112d8f	obj/kernel.asm	/^c0112d8f:	c0 $/;"	l
c0112d90	obj/kernel.asm	/^c0112d90:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112d97	obj/kernel.asm	/^c0112d97:	c0 $/;"	l
c0112d98	obj/kernel.asm	/^c0112d98:	c7 44 24 04 21 01 00 	movl   $0x121,0x4(%esp)$/;"	l
c0112d9f	obj/kernel.asm	/^c0112d9f:	00 $/;"	l
c0112da0	obj/kernel.asm	/^c0112da0:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112da7	obj/kernel.asm	/^c0112da7:	e8 8b de fe ff       	call   c0100c37 <__panic>$/;"	l
c0112dac	obj/kernel.asm	/^c0112dac:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112daf	obj/kernel.asm	/^c0112daf:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112db2	obj/kernel.asm	/^c0112db2:	89 10                	mov    %edx,(%eax)$/;"	l
c0112db4	obj/kernel.asm	/^c0112db4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112db9	obj/kernel.asm	/^c0112db9:	c9                   	leave  $/;"	l
c0112dba	obj/kernel.asm	/^c0112dba:	c3                   	ret    $/;"	l
c0112dbb	obj/kernel.asm	/^c0112dbb <sfs_bmap_free_sub_nolock>:$/;"	l
c0112dbb	obj/kernel.asm	/^c0112dbb:	55                   	push   %ebp$/;"	l
c0112dbc	obj/kernel.asm	/^c0112dbc:	89 e5                	mov    %esp,%ebp$/;"	l
c0112dbe	obj/kernel.asm	/^c0112dbe:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112dc1	obj/kernel.asm	/^c0112dc1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112dc4	obj/kernel.asm	/^c0112dc4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112dc8	obj/kernel.asm	/^c0112dc8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112dcb	obj/kernel.asm	/^c0112dcb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112dce	obj/kernel.asm	/^c0112dce:	e8 4f f8 ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c0112dd3	obj/kernel.asm	/^c0112dd3:	85 c0                	test   %eax,%eax$/;"	l
c0112dd5	obj/kernel.asm	/^c0112dd5:	74 09                	je     c0112de0 <sfs_bmap_free_sub_nolock+0x25>$/;"	l
c0112dd7	obj/kernel.asm	/^c0112dd7:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112dde	obj/kernel.asm	/^c0112dde:	76 24                	jbe    c0112e04 <sfs_bmap_free_sub_nolock+0x49>$/;"	l
c0112de0	obj/kernel.asm	/^c0112de0:	c7 44 24 0c b8 ae 11 	movl   $0xc011aeb8,0xc(%esp)$/;"	l
c0112de7	obj/kernel.asm	/^c0112de7:	c0 $/;"	l
c0112de8	obj/kernel.asm	/^c0112de8:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112def	obj/kernel.asm	/^c0112def:	c0 $/;"	l
c0112df0	obj/kernel.asm	/^c0112df0:	c7 44 24 04 2b 01 00 	movl   $0x12b,0x4(%esp)$/;"	l
c0112df7	obj/kernel.asm	/^c0112df7:	00 $/;"	l
c0112df8	obj/kernel.asm	/^c0112df8:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112dff	obj/kernel.asm	/^c0112dff:	e8 33 de fe ff       	call   c0100c37 <__panic>$/;"	l
c0112e04	obj/kernel.asm	/^c0112e04:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0112e0b	obj/kernel.asm	/^c0112e0b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112e0e	obj/kernel.asm	/^c0112e0e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0112e11	obj/kernel.asm	/^c0112e11:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112e14	obj/kernel.asm	/^c0112e14:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e17	obj/kernel.asm	/^c0112e17:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112e1b	obj/kernel.asm	/^c0112e1b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e1e	obj/kernel.asm	/^c0112e1e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112e22	obj/kernel.asm	/^c0112e22:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112e29	obj/kernel.asm	/^c0112e29:	00 $/;"	l
c0112e2a	obj/kernel.asm	/^c0112e2a:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0112e2d	obj/kernel.asm	/^c0112e2d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112e31	obj/kernel.asm	/^c0112e31:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e34	obj/kernel.asm	/^c0112e34:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112e37	obj/kernel.asm	/^c0112e37:	e8 2b 27 00 00       	call   c0115567 <sfs_rbuf>$/;"	l
c0112e3c	obj/kernel.asm	/^c0112e3c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112e3f	obj/kernel.asm	/^c0112e3f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112e43	obj/kernel.asm	/^c0112e43:	74 05                	je     c0112e4a <sfs_bmap_free_sub_nolock+0x8f>$/;"	l
c0112e45	obj/kernel.asm	/^c0112e45:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e48	obj/kernel.asm	/^c0112e48:	eb 54                	jmp    c0112e9e <sfs_bmap_free_sub_nolock+0xe3>$/;"	l
c0112e4a	obj/kernel.asm	/^c0112e4a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112e4d	obj/kernel.asm	/^c0112e4d:	85 c0                	test   %eax,%eax$/;"	l
c0112e4f	obj/kernel.asm	/^c0112e4f:	74 48                	je     c0112e99 <sfs_bmap_free_sub_nolock+0xde>$/;"	l
c0112e51	obj/kernel.asm	/^c0112e51:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e54	obj/kernel.asm	/^c0112e54:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112e58	obj/kernel.asm	/^c0112e58:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e5b	obj/kernel.asm	/^c0112e5b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112e5f	obj/kernel.asm	/^c0112e5f:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0112e66	obj/kernel.asm	/^c0112e66:	00 $/;"	l
c0112e67	obj/kernel.asm	/^c0112e67:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112e6a	obj/kernel.asm	/^c0112e6a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112e6e	obj/kernel.asm	/^c0112e6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e71	obj/kernel.asm	/^c0112e71:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112e74	obj/kernel.asm	/^c0112e74:	e8 a7 27 00 00       	call   c0115620 <sfs_wbuf>$/;"	l
c0112e79	obj/kernel.asm	/^c0112e79:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112e7c	obj/kernel.asm	/^c0112e7c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112e80	obj/kernel.asm	/^c0112e80:	74 05                	je     c0112e87 <sfs_bmap_free_sub_nolock+0xcc>$/;"	l
c0112e82	obj/kernel.asm	/^c0112e82:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e85	obj/kernel.asm	/^c0112e85:	eb 17                	jmp    c0112e9e <sfs_bmap_free_sub_nolock+0xe3>$/;"	l
c0112e87	obj/kernel.asm	/^c0112e87:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112e8a	obj/kernel.asm	/^c0112e8a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112e8e	obj/kernel.asm	/^c0112e8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e91	obj/kernel.asm	/^c0112e91:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112e94	obj/kernel.asm	/^c0112e94:	e8 bb f8 ff ff       	call   c0112754 <sfs_block_free>$/;"	l
c0112e99	obj/kernel.asm	/^c0112e99:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112e9e	obj/kernel.asm	/^c0112e9e:	c9                   	leave  $/;"	l
c0112e9f	obj/kernel.asm	/^c0112e9f:	c3                   	ret    $/;"	l
c0112ea0	obj/kernel.asm	/^c0112ea0 <sfs_bmap_free_nolock>:$/;"	l
c0112ea0	obj/kernel.asm	/^c0112ea0:	55                   	push   %ebp$/;"	l
c0112ea1	obj/kernel.asm	/^c0112ea1:	89 e5                	mov    %esp,%ebp$/;"	l
c0112ea3	obj/kernel.asm	/^c0112ea3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112ea6	obj/kernel.asm	/^c0112ea6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ea9	obj/kernel.asm	/^c0112ea9:	8b 00                	mov    (%eax),%eax$/;"	l
c0112eab	obj/kernel.asm	/^c0112eab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112eae	obj/kernel.asm	/^c0112eae:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c0112eb2	obj/kernel.asm	/^c0112eb2:	77 44                	ja     c0112ef8 <sfs_bmap_free_nolock+0x58>$/;"	l
c0112eb4	obj/kernel.asm	/^c0112eb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112eb7	obj/kernel.asm	/^c0112eb7:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112eba	obj/kernel.asm	/^c0112eba:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0112ebe	obj/kernel.asm	/^c0112ebe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112ec1	obj/kernel.asm	/^c0112ec1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112ec5	obj/kernel.asm	/^c0112ec5:	74 2a                	je     c0112ef1 <sfs_bmap_free_nolock+0x51>$/;"	l
c0112ec7	obj/kernel.asm	/^c0112ec7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112eca	obj/kernel.asm	/^c0112eca:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112ece	obj/kernel.asm	/^c0112ece:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ed1	obj/kernel.asm	/^c0112ed1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112ed4	obj/kernel.asm	/^c0112ed4:	e8 7b f8 ff ff       	call   c0112754 <sfs_block_free>$/;"	l
c0112ed9	obj/kernel.asm	/^c0112ed9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112edc	obj/kernel.asm	/^c0112edc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0112edf	obj/kernel.asm	/^c0112edf:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%eax,%edx,4)$/;"	l
c0112ee6	obj/kernel.asm	/^c0112ee6:	00 $/;"	l
c0112ee7	obj/kernel.asm	/^c0112ee7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112eea	obj/kernel.asm	/^c0112eea:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112ef1	obj/kernel.asm	/^c0112ef1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112ef6	obj/kernel.asm	/^c0112ef6:	eb 4f                	jmp    c0112f47 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112ef8	obj/kernel.asm	/^c0112ef8:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0112efc	obj/kernel.asm	/^c0112efc:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0112f03	obj/kernel.asm	/^c0112f03:	77 3d                	ja     c0112f42 <sfs_bmap_free_nolock+0xa2>$/;"	l
c0112f05	obj/kernel.asm	/^c0112f05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f08	obj/kernel.asm	/^c0112f08:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112f0b	obj/kernel.asm	/^c0112f0b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112f0e	obj/kernel.asm	/^c0112f0e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112f12	obj/kernel.asm	/^c0112f12:	74 27                	je     c0112f3b <sfs_bmap_free_nolock+0x9b>$/;"	l
c0112f14	obj/kernel.asm	/^c0112f14:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112f17	obj/kernel.asm	/^c0112f17:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112f1b	obj/kernel.asm	/^c0112f1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112f1e	obj/kernel.asm	/^c0112f1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112f22	obj/kernel.asm	/^c0112f22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f25	obj/kernel.asm	/^c0112f25:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112f28	obj/kernel.asm	/^c0112f28:	e8 8e fe ff ff       	call   c0112dbb <sfs_bmap_free_sub_nolock>$/;"	l
c0112f2d	obj/kernel.asm	/^c0112f2d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112f30	obj/kernel.asm	/^c0112f30:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0112f34	obj/kernel.asm	/^c0112f34:	74 05                	je     c0112f3b <sfs_bmap_free_nolock+0x9b>$/;"	l
c0112f36	obj/kernel.asm	/^c0112f36:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112f39	obj/kernel.asm	/^c0112f39:	eb 0c                	jmp    c0112f47 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112f3b	obj/kernel.asm	/^c0112f3b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112f40	obj/kernel.asm	/^c0112f40:	eb 05                	jmp    c0112f47 <sfs_bmap_free_nolock+0xa7>$/;"	l
c0112f42	obj/kernel.asm	/^c0112f42:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112f47	obj/kernel.asm	/^c0112f47:	c9                   	leave  $/;"	l
c0112f48	obj/kernel.asm	/^c0112f48:	c3                   	ret    $/;"	l
c0112f49	obj/kernel.asm	/^c0112f49 <sfs_bmap_load_nolock>:$/;"	l
c0112f49	obj/kernel.asm	/^c0112f49:	55                   	push   %ebp$/;"	l
c0112f4a	obj/kernel.asm	/^c0112f4a:	89 e5                	mov    %esp,%ebp$/;"	l
c0112f4c	obj/kernel.asm	/^c0112f4c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112f4f	obj/kernel.asm	/^c0112f4f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112f52	obj/kernel.asm	/^c0112f52:	8b 00                	mov    (%eax),%eax$/;"	l
c0112f54	obj/kernel.asm	/^c0112f54:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112f57	obj/kernel.asm	/^c0112f57:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f5a	obj/kernel.asm	/^c0112f5a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112f5d	obj/kernel.asm	/^c0112f5d:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112f60	obj/kernel.asm	/^c0112f60:	73 24                	jae    c0112f86 <sfs_bmap_load_nolock+0x3d>$/;"	l
c0112f62	obj/kernel.asm	/^c0112f62:	c7 44 24 0c ec ae 11 	movl   $0xc011aeec,0xc(%esp)$/;"	l
c0112f69	obj/kernel.asm	/^c0112f69:	c0 $/;"	l
c0112f6a	obj/kernel.asm	/^c0112f6a:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112f71	obj/kernel.asm	/^c0112f71:	c0 $/;"	l
c0112f72	obj/kernel.asm	/^c0112f72:	c7 44 24 04 64 01 00 	movl   $0x164,0x4(%esp)$/;"	l
c0112f79	obj/kernel.asm	/^c0112f79:	00 $/;"	l
c0112f7a	obj/kernel.asm	/^c0112f7a:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0112f81	obj/kernel.asm	/^c0112f81:	e8 b1 dc fe ff       	call   c0100c37 <__panic>$/;"	l
c0112f86	obj/kernel.asm	/^c0112f86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f89	obj/kernel.asm	/^c0112f89:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112f8c	obj/kernel.asm	/^c0112f8c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112f8f	obj/kernel.asm	/^c0112f8f:	0f 94 c0             	sete   %al$/;"	l
c0112f92	obj/kernel.asm	/^c0112f92:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112f95	obj/kernel.asm	/^c0112f95:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112f98	obj/kernel.asm	/^c0112f98:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0112f9b	obj/kernel.asm	/^c0112f9b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0112f9f	obj/kernel.asm	/^c0112f9f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112fa2	obj/kernel.asm	/^c0112fa2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0112fa6	obj/kernel.asm	/^c0112fa6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112fa9	obj/kernel.asm	/^c0112fa9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0112fad	obj/kernel.asm	/^c0112fad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112fb0	obj/kernel.asm	/^c0112fb0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112fb4	obj/kernel.asm	/^c0112fb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112fb7	obj/kernel.asm	/^c0112fb7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112fba	obj/kernel.asm	/^c0112fba:	e8 7a fc ff ff       	call   c0112c39 <sfs_bmap_get_nolock>$/;"	l
c0112fbf	obj/kernel.asm	/^c0112fbf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112fc2	obj/kernel.asm	/^c0112fc2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112fc6	obj/kernel.asm	/^c0112fc6:	74 05                	je     c0112fcd <sfs_bmap_load_nolock+0x84>$/;"	l
c0112fc8	obj/kernel.asm	/^c0112fc8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112fcb	obj/kernel.asm	/^c0112fcb:	eb 62                	jmp    c011302f <sfs_bmap_load_nolock+0xe6>$/;"	l
c0112fcd	obj/kernel.asm	/^c0112fcd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112fd0	obj/kernel.asm	/^c0112fd0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0112fd4	obj/kernel.asm	/^c0112fd4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112fd7	obj/kernel.asm	/^c0112fd7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0112fda	obj/kernel.asm	/^c0112fda:	e8 43 f6 ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c0112fdf	obj/kernel.asm	/^c0112fdf:	85 c0                	test   %eax,%eax$/;"	l
c0112fe1	obj/kernel.asm	/^c0112fe1:	75 24                	jne    c0113007 <sfs_bmap_load_nolock+0xbe>$/;"	l
c0112fe3	obj/kernel.asm	/^c0112fe3:	c7 44 24 0c d5 ad 11 	movl   $0xc011add5,0xc(%esp)$/;"	l
c0112fea	obj/kernel.asm	/^c0112fea:	c0 $/;"	l
c0112feb	obj/kernel.asm	/^c0112feb:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0112ff2	obj/kernel.asm	/^c0112ff2:	c0 $/;"	l
c0112ff3	obj/kernel.asm	/^c0112ff3:	c7 44 24 04 6b 01 00 	movl   $0x16b,0x4(%esp)$/;"	l
c0112ffa	obj/kernel.asm	/^c0112ffa:	00 $/;"	l
c0112ffb	obj/kernel.asm	/^c0112ffb:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113002	obj/kernel.asm	/^c0113002:	e8 30 dc fe ff       	call   c0100c37 <__panic>$/;"	l
c0113007	obj/kernel.asm	/^c0113007:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011300b	obj/kernel.asm	/^c011300b:	74 0f                	je     c011301c <sfs_bmap_load_nolock+0xd3>$/;"	l
c011300d	obj/kernel.asm	/^c011300d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113010	obj/kernel.asm	/^c0113010:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113013	obj/kernel.asm	/^c0113013:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113016	obj/kernel.asm	/^c0113016:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113019	obj/kernel.asm	/^c0113019:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c011301c	obj/kernel.asm	/^c011301c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0113020	obj/kernel.asm	/^c0113020:	74 08                	je     c011302a <sfs_bmap_load_nolock+0xe1>$/;"	l
c0113022	obj/kernel.asm	/^c0113022:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0113025	obj/kernel.asm	/^c0113025:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113028	obj/kernel.asm	/^c0113028:	89 10                	mov    %edx,(%eax)$/;"	l
c011302a	obj/kernel.asm	/^c011302a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011302f	obj/kernel.asm	/^c011302f:	c9                   	leave  $/;"	l
c0113030	obj/kernel.asm	/^c0113030:	c3                   	ret    $/;"	l
c0113031	obj/kernel.asm	/^c0113031 <sfs_bmap_truncate_nolock>:$/;"	l
c0113031	obj/kernel.asm	/^c0113031:	55                   	push   %ebp$/;"	l
c0113032	obj/kernel.asm	/^c0113032:	89 e5                	mov    %esp,%ebp$/;"	l
c0113034	obj/kernel.asm	/^c0113034:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113037	obj/kernel.asm	/^c0113037:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011303a	obj/kernel.asm	/^c011303a:	8b 00                	mov    (%eax),%eax$/;"	l
c011303c	obj/kernel.asm	/^c011303c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011303f	obj/kernel.asm	/^c011303f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113042	obj/kernel.asm	/^c0113042:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113045	obj/kernel.asm	/^c0113045:	85 c0                	test   %eax,%eax$/;"	l
c0113047	obj/kernel.asm	/^c0113047:	75 24                	jne    c011306d <sfs_bmap_truncate_nolock+0x3c>$/;"	l
c0113049	obj/kernel.asm	/^c0113049:	c7 44 24 0c 01 af 11 	movl   $0xc011af01,0xc(%esp)$/;"	l
c0113050	obj/kernel.asm	/^c0113050:	c0 $/;"	l
c0113051	obj/kernel.asm	/^c0113051:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113058	obj/kernel.asm	/^c0113058:	c0 $/;"	l
c0113059	obj/kernel.asm	/^c0113059:	c7 44 24 04 7b 01 00 	movl   $0x17b,0x4(%esp)$/;"	l
c0113060	obj/kernel.asm	/^c0113060:	00 $/;"	l
c0113061	obj/kernel.asm	/^c0113061:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113068	obj/kernel.asm	/^c0113068:	e8 ca db fe ff       	call   c0100c37 <__panic>$/;"	l
c011306d	obj/kernel.asm	/^c011306d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113070	obj/kernel.asm	/^c0113070:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113073	obj/kernel.asm	/^c0113073:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0113076	obj/kernel.asm	/^c0113076:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011307a	obj/kernel.asm	/^c011307a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011307d	obj/kernel.asm	/^c011307d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113081	obj/kernel.asm	/^c0113081:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113084	obj/kernel.asm	/^c0113084:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113087	obj/kernel.asm	/^c0113087:	e8 14 fe ff ff       	call   c0112ea0 <sfs_bmap_free_nolock>$/;"	l
c011308c	obj/kernel.asm	/^c011308c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011308f	obj/kernel.asm	/^c011308f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113093	obj/kernel.asm	/^c0113093:	74 05                	je     c011309a <sfs_bmap_truncate_nolock+0x69>$/;"	l
c0113095	obj/kernel.asm	/^c0113095:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113098	obj/kernel.asm	/^c0113098:	eb 1e                	jmp    c01130b8 <sfs_bmap_truncate_nolock+0x87>$/;"	l
c011309a	obj/kernel.asm	/^c011309a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011309d	obj/kernel.asm	/^c011309d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01130a0	obj/kernel.asm	/^c01130a0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01130a3	obj/kernel.asm	/^c01130a3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01130a6	obj/kernel.asm	/^c01130a6:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01130a9	obj/kernel.asm	/^c01130a9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01130ac	obj/kernel.asm	/^c01130ac:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01130b3	obj/kernel.asm	/^c01130b3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01130b8	obj/kernel.asm	/^c01130b8:	c9                   	leave  $/;"	l
c01130b9	obj/kernel.asm	/^c01130b9:	c3                   	ret    $/;"	l
c01130ba	obj/kernel.asm	/^c01130ba <sfs_dirent_read_nolock>:$/;"	l
c01130ba	obj/kernel.asm	/^c01130ba:	55                   	push   %ebp$/;"	l
c01130bb	obj/kernel.asm	/^c01130bb:	89 e5                	mov    %esp,%ebp$/;"	l
c01130bd	obj/kernel.asm	/^c01130bd:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01130c0	obj/kernel.asm	/^c01130c0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01130c3	obj/kernel.asm	/^c01130c3:	8b 00                	mov    (%eax),%eax$/;"	l
c01130c5	obj/kernel.asm	/^c01130c5:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01130c9	obj/kernel.asm	/^c01130c9:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c01130cd	obj/kernel.asm	/^c01130cd:	75 15                	jne    c01130e4 <sfs_dirent_read_nolock+0x2a>$/;"	l
c01130cf	obj/kernel.asm	/^c01130cf:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01130d3	obj/kernel.asm	/^c01130d3:	78 0f                	js     c01130e4 <sfs_dirent_read_nolock+0x2a>$/;"	l
c01130d5	obj/kernel.asm	/^c01130d5:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01130d8	obj/kernel.asm	/^c01130d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01130db	obj/kernel.asm	/^c01130db:	8b 00                	mov    (%eax),%eax$/;"	l
c01130dd	obj/kernel.asm	/^c01130dd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01130e0	obj/kernel.asm	/^c01130e0:	39 c2                	cmp    %eax,%edx$/;"	l
c01130e2	obj/kernel.asm	/^c01130e2:	72 24                	jb     c0113108 <sfs_dirent_read_nolock+0x4e>$/;"	l
c01130e4	obj/kernel.asm	/^c01130e4:	c7 44 24 0c 14 af 11 	movl   $0xc011af14,0xc(%esp)$/;"	l
c01130eb	obj/kernel.asm	/^c01130eb:	c0 $/;"	l
c01130ec	obj/kernel.asm	/^c01130ec:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01130f3	obj/kernel.asm	/^c01130f3:	c0 $/;"	l
c01130f4	obj/kernel.asm	/^c01130f4:	c7 44 24 04 8e 01 00 	movl   $0x18e,0x4(%esp)$/;"	l
c01130fb	obj/kernel.asm	/^c01130fb:	00 $/;"	l
c01130fc	obj/kernel.asm	/^c01130fc:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113103	obj/kernel.asm	/^c0113103:	e8 2f db fe ff       	call   c0100c37 <__panic>$/;"	l
c0113108	obj/kernel.asm	/^c0113108:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011310b	obj/kernel.asm	/^c011310b:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c011310e	obj/kernel.asm	/^c011310e:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0113112	obj/kernel.asm	/^c0113112:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113116	obj/kernel.asm	/^c0113116:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113119	obj/kernel.asm	/^c0113119:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011311d	obj/kernel.asm	/^c011311d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113120	obj/kernel.asm	/^c0113120:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113123	obj/kernel.asm	/^c0113123:	e8 21 fe ff ff       	call   c0112f49 <sfs_bmap_load_nolock>$/;"	l
c0113128	obj/kernel.asm	/^c0113128:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011312b	obj/kernel.asm	/^c011312b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011312f	obj/kernel.asm	/^c011312f:	74 08                	je     c0113139 <sfs_dirent_read_nolock+0x7f>$/;"	l
c0113131	obj/kernel.asm	/^c0113131:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113134	obj/kernel.asm	/^c0113134:	e9 80 00 00 00       	jmp    c01131b9 <sfs_dirent_read_nolock+0xff>$/;"	l
c0113139	obj/kernel.asm	/^c0113139:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011313c	obj/kernel.asm	/^c011313c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113140	obj/kernel.asm	/^c0113140:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113143	obj/kernel.asm	/^c0113143:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113146	obj/kernel.asm	/^c0113146:	e8 d7 f4 ff ff       	call   c0112622 <sfs_block_inuse>$/;"	l
c011314b	obj/kernel.asm	/^c011314b:	85 c0                	test   %eax,%eax$/;"	l
c011314d	obj/kernel.asm	/^c011314d:	75 24                	jne    c0113173 <sfs_dirent_read_nolock+0xb9>$/;"	l
c011314f	obj/kernel.asm	/^c011314f:	c7 44 24 0c d5 ad 11 	movl   $0xc011add5,0xc(%esp)$/;"	l
c0113156	obj/kernel.asm	/^c0113156:	c0 $/;"	l
c0113157	obj/kernel.asm	/^c0113157:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c011315e	obj/kernel.asm	/^c011315e:	c0 $/;"	l
c011315f	obj/kernel.asm	/^c011315f:	c7 44 24 04 95 01 00 	movl   $0x195,0x4(%esp)$/;"	l
c0113166	obj/kernel.asm	/^c0113166:	00 $/;"	l
c0113167	obj/kernel.asm	/^c0113167:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c011316e	obj/kernel.asm	/^c011316e:	e8 c4 da fe ff       	call   c0100c37 <__panic>$/;"	l
c0113173	obj/kernel.asm	/^c0113173:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113176	obj/kernel.asm	/^c0113176:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011317d	obj/kernel.asm	/^c011317d:	00 $/;"	l
c011317e	obj/kernel.asm	/^c011317e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113182	obj/kernel.asm	/^c0113182:	c7 44 24 08 04 01 00 	movl   $0x104,0x8(%esp)$/;"	l
c0113189	obj/kernel.asm	/^c0113189:	00 $/;"	l
c011318a	obj/kernel.asm	/^c011318a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011318d	obj/kernel.asm	/^c011318d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113191	obj/kernel.asm	/^c0113191:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113194	obj/kernel.asm	/^c0113194:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113197	obj/kernel.asm	/^c0113197:	e8 cb 23 00 00       	call   c0115567 <sfs_rbuf>$/;"	l
c011319c	obj/kernel.asm	/^c011319c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011319f	obj/kernel.asm	/^c011319f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01131a3	obj/kernel.asm	/^c01131a3:	74 05                	je     c01131aa <sfs_dirent_read_nolock+0xf0>$/;"	l
c01131a5	obj/kernel.asm	/^c01131a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01131a8	obj/kernel.asm	/^c01131a8:	eb 0f                	jmp    c01131b9 <sfs_dirent_read_nolock+0xff>$/;"	l
c01131aa	obj/kernel.asm	/^c01131aa:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01131ad	obj/kernel.asm	/^c01131ad:	c6 80 03 01 00 00 00 	movb   $0x0,0x103(%eax)$/;"	l
c01131b4	obj/kernel.asm	/^c01131b4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01131b9	obj/kernel.asm	/^c01131b9:	c9                   	leave  $/;"	l
c01131ba	obj/kernel.asm	/^c01131ba:	c3                   	ret    $/;"	l
c01131bb	obj/kernel.asm	/^c01131bb <sfs_dirent_search_nolock>:$/;"	l
c01131bb	obj/kernel.asm	/^c01131bb:	55                   	push   %ebp$/;"	l
c01131bc	obj/kernel.asm	/^c01131bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01131be	obj/kernel.asm	/^c01131be:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01131c1	obj/kernel.asm	/^c01131c1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01131c4	obj/kernel.asm	/^c01131c4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01131c7	obj/kernel.asm	/^c01131c7:	e8 6e 31 00 00       	call   c011633a <strlen>$/;"	l
c01131cc	obj/kernel.asm	/^c01131cc:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c01131d1	obj/kernel.asm	/^c01131d1:	76 24                	jbe    c01131f7 <sfs_dirent_search_nolock+0x3c>$/;"	l
c01131d3	obj/kernel.asm	/^c01131d3:	c7 44 24 0c 60 af 11 	movl   $0xc011af60,0xc(%esp)$/;"	l
c01131da	obj/kernel.asm	/^c01131da:	c0 $/;"	l
c01131db	obj/kernel.asm	/^c01131db:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01131e2	obj/kernel.asm	/^c01131e2:	c0 $/;"	l
c01131e3	obj/kernel.asm	/^c01131e3:	c7 44 24 04 ba 01 00 	movl   $0x1ba,0x4(%esp)$/;"	l
c01131ea	obj/kernel.asm	/^c01131ea:	00 $/;"	l
c01131eb	obj/kernel.asm	/^c01131eb:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01131f2	obj/kernel.asm	/^c01131f2:	e8 40 da fe ff       	call   c0100c37 <__panic>$/;"	l
c01131f7	obj/kernel.asm	/^c01131f7:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c01131fe	obj/kernel.asm	/^c01131fe:	e8 e5 4f ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0113203	obj/kernel.asm	/^c0113203:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113206	obj/kernel.asm	/^c0113206:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011320a	obj/kernel.asm	/^c011320a:	75 0a                	jne    c0113216 <sfs_dirent_search_nolock+0x5b>$/;"	l
c011320c	obj/kernel.asm	/^c011320c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113211	obj/kernel.asm	/^c0113211:	e9 cb 00 00 00       	jmp    c01132e1 <sfs_dirent_search_nolock+0x126>$/;"	l
c0113216	obj/kernel.asm	/^c0113216:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113219	obj/kernel.asm	/^c0113219:	8b 00                	mov    (%eax),%eax$/;"	l
c011321b	obj/kernel.asm	/^c011321b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011321e	obj/kernel.asm	/^c011321e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113221	obj/kernel.asm	/^c0113221:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0113225	obj/kernel.asm	/^c0113225:	74 08                	je     c011322f <sfs_dirent_search_nolock+0x74>$/;"	l
c0113227	obj/kernel.asm	/^c0113227:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c011322a	obj/kernel.asm	/^c011322a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011322d	obj/kernel.asm	/^c011322d:	89 10                	mov    %edx,(%eax)$/;"	l
c011322f	obj/kernel.asm	/^c011322f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0113236	obj/kernel.asm	/^c0113236:	e9 85 00 00 00       	jmp    c01132c0 <sfs_dirent_search_nolock+0x105>$/;"	l
c011323b	obj/kernel.asm	/^c011323b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011323e	obj/kernel.asm	/^c011323e:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113242	obj/kernel.asm	/^c0113242:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113245	obj/kernel.asm	/^c0113245:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113249	obj/kernel.asm	/^c0113249:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011324c	obj/kernel.asm	/^c011324c:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113250	obj/kernel.asm	/^c0113250:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113253	obj/kernel.asm	/^c0113253:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113256	obj/kernel.asm	/^c0113256:	e8 5f fe ff ff       	call   c01130ba <sfs_dirent_read_nolock>$/;"	l
c011325b	obj/kernel.asm	/^c011325b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011325e	obj/kernel.asm	/^c011325e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113262	obj/kernel.asm	/^c0113262:	74 02                	je     c0113266 <sfs_dirent_search_nolock+0xab>$/;"	l
c0113264	obj/kernel.asm	/^c0113264:	eb 6d                	jmp    c01132d3 <sfs_dirent_search_nolock+0x118>$/;"	l
c0113266	obj/kernel.asm	/^c0113266:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113269	obj/kernel.asm	/^c0113269:	8b 00                	mov    (%eax),%eax$/;"	l
c011326b	obj/kernel.asm	/^c011326b:	85 c0                	test   %eax,%eax$/;"	l
c011326d	obj/kernel.asm	/^c011326d:	75 12                	jne    c0113281 <sfs_dirent_search_nolock+0xc6>$/;"	l
c011326f	obj/kernel.asm	/^c011326f:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0113273	obj/kernel.asm	/^c0113273:	74 0a                	je     c011327f <sfs_dirent_search_nolock+0xc4>$/;"	l
c0113275	obj/kernel.asm	/^c0113275:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0113278	obj/kernel.asm	/^c0113278:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c011327b	obj/kernel.asm	/^c011327b:	89 10                	mov    %edx,(%eax)$/;"	l
c011327d	obj/kernel.asm	/^c011327d:	eb 3d                	jmp    c01132bc <sfs_dirent_search_nolock+0x101>$/;"	l
c011327f	obj/kernel.asm	/^c011327f:	eb 3b                	jmp    c01132bc <sfs_dirent_search_nolock+0x101>$/;"	l
c0113281	obj/kernel.asm	/^c0113281:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113284	obj/kernel.asm	/^c0113284:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113287	obj/kernel.asm	/^c0113287:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011328b	obj/kernel.asm	/^c011328b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011328e	obj/kernel.asm	/^c011328e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113291	obj/kernel.asm	/^c0113291:	e8 9c 31 00 00       	call   c0116432 <strcmp>$/;"	l
c0113296	obj/kernel.asm	/^c0113296:	85 c0                	test   %eax,%eax$/;"	l
c0113298	obj/kernel.asm	/^c0113298:	75 22                	jne    c01132bc <sfs_dirent_search_nolock+0x101>$/;"	l
c011329a	obj/kernel.asm	/^c011329a:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c011329e	obj/kernel.asm	/^c011329e:	74 08                	je     c01132a8 <sfs_dirent_search_nolock+0xed>$/;"	l
c01132a0	obj/kernel.asm	/^c01132a0:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01132a3	obj/kernel.asm	/^c01132a3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01132a6	obj/kernel.asm	/^c01132a6:	89 10                	mov    %edx,(%eax)$/;"	l
c01132a8	obj/kernel.asm	/^c01132a8:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01132ac	obj/kernel.asm	/^c01132ac:	74 0c                	je     c01132ba <sfs_dirent_search_nolock+0xff>$/;"	l
c01132ae	obj/kernel.asm	/^c01132ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01132b1	obj/kernel.asm	/^c01132b1:	8b 10                	mov    (%eax),%edx$/;"	l
c01132b3	obj/kernel.asm	/^c01132b3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01132b6	obj/kernel.asm	/^c01132b6:	89 10                	mov    %edx,(%eax)$/;"	l
c01132b8	obj/kernel.asm	/^c01132b8:	eb 19                	jmp    c01132d3 <sfs_dirent_search_nolock+0x118>$/;"	l
c01132ba	obj/kernel.asm	/^c01132ba:	eb 17                	jmp    c01132d3 <sfs_dirent_search_nolock+0x118>$/;"	l
c01132bc	obj/kernel.asm	/^c01132bc:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01132c0	obj/kernel.asm	/^c01132c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01132c3	obj/kernel.asm	/^c01132c3:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c01132c6	obj/kernel.asm	/^c01132c6:	0f 8c 6f ff ff ff    	jl     c011323b <sfs_dirent_search_nolock+0x80>$/;"	l
c01132cc	obj/kernel.asm	/^c01132cc:	c7 45 f4 f0 ff ff ff 	movl   $0xfffffff0,-0xc(%ebp)$/;"	l
c01132d3	obj/kernel.asm	/^c01132d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01132d6	obj/kernel.asm	/^c01132d6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01132d9	obj/kernel.asm	/^c01132d9:	e8 25 4f ff ff       	call   c0108203 <kfree>$/;"	l
c01132de	obj/kernel.asm	/^c01132de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01132e1	obj/kernel.asm	/^c01132e1:	c9                   	leave  $/;"	l
c01132e2	obj/kernel.asm	/^c01132e2:	c3                   	ret    $/;"	l
c01132e3	obj/kernel.asm	/^c01132e3 <sfs_dirent_findino_nolock>:$/;"	l
c01132e3	obj/kernel.asm	/^c01132e3:	55                   	push   %ebp$/;"	l
c01132e4	obj/kernel.asm	/^c01132e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01132e6	obj/kernel.asm	/^c01132e6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01132e9	obj/kernel.asm	/^c01132e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01132ec	obj/kernel.asm	/^c01132ec:	8b 00                	mov    (%eax),%eax$/;"	l
c01132ee	obj/kernel.asm	/^c01132ee:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01132f1	obj/kernel.asm	/^c01132f1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01132f4	obj/kernel.asm	/^c01132f4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01132fb	obj/kernel.asm	/^c01132fb:	eb 43                	jmp    c0113340 <sfs_dirent_findino_nolock+0x5d>$/;"	l
c01132fd	obj/kernel.asm	/^c01132fd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113300	obj/kernel.asm	/^c0113300:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113304	obj/kernel.asm	/^c0113304:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113307	obj/kernel.asm	/^c0113307:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011330b	obj/kernel.asm	/^c011330b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011330e	obj/kernel.asm	/^c011330e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113312	obj/kernel.asm	/^c0113312:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113315	obj/kernel.asm	/^c0113315:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113318	obj/kernel.asm	/^c0113318:	e8 9d fd ff ff       	call   c01130ba <sfs_dirent_read_nolock>$/;"	l
c011331d	obj/kernel.asm	/^c011331d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113320	obj/kernel.asm	/^c0113320:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113324	obj/kernel.asm	/^c0113324:	74 05                	je     c011332b <sfs_dirent_findino_nolock+0x48>$/;"	l
c0113326	obj/kernel.asm	/^c0113326:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113329	obj/kernel.asm	/^c0113329:	eb 22                	jmp    c011334d <sfs_dirent_findino_nolock+0x6a>$/;"	l
c011332b	obj/kernel.asm	/^c011332b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011332e	obj/kernel.asm	/^c011332e:	8b 00                	mov    (%eax),%eax$/;"	l
c0113330	obj/kernel.asm	/^c0113330:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0113333	obj/kernel.asm	/^c0113333:	75 07                	jne    c011333c <sfs_dirent_findino_nolock+0x59>$/;"	l
c0113335	obj/kernel.asm	/^c0113335:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011333a	obj/kernel.asm	/^c011333a:	eb 11                	jmp    c011334d <sfs_dirent_findino_nolock+0x6a>$/;"	l
c011333c	obj/kernel.asm	/^c011333c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0113340	obj/kernel.asm	/^c0113340:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113343	obj/kernel.asm	/^c0113343:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0113346	obj/kernel.asm	/^c0113346:	7c b5                	jl     c01132fd <sfs_dirent_findino_nolock+0x1a>$/;"	l
c0113348	obj/kernel.asm	/^c0113348:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c011334d	obj/kernel.asm	/^c011334d:	c9                   	leave  $/;"	l
c011334e	obj/kernel.asm	/^c011334e:	c3                   	ret    $/;"	l
c011334f	obj/kernel.asm	/^c011334f <sfs_lookup_once>:$/;"	l
c011334f	obj/kernel.asm	/^c011334f:	55                   	push   %ebp$/;"	l
c0113350	obj/kernel.asm	/^c0113350:	89 e5                	mov    %esp,%ebp$/;"	l
c0113352	obj/kernel.asm	/^c0113352:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0113355	obj/kernel.asm	/^c0113355:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113358	obj/kernel.asm	/^c0113358:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011335b	obj/kernel.asm	/^c011335b:	e8 f4 f0 ff ff       	call   c0112454 <lock_sin>$/;"	l
c0113360	obj/kernel.asm	/^c0113360:	c7 44 24 14 00 00 00 	movl   $0x0,0x14(%esp)$/;"	l
c0113367	obj/kernel.asm	/^c0113367:	00 $/;"	l
c0113368	obj/kernel.asm	/^c0113368:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c011336b	obj/kernel.asm	/^c011336b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c011336f	obj/kernel.asm	/^c011336f:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0113372	obj/kernel.asm	/^c0113372:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113376	obj/kernel.asm	/^c0113376:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113379	obj/kernel.asm	/^c0113379:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011337d	obj/kernel.asm	/^c011337d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113380	obj/kernel.asm	/^c0113380:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113384	obj/kernel.asm	/^c0113384:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113387	obj/kernel.asm	/^c0113387:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011338a	obj/kernel.asm	/^c011338a:	e8 2c fe ff ff       	call   c01131bb <sfs_dirent_search_nolock>$/;"	l
c011338f	obj/kernel.asm	/^c011338f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113392	obj/kernel.asm	/^c0113392:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113395	obj/kernel.asm	/^c0113395:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113398	obj/kernel.asm	/^c0113398:	e8 cd f0 ff ff       	call   c011246a <unlock_sin>$/;"	l
c011339d	obj/kernel.asm	/^c011339d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01133a1	obj/kernel.asm	/^c01133a1:	75 1c                	jne    c01133bf <sfs_lookup_once+0x70>$/;"	l
c01133a3	obj/kernel.asm	/^c01133a3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01133a6	obj/kernel.asm	/^c01133a6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01133aa	obj/kernel.asm	/^c01133aa:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01133ad	obj/kernel.asm	/^c01133ad:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01133b1	obj/kernel.asm	/^c01133b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01133b4	obj/kernel.asm	/^c01133b4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01133b7	obj/kernel.asm	/^c01133b7:	e8 62 f5 ff ff       	call   c011291e <sfs_load_inode>$/;"	l
c01133bc	obj/kernel.asm	/^c01133bc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01133bf	obj/kernel.asm	/^c01133bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01133c2	obj/kernel.asm	/^c01133c2:	c9                   	leave  $/;"	l
c01133c3	obj/kernel.asm	/^c01133c3:	c3                   	ret    $/;"	l
c01133c4	obj/kernel.asm	/^c01133c4 <sfs_opendir>:$/;"	l
c01133c4	obj/kernel.asm	/^c01133c4:	55                   	push   %ebp$/;"	l
c01133c5	obj/kernel.asm	/^c01133c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01133c7	obj/kernel.asm	/^c01133c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01133ca	obj/kernel.asm	/^c01133ca:	83 e0 03             	and    $0x3,%eax$/;"	l
c01133cd	obj/kernel.asm	/^c01133cd:	85 c0                	test   %eax,%eax$/;"	l
c01133cf	obj/kernel.asm	/^c01133cf:	74 07                	je     c01133d8 <sfs_opendir+0x14>$/;"	l
c01133d1	obj/kernel.asm	/^c01133d1:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c01133d6	obj/kernel.asm	/^c01133d6:	eb 17                	jmp    c01133ef <sfs_opendir+0x2b>$/;"	l
c01133d8	obj/kernel.asm	/^c01133d8:	90                   	nop$/;"	l
c01133d9	obj/kernel.asm	/^c01133d9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01133dc	obj/kernel.asm	/^c01133dc:	83 e0 20             	and    $0x20,%eax$/;"	l
c01133df	obj/kernel.asm	/^c01133df:	85 c0                	test   %eax,%eax$/;"	l
c01133e1	obj/kernel.asm	/^c01133e1:	74 07                	je     c01133ea <sfs_opendir+0x26>$/;"	l
c01133e3	obj/kernel.asm	/^c01133e3:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c01133e8	obj/kernel.asm	/^c01133e8:	eb 05                	jmp    c01133ef <sfs_opendir+0x2b>$/;"	l
c01133ea	obj/kernel.asm	/^c01133ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01133ef	obj/kernel.asm	/^c01133ef:	5d                   	pop    %ebp$/;"	l
c01133f0	obj/kernel.asm	/^c01133f0:	c3                   	ret    $/;"	l
c01133f1	obj/kernel.asm	/^c01133f1 <sfs_openfile>:$/;"	l
c01133f1	obj/kernel.asm	/^c01133f1:	55                   	push   %ebp$/;"	l
c01133f2	obj/kernel.asm	/^c01133f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01133f4	obj/kernel.asm	/^c01133f4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01133f9	obj/kernel.asm	/^c01133f9:	5d                   	pop    %ebp$/;"	l
c01133fa	obj/kernel.asm	/^c01133fa:	c3                   	ret    $/;"	l
c01133fb	obj/kernel.asm	/^c01133fb <sfs_close>:$/;"	l
c01133fb	obj/kernel.asm	/^c01133fb:	55                   	push   %ebp$/;"	l
c01133fc	obj/kernel.asm	/^c01133fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01133fe	obj/kernel.asm	/^c01133fe:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113401	obj/kernel.asm	/^c0113401:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113404	obj/kernel.asm	/^c0113404:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113407	obj/kernel.asm	/^c0113407:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011340b	obj/kernel.asm	/^c011340b:	74 17                	je     c0113424 <sfs_close+0x29>$/;"	l
c011340d	obj/kernel.asm	/^c011340d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113410	obj/kernel.asm	/^c0113410:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113413	obj/kernel.asm	/^c0113413:	85 c0                	test   %eax,%eax$/;"	l
c0113415	obj/kernel.asm	/^c0113415:	74 0d                	je     c0113424 <sfs_close+0x29>$/;"	l
c0113417	obj/kernel.asm	/^c0113417:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011341a	obj/kernel.asm	/^c011341a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011341d	obj/kernel.asm	/^c011341d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113420	obj/kernel.asm	/^c0113420:	85 c0                	test   %eax,%eax$/;"	l
c0113422	obj/kernel.asm	/^c0113422:	75 24                	jne    c0113448 <sfs_close+0x4d>$/;"	l
c0113424	obj/kernel.asm	/^c0113424:	c7 44 24 0c 84 af 11 	movl   $0xc011af84,0xc(%esp)$/;"	l
c011342b	obj/kernel.asm	/^c011342b:	c0 $/;"	l
c011342c	obj/kernel.asm	/^c011342c:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113433	obj/kernel.asm	/^c0113433:	c0 $/;"	l
c0113434	obj/kernel.asm	/^c0113434:	c7 44 24 04 1c 02 00 	movl   $0x21c,0x4(%esp)$/;"	l
c011343b	obj/kernel.asm	/^c011343b:	00 $/;"	l
c011343c	obj/kernel.asm	/^c011343c:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113443	obj/kernel.asm	/^c0113443:	e8 ef d7 fe ff       	call   c0100c37 <__panic>$/;"	l
c0113448	obj/kernel.asm	/^c0113448:	c7 44 24 04 d2 af 11 	movl   $0xc011afd2,0x4(%esp)$/;"	l
c011344f	obj/kernel.asm	/^c011344f:	c0 $/;"	l
c0113450	obj/kernel.asm	/^c0113450:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113453	obj/kernel.asm	/^c0113453:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113456	obj/kernel.asm	/^c0113456:	e8 74 db ff ff       	call   c0110fcf <inode_check>$/;"	l
c011345b	obj/kernel.asm	/^c011345b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011345e	obj/kernel.asm	/^c011345e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113461	obj/kernel.asm	/^c0113461:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0113464	obj/kernel.asm	/^c0113464:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113467	obj/kernel.asm	/^c0113467:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011346a	obj/kernel.asm	/^c011346a:	ff d0                	call   *%eax$/;"	l
c011346c	obj/kernel.asm	/^c011346c:	c9                   	leave  $/;"	l
c011346d	obj/kernel.asm	/^c011346d:	c3                   	ret    $/;"	l
c011346e	obj/kernel.asm	/^c011346e <sfs_io_nolock>:$/;"	l
c011346e	obj/kernel.asm	/^c011346e:	55                   	push   %ebp$/;"	l
c011346f	obj/kernel.asm	/^c011346f:	89 e5                	mov    %esp,%ebp$/;"	l
c0113471	obj/kernel.asm	/^c0113471:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0113474	obj/kernel.asm	/^c0113474:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113477	obj/kernel.asm	/^c0113477:	8b 00                	mov    (%eax),%eax$/;"	l
c0113479	obj/kernel.asm	/^c0113479:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011347c	obj/kernel.asm	/^c011347c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011347f	obj/kernel.asm	/^c011347f:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113483	obj/kernel.asm	/^c0113483:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0113487	obj/kernel.asm	/^c0113487:	75 24                	jne    c01134ad <sfs_io_nolock+0x3f>$/;"	l
c0113489	obj/kernel.asm	/^c0113489:	c7 44 24 0c d8 af 11 	movl   $0xc011afd8,0xc(%esp)$/;"	l
c0113490	obj/kernel.asm	/^c0113490:	c0 $/;"	l
c0113491	obj/kernel.asm	/^c0113491:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113498	obj/kernel.asm	/^c0113498:	c0 $/;"	l
c0113499	obj/kernel.asm	/^c0113499:	c7 44 24 04 2b 02 00 	movl   $0x22b,0x4(%esp)$/;"	l
c01134a0	obj/kernel.asm	/^c01134a0:	00 $/;"	l
c01134a1	obj/kernel.asm	/^c01134a1:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01134a8	obj/kernel.asm	/^c01134a8:	e8 8a d7 fe ff       	call   c0100c37 <__panic>$/;"	l
c01134ad	obj/kernel.asm	/^c01134ad:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01134b0	obj/kernel.asm	/^c01134b0:	8b 10                	mov    (%eax),%edx$/;"	l
c01134b2	obj/kernel.asm	/^c01134b2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01134b5	obj/kernel.asm	/^c01134b5:	01 d0                	add    %edx,%eax$/;"	l
c01134b7	obj/kernel.asm	/^c01134b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01134ba	obj/kernel.asm	/^c01134ba:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01134bd	obj/kernel.asm	/^c01134bd:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01134c3	obj/kernel.asm	/^c01134c3:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01134c7	obj/kernel.asm	/^c01134c7:	78 12                	js     c01134db <sfs_io_nolock+0x6d>$/;"	l
c01134c9	obj/kernel.asm	/^c01134c9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01134cc	obj/kernel.asm	/^c01134cc:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c01134d1	obj/kernel.asm	/^c01134d1:	77 08                	ja     c01134db <sfs_io_nolock+0x6d>$/;"	l
c01134d3	obj/kernel.asm	/^c01134d3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01134d6	obj/kernel.asm	/^c01134d6:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01134d9	obj/kernel.asm	/^c01134d9:	7e 0a                	jle    c01134e5 <sfs_io_nolock+0x77>$/;"	l
c01134db	obj/kernel.asm	/^c01134db:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01134e0	obj/kernel.asm	/^c01134e0:	e9 a0 02 00 00       	jmp    c0113785 <sfs_io_nolock+0x317>$/;"	l
c01134e5	obj/kernel.asm	/^c01134e5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01134e8	obj/kernel.asm	/^c01134e8:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01134eb	obj/kernel.asm	/^c01134eb:	75 0a                	jne    c01134f7 <sfs_io_nolock+0x89>$/;"	l
c01134ed	obj/kernel.asm	/^c01134ed:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01134f2	obj/kernel.asm	/^c01134f2:	e9 8e 02 00 00       	jmp    c0113785 <sfs_io_nolock+0x317>$/;"	l
c01134f7	obj/kernel.asm	/^c01134f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01134fa	obj/kernel.asm	/^c01134fa:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c01134ff	obj/kernel.asm	/^c01134ff:	76 07                	jbe    c0113508 <sfs_io_nolock+0x9a>$/;"	l
c0113501	obj/kernel.asm	/^c0113501:	c7 45 f4 00 00 00 08 	movl   $0x8000000,-0xc(%ebp)$/;"	l
c0113508	obj/kernel.asm	/^c0113508:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c011350c	obj/kernel.asm	/^c011350c:	75 2a                	jne    c0113538 <sfs_io_nolock+0xca>$/;"	l
c011350e	obj/kernel.asm	/^c011350e:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0113511	obj/kernel.asm	/^c0113511:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113514	obj/kernel.asm	/^c0113514:	8b 00                	mov    (%eax),%eax$/;"	l
c0113516	obj/kernel.asm	/^c0113516:	39 c2                	cmp    %eax,%edx$/;"	l
c0113518	obj/kernel.asm	/^c0113518:	72 0a                	jb     c0113524 <sfs_io_nolock+0xb6>$/;"	l
c011351a	obj/kernel.asm	/^c011351a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011351f	obj/kernel.asm	/^c011351f:	e9 61 02 00 00       	jmp    c0113785 <sfs_io_nolock+0x317>$/;"	l
c0113524	obj/kernel.asm	/^c0113524:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113527	obj/kernel.asm	/^c0113527:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011352a	obj/kernel.asm	/^c011352a:	8b 00                	mov    (%eax),%eax$/;"	l
c011352c	obj/kernel.asm	/^c011352c:	39 c2                	cmp    %eax,%edx$/;"	l
c011352e	obj/kernel.asm	/^c011352e:	76 08                	jbe    c0113538 <sfs_io_nolock+0xca>$/;"	l
c0113530	obj/kernel.asm	/^c0113530:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113533	obj/kernel.asm	/^c0113533:	8b 00                	mov    (%eax),%eax$/;"	l
c0113535	obj/kernel.asm	/^c0113535:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113538	obj/kernel.asm	/^c0113538:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c011353c	obj/kernel.asm	/^c011353c:	74 10                	je     c011354e <sfs_io_nolock+0xe0>$/;"	l
c011353e	obj/kernel.asm	/^c011353e:	c7 45 f0 20 56 11 c0 	movl   $0xc0115620,-0x10(%ebp)$/;"	l
c0113545	obj/kernel.asm	/^c0113545:	c7 45 ec 37 55 11 c0 	movl   $0xc0115537,-0x14(%ebp)$/;"	l
c011354c	obj/kernel.asm	/^c011354c:	eb 0e                	jmp    c011355c <sfs_io_nolock+0xee>$/;"	l
c011354e	obj/kernel.asm	/^c011354e:	c7 45 f0 67 55 11 c0 	movl   $0xc0115567,-0x10(%ebp)$/;"	l
c0113555	obj/kernel.asm	/^c0113555:	c7 45 ec 07 55 11 c0 	movl   $0xc0115507,-0x14(%ebp)$/;"	l
c011355c	obj/kernel.asm	/^c011355c:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0113563	obj/kernel.asm	/^c0113563:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c011356a	obj/kernel.asm	/^c011356a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011356d	obj/kernel.asm	/^c011356d:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0113573	obj/kernel.asm	/^c0113573:	85 c0                	test   %eax,%eax$/;"	l
c0113575	obj/kernel.asm	/^c0113575:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0113578	obj/kernel.asm	/^c0113578:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c011357b	obj/kernel.asm	/^c011357b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011357e	obj/kernel.asm	/^c011357e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113581	obj/kernel.asm	/^c0113581:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0113587	obj/kernel.asm	/^c0113587:	85 c0                	test   %eax,%eax$/;"	l
c0113589	obj/kernel.asm	/^c0113589:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c011358c	obj/kernel.asm	/^c011358c:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c011358f	obj/kernel.asm	/^c011358f:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
c0113592	obj/kernel.asm	/^c0113592:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113595	obj/kernel.asm	/^c0113595:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113598	obj/kernel.asm	/^c0113598:	99                   	cltd   $/;"	l
c0113599	obj/kernel.asm	/^c0113599:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c011359c	obj/kernel.asm	/^c011359c:	01 d0                	add    %edx,%eax$/;"	l
c011359e	obj/kernel.asm	/^c011359e:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01135a3	obj/kernel.asm	/^c01135a3:	29 d0                	sub    %edx,%eax$/;"	l
c01135a5	obj/kernel.asm	/^c01135a5:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01135a8	obj/kernel.asm	/^c01135a8:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01135ac	obj/kernel.asm	/^c01135ac:	0f 84 9f 00 00 00    	je     c0113651 <sfs_io_nolock+0x1e3>$/;"	l
c01135b2	obj/kernel.asm	/^c01135b2:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01135b6	obj/kernel.asm	/^c01135b6:	74 0a                	je     c01135c2 <sfs_io_nolock+0x154>$/;"	l
c01135b8	obj/kernel.asm	/^c01135b8:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01135bd	obj/kernel.asm	/^c01135bd:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c01135c0	obj/kernel.asm	/^c01135c0:	eb 0a                	jmp    c01135cc <sfs_io_nolock+0x15e>$/;"	l
c01135c2	obj/kernel.asm	/^c01135c2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01135c5	obj/kernel.asm	/^c01135c5:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01135c8	obj/kernel.asm	/^c01135c8:	29 c2                	sub    %eax,%edx$/;"	l
c01135ca	obj/kernel.asm	/^c01135ca:	89 d0                	mov    %edx,%eax$/;"	l
c01135cc	obj/kernel.asm	/^c01135cc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01135cf	obj/kernel.asm	/^c01135cf:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c01135d2	obj/kernel.asm	/^c01135d2:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01135d6	obj/kernel.asm	/^c01135d6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01135d9	obj/kernel.asm	/^c01135d9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01135dd	obj/kernel.asm	/^c01135dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01135e0	obj/kernel.asm	/^c01135e0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01135e4	obj/kernel.asm	/^c01135e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135e7	obj/kernel.asm	/^c01135e7:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01135ea	obj/kernel.asm	/^c01135ea:	e8 5a f9 ff ff       	call   c0112f49 <sfs_bmap_load_nolock>$/;"	l
c01135ef	obj/kernel.asm	/^c01135ef:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01135f2	obj/kernel.asm	/^c01135f2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01135f6	obj/kernel.asm	/^c01135f6:	74 05                	je     c01135fd <sfs_io_nolock+0x18f>$/;"	l
c01135f8	obj/kernel.asm	/^c01135f8:	e9 51 01 00 00       	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c01135fd	obj/kernel.asm	/^c01135fd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113600	obj/kernel.asm	/^c0113600:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0113603	obj/kernel.asm	/^c0113603:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0113607	obj/kernel.asm	/^c0113607:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011360b	obj/kernel.asm	/^c011360b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011360e	obj/kernel.asm	/^c011360e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113612	obj/kernel.asm	/^c0113612:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113615	obj/kernel.asm	/^c0113615:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113619	obj/kernel.asm	/^c0113619:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011361c	obj/kernel.asm	/^c011361c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011361f	obj/kernel.asm	/^c011361f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113622	obj/kernel.asm	/^c0113622:	ff d0                	call   *%eax$/;"	l
c0113624	obj/kernel.asm	/^c0113624:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113627	obj/kernel.asm	/^c0113627:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011362b	obj/kernel.asm	/^c011362b:	74 05                	je     c0113632 <sfs_io_nolock+0x1c4>$/;"	l
c011362d	obj/kernel.asm	/^c011362d:	e9 1c 01 00 00       	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c0113632	obj/kernel.asm	/^c0113632:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113635	obj/kernel.asm	/^c0113635:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c0113638	obj/kernel.asm	/^c0113638:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011363c	obj/kernel.asm	/^c011363c:	75 05                	jne    c0113643 <sfs_io_nolock+0x1d5>$/;"	l
c011363e	obj/kernel.asm	/^c011363e:	e9 0b 01 00 00       	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c0113643	obj/kernel.asm	/^c0113643:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113646	obj/kernel.asm	/^c0113646:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c0113649	obj/kernel.asm	/^c0113649:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c011364d	obj/kernel.asm	/^c011364d:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c0113651	obj/kernel.asm	/^c0113651:	c7 45 d0 00 10 00 00 	movl   $0x1000,-0x30(%ebp)$/;"	l
c0113658	obj/kernel.asm	/^c0113658:	eb 71                	jmp    c01136cb <sfs_io_nolock+0x25d>$/;"	l
c011365a	obj/kernel.asm	/^c011365a:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c011365d	obj/kernel.asm	/^c011365d:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113661	obj/kernel.asm	/^c0113661:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113664	obj/kernel.asm	/^c0113664:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113668	obj/kernel.asm	/^c0113668:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011366b	obj/kernel.asm	/^c011366b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011366f	obj/kernel.asm	/^c011366f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113672	obj/kernel.asm	/^c0113672:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113675	obj/kernel.asm	/^c0113675:	e8 cf f8 ff ff       	call   c0112f49 <sfs_bmap_load_nolock>$/;"	l
c011367a	obj/kernel.asm	/^c011367a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011367d	obj/kernel.asm	/^c011367d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113681	obj/kernel.asm	/^c0113681:	74 05                	je     c0113688 <sfs_io_nolock+0x21a>$/;"	l
c0113683	obj/kernel.asm	/^c0113683:	e9 c6 00 00 00       	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c0113688	obj/kernel.asm	/^c0113688:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011368b	obj/kernel.asm	/^c011368b:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0113692	obj/kernel.asm	/^c0113692:	00 $/;"	l
c0113693	obj/kernel.asm	/^c0113693:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113697	obj/kernel.asm	/^c0113697:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011369a	obj/kernel.asm	/^c011369a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011369e	obj/kernel.asm	/^c011369e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136a1	obj/kernel.asm	/^c01136a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01136a4	obj/kernel.asm	/^c01136a4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01136a7	obj/kernel.asm	/^c01136a7:	ff d0                	call   *%eax$/;"	l
c01136a9	obj/kernel.asm	/^c01136a9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01136ac	obj/kernel.asm	/^c01136ac:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01136b0	obj/kernel.asm	/^c01136b0:	74 05                	je     c01136b7 <sfs_io_nolock+0x249>$/;"	l
c01136b2	obj/kernel.asm	/^c01136b2:	e9 97 00 00 00       	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c01136b7	obj/kernel.asm	/^c01136b7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01136ba	obj/kernel.asm	/^c01136ba:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c01136bd	obj/kernel.asm	/^c01136bd:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01136c0	obj/kernel.asm	/^c01136c0:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c01136c3	obj/kernel.asm	/^c01136c3:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c01136c7	obj/kernel.asm	/^c01136c7:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c01136cb	obj/kernel.asm	/^c01136cb:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01136cf	obj/kernel.asm	/^c01136cf:	75 89                	jne    c011365a <sfs_io_nolock+0x1ec>$/;"	l
c01136d1	obj/kernel.asm	/^c01136d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01136d4	obj/kernel.asm	/^c01136d4:	99                   	cltd   $/;"	l
c01136d5	obj/kernel.asm	/^c01136d5:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c01136d8	obj/kernel.asm	/^c01136d8:	01 d0                	add    %edx,%eax$/;"	l
c01136da	obj/kernel.asm	/^c01136da:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01136df	obj/kernel.asm	/^c01136df:	29 d0                	sub    %edx,%eax$/;"	l
c01136e1	obj/kernel.asm	/^c01136e1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01136e4	obj/kernel.asm	/^c01136e4:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c01136e8	obj/kernel.asm	/^c01136e8:	74 64                	je     c011374e <sfs_io_nolock+0x2e0>$/;"	l
c01136ea	obj/kernel.asm	/^c01136ea:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c01136ed	obj/kernel.asm	/^c01136ed:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01136f1	obj/kernel.asm	/^c01136f1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01136f4	obj/kernel.asm	/^c01136f4:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01136f8	obj/kernel.asm	/^c01136f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01136fb	obj/kernel.asm	/^c01136fb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01136ff	obj/kernel.asm	/^c01136ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113702	obj/kernel.asm	/^c0113702:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113705	obj/kernel.asm	/^c0113705:	e8 3f f8 ff ff       	call   c0112f49 <sfs_bmap_load_nolock>$/;"	l
c011370a	obj/kernel.asm	/^c011370a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011370d	obj/kernel.asm	/^c011370d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113711	obj/kernel.asm	/^c0113711:	74 02                	je     c0113715 <sfs_io_nolock+0x2a7>$/;"	l
c0113713	obj/kernel.asm	/^c0113713:	eb 39                	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c0113715	obj/kernel.asm	/^c0113715:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113718	obj/kernel.asm	/^c0113718:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c011371f	obj/kernel.asm	/^c011371f:	00 $/;"	l
c0113720	obj/kernel.asm	/^c0113720:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113724	obj/kernel.asm	/^c0113724:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113727	obj/kernel.asm	/^c0113727:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011372b	obj/kernel.asm	/^c011372b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011372e	obj/kernel.asm	/^c011372e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113732	obj/kernel.asm	/^c0113732:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113735	obj/kernel.asm	/^c0113735:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113738	obj/kernel.asm	/^c0113738:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011373b	obj/kernel.asm	/^c011373b:	ff d0                	call   *%eax$/;"	l
c011373d	obj/kernel.asm	/^c011373d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113740	obj/kernel.asm	/^c0113740:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113744	obj/kernel.asm	/^c0113744:	74 02                	je     c0113748 <sfs_io_nolock+0x2da>$/;"	l
c0113746	obj/kernel.asm	/^c0113746:	eb 06                	jmp    c011374e <sfs_io_nolock+0x2e0>$/;"	l
c0113748	obj/kernel.asm	/^c0113748:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011374b	obj/kernel.asm	/^c011374b:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c011374e	obj/kernel.asm	/^c011374e:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113751	obj/kernel.asm	/^c0113751:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113754	obj/kernel.asm	/^c0113754:	89 10                	mov    %edx,(%eax)$/;"	l
c0113756	obj/kernel.asm	/^c0113756:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0113759	obj/kernel.asm	/^c0113759:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011375c	obj/kernel.asm	/^c011375c:	01 c2                	add    %eax,%edx$/;"	l
c011375e	obj/kernel.asm	/^c011375e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113761	obj/kernel.asm	/^c0113761:	8b 00                	mov    (%eax),%eax$/;"	l
c0113763	obj/kernel.asm	/^c0113763:	8b 00                	mov    (%eax),%eax$/;"	l
c0113765	obj/kernel.asm	/^c0113765:	39 c2                	cmp    %eax,%edx$/;"	l
c0113767	obj/kernel.asm	/^c0113767:	76 19                	jbe    c0113782 <sfs_io_nolock+0x314>$/;"	l
c0113769	obj/kernel.asm	/^c0113769:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011376c	obj/kernel.asm	/^c011376c:	8b 00                	mov    (%eax),%eax$/;"	l
c011376e	obj/kernel.asm	/^c011376e:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c0113771	obj/kernel.asm	/^c0113771:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113774	obj/kernel.asm	/^c0113774:	01 ca                	add    %ecx,%edx$/;"	l
c0113776	obj/kernel.asm	/^c0113776:	89 10                	mov    %edx,(%eax)$/;"	l
c0113778	obj/kernel.asm	/^c0113778:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011377b	obj/kernel.asm	/^c011377b:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0113782	obj/kernel.asm	/^c0113782:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113785	obj/kernel.asm	/^c0113785:	c9                   	leave  $/;"	l
c0113786	obj/kernel.asm	/^c0113786:	c3                   	ret    $/;"	l
c0113787	obj/kernel.asm	/^c0113787 <sfs_io>:$/;"	l
c0113787	obj/kernel.asm	/^c0113787:	55                   	push   %ebp$/;"	l
c0113788	obj/kernel.asm	/^c0113788:	89 e5                	mov    %esp,%ebp$/;"	l
c011378a	obj/kernel.asm	/^c011378a:	83 ec 48             	sub    $0x48,%esp$/;"	l
c011378d	obj/kernel.asm	/^c011378d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113790	obj/kernel.asm	/^c0113790:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113793	obj/kernel.asm	/^c0113793:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113796	obj/kernel.asm	/^c0113796:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011379a	obj/kernel.asm	/^c011379a:	74 0a                	je     c01137a6 <sfs_io+0x1f>$/;"	l
c011379c	obj/kernel.asm	/^c011379c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011379f	obj/kernel.asm	/^c011379f:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01137a2	obj/kernel.asm	/^c01137a2:	85 c0                	test   %eax,%eax$/;"	l
c01137a4	obj/kernel.asm	/^c01137a4:	74 24                	je     c01137ca <sfs_io+0x43>$/;"	l
c01137a6	obj/kernel.asm	/^c01137a6:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c01137ad	obj/kernel.asm	/^c01137ad:	c0 $/;"	l
c01137ae	obj/kernel.asm	/^c01137ae:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01137b5	obj/kernel.asm	/^c01137b5:	c0 $/;"	l
c01137b6	obj/kernel.asm	/^c01137b6:	c7 44 24 04 8c 02 00 	movl   $0x28c,0x4(%esp)$/;"	l
c01137bd	obj/kernel.asm	/^c01137bd:	00 $/;"	l
c01137be	obj/kernel.asm	/^c01137be:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01137c5	obj/kernel.asm	/^c01137c5:	e8 6d d4 fe ff       	call   c0100c37 <__panic>$/;"	l
c01137ca	obj/kernel.asm	/^c01137ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01137cd	obj/kernel.asm	/^c01137cd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01137d0	obj/kernel.asm	/^c01137d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01137d3	obj/kernel.asm	/^c01137d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01137d6	obj/kernel.asm	/^c01137d6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01137da	obj/kernel.asm	/^c01137da:	74 0d                	je     c01137e9 <sfs_io+0x62>$/;"	l
c01137dc	obj/kernel.asm	/^c01137dc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01137df	obj/kernel.asm	/^c01137df:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01137e2	obj/kernel.asm	/^c01137e2:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01137e7	obj/kernel.asm	/^c01137e7:	74 24                	je     c011380d <sfs_io+0x86>$/;"	l
c01137e9	obj/kernel.asm	/^c01137e9:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c01137f0	obj/kernel.asm	/^c01137f0:	c0 $/;"	l
c01137f1	obj/kernel.asm	/^c01137f1:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01137f8	obj/kernel.asm	/^c01137f8:	c0 $/;"	l
c01137f9	obj/kernel.asm	/^c01137f9:	c7 44 24 04 8d 02 00 	movl   $0x28d,0x4(%esp)$/;"	l
c0113800	obj/kernel.asm	/^c0113800:	00 $/;"	l
c0113801	obj/kernel.asm	/^c0113801:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113808	obj/kernel.asm	/^c0113808:	e8 2a d4 fe ff       	call   c0100c37 <__panic>$/;"	l
c011380d	obj/kernel.asm	/^c011380d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113810	obj/kernel.asm	/^c0113810:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113813	obj/kernel.asm	/^c0113813:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113816	obj/kernel.asm	/^c0113816:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113819	obj/kernel.asm	/^c0113819:	e8 36 ec ff ff       	call   c0112454 <lock_sin>$/;"	l
c011381e	obj/kernel.asm	/^c011381e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113821	obj/kernel.asm	/^c0113821:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113824	obj/kernel.asm	/^c0113824:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113827	obj/kernel.asm	/^c0113827:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011382a	obj/kernel.asm	/^c011382a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011382d	obj/kernel.asm	/^c011382d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113830	obj/kernel.asm	/^c0113830:	8b 00                	mov    (%eax),%eax$/;"	l
c0113832	obj/kernel.asm	/^c0113832:	8b 4d 10             	mov    0x10(%ebp),%ecx$/;"	l
c0113835	obj/kernel.asm	/^c0113835:	89 4c 24 14          	mov    %ecx,0x14(%esp)$/;"	l
c0113839	obj/kernel.asm	/^c0113839:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c011383c	obj/kernel.asm	/^c011383c:	89 4c 24 10          	mov    %ecx,0x10(%esp)$/;"	l
c0113840	obj/kernel.asm	/^c0113840:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0113844	obj/kernel.asm	/^c0113844:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113848	obj/kernel.asm	/^c0113848:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011384b	obj/kernel.asm	/^c011384b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011384f	obj/kernel.asm	/^c011384f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113852	obj/kernel.asm	/^c0113852:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113855	obj/kernel.asm	/^c0113855:	e8 14 fc ff ff       	call   c011346e <sfs_io_nolock>$/;"	l
c011385a	obj/kernel.asm	/^c011385a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011385d	obj/kernel.asm	/^c011385d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113860	obj/kernel.asm	/^c0113860:	85 c0                	test   %eax,%eax$/;"	l
c0113862	obj/kernel.asm	/^c0113862:	74 12                	je     c0113876 <sfs_io+0xef>$/;"	l
c0113864	obj/kernel.asm	/^c0113864:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113867	obj/kernel.asm	/^c0113867:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011386b	obj/kernel.asm	/^c011386b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011386e	obj/kernel.asm	/^c011386e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113871	obj/kernel.asm	/^c0113871:	e8 ad 8f ff ff       	call   c010c823 <iobuf_skip>$/;"	l
c0113876	obj/kernel.asm	/^c0113876:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113879	obj/kernel.asm	/^c0113879:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011387c	obj/kernel.asm	/^c011387c:	e8 e9 eb ff ff       	call   c011246a <unlock_sin>$/;"	l
c0113881	obj/kernel.asm	/^c0113881:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113884	obj/kernel.asm	/^c0113884:	c9                   	leave  $/;"	l
c0113885	obj/kernel.asm	/^c0113885:	c3                   	ret    $/;"	l
c0113886	obj/kernel.asm	/^c0113886 <sfs_read>:$/;"	l
c0113886	obj/kernel.asm	/^c0113886:	55                   	push   %ebp$/;"	l
c0113887	obj/kernel.asm	/^c0113887:	89 e5                	mov    %esp,%ebp$/;"	l
c0113889	obj/kernel.asm	/^c0113889:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011388c	obj/kernel.asm	/^c011388c:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0113893	obj/kernel.asm	/^c0113893:	00 $/;"	l
c0113894	obj/kernel.asm	/^c0113894:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113897	obj/kernel.asm	/^c0113897:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011389b	obj/kernel.asm	/^c011389b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011389e	obj/kernel.asm	/^c011389e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138a1	obj/kernel.asm	/^c01138a1:	e8 e1 fe ff ff       	call   c0113787 <sfs_io>$/;"	l
c01138a6	obj/kernel.asm	/^c01138a6:	c9                   	leave  $/;"	l
c01138a7	obj/kernel.asm	/^c01138a7:	c3                   	ret    $/;"	l
c01138a8	obj/kernel.asm	/^c01138a8 <sfs_write>:$/;"	l
c01138a8	obj/kernel.asm	/^c01138a8:	55                   	push   %ebp$/;"	l
c01138a9	obj/kernel.asm	/^c01138a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01138ab	obj/kernel.asm	/^c01138ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01138ae	obj/kernel.asm	/^c01138ae:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c01138b5	obj/kernel.asm	/^c01138b5:	00 $/;"	l
c01138b6	obj/kernel.asm	/^c01138b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01138b9	obj/kernel.asm	/^c01138b9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01138bd	obj/kernel.asm	/^c01138bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01138c0	obj/kernel.asm	/^c01138c0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138c3	obj/kernel.asm	/^c01138c3:	e8 bf fe ff ff       	call   c0113787 <sfs_io>$/;"	l
c01138c8	obj/kernel.asm	/^c01138c8:	c9                   	leave  $/;"	l
c01138c9	obj/kernel.asm	/^c01138c9:	c3                   	ret    $/;"	l
c01138ca	obj/kernel.asm	/^c01138ca <sfs_fstat>:$/;"	l
c01138ca	obj/kernel.asm	/^c01138ca:	55                   	push   %ebp$/;"	l
c01138cb	obj/kernel.asm	/^c01138cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01138cd	obj/kernel.asm	/^c01138cd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01138d0	obj/kernel.asm	/^c01138d0:	c7 44 24 08 10 00 00 	movl   $0x10,0x8(%esp)$/;"	l
c01138d7	obj/kernel.asm	/^c01138d7:	00 $/;"	l
c01138d8	obj/kernel.asm	/^c01138d8:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01138df	obj/kernel.asm	/^c01138df:	00 $/;"	l
c01138e0	obj/kernel.asm	/^c01138e0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01138e3	obj/kernel.asm	/^c01138e3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01138e6	obj/kernel.asm	/^c01138e6:	e8 a5 2d 00 00       	call   c0116690 <memset>$/;"	l
c01138eb	obj/kernel.asm	/^c01138eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01138ee	obj/kernel.asm	/^c01138ee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01138f1	obj/kernel.asm	/^c01138f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01138f5	obj/kernel.asm	/^c01138f5:	74 17                	je     c011390e <sfs_fstat+0x44>$/;"	l
c01138f7	obj/kernel.asm	/^c01138f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01138fa	obj/kernel.asm	/^c01138fa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01138fd	obj/kernel.asm	/^c01138fd:	85 c0                	test   %eax,%eax$/;"	l
c01138ff	obj/kernel.asm	/^c01138ff:	74 0d                	je     c011390e <sfs_fstat+0x44>$/;"	l
c0113901	obj/kernel.asm	/^c0113901:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113904	obj/kernel.asm	/^c0113904:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0113907	obj/kernel.asm	/^c0113907:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c011390a	obj/kernel.asm	/^c011390a:	85 c0                	test   %eax,%eax$/;"	l
c011390c	obj/kernel.asm	/^c011390c:	75 24                	jne    c0113932 <sfs_fstat+0x68>$/;"	l
c011390e	obj/kernel.asm	/^c011390e:	c7 44 24 0c 20 b0 11 	movl   $0xc011b020,0xc(%esp)$/;"	l
c0113915	obj/kernel.asm	/^c0113915:	c0 $/;"	l
c0113916	obj/kernel.asm	/^c0113916:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c011391d	obj/kernel.asm	/^c011391d:	c0 $/;"	l
c011391e	obj/kernel.asm	/^c011391e:	c7 44 24 04 ae 02 00 	movl   $0x2ae,0x4(%esp)$/;"	l
c0113925	obj/kernel.asm	/^c0113925:	00 $/;"	l
c0113926	obj/kernel.asm	/^c0113926:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c011392d	obj/kernel.asm	/^c011392d:	e8 05 d3 fe ff       	call   c0100c37 <__panic>$/;"	l
c0113932	obj/kernel.asm	/^c0113932:	c7 44 24 04 70 b0 11 	movl   $0xc011b070,0x4(%esp)$/;"	l
c0113939	obj/kernel.asm	/^c0113939:	c0 $/;"	l
c011393a	obj/kernel.asm	/^c011393a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011393d	obj/kernel.asm	/^c011393d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113940	obj/kernel.asm	/^c0113940:	e8 8a d6 ff ff       	call   c0110fcf <inode_check>$/;"	l
c0113945	obj/kernel.asm	/^c0113945:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113948	obj/kernel.asm	/^c0113948:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011394b	obj/kernel.asm	/^c011394b:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c011394e	obj/kernel.asm	/^c011394e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0113951	obj/kernel.asm	/^c0113951:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0113955	obj/kernel.asm	/^c0113955:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113958	obj/kernel.asm	/^c0113958:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011395b	obj/kernel.asm	/^c011395b:	ff d0                	call   *%eax$/;"	l
c011395d	obj/kernel.asm	/^c011395d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113960	obj/kernel.asm	/^c0113960:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113964	obj/kernel.asm	/^c0113964:	74 05                	je     c011396b <sfs_fstat+0xa1>$/;"	l
c0113966	obj/kernel.asm	/^c0113966:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113969	obj/kernel.asm	/^c0113969:	eb 71                	jmp    c01139dc <sfs_fstat+0x112>$/;"	l
c011396b	obj/kernel.asm	/^c011396b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011396e	obj/kernel.asm	/^c011396e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113971	obj/kernel.asm	/^c0113971:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113975	obj/kernel.asm	/^c0113975:	74 0d                	je     c0113984 <sfs_fstat+0xba>$/;"	l
c0113977	obj/kernel.asm	/^c0113977:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011397a	obj/kernel.asm	/^c011397a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011397d	obj/kernel.asm	/^c011397d:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113982	obj/kernel.asm	/^c0113982:	74 24                	je     c01139a8 <sfs_fstat+0xde>$/;"	l
c0113984	obj/kernel.asm	/^c0113984:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c011398b	obj/kernel.asm	/^c011398b:	c0 $/;"	l
c011398c	obj/kernel.asm	/^c011398c:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113993	obj/kernel.asm	/^c0113993:	c0 $/;"	l
c0113994	obj/kernel.asm	/^c0113994:	c7 44 24 04 b1 02 00 	movl   $0x2b1,0x4(%esp)$/;"	l
c011399b	obj/kernel.asm	/^c011399b:	00 $/;"	l
c011399c	obj/kernel.asm	/^c011399c:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01139a3	obj/kernel.asm	/^c01139a3:	e8 8f d2 fe ff       	call   c0100c37 <__panic>$/;"	l
c01139a8	obj/kernel.asm	/^c01139a8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01139ab	obj/kernel.asm	/^c01139ab:	8b 00                	mov    (%eax),%eax$/;"	l
c01139ad	obj/kernel.asm	/^c01139ad:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01139b0	obj/kernel.asm	/^c01139b0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01139b3	obj/kernel.asm	/^c01139b3:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01139b7	obj/kernel.asm	/^c01139b7:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01139ba	obj/kernel.asm	/^c01139ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01139bd	obj/kernel.asm	/^c01139bd:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01139c0	obj/kernel.asm	/^c01139c0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01139c3	obj/kernel.asm	/^c01139c3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01139c6	obj/kernel.asm	/^c01139c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01139c9	obj/kernel.asm	/^c01139c9:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01139cc	obj/kernel.asm	/^c01139cc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01139cf	obj/kernel.asm	/^c01139cf:	8b 10                	mov    (%eax),%edx$/;"	l
c01139d1	obj/kernel.asm	/^c01139d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01139d4	obj/kernel.asm	/^c01139d4:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01139d7	obj/kernel.asm	/^c01139d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01139dc	obj/kernel.asm	/^c01139dc:	c9                   	leave  $/;"	l
c01139dd	obj/kernel.asm	/^c01139dd:	c3                   	ret    $/;"	l
c01139de	obj/kernel.asm	/^c01139de <sfs_fsync>:$/;"	l
c01139de	obj/kernel.asm	/^c01139de:	55                   	push   %ebp$/;"	l
c01139df	obj/kernel.asm	/^c01139df:	89 e5                	mov    %esp,%ebp$/;"	l
c01139e1	obj/kernel.asm	/^c01139e1:	83 ec 48             	sub    $0x48,%esp$/;"	l
c01139e4	obj/kernel.asm	/^c01139e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01139e7	obj/kernel.asm	/^c01139e7:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01139ea	obj/kernel.asm	/^c01139ea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01139ed	obj/kernel.asm	/^c01139ed:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01139f1	obj/kernel.asm	/^c01139f1:	74 0a                	je     c01139fd <sfs_fsync+0x1f>$/;"	l
c01139f3	obj/kernel.asm	/^c01139f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01139f6	obj/kernel.asm	/^c01139f6:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01139f9	obj/kernel.asm	/^c01139f9:	85 c0                	test   %eax,%eax$/;"	l
c01139fb	obj/kernel.asm	/^c01139fb:	74 24                	je     c0113a21 <sfs_fsync+0x43>$/;"	l
c01139fd	obj/kernel.asm	/^c01139fd:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c0113a04	obj/kernel.asm	/^c0113a04:	c0 $/;"	l
c0113a05	obj/kernel.asm	/^c0113a05:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113a0c	obj/kernel.asm	/^c0113a0c:	c0 $/;"	l
c0113a0d	obj/kernel.asm	/^c0113a0d:	c7 44 24 04 bd 02 00 	movl   $0x2bd,0x4(%esp)$/;"	l
c0113a14	obj/kernel.asm	/^c0113a14:	00 $/;"	l
c0113a15	obj/kernel.asm	/^c0113a15:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113a1c	obj/kernel.asm	/^c0113a1c:	e8 16 d2 fe ff       	call   c0100c37 <__panic>$/;"	l
c0113a21	obj/kernel.asm	/^c0113a21:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113a24	obj/kernel.asm	/^c0113a24:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113a27	obj/kernel.asm	/^c0113a27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a2a	obj/kernel.asm	/^c0113a2a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113a2d	obj/kernel.asm	/^c0113a2d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113a31	obj/kernel.asm	/^c0113a31:	74 0d                	je     c0113a40 <sfs_fsync+0x62>$/;"	l
c0113a33	obj/kernel.asm	/^c0113a33:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113a36	obj/kernel.asm	/^c0113a36:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113a39	obj/kernel.asm	/^c0113a39:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113a3e	obj/kernel.asm	/^c0113a3e:	74 24                	je     c0113a64 <sfs_fsync+0x86>$/;"	l
c0113a40	obj/kernel.asm	/^c0113a40:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c0113a47	obj/kernel.asm	/^c0113a47:	c0 $/;"	l
c0113a48	obj/kernel.asm	/^c0113a48:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113a4f	obj/kernel.asm	/^c0113a4f:	c0 $/;"	l
c0113a50	obj/kernel.asm	/^c0113a50:	c7 44 24 04 be 02 00 	movl   $0x2be,0x4(%esp)$/;"	l
c0113a57	obj/kernel.asm	/^c0113a57:	00 $/;"	l
c0113a58	obj/kernel.asm	/^c0113a58:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113a5f	obj/kernel.asm	/^c0113a5f:	e8 d3 d1 fe ff       	call   c0100c37 <__panic>$/;"	l
c0113a64	obj/kernel.asm	/^c0113a64:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113a67	obj/kernel.asm	/^c0113a67:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113a6a	obj/kernel.asm	/^c0113a6a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113a71	obj/kernel.asm	/^c0113a71:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a74	obj/kernel.asm	/^c0113a74:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113a77	obj/kernel.asm	/^c0113a77:	85 c0                	test   %eax,%eax$/;"	l
c0113a79	obj/kernel.asm	/^c0113a79:	74 6b                	je     c0113ae6 <sfs_fsync+0x108>$/;"	l
c0113a7b	obj/kernel.asm	/^c0113a7b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a7e	obj/kernel.asm	/^c0113a7e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113a81	obj/kernel.asm	/^c0113a81:	e8 ce e9 ff ff       	call   c0112454 <lock_sin>$/;"	l
c0113a86	obj/kernel.asm	/^c0113a86:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a89	obj/kernel.asm	/^c0113a89:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113a8c	obj/kernel.asm	/^c0113a8c:	85 c0                	test   %eax,%eax$/;"	l
c0113a8e	obj/kernel.asm	/^c0113a8e:	74 4b                	je     c0113adb <sfs_fsync+0xfd>$/;"	l
c0113a90	obj/kernel.asm	/^c0113a90:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a93	obj/kernel.asm	/^c0113a93:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0113a9a	obj/kernel.asm	/^c0113a9a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113a9d	obj/kernel.asm	/^c0113a9d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0113aa0	obj/kernel.asm	/^c0113aa0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113aa3	obj/kernel.asm	/^c0113aa3:	8b 00                	mov    (%eax),%eax$/;"	l
c0113aa5	obj/kernel.asm	/^c0113aa5:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113aac	obj/kernel.asm	/^c0113aac:	00 $/;"	l
c0113aad	obj/kernel.asm	/^c0113aad:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0113ab1	obj/kernel.asm	/^c0113ab1:	c7 44 24 08 40 00 00 	movl   $0x40,0x8(%esp)$/;"	l
c0113ab8	obj/kernel.asm	/^c0113ab8:	00 $/;"	l
c0113ab9	obj/kernel.asm	/^c0113ab9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113abd	obj/kernel.asm	/^c0113abd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113ac0	obj/kernel.asm	/^c0113ac0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ac3	obj/kernel.asm	/^c0113ac3:	e8 58 1b 00 00       	call   c0115620 <sfs_wbuf>$/;"	l
c0113ac8	obj/kernel.asm	/^c0113ac8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113acb	obj/kernel.asm	/^c0113acb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113acf	obj/kernel.asm	/^c0113acf:	74 0a                	je     c0113adb <sfs_fsync+0xfd>$/;"	l
c0113ad1	obj/kernel.asm	/^c0113ad1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ad4	obj/kernel.asm	/^c0113ad4:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0113adb	obj/kernel.asm	/^c0113adb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ade	obj/kernel.asm	/^c0113ade:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113ae1	obj/kernel.asm	/^c0113ae1:	e8 84 e9 ff ff       	call   c011246a <unlock_sin>$/;"	l
c0113ae6	obj/kernel.asm	/^c0113ae6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113ae9	obj/kernel.asm	/^c0113ae9:	c9                   	leave  $/;"	l
c0113aea	obj/kernel.asm	/^c0113aea:	c3                   	ret    $/;"	l
c0113aeb	obj/kernel.asm	/^c0113aeb <sfs_namefile>:$/;"	l
c0113aeb	obj/kernel.asm	/^c0113aeb:	55                   	push   %ebp$/;"	l
c0113aec	obj/kernel.asm	/^c0113aec:	89 e5                	mov    %esp,%ebp$/;"	l
c0113aee	obj/kernel.asm	/^c0113aee:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0113af1	obj/kernel.asm	/^c0113af1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113af4	obj/kernel.asm	/^c0113af4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113af7	obj/kernel.asm	/^c0113af7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0113afa	obj/kernel.asm	/^c0113afa:	76 15                	jbe    c0113b11 <sfs_namefile+0x26>$/;"	l
c0113afc	obj/kernel.asm	/^c0113afc:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c0113b03	obj/kernel.asm	/^c0113b03:	e8 e0 46 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0113b08	obj/kernel.asm	/^c0113b08:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113b0b	obj/kernel.asm	/^c0113b0b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113b0f	obj/kernel.asm	/^c0113b0f:	75 0a                	jne    c0113b1b <sfs_namefile+0x30>$/;"	l
c0113b11	obj/kernel.asm	/^c0113b11:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113b16	obj/kernel.asm	/^c0113b16:	e9 bd 02 00 00       	jmp    c0113dd8 <sfs_namefile+0x2ed>$/;"	l
c0113b1b	obj/kernel.asm	/^c0113b1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113b1e	obj/kernel.asm	/^c0113b1e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113b21	obj/kernel.asm	/^c0113b21:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113b24	obj/kernel.asm	/^c0113b24:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0113b28	obj/kernel.asm	/^c0113b28:	74 0a                	je     c0113b34 <sfs_namefile+0x49>$/;"	l
c0113b2a	obj/kernel.asm	/^c0113b2a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113b2d	obj/kernel.asm	/^c0113b2d:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113b30	obj/kernel.asm	/^c0113b30:	85 c0                	test   %eax,%eax$/;"	l
c0113b32	obj/kernel.asm	/^c0113b32:	74 24                	je     c0113b58 <sfs_namefile+0x6d>$/;"	l
c0113b34	obj/kernel.asm	/^c0113b34:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c0113b3b	obj/kernel.asm	/^c0113b3b:	c0 $/;"	l
c0113b3c	obj/kernel.asm	/^c0113b3c:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113b43	obj/kernel.asm	/^c0113b43:	c0 $/;"	l
c0113b44	obj/kernel.asm	/^c0113b44:	c7 44 24 04 da 02 00 	movl   $0x2da,0x4(%esp)$/;"	l
c0113b4b	obj/kernel.asm	/^c0113b4b:	00 $/;"	l
c0113b4c	obj/kernel.asm	/^c0113b4c:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113b53	obj/kernel.asm	/^c0113b53:	e8 df d0 fe ff       	call   c0100c37 <__panic>$/;"	l
c0113b58	obj/kernel.asm	/^c0113b58:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113b5b	obj/kernel.asm	/^c0113b5b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113b5e	obj/kernel.asm	/^c0113b5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113b61	obj/kernel.asm	/^c0113b61:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113b64	obj/kernel.asm	/^c0113b64:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0113b68	obj/kernel.asm	/^c0113b68:	74 0d                	je     c0113b77 <sfs_namefile+0x8c>$/;"	l
c0113b6a	obj/kernel.asm	/^c0113b6a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113b6d	obj/kernel.asm	/^c0113b6d:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113b70	obj/kernel.asm	/^c0113b70:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113b75	obj/kernel.asm	/^c0113b75:	74 24                	je     c0113b9b <sfs_namefile+0xb0>$/;"	l
c0113b77	obj/kernel.asm	/^c0113b77:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c0113b7e	obj/kernel.asm	/^c0113b7e:	c0 $/;"	l
c0113b7f	obj/kernel.asm	/^c0113b7f:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113b86	obj/kernel.asm	/^c0113b86:	c0 $/;"	l
c0113b87	obj/kernel.asm	/^c0113b87:	c7 44 24 04 db 02 00 	movl   $0x2db,0x4(%esp)$/;"	l
c0113b8e	obj/kernel.asm	/^c0113b8e:	00 $/;"	l
c0113b8f	obj/kernel.asm	/^c0113b8f:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113b96	obj/kernel.asm	/^c0113b96:	e8 9c d0 fe ff       	call   c0100c37 <__panic>$/;"	l
c0113b9b	obj/kernel.asm	/^c0113b9b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113b9e	obj/kernel.asm	/^c0113b9e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113ba1	obj/kernel.asm	/^c0113ba1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113ba4	obj/kernel.asm	/^c0113ba4:	8b 10                	mov    (%eax),%edx$/;"	l
c0113ba6	obj/kernel.asm	/^c0113ba6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113ba9	obj/kernel.asm	/^c0113ba9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113bac	obj/kernel.asm	/^c0113bac:	01 d0                	add    %edx,%eax$/;"	l
c0113bae	obj/kernel.asm	/^c0113bae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113bb1	obj/kernel.asm	/^c0113bb1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113bb4	obj/kernel.asm	/^c0113bb4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113bb7	obj/kernel.asm	/^c0113bb7:	83 e8 02             	sub    $0x2,%eax$/;"	l
c0113bba	obj/kernel.asm	/^c0113bba:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113bbd	obj/kernel.asm	/^c0113bbd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113bc0	obj/kernel.asm	/^c0113bc0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113bc3	obj/kernel.asm	/^c0113bc3:	e8 ff d1 ff ff       	call   c0110dc7 <inode_ref_inc>$/;"	l
c0113bc8	obj/kernel.asm	/^c0113bc8:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113bcf	obj/kernel.asm	/^c0113bcf:	00 $/;"	l
c0113bd0	obj/kernel.asm	/^c0113bd0:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0113bd3	obj/kernel.asm	/^c0113bd3:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113bd7	obj/kernel.asm	/^c0113bd7:	c7 44 24 08 78 b0 11 	movl   $0xc011b078,0x8(%esp)$/;"	l
c0113bde	obj/kernel.asm	/^c0113bde:	c0 $/;"	l
c0113bdf	obj/kernel.asm	/^c0113bdf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113be2	obj/kernel.asm	/^c0113be2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113be6	obj/kernel.asm	/^c0113be6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113be9	obj/kernel.asm	/^c0113be9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113bec	obj/kernel.asm	/^c0113bec:	e8 5e f7 ff ff       	call   c011334f <sfs_lookup_once>$/;"	l
c0113bf1	obj/kernel.asm	/^c0113bf1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113bf4	obj/kernel.asm	/^c0113bf4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113bf8	obj/kernel.asm	/^c0113bf8:	74 05                	je     c0113bff <sfs_namefile+0x114>$/;"	l
c0113bfa	obj/kernel.asm	/^c0113bfa:	e9 c0 01 00 00       	jmp    c0113dbf <sfs_namefile+0x2d4>$/;"	l
c0113bff	obj/kernel.asm	/^c0113bff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113c02	obj/kernel.asm	/^c0113c02:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113c05	obj/kernel.asm	/^c0113c05:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0113c08	obj/kernel.asm	/^c0113c08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113c0b	obj/kernel.asm	/^c0113c0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c0e	obj/kernel.asm	/^c0113c0e:	e8 ce d1 ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c0113c13	obj/kernel.asm	/^c0113c13:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0113c16	obj/kernel.asm	/^c0113c16:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c0113c19	obj/kernel.asm	/^c0113c19:	75 76                	jne    c0113c91 <sfs_namefile+0x1a6>$/;"	l
c0113c1b	obj/kernel.asm	/^c0113c1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113c1e	obj/kernel.asm	/^c0113c1e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c21	obj/kernel.asm	/^c0113c21:	e8 bb d1 ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c0113c26	obj/kernel.asm	/^c0113c26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113c29	obj/kernel.asm	/^c0113c29:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0113c2c	obj/kernel.asm	/^c0113c2c:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0113c2f	obj/kernel.asm	/^c0113c2f:	83 e8 02             	sub    $0x2,%eax$/;"	l
c0113c32	obj/kernel.asm	/^c0113c32:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113c35	obj/kernel.asm	/^c0113c35:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113c38	obj/kernel.asm	/^c0113c38:	8b 00                	mov    (%eax),%eax$/;"	l
c0113c3a	obj/kernel.asm	/^c0113c3a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113c3d	obj/kernel.asm	/^c0113c3d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113c40	obj/kernel.asm	/^c0113c40:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113c44	obj/kernel.asm	/^c0113c44:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113c47	obj/kernel.asm	/^c0113c47:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113c4b	obj/kernel.asm	/^c0113c4b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0113c4e	obj/kernel.asm	/^c0113c4e:	e8 7c 2a 00 00       	call   c01166cf <memmove>$/;"	l
c0113c53	obj/kernel.asm	/^c0113c53:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113c56	obj/kernel.asm	/^c0113c56:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113c59	obj/kernel.asm	/^c0113c59:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0113c5c	obj/kernel.asm	/^c0113c5c:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0113c5f	obj/kernel.asm	/^c0113c5f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113c62	obj/kernel.asm	/^c0113c62:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113c65	obj/kernel.asm	/^c0113c65:	01 d0                	add    %edx,%eax$/;"	l
c0113c67	obj/kernel.asm	/^c0113c67:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0113c6a	obj/kernel.asm	/^c0113c6a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113c6d	obj/kernel.asm	/^c0113c6d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113c71	obj/kernel.asm	/^c0113c71:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113c74	obj/kernel.asm	/^c0113c74:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c77	obj/kernel.asm	/^c0113c77:	e8 a7 8b ff ff       	call   c010c823 <iobuf_skip>$/;"	l
c0113c7c	obj/kernel.asm	/^c0113c7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113c7f	obj/kernel.asm	/^c0113c7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113c82	obj/kernel.asm	/^c0113c82:	e8 7c 45 ff ff       	call   c0108203 <kfree>$/;"	l
c0113c87	obj/kernel.asm	/^c0113c87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113c8c	obj/kernel.asm	/^c0113c8c:	e9 47 01 00 00       	jmp    c0113dd8 <sfs_namefile+0x2ed>$/;"	l
c0113c91	obj/kernel.asm	/^c0113c91:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0113c94	obj/kernel.asm	/^c0113c94:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0113c97	obj/kernel.asm	/^c0113c97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113c9a	obj/kernel.asm	/^c0113c9a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0113c9d	obj/kernel.asm	/^c0113c9d:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0113ca1	obj/kernel.asm	/^c0113ca1:	74 0d                	je     c0113cb0 <sfs_namefile+0x1c5>$/;"	l
c0113ca3	obj/kernel.asm	/^c0113ca3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113ca6	obj/kernel.asm	/^c0113ca6:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113ca9	obj/kernel.asm	/^c0113ca9:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113cae	obj/kernel.asm	/^c0113cae:	74 24                	je     c0113cd4 <sfs_namefile+0x1e9>$/;"	l
c0113cb0	obj/kernel.asm	/^c0113cb0:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c0113cb7	obj/kernel.asm	/^c0113cb7:	c0 $/;"	l
c0113cb8	obj/kernel.asm	/^c0113cb8:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113cbf	obj/kernel.asm	/^c0113cbf:	c0 $/;"	l
c0113cc0	obj/kernel.asm	/^c0113cc0:	c7 44 24 04 ee 02 00 	movl   $0x2ee,0x4(%esp)$/;"	l
c0113cc7	obj/kernel.asm	/^c0113cc7:	00 $/;"	l
c0113cc8	obj/kernel.asm	/^c0113cc8:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113ccf	obj/kernel.asm	/^c0113ccf:	e8 63 cf fe ff       	call   c0100c37 <__panic>$/;"	l
c0113cd4	obj/kernel.asm	/^c0113cd4:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0113cd7	obj/kernel.asm	/^c0113cd7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113cda	obj/kernel.asm	/^c0113cda:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113cdd	obj/kernel.asm	/^c0113cdd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113ce0	obj/kernel.asm	/^c0113ce0:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0113ce3	obj/kernel.asm	/^c0113ce3:	74 0f                	je     c0113cf4 <sfs_namefile+0x209>$/;"	l
c0113ce5	obj/kernel.asm	/^c0113ce5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113ce8	obj/kernel.asm	/^c0113ce8:	8b 00                	mov    (%eax),%eax$/;"	l
c0113cea	obj/kernel.asm	/^c0113cea:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0113cee	obj/kernel.asm	/^c0113cee:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0113cf2	obj/kernel.asm	/^c0113cf2:	74 24                	je     c0113d18 <sfs_namefile+0x22d>$/;"	l
c0113cf4	obj/kernel.asm	/^c0113cf4:	c7 44 24 0c 7c b0 11 	movl   $0xc011b07c,0xc(%esp)$/;"	l
c0113cfb	obj/kernel.asm	/^c0113cfb:	c0 $/;"	l
c0113cfc	obj/kernel.asm	/^c0113cfc:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113d03	obj/kernel.asm	/^c0113d03:	c0 $/;"	l
c0113d04	obj/kernel.asm	/^c0113d04:	c7 44 24 04 ef 02 00 	movl   $0x2ef,0x4(%esp)$/;"	l
c0113d0b	obj/kernel.asm	/^c0113d0b:	00 $/;"	l
c0113d0c	obj/kernel.asm	/^c0113d0c:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113d13	obj/kernel.asm	/^c0113d13:	e8 1f cf fe ff       	call   c0100c37 <__panic>$/;"	l
c0113d18	obj/kernel.asm	/^c0113d18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113d1b	obj/kernel.asm	/^c0113d1b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d1e	obj/kernel.asm	/^c0113d1e:	e8 31 e7 ff ff       	call   c0112454 <lock_sin>$/;"	l
c0113d23	obj/kernel.asm	/^c0113d23:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d26	obj/kernel.asm	/^c0113d26:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113d2a	obj/kernel.asm	/^c0113d2a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0113d2d	obj/kernel.asm	/^c0113d2d:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113d31	obj/kernel.asm	/^c0113d31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113d34	obj/kernel.asm	/^c0113d34:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113d38	obj/kernel.asm	/^c0113d38:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113d3b	obj/kernel.asm	/^c0113d3b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d3e	obj/kernel.asm	/^c0113d3e:	e8 a0 f5 ff ff       	call   c01132e3 <sfs_dirent_findino_nolock>$/;"	l
c0113d43	obj/kernel.asm	/^c0113d43:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113d46	obj/kernel.asm	/^c0113d46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113d49	obj/kernel.asm	/^c0113d49:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d4c	obj/kernel.asm	/^c0113d4c:	e8 19 e7 ff ff       	call   c011246a <unlock_sin>$/;"	l
c0113d51	obj/kernel.asm	/^c0113d51:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113d55	obj/kernel.asm	/^c0113d55:	74 03                	je     c0113d5a <sfs_namefile+0x26f>$/;"	l
c0113d57	obj/kernel.asm	/^c0113d57:	90                   	nop$/;"	l
c0113d58	obj/kernel.asm	/^c0113d58:	eb 65                	jmp    c0113dbf <sfs_namefile+0x2d4>$/;"	l
c0113d5a	obj/kernel.asm	/^c0113d5a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d5d	obj/kernel.asm	/^c0113d5d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113d60	obj/kernel.asm	/^c0113d60:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113d63	obj/kernel.asm	/^c0113d63:	e8 d2 25 00 00       	call   c011633a <strlen>$/;"	l
c0113d68	obj/kernel.asm	/^c0113d68:	83 c0 01             	add    $0x1,%eax$/;"	l
c0113d6b	obj/kernel.asm	/^c0113d6b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113d6e	obj/kernel.asm	/^c0113d6e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113d71	obj/kernel.asm	/^c0113d71:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0113d74	obj/kernel.asm	/^c0113d74:	76 09                	jbe    c0113d7f <sfs_namefile+0x294>$/;"	l
c0113d76	obj/kernel.asm	/^c0113d76:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c0113d7d	obj/kernel.asm	/^c0113d7d:	eb 40                	jmp    c0113dbf <sfs_namefile+0x2d4>$/;"	l
c0113d7f	obj/kernel.asm	/^c0113d7f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113d82	obj/kernel.asm	/^c0113d82:	29 45 e8             	sub    %eax,-0x18(%ebp)$/;"	l
c0113d85	obj/kernel.asm	/^c0113d85:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113d88	obj/kernel.asm	/^c0113d88:	f7 d8                	neg    %eax$/;"	l
c0113d8a	obj/kernel.asm	/^c0113d8a:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0113d8d	obj/kernel.asm	/^c0113d8d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113d90	obj/kernel.asm	/^c0113d90:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113d93	obj/kernel.asm	/^c0113d93:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113d96	obj/kernel.asm	/^c0113d96:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113d99	obj/kernel.asm	/^c0113d99:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0113d9d	obj/kernel.asm	/^c0113d9d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113da1	obj/kernel.asm	/^c0113da1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113da4	obj/kernel.asm	/^c0113da4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113da7	obj/kernel.asm	/^c0113da7:	e8 c6 29 00 00       	call   c0116772 <memcpy>$/;"	l
c0113dac	obj/kernel.asm	/^c0113dac:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0113daf	obj/kernel.asm	/^c0113daf:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113db2	obj/kernel.asm	/^c0113db2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113db5	obj/kernel.asm	/^c0113db5:	01 d0                	add    %edx,%eax$/;"	l
c0113db7	obj/kernel.asm	/^c0113db7:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0113dba	obj/kernel.asm	/^c0113dba:	e9 09 fe ff ff       	jmp    c0113bc8 <sfs_namefile+0xdd>$/;"	l
c0113dbf	obj/kernel.asm	/^c0113dbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113dc2	obj/kernel.asm	/^c0113dc2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113dc5	obj/kernel.asm	/^c0113dc5:	e8 17 d0 ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c0113dca	obj/kernel.asm	/^c0113dca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113dcd	obj/kernel.asm	/^c0113dcd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113dd0	obj/kernel.asm	/^c0113dd0:	e8 2e 44 ff ff       	call   c0108203 <kfree>$/;"	l
c0113dd5	obj/kernel.asm	/^c0113dd5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113dd8	obj/kernel.asm	/^c0113dd8:	c9                   	leave  $/;"	l
c0113dd9	obj/kernel.asm	/^c0113dd9:	c3                   	ret    $/;"	l
c0113dda	obj/kernel.asm	/^c0113dda <sfs_getdirentry_sub_nolock>:$/;"	l
c0113dda	obj/kernel.asm	/^c0113dda:	55                   	push   %ebp$/;"	l
c0113ddb	obj/kernel.asm	/^c0113ddb:	89 e5                	mov    %esp,%ebp$/;"	l
c0113ddd	obj/kernel.asm	/^c0113ddd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0113de0	obj/kernel.asm	/^c0113de0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113de3	obj/kernel.asm	/^c0113de3:	8b 00                	mov    (%eax),%eax$/;"	l
c0113de5	obj/kernel.asm	/^c0113de5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113de8	obj/kernel.asm	/^c0113de8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113deb	obj/kernel.asm	/^c0113deb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113df2	obj/kernel.asm	/^c0113df2:	eb 4c                	jmp    c0113e40 <sfs_getdirentry_sub_nolock+0x66>$/;"	l
c0113df4	obj/kernel.asm	/^c0113df4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113df7	obj/kernel.asm	/^c0113df7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113dfb	obj/kernel.asm	/^c0113dfb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113dfe	obj/kernel.asm	/^c0113dfe:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113e02	obj/kernel.asm	/^c0113e02:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113e05	obj/kernel.asm	/^c0113e05:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113e09	obj/kernel.asm	/^c0113e09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113e0c	obj/kernel.asm	/^c0113e0c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113e0f	obj/kernel.asm	/^c0113e0f:	e8 a6 f2 ff ff       	call   c01130ba <sfs_dirent_read_nolock>$/;"	l
c0113e14	obj/kernel.asm	/^c0113e14:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113e17	obj/kernel.asm	/^c0113e17:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113e1b	obj/kernel.asm	/^c0113e1b:	74 05                	je     c0113e22 <sfs_getdirentry_sub_nolock+0x48>$/;"	l
c0113e1d	obj/kernel.asm	/^c0113e1d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113e20	obj/kernel.asm	/^c0113e20:	eb 2b                	jmp    c0113e4d <sfs_getdirentry_sub_nolock+0x73>$/;"	l
c0113e22	obj/kernel.asm	/^c0113e22:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113e25	obj/kernel.asm	/^c0113e25:	8b 00                	mov    (%eax),%eax$/;"	l
c0113e27	obj/kernel.asm	/^c0113e27:	85 c0                	test   %eax,%eax$/;"	l
c0113e29	obj/kernel.asm	/^c0113e29:	74 11                	je     c0113e3c <sfs_getdirentry_sub_nolock+0x62>$/;"	l
c0113e2b	obj/kernel.asm	/^c0113e2b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113e2f	obj/kernel.asm	/^c0113e2f:	75 07                	jne    c0113e38 <sfs_getdirentry_sub_nolock+0x5e>$/;"	l
c0113e31	obj/kernel.asm	/^c0113e31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113e36	obj/kernel.asm	/^c0113e36:	eb 15                	jmp    c0113e4d <sfs_getdirentry_sub_nolock+0x73>$/;"	l
c0113e38	obj/kernel.asm	/^c0113e38:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0113e3c	obj/kernel.asm	/^c0113e3c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0113e40	obj/kernel.asm	/^c0113e40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113e43	obj/kernel.asm	/^c0113e43:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0113e46	obj/kernel.asm	/^c0113e46:	7c ac                	jl     c0113df4 <sfs_getdirentry_sub_nolock+0x1a>$/;"	l
c0113e48	obj/kernel.asm	/^c0113e48:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0113e4d	obj/kernel.asm	/^c0113e4d:	c9                   	leave  $/;"	l
c0113e4e	obj/kernel.asm	/^c0113e4e:	c3                   	ret    $/;"	l
c0113e4f	obj/kernel.asm	/^c0113e4f <sfs_getdirentry>:$/;"	l
c0113e4f	obj/kernel.asm	/^c0113e4f:	55                   	push   %ebp$/;"	l
c0113e50	obj/kernel.asm	/^c0113e50:	89 e5                	mov    %esp,%ebp$/;"	l
c0113e52	obj/kernel.asm	/^c0113e52:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0113e55	obj/kernel.asm	/^c0113e55:	c7 04 24 04 01 00 00 	movl   $0x104,(%esp)$/;"	l
c0113e5c	obj/kernel.asm	/^c0113e5c:	e8 87 43 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0113e61	obj/kernel.asm	/^c0113e61:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113e64	obj/kernel.asm	/^c0113e64:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113e68	obj/kernel.asm	/^c0113e68:	75 0a                	jne    c0113e74 <sfs_getdirentry+0x25>$/;"	l
c0113e6a	obj/kernel.asm	/^c0113e6a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0113e6f	obj/kernel.asm	/^c0113e6f:	e9 6b 01 00 00       	jmp    c0113fdf <sfs_getdirentry+0x190>$/;"	l
c0113e74	obj/kernel.asm	/^c0113e74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113e77	obj/kernel.asm	/^c0113e77:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113e7a	obj/kernel.asm	/^c0113e7a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113e7d	obj/kernel.asm	/^c0113e7d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0113e81	obj/kernel.asm	/^c0113e81:	74 0a                	je     c0113e8d <sfs_getdirentry+0x3e>$/;"	l
c0113e83	obj/kernel.asm	/^c0113e83:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113e86	obj/kernel.asm	/^c0113e86:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113e89	obj/kernel.asm	/^c0113e89:	85 c0                	test   %eax,%eax$/;"	l
c0113e8b	obj/kernel.asm	/^c0113e8b:	74 24                	je     c0113eb1 <sfs_getdirentry+0x62>$/;"	l
c0113e8d	obj/kernel.asm	/^c0113e8d:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c0113e94	obj/kernel.asm	/^c0113e94:	c0 $/;"	l
c0113e95	obj/kernel.asm	/^c0113e95:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113e9c	obj/kernel.asm	/^c0113e9c:	c0 $/;"	l
c0113e9d	obj/kernel.asm	/^c0113e9d:	c7 44 24 04 30 03 00 	movl   $0x330,0x4(%esp)$/;"	l
c0113ea4	obj/kernel.asm	/^c0113ea4:	00 $/;"	l
c0113ea5	obj/kernel.asm	/^c0113ea5:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113eac	obj/kernel.asm	/^c0113eac:	e8 86 cd fe ff       	call   c0100c37 <__panic>$/;"	l
c0113eb1	obj/kernel.asm	/^c0113eb1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113eb4	obj/kernel.asm	/^c0113eb4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113eb7	obj/kernel.asm	/^c0113eb7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113eba	obj/kernel.asm	/^c0113eba:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113ebd	obj/kernel.asm	/^c0113ebd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113ec1	obj/kernel.asm	/^c0113ec1:	74 0d                	je     c0113ed0 <sfs_getdirentry+0x81>$/;"	l
c0113ec3	obj/kernel.asm	/^c0113ec3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ec6	obj/kernel.asm	/^c0113ec6:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0113ec9	obj/kernel.asm	/^c0113ec9:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0113ece	obj/kernel.asm	/^c0113ece:	74 24                	je     c0113ef4 <sfs_getdirentry+0xa5>$/;"	l
c0113ed0	obj/kernel.asm	/^c0113ed0:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c0113ed7	obj/kernel.asm	/^c0113ed7:	c0 $/;"	l
c0113ed8	obj/kernel.asm	/^c0113ed8:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0113edf	obj/kernel.asm	/^c0113edf:	c0 $/;"	l
c0113ee0	obj/kernel.asm	/^c0113ee0:	c7 44 24 04 31 03 00 	movl   $0x331,0x4(%esp)$/;"	l
c0113ee7	obj/kernel.asm	/^c0113ee7:	00 $/;"	l
c0113ee8	obj/kernel.asm	/^c0113ee8:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0113eef	obj/kernel.asm	/^c0113eef:	e8 43 cd fe ff       	call   c0100c37 <__panic>$/;"	l
c0113ef4	obj/kernel.asm	/^c0113ef4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113ef7	obj/kernel.asm	/^c0113ef7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113efa	obj/kernel.asm	/^c0113efa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113efd	obj/kernel.asm	/^c0113efd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113f00	obj/kernel.asm	/^c0113f00:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113f03	obj/kernel.asm	/^c0113f03:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113f07	obj/kernel.asm	/^c0113f07:	78 0a                	js     c0113f13 <sfs_getdirentry+0xc4>$/;"	l
c0113f09	obj/kernel.asm	/^c0113f09:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113f0c	obj/kernel.asm	/^c0113f0c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0113f0f	obj/kernel.asm	/^c0113f0f:	85 c0                	test   %eax,%eax$/;"	l
c0113f11	obj/kernel.asm	/^c0113f11:	74 15                	je     c0113f28 <sfs_getdirentry+0xd9>$/;"	l
c0113f13	obj/kernel.asm	/^c0113f13:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113f16	obj/kernel.asm	/^c0113f16:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f19	obj/kernel.asm	/^c0113f19:	e8 e5 42 ff ff       	call   c0108203 <kfree>$/;"	l
c0113f1e	obj/kernel.asm	/^c0113f1e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0113f23	obj/kernel.asm	/^c0113f23:	e9 b7 00 00 00       	jmp    c0113fdf <sfs_getdirentry+0x190>$/;"	l
c0113f28	obj/kernel.asm	/^c0113f28:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113f2b	obj/kernel.asm	/^c0113f2b:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0113f2e	obj/kernel.asm	/^c0113f2e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113f31	obj/kernel.asm	/^c0113f31:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0113f34	obj/kernel.asm	/^c0113f34:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f37	obj/kernel.asm	/^c0113f37:	8b 00                	mov    (%eax),%eax$/;"	l
c0113f39	obj/kernel.asm	/^c0113f39:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113f3c	obj/kernel.asm	/^c0113f3c:	39 c2                	cmp    %eax,%edx$/;"	l
c0113f3e	obj/kernel.asm	/^c0113f3e:	76 15                	jbe    c0113f55 <sfs_getdirentry+0x106>$/;"	l
c0113f40	obj/kernel.asm	/^c0113f40:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113f43	obj/kernel.asm	/^c0113f43:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f46	obj/kernel.asm	/^c0113f46:	e8 b8 42 ff ff       	call   c0108203 <kfree>$/;"	l
c0113f4b	obj/kernel.asm	/^c0113f4b:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0113f50	obj/kernel.asm	/^c0113f50:	e9 8a 00 00 00       	jmp    c0113fdf <sfs_getdirentry+0x190>$/;"	l
c0113f55	obj/kernel.asm	/^c0113f55:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f58	obj/kernel.asm	/^c0113f58:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f5b	obj/kernel.asm	/^c0113f5b:	e8 f4 e4 ff ff       	call   c0112454 <lock_sin>$/;"	l
c0113f60	obj/kernel.asm	/^c0113f60:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113f63	obj/kernel.asm	/^c0113f63:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0113f67	obj/kernel.asm	/^c0113f67:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113f6a	obj/kernel.asm	/^c0113f6a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0113f6e	obj/kernel.asm	/^c0113f6e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f71	obj/kernel.asm	/^c0113f71:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113f75	obj/kernel.asm	/^c0113f75:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113f78	obj/kernel.asm	/^c0113f78:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f7b	obj/kernel.asm	/^c0113f7b:	e8 5a fe ff ff       	call   c0113dda <sfs_getdirentry_sub_nolock>$/;"	l
c0113f80	obj/kernel.asm	/^c0113f80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113f83	obj/kernel.asm	/^c0113f83:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113f87	obj/kernel.asm	/^c0113f87:	74 0d                	je     c0113f96 <sfs_getdirentry+0x147>$/;"	l
c0113f89	obj/kernel.asm	/^c0113f89:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f8c	obj/kernel.asm	/^c0113f8c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f8f	obj/kernel.asm	/^c0113f8f:	e8 d6 e4 ff ff       	call   c011246a <unlock_sin>$/;"	l
c0113f94	obj/kernel.asm	/^c0113f94:	eb 3b                	jmp    c0113fd1 <sfs_getdirentry+0x182>$/;"	l
c0113f96	obj/kernel.asm	/^c0113f96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113f99	obj/kernel.asm	/^c0113f99:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113f9c	obj/kernel.asm	/^c0113f9c:	e8 c9 e4 ff ff       	call   c011246a <unlock_sin>$/;"	l
c0113fa1	obj/kernel.asm	/^c0113fa1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113fa4	obj/kernel.asm	/^c0113fa4:	83 c0 04             	add    $0x4,%eax$/;"	l
c0113fa7	obj/kernel.asm	/^c0113fa7:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0113fae	obj/kernel.asm	/^c0113fae:	00 $/;"	l
c0113faf	obj/kernel.asm	/^c0113faf:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0113fb6	obj/kernel.asm	/^c0113fb6:	00 $/;"	l
c0113fb7	obj/kernel.asm	/^c0113fb7:	c7 44 24 08 00 01 00 	movl   $0x100,0x8(%esp)$/;"	l
c0113fbe	obj/kernel.asm	/^c0113fbe:	00 $/;"	l
c0113fbf	obj/kernel.asm	/^c0113fbf:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0113fc3	obj/kernel.asm	/^c0113fc3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113fc6	obj/kernel.asm	/^c0113fc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113fc9	obj/kernel.asm	/^c0113fc9:	e8 40 87 ff ff       	call   c010c70e <iobuf_move>$/;"	l
c0113fce	obj/kernel.asm	/^c0113fce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113fd1	obj/kernel.asm	/^c0113fd1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113fd4	obj/kernel.asm	/^c0113fd4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0113fd7	obj/kernel.asm	/^c0113fd7:	e8 27 42 ff ff       	call   c0108203 <kfree>$/;"	l
c0113fdc	obj/kernel.asm	/^c0113fdc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113fdf	obj/kernel.asm	/^c0113fdf:	c9                   	leave  $/;"	l
c0113fe0	obj/kernel.asm	/^c0113fe0:	c3                   	ret    $/;"	l
c0113fe1	obj/kernel.asm	/^c0113fe1 <sfs_reclaim>:$/;"	l
c0113fe1	obj/kernel.asm	/^c0113fe1:	55                   	push   %ebp$/;"	l
c0113fe2	obj/kernel.asm	/^c0113fe2:	89 e5                	mov    %esp,%ebp$/;"	l
c0113fe4	obj/kernel.asm	/^c0113fe4:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0113fe7	obj/kernel.asm	/^c0113fe7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113fea	obj/kernel.asm	/^c0113fea:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113fed	obj/kernel.asm	/^c0113fed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113ff0	obj/kernel.asm	/^c0113ff0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113ff4	obj/kernel.asm	/^c0113ff4:	74 0a                	je     c0114000 <sfs_reclaim+0x1f>$/;"	l
c0113ff6	obj/kernel.asm	/^c0113ff6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113ff9	obj/kernel.asm	/^c0113ff9:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0113ffc	obj/kernel.asm	/^c0113ffc:	85 c0                	test   %eax,%eax$/;"	l
c0113ffe	obj/kernel.asm	/^c0113ffe:	74 24                	je     c0114024 <sfs_reclaim+0x43>$/;"	l
c0114000	obj/kernel.asm	/^c0114000:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c0114007	obj/kernel.asm	/^c0114007:	c0 $/;"	l
c0114008	obj/kernel.asm	/^c0114008:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c011400f	obj/kernel.asm	/^c011400f:	c0 $/;"	l
c0114010	obj/kernel.asm	/^c0114010:	c7 44 24 04 4e 03 00 	movl   $0x34e,0x4(%esp)$/;"	l
c0114017	obj/kernel.asm	/^c0114017:	00 $/;"	l
c0114018	obj/kernel.asm	/^c0114018:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c011401f	obj/kernel.asm	/^c011401f:	e8 13 cc fe ff       	call   c0100c37 <__panic>$/;"	l
c0114024	obj/kernel.asm	/^c0114024:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114027	obj/kernel.asm	/^c0114027:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011402a	obj/kernel.asm	/^c011402a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011402d	obj/kernel.asm	/^c011402d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114030	obj/kernel.asm	/^c0114030:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114034	obj/kernel.asm	/^c0114034:	74 0d                	je     c0114043 <sfs_reclaim+0x62>$/;"	l
c0114036	obj/kernel.asm	/^c0114036:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114039	obj/kernel.asm	/^c0114039:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011403c	obj/kernel.asm	/^c011403c:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0114041	obj/kernel.asm	/^c0114041:	74 24                	je     c0114067 <sfs_reclaim+0x86>$/;"	l
c0114043	obj/kernel.asm	/^c0114043:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c011404a	obj/kernel.asm	/^c011404a:	c0 $/;"	l
c011404b	obj/kernel.asm	/^c011404b:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0114052	obj/kernel.asm	/^c0114052:	c0 $/;"	l
c0114053	obj/kernel.asm	/^c0114053:	c7 44 24 04 4f 03 00 	movl   $0x34f,0x4(%esp)$/;"	l
c011405a	obj/kernel.asm	/^c011405a:	00 $/;"	l
c011405b	obj/kernel.asm	/^c011405b:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0114062	obj/kernel.asm	/^c0114062:	e8 d0 cb fe ff       	call   c0100c37 <__panic>$/;"	l
c0114067	obj/kernel.asm	/^c0114067:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011406a	obj/kernel.asm	/^c011406a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011406d	obj/kernel.asm	/^c011406d:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c0114074	obj/kernel.asm	/^c0114074:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114077	obj/kernel.asm	/^c0114077:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011407a	obj/kernel.asm	/^c011407a:	e8 72 e3 ff ff       	call   c01123f1 <lock_sfs_fs>$/;"	l
c011407f	obj/kernel.asm	/^c011407f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114082	obj/kernel.asm	/^c0114082:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0114085	obj/kernel.asm	/^c0114085:	85 c0                	test   %eax,%eax$/;"	l
c0114087	obj/kernel.asm	/^c0114087:	7f 24                	jg     c01140ad <sfs_reclaim+0xcc>$/;"	l
c0114089	obj/kernel.asm	/^c0114089:	c7 44 24 0c ae b0 11 	movl   $0xc011b0ae,0xc(%esp)$/;"	l
c0114090	obj/kernel.asm	/^c0114090:	c0 $/;"	l
c0114091	obj/kernel.asm	/^c0114091:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0114098	obj/kernel.asm	/^c0114098:	c0 $/;"	l
c0114099	obj/kernel.asm	/^c0114099:	c7 44 24 04 54 03 00 	movl   $0x354,0x4(%esp)$/;"	l
c01140a0	obj/kernel.asm	/^c01140a0:	00 $/;"	l
c01140a1	obj/kernel.asm	/^c01140a1:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01140a8	obj/kernel.asm	/^c01140a8:	e8 8a cb fe ff       	call   c0100c37 <__panic>$/;"	l
c01140ad	obj/kernel.asm	/^c01140ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01140b0	obj/kernel.asm	/^c01140b0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01140b3	obj/kernel.asm	/^c01140b3:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01140b6	obj/kernel.asm	/^c01140b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01140b9	obj/kernel.asm	/^c01140b9:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01140bc	obj/kernel.asm	/^c01140bc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01140bf	obj/kernel.asm	/^c01140bf:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01140c2	obj/kernel.asm	/^c01140c2:	85 c0                	test   %eax,%eax$/;"	l
c01140c4	obj/kernel.asm	/^c01140c4:	0f 85 a1 01 00 00    	jne    c011426b <sfs_reclaim+0x28a>$/;"	l
c01140ca	obj/kernel.asm	/^c01140ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01140cd	obj/kernel.asm	/^c01140cd:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01140d0	obj/kernel.asm	/^c01140d0:	e8 74 e3 ff ff       	call   c0112449 <inode_ref_count>$/;"	l
c01140d5	obj/kernel.asm	/^c01140d5:	85 c0                	test   %eax,%eax$/;"	l
c01140d7	obj/kernel.asm	/^c01140d7:	0f 85 8e 01 00 00    	jne    c011426b <sfs_reclaim+0x28a>$/;"	l
c01140dd	obj/kernel.asm	/^c01140dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01140e0	obj/kernel.asm	/^c01140e0:	8b 00                	mov    (%eax),%eax$/;"	l
c01140e2	obj/kernel.asm	/^c01140e2:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01140e6	obj/kernel.asm	/^c01140e6:	66 85 c0             	test   %ax,%ax$/;"	l
c01140e9	obj/kernel.asm	/^c01140e9:	0f 85 81 00 00 00    	jne    c0114170 <sfs_reclaim+0x18f>$/;"	l
c01140ef	obj/kernel.asm	/^c01140ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01140f2	obj/kernel.asm	/^c01140f2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01140f5	obj/kernel.asm	/^c01140f5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01140f9	obj/kernel.asm	/^c01140f9:	74 17                	je     c0114112 <sfs_reclaim+0x131>$/;"	l
c01140fb	obj/kernel.asm	/^c01140fb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01140fe	obj/kernel.asm	/^c01140fe:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0114101	obj/kernel.asm	/^c0114101:	85 c0                	test   %eax,%eax$/;"	l
c0114103	obj/kernel.asm	/^c0114103:	74 0d                	je     c0114112 <sfs_reclaim+0x131>$/;"	l
c0114105	obj/kernel.asm	/^c0114105:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114108	obj/kernel.asm	/^c0114108:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011410b	obj/kernel.asm	/^c011410b:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011410e	obj/kernel.asm	/^c011410e:	85 c0                	test   %eax,%eax$/;"	l
c0114110	obj/kernel.asm	/^c0114110:	75 24                	jne    c0114136 <sfs_reclaim+0x155>$/;"	l
c0114112	obj/kernel.asm	/^c0114112:	c7 44 24 0c c8 b0 11 	movl   $0xc011b0c8,0xc(%esp)$/;"	l
c0114119	obj/kernel.asm	/^c0114119:	c0 $/;"	l
c011411a	obj/kernel.asm	/^c011411a:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0114121	obj/kernel.asm	/^c0114121:	c0 $/;"	l
c0114122	obj/kernel.asm	/^c0114122:	c7 44 24 04 59 03 00 	movl   $0x359,0x4(%esp)$/;"	l
c0114129	obj/kernel.asm	/^c0114129:	00 $/;"	l
c011412a	obj/kernel.asm	/^c011412a:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0114131	obj/kernel.asm	/^c0114131:	e8 01 cb fe ff       	call   c0100c37 <__panic>$/;"	l
c0114136	obj/kernel.asm	/^c0114136:	c7 44 24 04 19 b1 11 	movl   $0xc011b119,0x4(%esp)$/;"	l
c011413d	obj/kernel.asm	/^c011413d:	c0 $/;"	l
c011413e	obj/kernel.asm	/^c011413e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114141	obj/kernel.asm	/^c0114141:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114144	obj/kernel.asm	/^c0114144:	e8 86 ce ff ff       	call   c0110fcf <inode_check>$/;"	l
c0114149	obj/kernel.asm	/^c0114149:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011414c	obj/kernel.asm	/^c011414c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011414f	obj/kernel.asm	/^c011414f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0114152	obj/kernel.asm	/^c0114152:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0114159	obj/kernel.asm	/^c0114159:	00 $/;"	l
c011415a	obj/kernel.asm	/^c011415a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011415d	obj/kernel.asm	/^c011415d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0114160	obj/kernel.asm	/^c0114160:	ff d0                	call   *%eax$/;"	l
c0114162	obj/kernel.asm	/^c0114162:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114165	obj/kernel.asm	/^c0114165:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114169	obj/kernel.asm	/^c0114169:	74 05                	je     c0114170 <sfs_reclaim+0x18f>$/;"	l
c011416b	obj/kernel.asm	/^c011416b:	e9 fb 00 00 00       	jmp    c011426b <sfs_reclaim+0x28a>$/;"	l
c0114170	obj/kernel.asm	/^c0114170:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114173	obj/kernel.asm	/^c0114173:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0114176	obj/kernel.asm	/^c0114176:	85 c0                	test   %eax,%eax$/;"	l
c0114178	obj/kernel.asm	/^c0114178:	74 76                	je     c01141f0 <sfs_reclaim+0x20f>$/;"	l
c011417a	obj/kernel.asm	/^c011417a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011417d	obj/kernel.asm	/^c011417d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0114180	obj/kernel.asm	/^c0114180:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0114184	obj/kernel.asm	/^c0114184:	74 17                	je     c011419d <sfs_reclaim+0x1bc>$/;"	l
c0114186	obj/kernel.asm	/^c0114186:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114189	obj/kernel.asm	/^c0114189:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011418c	obj/kernel.asm	/^c011418c:	85 c0                	test   %eax,%eax$/;"	l
c011418e	obj/kernel.asm	/^c011418e:	74 0d                	je     c011419d <sfs_reclaim+0x1bc>$/;"	l
c0114190	obj/kernel.asm	/^c0114190:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114193	obj/kernel.asm	/^c0114193:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0114196	obj/kernel.asm	/^c0114196:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0114199	obj/kernel.asm	/^c0114199:	85 c0                	test   %eax,%eax$/;"	l
c011419b	obj/kernel.asm	/^c011419b:	75 24                	jne    c01141c1 <sfs_reclaim+0x1e0>$/;"	l
c011419d	obj/kernel.asm	/^c011419d:	c7 44 24 0c 84 af 11 	movl   $0xc011af84,0xc(%esp)$/;"	l
c01141a4	obj/kernel.asm	/^c01141a4:	c0 $/;"	l
c01141a5	obj/kernel.asm	/^c01141a5:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01141ac	obj/kernel.asm	/^c01141ac:	c0 $/;"	l
c01141ad	obj/kernel.asm	/^c01141ad:	c7 44 24 04 5e 03 00 	movl   $0x35e,0x4(%esp)$/;"	l
c01141b4	obj/kernel.asm	/^c01141b4:	00 $/;"	l
c01141b5	obj/kernel.asm	/^c01141b5:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01141bc	obj/kernel.asm	/^c01141bc:	e8 76 ca fe ff       	call   c0100c37 <__panic>$/;"	l
c01141c1	obj/kernel.asm	/^c01141c1:	c7 44 24 04 d2 af 11 	movl   $0xc011afd2,0x4(%esp)$/;"	l
c01141c8	obj/kernel.asm	/^c01141c8:	c0 $/;"	l
c01141c9	obj/kernel.asm	/^c01141c9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01141cc	obj/kernel.asm	/^c01141cc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01141cf	obj/kernel.asm	/^c01141cf:	e8 fb cd ff ff       	call   c0110fcf <inode_check>$/;"	l
c01141d4	obj/kernel.asm	/^c01141d4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01141d7	obj/kernel.asm	/^c01141d7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01141da	obj/kernel.asm	/^c01141da:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01141dd	obj/kernel.asm	/^c01141dd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01141e0	obj/kernel.asm	/^c01141e0:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01141e3	obj/kernel.asm	/^c01141e3:	ff d0                	call   *%eax$/;"	l
c01141e5	obj/kernel.asm	/^c01141e5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01141e8	obj/kernel.asm	/^c01141e8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01141ec	obj/kernel.asm	/^c01141ec:	74 02                	je     c01141f0 <sfs_reclaim+0x20f>$/;"	l
c01141ee	obj/kernel.asm	/^c01141ee:	eb 7b                	jmp    c011426b <sfs_reclaim+0x28a>$/;"	l
c01141f0	obj/kernel.asm	/^c01141f0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01141f3	obj/kernel.asm	/^c01141f3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01141f6	obj/kernel.asm	/^c01141f6:	e8 c9 e3 ff ff       	call   c01125c4 <sfs_remove_links>$/;"	l
c01141fb	obj/kernel.asm	/^c01141fb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01141fe	obj/kernel.asm	/^c01141fe:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114201	obj/kernel.asm	/^c0114201:	e8 17 e2 ff ff       	call   c011241d <unlock_sfs_fs>$/;"	l
c0114206	obj/kernel.asm	/^c0114206:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114209	obj/kernel.asm	/^c0114209:	8b 00                	mov    (%eax),%eax$/;"	l
c011420b	obj/kernel.asm	/^c011420b:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c011420f	obj/kernel.asm	/^c011420f:	66 85 c0             	test   %ax,%ax$/;"	l
c0114212	obj/kernel.asm	/^c0114212:	75 38                	jne    c011424c <sfs_reclaim+0x26b>$/;"	l
c0114214	obj/kernel.asm	/^c0114214:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114217	obj/kernel.asm	/^c0114217:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011421a	obj/kernel.asm	/^c011421a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011421e	obj/kernel.asm	/^c011421e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114221	obj/kernel.asm	/^c0114221:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114224	obj/kernel.asm	/^c0114224:	e8 2b e5 ff ff       	call   c0112754 <sfs_block_free>$/;"	l
c0114229	obj/kernel.asm	/^c0114229:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011422c	obj/kernel.asm	/^c011422c:	8b 00                	mov    (%eax),%eax$/;"	l
c011422e	obj/kernel.asm	/^c011422e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0114231	obj/kernel.asm	/^c0114231:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0114234	obj/kernel.asm	/^c0114234:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0114238	obj/kernel.asm	/^c0114238:	74 12                	je     c011424c <sfs_reclaim+0x26b>$/;"	l
c011423a	obj/kernel.asm	/^c011423a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011423d	obj/kernel.asm	/^c011423d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114241	obj/kernel.asm	/^c0114241:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114244	obj/kernel.asm	/^c0114244:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114247	obj/kernel.asm	/^c0114247:	e8 08 e5 ff ff       	call   c0112754 <sfs_block_free>$/;"	l
c011424c	obj/kernel.asm	/^c011424c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011424f	obj/kernel.asm	/^c011424f:	8b 00                	mov    (%eax),%eax$/;"	l
c0114251	obj/kernel.asm	/^c0114251:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114254	obj/kernel.asm	/^c0114254:	e8 aa 3f ff ff       	call   c0108203 <kfree>$/;"	l
c0114259	obj/kernel.asm	/^c0114259:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011425c	obj/kernel.asm	/^c011425c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011425f	obj/kernel.asm	/^c011425f:	e8 ea ca ff ff       	call   c0110d4e <inode_kill>$/;"	l
c0114264	obj/kernel.asm	/^c0114264:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114269	obj/kernel.asm	/^c0114269:	eb 0e                	jmp    c0114279 <sfs_reclaim+0x298>$/;"	l
c011426b	obj/kernel.asm	/^c011426b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011426e	obj/kernel.asm	/^c011426e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114271	obj/kernel.asm	/^c0114271:	e8 a7 e1 ff ff       	call   c011241d <unlock_sfs_fs>$/;"	l
c0114276	obj/kernel.asm	/^c0114276:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114279	obj/kernel.asm	/^c0114279:	c9                   	leave  $/;"	l
c011427a	obj/kernel.asm	/^c011427a:	c3                   	ret    $/;"	l
c011427b	obj/kernel.asm	/^c011427b <sfs_gettype>:$/;"	l
c011427b	obj/kernel.asm	/^c011427b:	55                   	push   %ebp$/;"	l
c011427c	obj/kernel.asm	/^c011427c:	89 e5                	mov    %esp,%ebp$/;"	l
c011427e	obj/kernel.asm	/^c011427e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114281	obj/kernel.asm	/^c0114281:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114284	obj/kernel.asm	/^c0114284:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114287	obj/kernel.asm	/^c0114287:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011428b	obj/kernel.asm	/^c011428b:	74 0d                	je     c011429a <sfs_gettype+0x1f>$/;"	l
c011428d	obj/kernel.asm	/^c011428d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114290	obj/kernel.asm	/^c0114290:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0114293	obj/kernel.asm	/^c0114293:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0114298	obj/kernel.asm	/^c0114298:	74 24                	je     c01142be <sfs_gettype+0x43>$/;"	l
c011429a	obj/kernel.asm	/^c011429a:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c01142a1	obj/kernel.asm	/^c01142a1:	c0 $/;"	l
c01142a2	obj/kernel.asm	/^c01142a2:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01142a9	obj/kernel.asm	/^c01142a9:	c0 $/;"	l
c01142aa	obj/kernel.asm	/^c01142aa:	c7 44 24 04 79 03 00 	movl   $0x379,0x4(%esp)$/;"	l
c01142b1	obj/kernel.asm	/^c01142b1:	00 $/;"	l
c01142b2	obj/kernel.asm	/^c01142b2:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01142b9	obj/kernel.asm	/^c01142b9:	e8 79 c9 fe ff       	call   c0100c37 <__panic>$/;"	l
c01142be	obj/kernel.asm	/^c01142be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01142c1	obj/kernel.asm	/^c01142c1:	8b 00                	mov    (%eax),%eax$/;"	l
c01142c3	obj/kernel.asm	/^c01142c3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01142c6	obj/kernel.asm	/^c01142c6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01142c9	obj/kernel.asm	/^c01142c9:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01142cd	obj/kernel.asm	/^c01142cd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01142d0	obj/kernel.asm	/^c01142d0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01142d3	obj/kernel.asm	/^c01142d3:	74 0c                	je     c01142e1 <sfs_gettype+0x66>$/;"	l
c01142d5	obj/kernel.asm	/^c01142d5:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01142d8	obj/kernel.asm	/^c01142d8:	74 27                	je     c0114301 <sfs_gettype+0x86>$/;"	l
c01142da	obj/kernel.asm	/^c01142da:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01142dd	obj/kernel.asm	/^c01142dd:	74 12                	je     c01142f1 <sfs_gettype+0x76>$/;"	l
c01142df	obj/kernel.asm	/^c01142df:	eb 30                	jmp    c0114311 <sfs_gettype+0x96>$/;"	l
c01142e1	obj/kernel.asm	/^c01142e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01142e4	obj/kernel.asm	/^c01142e4:	c7 00 00 20 00 00    	movl   $0x2000,(%eax)$/;"	l
c01142ea	obj/kernel.asm	/^c01142ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01142ef	obj/kernel.asm	/^c01142ef:	eb 4a                	jmp    c011433b <sfs_gettype+0xc0>$/;"	l
c01142f1	obj/kernel.asm	/^c01142f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01142f4	obj/kernel.asm	/^c01142f4:	c7 00 00 10 00 00    	movl   $0x1000,(%eax)$/;"	l
c01142fa	obj/kernel.asm	/^c01142fa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01142ff	obj/kernel.asm	/^c01142ff:	eb 3a                	jmp    c011433b <sfs_gettype+0xc0>$/;"	l
c0114301	obj/kernel.asm	/^c0114301:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114304	obj/kernel.asm	/^c0114304:	c7 00 00 30 00 00    	movl   $0x3000,(%eax)$/;"	l
c011430a	obj/kernel.asm	/^c011430a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011430f	obj/kernel.asm	/^c011430f:	eb 2a                	jmp    c011433b <sfs_gettype+0xc0>$/;"	l
c0114311	obj/kernel.asm	/^c0114311:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114314	obj/kernel.asm	/^c0114314:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0114318	obj/kernel.asm	/^c0114318:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c011431b	obj/kernel.asm	/^c011431b:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011431f	obj/kernel.asm	/^c011431f:	c7 44 24 08 20 ad 11 	movl   $0xc011ad20,0x8(%esp)$/;"	l
c0114326	obj/kernel.asm	/^c0114326:	c0 $/;"	l
c0114327	obj/kernel.asm	/^c0114327:	c7 44 24 04 85 03 00 	movl   $0x385,0x4(%esp)$/;"	l
c011432e	obj/kernel.asm	/^c011432e:	00 $/;"	l
c011432f	obj/kernel.asm	/^c011432f:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0114336	obj/kernel.asm	/^c0114336:	e8 fc c8 fe ff       	call   c0100c37 <__panic>$/;"	l
c011433b	obj/kernel.asm	/^c011433b:	c9                   	leave  $/;"	l
c011433c	obj/kernel.asm	/^c011433c:	c3                   	ret    $/;"	l
c011433d	obj/kernel.asm	/^c011433d <sfs_tryseek>:$/;"	l
c011433d	obj/kernel.asm	/^c011433d:	55                   	push   %ebp$/;"	l
c011433e	obj/kernel.asm	/^c011433e:	89 e5                	mov    %esp,%ebp$/;"	l
c0114340	obj/kernel.asm	/^c0114340:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114343	obj/kernel.asm	/^c0114343:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114347	obj/kernel.asm	/^c0114347:	78 0a                	js     c0114353 <sfs_tryseek+0x16>$/;"	l
c0114349	obj/kernel.asm	/^c0114349:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011434c	obj/kernel.asm	/^c011434c:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c0114351	obj/kernel.asm	/^c0114351:	76 0a                	jbe    c011435d <sfs_tryseek+0x20>$/;"	l
c0114353	obj/kernel.asm	/^c0114353:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0114358	obj/kernel.asm	/^c0114358:	e9 ca 00 00 00       	jmp    c0114427 <sfs_tryseek+0xea>$/;"	l
c011435d	obj/kernel.asm	/^c011435d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114360	obj/kernel.asm	/^c0114360:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114363	obj/kernel.asm	/^c0114363:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114367	obj/kernel.asm	/^c0114367:	74 0d                	je     c0114376 <sfs_tryseek+0x39>$/;"	l
c0114369	obj/kernel.asm	/^c0114369:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011436c	obj/kernel.asm	/^c011436c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011436f	obj/kernel.asm	/^c011436f:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0114374	obj/kernel.asm	/^c0114374:	74 24                	je     c011439a <sfs_tryseek+0x5d>$/;"	l
c0114376	obj/kernel.asm	/^c0114376:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c011437d	obj/kernel.asm	/^c011437d:	c0 $/;"	l
c011437e	obj/kernel.asm	/^c011437e:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0114385	obj/kernel.asm	/^c0114385:	c0 $/;"	l
c0114386	obj/kernel.asm	/^c0114386:	c7 44 24 04 90 03 00 	movl   $0x390,0x4(%esp)$/;"	l
c011438d	obj/kernel.asm	/^c011438d:	00 $/;"	l
c011438e	obj/kernel.asm	/^c011438e:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0114395	obj/kernel.asm	/^c0114395:	e8 9d c8 fe ff       	call   c0100c37 <__panic>$/;"	l
c011439a	obj/kernel.asm	/^c011439a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011439d	obj/kernel.asm	/^c011439d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01143a0	obj/kernel.asm	/^c01143a0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01143a3	obj/kernel.asm	/^c01143a3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01143a6	obj/kernel.asm	/^c01143a6:	8b 00                	mov    (%eax),%eax$/;"	l
c01143a8	obj/kernel.asm	/^c01143a8:	8b 00                	mov    (%eax),%eax$/;"	l
c01143aa	obj/kernel.asm	/^c01143aa:	39 c2                	cmp    %eax,%edx$/;"	l
c01143ac	obj/kernel.asm	/^c01143ac:	76 74                	jbe    c0114422 <sfs_tryseek+0xe5>$/;"	l
c01143ae	obj/kernel.asm	/^c01143ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01143b1	obj/kernel.asm	/^c01143b1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01143b4	obj/kernel.asm	/^c01143b4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01143b8	obj/kernel.asm	/^c01143b8:	74 17                	je     c01143d1 <sfs_tryseek+0x94>$/;"	l
c01143ba	obj/kernel.asm	/^c01143ba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01143bd	obj/kernel.asm	/^c01143bd:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01143c0	obj/kernel.asm	/^c01143c0:	85 c0                	test   %eax,%eax$/;"	l
c01143c2	obj/kernel.asm	/^c01143c2:	74 0d                	je     c01143d1 <sfs_tryseek+0x94>$/;"	l
c01143c4	obj/kernel.asm	/^c01143c4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01143c7	obj/kernel.asm	/^c01143c7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01143ca	obj/kernel.asm	/^c01143ca:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01143cd	obj/kernel.asm	/^c01143cd:	85 c0                	test   %eax,%eax$/;"	l
c01143cf	obj/kernel.asm	/^c01143cf:	75 24                	jne    c01143f5 <sfs_tryseek+0xb8>$/;"	l
c01143d1	obj/kernel.asm	/^c01143d1:	c7 44 24 0c c8 b0 11 	movl   $0xc011b0c8,0xc(%esp)$/;"	l
c01143d8	obj/kernel.asm	/^c01143d8:	c0 $/;"	l
c01143d9	obj/kernel.asm	/^c01143d9:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01143e0	obj/kernel.asm	/^c01143e0:	c0 $/;"	l
c01143e1	obj/kernel.asm	/^c01143e1:	c7 44 24 04 92 03 00 	movl   $0x392,0x4(%esp)$/;"	l
c01143e8	obj/kernel.asm	/^c01143e8:	00 $/;"	l
c01143e9	obj/kernel.asm	/^c01143e9:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01143f0	obj/kernel.asm	/^c01143f0:	e8 42 c8 fe ff       	call   c0100c37 <__panic>$/;"	l
c01143f5	obj/kernel.asm	/^c01143f5:	c7 44 24 04 19 b1 11 	movl   $0xc011b119,0x4(%esp)$/;"	l
c01143fc	obj/kernel.asm	/^c01143fc:	c0 $/;"	l
c01143fd	obj/kernel.asm	/^c01143fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114400	obj/kernel.asm	/^c0114400:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114403	obj/kernel.asm	/^c0114403:	e8 c7 cb ff ff       	call   c0110fcf <inode_check>$/;"	l
c0114408	obj/kernel.asm	/^c0114408:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011440b	obj/kernel.asm	/^c011440b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011440e	obj/kernel.asm	/^c011440e:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0114411	obj/kernel.asm	/^c0114411:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114414	obj/kernel.asm	/^c0114414:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114418	obj/kernel.asm	/^c0114418:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011441b	obj/kernel.asm	/^c011441b:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011441e	obj/kernel.asm	/^c011441e:	ff d0                	call   *%eax$/;"	l
c0114420	obj/kernel.asm	/^c0114420:	eb 05                	jmp    c0114427 <sfs_tryseek+0xea>$/;"	l
c0114422	obj/kernel.asm	/^c0114422:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114427	obj/kernel.asm	/^c0114427:	c9                   	leave  $/;"	l
c0114428	obj/kernel.asm	/^c0114428:	c3                   	ret    $/;"	l
c0114429	obj/kernel.asm	/^c0114429 <sfs_truncfile>:$/;"	l
c0114429	obj/kernel.asm	/^c0114429:	55                   	push   %ebp$/;"	l
c011442a	obj/kernel.asm	/^c011442a:	89 e5                	mov    %esp,%ebp$/;"	l
c011442c	obj/kernel.asm	/^c011442c:	83 ec 48             	sub    $0x48,%esp$/;"	l
c011442f	obj/kernel.asm	/^c011442f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0114433	obj/kernel.asm	/^c0114433:	78 0a                	js     c011443f <sfs_truncfile+0x16>$/;"	l
c0114435	obj/kernel.asm	/^c0114435:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114438	obj/kernel.asm	/^c0114438:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c011443d	obj/kernel.asm	/^c011443d:	76 0a                	jbe    c0114449 <sfs_truncfile+0x20>$/;"	l
c011443f	obj/kernel.asm	/^c011443f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0114444	obj/kernel.asm	/^c0114444:	e9 d4 01 00 00       	jmp    c011461d <sfs_truncfile+0x1f4>$/;"	l
c0114449	obj/kernel.asm	/^c0114449:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011444c	obj/kernel.asm	/^c011444c:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011444f	obj/kernel.asm	/^c011444f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0114452	obj/kernel.asm	/^c0114452:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0114456	obj/kernel.asm	/^c0114456:	74 0a                	je     c0114462 <sfs_truncfile+0x39>$/;"	l
c0114458	obj/kernel.asm	/^c0114458:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011445b	obj/kernel.asm	/^c011445b:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011445e	obj/kernel.asm	/^c011445e:	85 c0                	test   %eax,%eax$/;"	l
c0114460	obj/kernel.asm	/^c0114460:	74 24                	je     c0114486 <sfs_truncfile+0x5d>$/;"	l
c0114462	obj/kernel.asm	/^c0114462:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c0114469	obj/kernel.asm	/^c0114469:	c0 $/;"	l
c011446a	obj/kernel.asm	/^c011446a:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0114471	obj/kernel.asm	/^c0114471:	c0 $/;"	l
c0114472	obj/kernel.asm	/^c0114472:	c7 44 24 04 9f 03 00 	movl   $0x39f,0x4(%esp)$/;"	l
c0114479	obj/kernel.asm	/^c0114479:	00 $/;"	l
c011447a	obj/kernel.asm	/^c011447a:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0114481	obj/kernel.asm	/^c0114481:	e8 b1 c7 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114486	obj/kernel.asm	/^c0114486:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114489	obj/kernel.asm	/^c0114489:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011448c	obj/kernel.asm	/^c011448c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011448f	obj/kernel.asm	/^c011448f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114492	obj/kernel.asm	/^c0114492:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114496	obj/kernel.asm	/^c0114496:	74 0d                	je     c01144a5 <sfs_truncfile+0x7c>$/;"	l
c0114498	obj/kernel.asm	/^c0114498:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011449b	obj/kernel.asm	/^c011449b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011449e	obj/kernel.asm	/^c011449e:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01144a3	obj/kernel.asm	/^c01144a3:	74 24                	je     c01144c9 <sfs_truncfile+0xa0>$/;"	l
c01144a5	obj/kernel.asm	/^c01144a5:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c01144ac	obj/kernel.asm	/^c01144ac:	c0 $/;"	l
c01144ad	obj/kernel.asm	/^c01144ad:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01144b4	obj/kernel.asm	/^c01144b4:	c0 $/;"	l
c01144b5	obj/kernel.asm	/^c01144b5:	c7 44 24 04 a0 03 00 	movl   $0x3a0,0x4(%esp)$/;"	l
c01144bc	obj/kernel.asm	/^c01144bc:	00 $/;"	l
c01144bd	obj/kernel.asm	/^c01144bd:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01144c4	obj/kernel.asm	/^c01144c4:	e8 6e c7 fe ff       	call   c0100c37 <__panic>$/;"	l
c01144c9	obj/kernel.asm	/^c01144c9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01144cc	obj/kernel.asm	/^c01144cc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01144cf	obj/kernel.asm	/^c01144cf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01144d2	obj/kernel.asm	/^c01144d2:	8b 00                	mov    (%eax),%eax$/;"	l
c01144d4	obj/kernel.asm	/^c01144d4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01144d7	obj/kernel.asm	/^c01144d7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01144de	obj/kernel.asm	/^c01144de:	c7 45 d8 00 10 00 00 	movl   $0x1000,-0x28(%ebp)$/;"	l
c01144e5	obj/kernel.asm	/^c01144e5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01144e8	obj/kernel.asm	/^c01144e8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01144eb	obj/kernel.asm	/^c01144eb:	01 d0                	add    %edx,%eax$/;"	l
c01144ed	obj/kernel.asm	/^c01144ed:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01144f0	obj/kernel.asm	/^c01144f0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01144f5	obj/kernel.asm	/^c01144f5:	f7 75 d8             	divl   -0x28(%ebp)$/;"	l
c01144f8	obj/kernel.asm	/^c01144f8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01144fb	obj/kernel.asm	/^c01144fb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01144fe	obj/kernel.asm	/^c01144fe:	8b 10                	mov    (%eax),%edx$/;"	l
c0114500	obj/kernel.asm	/^c0114500:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114503	obj/kernel.asm	/^c0114503:	39 c2                	cmp    %eax,%edx$/;"	l
c0114505	obj/kernel.asm	/^c0114505:	75 39                	jne    c0114540 <sfs_truncfile+0x117>$/;"	l
c0114507	obj/kernel.asm	/^c0114507:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011450a	obj/kernel.asm	/^c011450a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011450d	obj/kernel.asm	/^c011450d:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0114510	obj/kernel.asm	/^c0114510:	74 24                	je     c0114536 <sfs_truncfile+0x10d>$/;"	l
c0114512	obj/kernel.asm	/^c0114512:	c7 44 24 0c 22 b1 11 	movl   $0xc011b122,0xc(%esp)$/;"	l
c0114519	obj/kernel.asm	/^c0114519:	c0 $/;"	l
c011451a	obj/kernel.asm	/^c011451a:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c0114521	obj/kernel.asm	/^c0114521:	c0 $/;"	l
c0114522	obj/kernel.asm	/^c0114522:	c7 44 24 04 a7 03 00 	movl   $0x3a7,0x4(%esp)$/;"	l
c0114529	obj/kernel.asm	/^c0114529:	00 $/;"	l
c011452a	obj/kernel.asm	/^c011452a:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c0114531	obj/kernel.asm	/^c0114531:	e8 01 c7 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114536	obj/kernel.asm	/^c0114536:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011453b	obj/kernel.asm	/^c011453b:	e9 dd 00 00 00       	jmp    c011461d <sfs_truncfile+0x1f4>$/;"	l
c0114540	obj/kernel.asm	/^c0114540:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114543	obj/kernel.asm	/^c0114543:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114546	obj/kernel.asm	/^c0114546:	e8 09 df ff ff       	call   c0112454 <lock_sin>$/;"	l
c011454b	obj/kernel.asm	/^c011454b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011454e	obj/kernel.asm	/^c011454e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0114551	obj/kernel.asm	/^c0114551:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114554	obj/kernel.asm	/^c0114554:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114557	obj/kernel.asm	/^c0114557:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c011455a	obj/kernel.asm	/^c011455a:	73 3f                	jae    c011459b <sfs_truncfile+0x172>$/;"	l
c011455c	obj/kernel.asm	/^c011455c:	eb 33                	jmp    c0114591 <sfs_truncfile+0x168>$/;"	l
c011455e	obj/kernel.asm	/^c011455e:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0114565	obj/kernel.asm	/^c0114565:	00 $/;"	l
c0114566	obj/kernel.asm	/^c0114566:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114569	obj/kernel.asm	/^c0114569:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011456d	obj/kernel.asm	/^c011456d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114570	obj/kernel.asm	/^c0114570:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114574	obj/kernel.asm	/^c0114574:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114577	obj/kernel.asm	/^c0114577:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011457a	obj/kernel.asm	/^c011457a:	e8 ca e9 ff ff       	call   c0112f49 <sfs_bmap_load_nolock>$/;"	l
c011457f	obj/kernel.asm	/^c011457f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114582	obj/kernel.asm	/^c0114582:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114586	obj/kernel.asm	/^c0114586:	74 05                	je     c011458d <sfs_truncfile+0x164>$/;"	l
c0114588	obj/kernel.asm	/^c0114588:	e9 82 00 00 00       	jmp    c011460f <sfs_truncfile+0x1e6>$/;"	l
c011458d	obj/kernel.asm	/^c011458d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0114591	obj/kernel.asm	/^c0114591:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114594	obj/kernel.asm	/^c0114594:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0114597	obj/kernel.asm	/^c0114597:	75 c5                	jne    c011455e <sfs_truncfile+0x135>$/;"	l
c0114599	obj/kernel.asm	/^c0114599:	eb 33                	jmp    c01145ce <sfs_truncfile+0x1a5>$/;"	l
c011459b	obj/kernel.asm	/^c011459b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c011459e	obj/kernel.asm	/^c011459e:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01145a1	obj/kernel.asm	/^c01145a1:	73 2b                	jae    c01145ce <sfs_truncfile+0x1a5>$/;"	l
c01145a3	obj/kernel.asm	/^c01145a3:	eb 21                	jmp    c01145c6 <sfs_truncfile+0x19d>$/;"	l
c01145a5	obj/kernel.asm	/^c01145a5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01145a8	obj/kernel.asm	/^c01145a8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01145ac	obj/kernel.asm	/^c01145ac:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01145af	obj/kernel.asm	/^c01145af:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01145b2	obj/kernel.asm	/^c01145b2:	e8 7a ea ff ff       	call   c0113031 <sfs_bmap_truncate_nolock>$/;"	l
c01145b7	obj/kernel.asm	/^c01145b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01145ba	obj/kernel.asm	/^c01145ba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01145be	obj/kernel.asm	/^c01145be:	74 02                	je     c01145c2 <sfs_truncfile+0x199>$/;"	l
c01145c0	obj/kernel.asm	/^c01145c0:	eb 4d                	jmp    c011460f <sfs_truncfile+0x1e6>$/;"	l
c01145c2	obj/kernel.asm	/^c01145c2:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01145c6	obj/kernel.asm	/^c01145c6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01145c9	obj/kernel.asm	/^c01145c9:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01145cc	obj/kernel.asm	/^c01145cc:	75 d7                	jne    c01145a5 <sfs_truncfile+0x17c>$/;"	l
c01145ce	obj/kernel.asm	/^c01145ce:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01145d1	obj/kernel.asm	/^c01145d1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01145d4	obj/kernel.asm	/^c01145d4:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01145d7	obj/kernel.asm	/^c01145d7:	74 24                	je     c01145fd <sfs_truncfile+0x1d4>$/;"	l
c01145d9	obj/kernel.asm	/^c01145d9:	c7 44 24 0c 37 b1 11 	movl   $0xc011b137,0xc(%esp)$/;"	l
c01145e0	obj/kernel.asm	/^c01145e0:	c0 $/;"	l
c01145e1	obj/kernel.asm	/^c01145e1:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01145e8	obj/kernel.asm	/^c01145e8:	c0 $/;"	l
c01145e9	obj/kernel.asm	/^c01145e9:	c7 44 24 04 c0 03 00 	movl   $0x3c0,0x4(%esp)$/;"	l
c01145f0	obj/kernel.asm	/^c01145f0:	00 $/;"	l
c01145f1	obj/kernel.asm	/^c01145f1:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01145f8	obj/kernel.asm	/^c01145f8:	e8 3a c6 fe ff       	call   c0100c37 <__panic>$/;"	l
c01145fd	obj/kernel.asm	/^c01145fd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0114600	obj/kernel.asm	/^c0114600:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114603	obj/kernel.asm	/^c0114603:	89 10                	mov    %edx,(%eax)$/;"	l
c0114605	obj/kernel.asm	/^c0114605:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114608	obj/kernel.asm	/^c0114608:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c011460f	obj/kernel.asm	/^c011460f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114612	obj/kernel.asm	/^c0114612:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114615	obj/kernel.asm	/^c0114615:	e8 50 de ff ff       	call   c011246a <unlock_sin>$/;"	l
c011461a	obj/kernel.asm	/^c011461a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011461d	obj/kernel.asm	/^c011461d:	c9                   	leave  $/;"	l
c011461e	obj/kernel.asm	/^c011461e:	c3                   	ret    $/;"	l
c011461f	obj/kernel.asm	/^c011461f <sfs_lookup>:$/;"	l
c011461f	obj/kernel.asm	/^c011461f:	55                   	push   %ebp$/;"	l
c0114620	obj/kernel.asm	/^c0114620:	89 e5                	mov    %esp,%ebp$/;"	l
c0114622	obj/kernel.asm	/^c0114622:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0114625	obj/kernel.asm	/^c0114625:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114628	obj/kernel.asm	/^c0114628:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011462b	obj/kernel.asm	/^c011462b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011462e	obj/kernel.asm	/^c011462e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114632	obj/kernel.asm	/^c0114632:	74 0a                	je     c011463e <sfs_lookup+0x1f>$/;"	l
c0114634	obj/kernel.asm	/^c0114634:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114637	obj/kernel.asm	/^c0114637:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011463a	obj/kernel.asm	/^c011463a:	85 c0                	test   %eax,%eax$/;"	l
c011463c	obj/kernel.asm	/^c011463c:	74 24                	je     c0114662 <sfs_lookup+0x43>$/;"	l
c011463e	obj/kernel.asm	/^c011463e:	c7 44 24 0c f4 af 11 	movl   $0xc011aff4,0xc(%esp)$/;"	l
c0114645	obj/kernel.asm	/^c0114645:	c0 $/;"	l
c0114646	obj/kernel.asm	/^c0114646:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c011464d	obj/kernel.asm	/^c011464d:	c0 $/;"	l
c011464e	obj/kernel.asm	/^c011464e:	c7 44 24 04 d0 03 00 	movl   $0x3d0,0x4(%esp)$/;"	l
c0114655	obj/kernel.asm	/^c0114655:	00 $/;"	l
c0114656	obj/kernel.asm	/^c0114656:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c011465d	obj/kernel.asm	/^c011465d:	e8 d5 c5 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114662	obj/kernel.asm	/^c0114662:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114665	obj/kernel.asm	/^c0114665:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114668	obj/kernel.asm	/^c0114668:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011466b	obj/kernel.asm	/^c011466b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011466e	obj/kernel.asm	/^c011466e:	84 c0                	test   %al,%al$/;"	l
c0114670	obj/kernel.asm	/^c0114670:	74 0a                	je     c011467c <sfs_lookup+0x5d>$/;"	l
c0114672	obj/kernel.asm	/^c0114672:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114675	obj/kernel.asm	/^c0114675:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0114678	obj/kernel.asm	/^c0114678:	3c 2f                	cmp    $0x2f,%al$/;"	l
c011467a	obj/kernel.asm	/^c011467a:	75 24                	jne    c01146a0 <sfs_lookup+0x81>$/;"	l
c011467c	obj/kernel.asm	/^c011467c:	c7 44 24 0c 4c b1 11 	movl   $0xc011b14c,0xc(%esp)$/;"	l
c0114683	obj/kernel.asm	/^c0114683:	c0 $/;"	l
c0114684	obj/kernel.asm	/^c0114684:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c011468b	obj/kernel.asm	/^c011468b:	c0 $/;"	l
c011468c	obj/kernel.asm	/^c011468c:	c7 44 24 04 d1 03 00 	movl   $0x3d1,0x4(%esp)$/;"	l
c0114693	obj/kernel.asm	/^c0114693:	00 $/;"	l
c0114694	obj/kernel.asm	/^c0114694:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c011469b	obj/kernel.asm	/^c011469b:	e8 97 c5 fe ff       	call   c0100c37 <__panic>$/;"	l
c01146a0	obj/kernel.asm	/^c01146a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146a3	obj/kernel.asm	/^c01146a3:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01146a6	obj/kernel.asm	/^c01146a6:	e8 1c c7 ff ff       	call   c0110dc7 <inode_ref_inc>$/;"	l
c01146ab	obj/kernel.asm	/^c01146ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01146ae	obj/kernel.asm	/^c01146ae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01146b1	obj/kernel.asm	/^c01146b1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01146b5	obj/kernel.asm	/^c01146b5:	74 0d                	je     c01146c4 <sfs_lookup+0xa5>$/;"	l
c01146b7	obj/kernel.asm	/^c01146b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01146ba	obj/kernel.asm	/^c01146ba:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01146bd	obj/kernel.asm	/^c01146bd:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01146c2	obj/kernel.asm	/^c01146c2:	74 24                	je     c01146e8 <sfs_lookup+0xc9>$/;"	l
c01146c4	obj/kernel.asm	/^c01146c4:	c7 44 24 0c f0 ad 11 	movl   $0xc011adf0,0xc(%esp)$/;"	l
c01146cb	obj/kernel.asm	/^c01146cb:	c0 $/;"	l
c01146cc	obj/kernel.asm	/^c01146cc:	c7 44 24 08 9f ad 11 	movl   $0xc011ad9f,0x8(%esp)$/;"	l
c01146d3	obj/kernel.asm	/^c01146d3:	c0 $/;"	l
c01146d4	obj/kernel.asm	/^c01146d4:	c7 44 24 04 d3 03 00 	movl   $0x3d3,0x4(%esp)$/;"	l
c01146db	obj/kernel.asm	/^c01146db:	00 $/;"	l
c01146dc	obj/kernel.asm	/^c01146dc:	c7 04 24 37 ad 11 c0 	movl   $0xc011ad37,(%esp)$/;"	l
c01146e3	obj/kernel.asm	/^c01146e3:	e8 4f c5 fe ff       	call   c0100c37 <__panic>$/;"	l
c01146e8	obj/kernel.asm	/^c01146e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01146eb	obj/kernel.asm	/^c01146eb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01146ee	obj/kernel.asm	/^c01146ee:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01146f1	obj/kernel.asm	/^c01146f1:	8b 00                	mov    (%eax),%eax$/;"	l
c01146f3	obj/kernel.asm	/^c01146f3:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01146f7	obj/kernel.asm	/^c01146f7:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c01146fb	obj/kernel.asm	/^c01146fb:	74 12                	je     c011470f <sfs_lookup+0xf0>$/;"	l
c01146fd	obj/kernel.asm	/^c01146fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114700	obj/kernel.asm	/^c0114700:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114703	obj/kernel.asm	/^c0114703:	e8 d9 c6 ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c0114708	obj/kernel.asm	/^c0114708:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
c011470d	obj/kernel.asm	/^c011470d:	eb 4e                	jmp    c011475d <sfs_lookup+0x13e>$/;"	l
c011470f	obj/kernel.asm	/^c011470f:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0114716	obj/kernel.asm	/^c0114716:	00 $/;"	l
c0114717	obj/kernel.asm	/^c0114717:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c011471a	obj/kernel.asm	/^c011471a:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011471e	obj/kernel.asm	/^c011471e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114721	obj/kernel.asm	/^c0114721:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114725	obj/kernel.asm	/^c0114725:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114728	obj/kernel.asm	/^c0114728:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011472c	obj/kernel.asm	/^c011472c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011472f	obj/kernel.asm	/^c011472f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114732	obj/kernel.asm	/^c0114732:	e8 18 ec ff ff       	call   c011334f <sfs_lookup_once>$/;"	l
c0114737	obj/kernel.asm	/^c0114737:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011473a	obj/kernel.asm	/^c011473a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011473d	obj/kernel.asm	/^c011473d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114740	obj/kernel.asm	/^c0114740:	e8 9c c6 ff ff       	call   c0110de1 <inode_ref_dec>$/;"	l
c0114745	obj/kernel.asm	/^c0114745:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114749	obj/kernel.asm	/^c0114749:	74 05                	je     c0114750 <sfs_lookup+0x131>$/;"	l
c011474b	obj/kernel.asm	/^c011474b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011474e	obj/kernel.asm	/^c011474e:	eb 0d                	jmp    c011475d <sfs_lookup+0x13e>$/;"	l
c0114750	obj/kernel.asm	/^c0114750:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0114753	obj/kernel.asm	/^c0114753:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114756	obj/kernel.asm	/^c0114756:	89 10                	mov    %edx,(%eax)$/;"	l
c0114758	obj/kernel.asm	/^c0114758:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011475d	obj/kernel.asm	/^c011475d:	c9                   	leave  $/;"	l
c011475e	obj/kernel.asm	/^c011475e:	c3                   	ret    $/;"	l
c011475f	obj/kernel.asm	/^c011475f <sfs_sync>:$/;"	l
c011475f	obj/kernel.asm	/^c011475f:	55                   	push   %ebp$/;"	l
c0114760	obj/kernel.asm	/^c0114760:	89 e5                	mov    %esp,%ebp$/;"	l
c0114762	obj/kernel.asm	/^c0114762:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114765	obj/kernel.asm	/^c0114765:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114768	obj/kernel.asm	/^c0114768:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011476b	obj/kernel.asm	/^c011476b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011476f	obj/kernel.asm	/^c011476f:	74 0a                	je     c011477b <sfs_sync+0x1c>$/;"	l
c0114771	obj/kernel.asm	/^c0114771:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114774	obj/kernel.asm	/^c0114774:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0114777	obj/kernel.asm	/^c0114777:	85 c0                	test   %eax,%eax$/;"	l
c0114779	obj/kernel.asm	/^c0114779:	74 24                	je     c011479f <sfs_sync+0x40>$/;"	l
c011477b	obj/kernel.asm	/^c011477b:	c7 44 24 0c 6c b1 11 	movl   $0xc011b16c,0xc(%esp)$/;"	l
c0114782	obj/kernel.asm	/^c0114782:	c0 $/;"	l
c0114783	obj/kernel.asm	/^c0114783:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c011478a	obj/kernel.asm	/^c011478a:	c0 $/;"	l
c011478b	obj/kernel.asm	/^c011478b:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0114792	obj/kernel.asm	/^c0114792:	00 $/;"	l
c0114793	obj/kernel.asm	/^c0114793:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c011479a	obj/kernel.asm	/^c011479a:	e8 98 c4 fe ff       	call   c0100c37 <__panic>$/;"	l
c011479f	obj/kernel.asm	/^c011479f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01147a2	obj/kernel.asm	/^c01147a2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01147a5	obj/kernel.asm	/^c01147a5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01147a8	obj/kernel.asm	/^c01147a8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01147ab	obj/kernel.asm	/^c01147ab:	e8 41 dc ff ff       	call   c01123f1 <lock_sfs_fs>$/;"	l
c01147b0	obj/kernel.asm	/^c01147b0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01147b3	obj/kernel.asm	/^c01147b3:	83 c0 60             	add    $0x60,%eax$/;"	l
c01147b6	obj/kernel.asm	/^c01147b6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01147b9	obj/kernel.asm	/^c01147b9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01147bc	obj/kernel.asm	/^c01147bc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01147bf	obj/kernel.asm	/^c01147bf:	eb 74                	jmp    c0114835 <sfs_sync+0xd6>$/;"	l
c01147c1	obj/kernel.asm	/^c01147c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01147c4	obj/kernel.asm	/^c01147c4:	83 e8 1c             	sub    $0x1c,%eax$/;"	l
c01147c7	obj/kernel.asm	/^c01147c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01147ca	obj/kernel.asm	/^c01147ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01147cd	obj/kernel.asm	/^c01147cd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01147d0	obj/kernel.asm	/^c01147d0:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01147d4	obj/kernel.asm	/^c01147d4:	74 17                	je     c01147ed <sfs_sync+0x8e>$/;"	l
c01147d6	obj/kernel.asm	/^c01147d6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01147d9	obj/kernel.asm	/^c01147d9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01147dc	obj/kernel.asm	/^c01147dc:	85 c0                	test   %eax,%eax$/;"	l
c01147de	obj/kernel.asm	/^c01147de:	74 0d                	je     c01147ed <sfs_sync+0x8e>$/;"	l
c01147e0	obj/kernel.asm	/^c01147e0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01147e3	obj/kernel.asm	/^c01147e3:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01147e6	obj/kernel.asm	/^c01147e6:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01147e9	obj/kernel.asm	/^c01147e9:	85 c0                	test   %eax,%eax$/;"	l
c01147eb	obj/kernel.asm	/^c01147eb:	75 24                	jne    c0114811 <sfs_sync+0xb2>$/;"	l
c01147ed	obj/kernel.asm	/^c01147ed:	c7 44 24 0c c0 b1 11 	movl   $0xc011b1c0,0xc(%esp)$/;"	l
c01147f4	obj/kernel.asm	/^c01147f4:	c0 $/;"	l
c01147f5	obj/kernel.asm	/^c01147f5:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c01147fc	obj/kernel.asm	/^c01147fc:	c0 $/;"	l
c01147fd	obj/kernel.asm	/^c01147fd:	c7 44 24 04 1b 00 00 	movl   $0x1b,0x4(%esp)$/;"	l
c0114804	obj/kernel.asm	/^c0114804:	00 $/;"	l
c0114805	obj/kernel.asm	/^c0114805:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c011480c	obj/kernel.asm	/^c011480c:	e8 26 c4 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114811	obj/kernel.asm	/^c0114811:	c7 44 24 04 0e b2 11 	movl   $0xc011b20e,0x4(%esp)$/;"	l
c0114818	obj/kernel.asm	/^c0114818:	c0 $/;"	l
c0114819	obj/kernel.asm	/^c0114819:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011481c	obj/kernel.asm	/^c011481c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011481f	obj/kernel.asm	/^c011481f:	e8 ab c7 ff ff       	call   c0110fcf <inode_check>$/;"	l
c0114824	obj/kernel.asm	/^c0114824:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114827	obj/kernel.asm	/^c0114827:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011482a	obj/kernel.asm	/^c011482a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c011482d	obj/kernel.asm	/^c011482d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0114830	obj/kernel.asm	/^c0114830:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0114833	obj/kernel.asm	/^c0114833:	ff d0                	call   *%eax$/;"	l
c0114835	obj/kernel.asm	/^c0114835:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114838	obj/kernel.asm	/^c0114838:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011483b	obj/kernel.asm	/^c011483b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011483e	obj/kernel.asm	/^c011483e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114841	obj/kernel.asm	/^c0114841:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114844	obj/kernel.asm	/^c0114844:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114847	obj/kernel.asm	/^c0114847:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c011484a	obj/kernel.asm	/^c011484a:	0f 85 71 ff ff ff    	jne    c01147c1 <sfs_sync+0x62>$/;"	l
c0114850	obj/kernel.asm	/^c0114850:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114853	obj/kernel.asm	/^c0114853:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114856	obj/kernel.asm	/^c0114856:	e8 c2 db ff ff       	call   c011241d <unlock_sfs_fs>$/;"	l
c011485b	obj/kernel.asm	/^c011485b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011485e	obj/kernel.asm	/^c011485e:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0114861	obj/kernel.asm	/^c0114861:	85 c0                	test   %eax,%eax$/;"	l
c0114863	obj/kernel.asm	/^c0114863:	74 50                	je     c01148b5 <sfs_sync+0x156>$/;"	l
c0114865	obj/kernel.asm	/^c0114865:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114868	obj/kernel.asm	/^c0114868:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c011486f	obj/kernel.asm	/^c011486f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114872	obj/kernel.asm	/^c0114872:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114875	obj/kernel.asm	/^c0114875:	e8 8e 0e 00 00       	call   c0115708 <sfs_sync_super>$/;"	l
c011487a	obj/kernel.asm	/^c011487a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011487d	obj/kernel.asm	/^c011487d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0114881	obj/kernel.asm	/^c0114881:	74 0f                	je     c0114892 <sfs_sync+0x133>$/;"	l
c0114883	obj/kernel.asm	/^c0114883:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114886	obj/kernel.asm	/^c0114886:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c011488d	obj/kernel.asm	/^c011488d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114890	obj/kernel.asm	/^c0114890:	eb 28                	jmp    c01148ba <sfs_sync+0x15b>$/;"	l
c0114892	obj/kernel.asm	/^c0114892:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114895	obj/kernel.asm	/^c0114895:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114898	obj/kernel.asm	/^c0114898:	e8 f7 0e 00 00       	call   c0115794 <sfs_sync_freemap>$/;"	l
c011489d	obj/kernel.asm	/^c011489d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01148a0	obj/kernel.asm	/^c01148a0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01148a4	obj/kernel.asm	/^c01148a4:	74 0f                	je     c01148b5 <sfs_sync+0x156>$/;"	l
c01148a6	obj/kernel.asm	/^c01148a6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01148a9	obj/kernel.asm	/^c01148a9:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c01148b0	obj/kernel.asm	/^c01148b0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01148b3	obj/kernel.asm	/^c01148b3:	eb 05                	jmp    c01148ba <sfs_sync+0x15b>$/;"	l
c01148b5	obj/kernel.asm	/^c01148b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01148ba	obj/kernel.asm	/^c01148ba:	c9                   	leave  $/;"	l
c01148bb	obj/kernel.asm	/^c01148bb:	c3                   	ret    $/;"	l
c01148bc	obj/kernel.asm	/^c01148bc <sfs_get_root>:$/;"	l
c01148bc	obj/kernel.asm	/^c01148bc:	55                   	push   %ebp$/;"	l
c01148bd	obj/kernel.asm	/^c01148bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01148bf	obj/kernel.asm	/^c01148bf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01148c2	obj/kernel.asm	/^c01148c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01148c5	obj/kernel.asm	/^c01148c5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01148c8	obj/kernel.asm	/^c01148c8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01148cc	obj/kernel.asm	/^c01148cc:	74 0a                	je     c01148d8 <sfs_get_root+0x1c>$/;"	l
c01148ce	obj/kernel.asm	/^c01148ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01148d1	obj/kernel.asm	/^c01148d1:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01148d4	obj/kernel.asm	/^c01148d4:	85 c0                	test   %eax,%eax$/;"	l
c01148d6	obj/kernel.asm	/^c01148d6:	74 24                	je     c01148fc <sfs_get_root+0x40>$/;"	l
c01148d8	obj/kernel.asm	/^c01148d8:	c7 44 24 0c 6c b1 11 	movl   $0xc011b16c,0xc(%esp)$/;"	l
c01148df	obj/kernel.asm	/^c01148df:	c0 $/;"	l
c01148e0	obj/kernel.asm	/^c01148e0:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c01148e7	obj/kernel.asm	/^c01148e7:	c0 $/;"	l
c01148e8	obj/kernel.asm	/^c01148e8:	c7 44 24 04 36 00 00 	movl   $0x36,0x4(%esp)$/;"	l
c01148ef	obj/kernel.asm	/^c01148ef:	00 $/;"	l
c01148f0	obj/kernel.asm	/^c01148f0:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c01148f7	obj/kernel.asm	/^c01148f7:	e8 3b c3 fe ff       	call   c0100c37 <__panic>$/;"	l
c01148fc	obj/kernel.asm	/^c01148fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01148ff	obj/kernel.asm	/^c01148ff:	c7 44 24 08 01 00 00 	movl   $0x1,0x8(%esp)$/;"	l
c0114906	obj/kernel.asm	/^c0114906:	00 $/;"	l
c0114907	obj/kernel.asm	/^c0114907:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c011490a	obj/kernel.asm	/^c011490a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011490e	obj/kernel.asm	/^c011490e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114911	obj/kernel.asm	/^c0114911:	e8 08 e0 ff ff       	call   c011291e <sfs_load_inode>$/;"	l
c0114916	obj/kernel.asm	/^c0114916:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114919	obj/kernel.asm	/^c0114919:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011491d	obj/kernel.asm	/^c011491d:	74 23                	je     c0114942 <sfs_get_root+0x86>$/;"	l
c011491f	obj/kernel.asm	/^c011491f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114922	obj/kernel.asm	/^c0114922:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114926	obj/kernel.asm	/^c0114926:	c7 44 24 08 14 b2 11 	movl   $0xc011b214,0x8(%esp)$/;"	l
c011492d	obj/kernel.asm	/^c011492d:	c0 $/;"	l
c011492e	obj/kernel.asm	/^c011492e:	c7 44 24 04 37 00 00 	movl   $0x37,0x4(%esp)$/;"	l
c0114935	obj/kernel.asm	/^c0114935:	00 $/;"	l
c0114936	obj/kernel.asm	/^c0114936:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c011493d	obj/kernel.asm	/^c011493d:	e8 f5 c2 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114942	obj/kernel.asm	/^c0114942:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114945	obj/kernel.asm	/^c0114945:	c9                   	leave  $/;"	l
c0114946	obj/kernel.asm	/^c0114946:	c3                   	ret    $/;"	l
c0114947	obj/kernel.asm	/^c0114947 <sfs_unmount>:$/;"	l
c0114947	obj/kernel.asm	/^c0114947:	55                   	push   %ebp$/;"	l
c0114948	obj/kernel.asm	/^c0114948:	89 e5                	mov    %esp,%ebp$/;"	l
c011494a	obj/kernel.asm	/^c011494a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011494d	obj/kernel.asm	/^c011494d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114950	obj/kernel.asm	/^c0114950:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114953	obj/kernel.asm	/^c0114953:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114957	obj/kernel.asm	/^c0114957:	74 0a                	je     c0114963 <sfs_unmount+0x1c>$/;"	l
c0114959	obj/kernel.asm	/^c0114959:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011495c	obj/kernel.asm	/^c011495c:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011495f	obj/kernel.asm	/^c011495f:	85 c0                	test   %eax,%eax$/;"	l
c0114961	obj/kernel.asm	/^c0114961:	74 24                	je     c0114987 <sfs_unmount+0x40>$/;"	l
c0114963	obj/kernel.asm	/^c0114963:	c7 44 24 0c 6c b1 11 	movl   $0xc011b16c,0xc(%esp)$/;"	l
c011496a	obj/kernel.asm	/^c011496a:	c0 $/;"	l
c011496b	obj/kernel.asm	/^c011496b:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c0114972	obj/kernel.asm	/^c0114972:	c0 $/;"	l
c0114973	obj/kernel.asm	/^c0114973:	c7 44 24 04 41 00 00 	movl   $0x41,0x4(%esp)$/;"	l
c011497a	obj/kernel.asm	/^c011497a:	00 $/;"	l
c011497b	obj/kernel.asm	/^c011497b:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c0114982	obj/kernel.asm	/^c0114982:	e8 b0 c2 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114987	obj/kernel.asm	/^c0114987:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011498a	obj/kernel.asm	/^c011498a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011498d	obj/kernel.asm	/^c011498d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114990	obj/kernel.asm	/^c0114990:	83 c0 60             	add    $0x60,%eax$/;"	l
c0114993	obj/kernel.asm	/^c0114993:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0114996	obj/kernel.asm	/^c0114996:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114999	obj/kernel.asm	/^c0114999:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011499c	obj/kernel.asm	/^c011499c:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c011499f	obj/kernel.asm	/^c011499f:	0f 94 c0             	sete   %al$/;"	l
c01149a2	obj/kernel.asm	/^c01149a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01149a5	obj/kernel.asm	/^c01149a5:	85 c0                	test   %eax,%eax$/;"	l
c01149a7	obj/kernel.asm	/^c01149a7:	75 07                	jne    c01149b0 <sfs_unmount+0x69>$/;"	l
c01149a9	obj/kernel.asm	/^c01149a9:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c01149ae	obj/kernel.asm	/^c01149ae:	eb 68                	jmp    c0114a18 <sfs_unmount+0xd1>$/;"	l
c01149b0	obj/kernel.asm	/^c01149b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01149b3	obj/kernel.asm	/^c01149b3:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01149b6	obj/kernel.asm	/^c01149b6:	85 c0                	test   %eax,%eax$/;"	l
c01149b8	obj/kernel.asm	/^c01149b8:	74 24                	je     c01149de <sfs_unmount+0x97>$/;"	l
c01149ba	obj/kernel.asm	/^c01149ba:	c7 44 24 0c 2d b2 11 	movl   $0xc011b22d,0xc(%esp)$/;"	l
c01149c1	obj/kernel.asm	/^c01149c1:	c0 $/;"	l
c01149c2	obj/kernel.asm	/^c01149c2:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c01149c9	obj/kernel.asm	/^c01149c9:	c0 $/;"	l
c01149ca	obj/kernel.asm	/^c01149ca:	c7 44 24 04 45 00 00 	movl   $0x45,0x4(%esp)$/;"	l
c01149d1	obj/kernel.asm	/^c01149d1:	00 $/;"	l
c01149d2	obj/kernel.asm	/^c01149d2:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c01149d9	obj/kernel.asm	/^c01149d9:	e8 59 c2 fe ff       	call   c0100c37 <__panic>$/;"	l
c01149de	obj/kernel.asm	/^c01149de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01149e1	obj/kernel.asm	/^c01149e1:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01149e4	obj/kernel.asm	/^c01149e4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149e7	obj/kernel.asm	/^c01149e7:	e8 d9 09 00 00       	call   c01153c5 <bitmap_destroy>$/;"	l
c01149ec	obj/kernel.asm	/^c01149ec:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01149ef	obj/kernel.asm	/^c01149ef:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01149f2	obj/kernel.asm	/^c01149f2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01149f5	obj/kernel.asm	/^c01149f5:	e8 09 38 ff ff       	call   c0108203 <kfree>$/;"	l
c01149fa	obj/kernel.asm	/^c01149fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01149fd	obj/kernel.asm	/^c01149fd:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0114a00	obj/kernel.asm	/^c0114a00:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114a03	obj/kernel.asm	/^c0114a03:	e8 fb 37 ff ff       	call   c0108203 <kfree>$/;"	l
c0114a08	obj/kernel.asm	/^c0114a08:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114a0b	obj/kernel.asm	/^c0114a0b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114a0e	obj/kernel.asm	/^c0114a0e:	e8 f0 37 ff ff       	call   c0108203 <kfree>$/;"	l
c0114a13	obj/kernel.asm	/^c0114a13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114a18	obj/kernel.asm	/^c0114a18:	c9                   	leave  $/;"	l
c0114a19	obj/kernel.asm	/^c0114a19:	c3                   	ret    $/;"	l
c0114a1a	obj/kernel.asm	/^c0114a1a <sfs_cleanup>:$/;"	l
c0114a1a	obj/kernel.asm	/^c0114a1a:	55                   	push   %ebp$/;"	l
c0114a1b	obj/kernel.asm	/^c0114a1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0114a1d	obj/kernel.asm	/^c0114a1d:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0114a20	obj/kernel.asm	/^c0114a20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114a23	obj/kernel.asm	/^c0114a23:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0114a26	obj/kernel.asm	/^c0114a26:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0114a2a	obj/kernel.asm	/^c0114a2a:	74 0a                	je     c0114a36 <sfs_cleanup+0x1c>$/;"	l
c0114a2c	obj/kernel.asm	/^c0114a2c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114a2f	obj/kernel.asm	/^c0114a2f:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0114a32	obj/kernel.asm	/^c0114a32:	85 c0                	test   %eax,%eax$/;"	l
c0114a34	obj/kernel.asm	/^c0114a34:	74 24                	je     c0114a5a <sfs_cleanup+0x40>$/;"	l
c0114a36	obj/kernel.asm	/^c0114a36:	c7 44 24 0c 6c b1 11 	movl   $0xc011b16c,0xc(%esp)$/;"	l
c0114a3d	obj/kernel.asm	/^c0114a3d:	c0 $/;"	l
c0114a3e	obj/kernel.asm	/^c0114a3e:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c0114a45	obj/kernel.asm	/^c0114a45:	c0 $/;"	l
c0114a46	obj/kernel.asm	/^c0114a46:	c7 44 24 04 54 00 00 	movl   $0x54,0x4(%esp)$/;"	l
c0114a4d	obj/kernel.asm	/^c0114a4d:	00 $/;"	l
c0114a4e	obj/kernel.asm	/^c0114a4e:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c0114a55	obj/kernel.asm	/^c0114a55:	e8 dd c1 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114a5a	obj/kernel.asm	/^c0114a5a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114a5d	obj/kernel.asm	/^c0114a5d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114a60	obj/kernel.asm	/^c0114a60:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114a63	obj/kernel.asm	/^c0114a63:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114a66	obj/kernel.asm	/^c0114a66:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114a69	obj/kernel.asm	/^c0114a69:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114a6c	obj/kernel.asm	/^c0114a6c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0114a6f	obj/kernel.asm	/^c0114a6f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114a72	obj/kernel.asm	/^c0114a72:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114a75	obj/kernel.asm	/^c0114a75:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0114a78	obj/kernel.asm	/^c0114a78:	89 d1                	mov    %edx,%ecx$/;"	l
c0114a7a	obj/kernel.asm	/^c0114a7a:	29 c1                	sub    %eax,%ecx$/;"	l
c0114a7c	obj/kernel.asm	/^c0114a7c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114a7f	obj/kernel.asm	/^c0114a7f:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0114a82	obj/kernel.asm	/^c0114a82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114a85	obj/kernel.asm	/^c0114a85:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114a89	obj/kernel.asm	/^c0114a89:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114a8c	obj/kernel.asm	/^c0114a8c:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114a90	obj/kernel.asm	/^c0114a90:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0114a94	obj/kernel.asm	/^c0114a94:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114a98	obj/kernel.asm	/^c0114a98:	c7 04 24 40 b2 11 c0 	movl   $0xc011b240,(%esp)$/;"	l
c0114a9f	obj/kernel.asm	/^c0114a9f:	e8 3c c0 fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0114aa4	obj/kernel.asm	/^c0114aa4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0114aab	obj/kernel.asm	/^c0114aab:	eb 1d                	jmp    c0114aca <sfs_cleanup+0xb0>$/;"	l
c0114aad	obj/kernel.asm	/^c0114aad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114ab0	obj/kernel.asm	/^c0114ab0:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0114ab3	obj/kernel.asm	/^c0114ab3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114ab6	obj/kernel.asm	/^c0114ab6:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0114ab9	obj/kernel.asm	/^c0114ab9:	ff d0                	call   *%eax$/;"	l
c0114abb	obj/kernel.asm	/^c0114abb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114abe	obj/kernel.asm	/^c0114abe:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0114ac2	obj/kernel.asm	/^c0114ac2:	75 02                	jne    c0114ac6 <sfs_cleanup+0xac>$/;"	l
c0114ac4	obj/kernel.asm	/^c0114ac4:	eb 0a                	jmp    c0114ad0 <sfs_cleanup+0xb6>$/;"	l
c0114ac6	obj/kernel.asm	/^c0114ac6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0114aca	obj/kernel.asm	/^c0114aca:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0114ace	obj/kernel.asm	/^c0114ace:	7e dd                	jle    c0114aad <sfs_cleanup+0x93>$/;"	l
c0114ad0	obj/kernel.asm	/^c0114ad0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0114ad4	obj/kernel.asm	/^c0114ad4:	74 2d                	je     c0114b03 <sfs_cleanup+0xe9>$/;"	l
c0114ad6	obj/kernel.asm	/^c0114ad6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114ad9	obj/kernel.asm	/^c0114ad9:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0114adc	obj/kernel.asm	/^c0114adc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114adf	obj/kernel.asm	/^c0114adf:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114ae3	obj/kernel.asm	/^c0114ae3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c0114ae7	obj/kernel.asm	/^c0114ae7:	c7 44 24 08 5f b2 11 	movl   $0xc011b25f,0x8(%esp)$/;"	l
c0114aee	obj/kernel.asm	/^c0114aee:	c0 $/;"	l
c0114aef	obj/kernel.asm	/^c0114aef:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c0114af6	obj/kernel.asm	/^c0114af6:	00 $/;"	l
c0114af7	obj/kernel.asm	/^c0114af7:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c0114afe	obj/kernel.asm	/^c0114afe:	e8 a0 c1 fe ff       	call   c0100ca3 <__warn>$/;"	l
c0114b03	obj/kernel.asm	/^c0114b03:	c9                   	leave  $/;"	l
c0114b04	obj/kernel.asm	/^c0114b04:	c3                   	ret    $/;"	l
c0114b05	obj/kernel.asm	/^c0114b05 <sfs_init_read>:$/;"	l
c0114b05	obj/kernel.asm	/^c0114b05:	55                   	push   %ebp$/;"	l
c0114b06	obj/kernel.asm	/^c0114b06:	89 e5                	mov    %esp,%ebp$/;"	l
c0114b08	obj/kernel.asm	/^c0114b08:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0114b0b	obj/kernel.asm	/^c0114b0b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114b0e	obj/kernel.asm	/^c0114b0e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0114b11	obj/kernel.asm	/^c0114b11:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114b15	obj/kernel.asm	/^c0114b15:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0114b1c	obj/kernel.asm	/^c0114b1c:	00 $/;"	l
c0114b1d	obj/kernel.asm	/^c0114b1d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114b20	obj/kernel.asm	/^c0114b20:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114b24	obj/kernel.asm	/^c0114b24:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0114b27	obj/kernel.asm	/^c0114b27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114b2a	obj/kernel.asm	/^c0114b2a:	e8 b1 7b ff ff       	call   c010c6e0 <iobuf_init>$/;"	l
c0114b2f	obj/kernel.asm	/^c0114b2f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114b32	obj/kernel.asm	/^c0114b32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114b35	obj/kernel.asm	/^c0114b35:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0114b38	obj/kernel.asm	/^c0114b38:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0114b3f	obj/kernel.asm	/^c0114b3f:	00 $/;"	l
c0114b40	obj/kernel.asm	/^c0114b40:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0114b43	obj/kernel.asm	/^c0114b43:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114b47	obj/kernel.asm	/^c0114b47:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114b4a	obj/kernel.asm	/^c0114b4a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0114b4d	obj/kernel.asm	/^c0114b4d:	ff d0                	call   *%eax$/;"	l
c0114b4f	obj/kernel.asm	/^c0114b4f:	c9                   	leave  $/;"	l
c0114b50	obj/kernel.asm	/^c0114b50:	c3                   	ret    $/;"	l
c0114b51	obj/kernel.asm	/^c0114b51 <sfs_init_freemap>:$/;"	l
c0114b51	obj/kernel.asm	/^c0114b51:	55                   	push   %ebp$/;"	l
c0114b52	obj/kernel.asm	/^c0114b52:	89 e5                	mov    %esp,%ebp$/;"	l
c0114b54	obj/kernel.asm	/^c0114b54:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0114b57	obj/kernel.asm	/^c0114b57:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0114b5a	obj/kernel.asm	/^c0114b5a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114b5e	obj/kernel.asm	/^c0114b5e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114b61	obj/kernel.asm	/^c0114b61:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114b64	obj/kernel.asm	/^c0114b64:	e8 7d 08 00 00       	call   c01153e6 <bitmap_getdata>$/;"	l
c0114b69	obj/kernel.asm	/^c0114b69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114b6c	obj/kernel.asm	/^c0114b6c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114b70	obj/kernel.asm	/^c0114b70:	74 0f                	je     c0114b81 <sfs_init_freemap+0x30>$/;"	l
c0114b72	obj/kernel.asm	/^c0114b72:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0114b75	obj/kernel.asm	/^c0114b75:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0114b78	obj/kernel.asm	/^c0114b78:	89 c2                	mov    %eax,%edx$/;"	l
c0114b7a	obj/kernel.asm	/^c0114b7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114b7d	obj/kernel.asm	/^c0114b7d:	39 c2                	cmp    %eax,%edx$/;"	l
c0114b7f	obj/kernel.asm	/^c0114b7f:	74 24                	je     c0114ba5 <sfs_init_freemap+0x54>$/;"	l
c0114b81	obj/kernel.asm	/^c0114b81:	c7 44 24 0c 7c b2 11 	movl   $0xc011b27c,0xc(%esp)$/;"	l
c0114b88	obj/kernel.asm	/^c0114b88:	c0 $/;"	l
c0114b89	obj/kernel.asm	/^c0114b89:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c0114b90	obj/kernel.asm	/^c0114b90:	c0 $/;"	l
c0114b91	obj/kernel.asm	/^c0114b91:	c7 44 24 04 83 00 00 	movl   $0x83,0x4(%esp)$/;"	l
c0114b98	obj/kernel.asm	/^c0114b98:	00 $/;"	l
c0114b99	obj/kernel.asm	/^c0114b99:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c0114ba0	obj/kernel.asm	/^c0114ba0:	e8 92 c0 fe ff       	call   c0100c37 <__panic>$/;"	l
c0114ba5	obj/kernel.asm	/^c0114ba5:	eb 36                	jmp    c0114bdd <sfs_init_freemap+0x8c>$/;"	l
c0114ba7	obj/kernel.asm	/^c0114ba7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0114baa	obj/kernel.asm	/^c0114baa:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114bae	obj/kernel.asm	/^c0114bae:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0114bb1	obj/kernel.asm	/^c0114bb1:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114bb5	obj/kernel.asm	/^c0114bb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114bb8	obj/kernel.asm	/^c0114bb8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114bbb	obj/kernel.asm	/^c0114bbb:	e8 45 ff ff ff       	call   c0114b05 <sfs_init_read>$/;"	l
c0114bc0	obj/kernel.asm	/^c0114bc0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0114bc3	obj/kernel.asm	/^c0114bc3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0114bc7	obj/kernel.asm	/^c0114bc7:	74 05                	je     c0114bce <sfs_init_freemap+0x7d>$/;"	l
c0114bc9	obj/kernel.asm	/^c0114bc9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114bcc	obj/kernel.asm	/^c0114bcc:	eb 1a                	jmp    c0114be8 <sfs_init_freemap+0x97>$/;"	l
c0114bce	obj/kernel.asm	/^c0114bce:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0114bd2	obj/kernel.asm	/^c0114bd2:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0114bd6	obj/kernel.asm	/^c0114bd6:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0114bdd	obj/kernel.asm	/^c0114bdd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0114be1	obj/kernel.asm	/^c0114be1:	75 c4                	jne    c0114ba7 <sfs_init_freemap+0x56>$/;"	l
c0114be3	obj/kernel.asm	/^c0114be3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114be8	obj/kernel.asm	/^c0114be8:	c9                   	leave  $/;"	l
c0114be9	obj/kernel.asm	/^c0114be9:	c3                   	ret    $/;"	l
c0114bea	obj/kernel.asm	/^c0114bea <sfs_do_mount>:$/;"	l
c0114bea	obj/kernel.asm	/^c0114bea:	55                   	push   %ebp$/;"	l
c0114beb	obj/kernel.asm	/^c0114beb:	89 e5                	mov    %esp,%ebp$/;"	l
c0114bed	obj/kernel.asm	/^c0114bed:	83 ec 78             	sub    $0x78,%esp$/;"	l
c0114bf0	obj/kernel.asm	/^c0114bf0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114bf3	obj/kernel.asm	/^c0114bf3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114bf6	obj/kernel.asm	/^c0114bf6:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0114bfb	obj/kernel.asm	/^c0114bfb:	74 0a                	je     c0114c07 <sfs_do_mount+0x1d>$/;"	l
c0114bfd	obj/kernel.asm	/^c0114bfd:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax$/;"	l
c0114c02	obj/kernel.asm	/^c0114c02:	e9 fe 03 00 00       	jmp    c0115005 <sfs_do_mount+0x41b>$/;"	l
c0114c07	obj/kernel.asm	/^c0114c07:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0114c0e	obj/kernel.asm	/^c0114c0e:	e8 fe c7 ff ff       	call   c0111411 <__alloc_fs>$/;"	l
c0114c13	obj/kernel.asm	/^c0114c13:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114c16	obj/kernel.asm	/^c0114c16:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114c1a	obj/kernel.asm	/^c0114c1a:	75 0a                	jne    c0114c26 <sfs_do_mount+0x3c>$/;"	l
c0114c1c	obj/kernel.asm	/^c0114c1c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0114c21	obj/kernel.asm	/^c0114c21:	e9 df 03 00 00       	jmp    c0115005 <sfs_do_mount+0x41b>$/;"	l
c0114c26	obj/kernel.asm	/^c0114c26:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114c29	obj/kernel.asm	/^c0114c29:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0114c2c	obj/kernel.asm	/^c0114c2c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0114c30	obj/kernel.asm	/^c0114c30:	74 0a                	je     c0114c3c <sfs_do_mount+0x52>$/;"	l
c0114c32	obj/kernel.asm	/^c0114c32:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114c35	obj/kernel.asm	/^c0114c35:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0114c38	obj/kernel.asm	/^c0114c38:	85 c0                	test   %eax,%eax$/;"	l
c0114c3a	obj/kernel.asm	/^c0114c3a:	74 24                	je     c0114c60 <sfs_do_mount+0x76>$/;"	l
c0114c3c	obj/kernel.asm	/^c0114c3c:	c7 44 24 0c 6c b1 11 	movl   $0xc011b16c,0xc(%esp)$/;"	l
c0114c43	obj/kernel.asm	/^c0114c43:	c0 $/;"	l
c0114c44	obj/kernel.asm	/^c0114c44:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c0114c4b	obj/kernel.asm	/^c0114c4b:	c0 $/;"	l
c0114c4c	obj/kernel.asm	/^c0114c4c:	c7 44 24 04 a3 00 00 	movl   $0xa3,0x4(%esp)$/;"	l
c0114c53	obj/kernel.asm	/^c0114c53:	00 $/;"	l
c0114c54	obj/kernel.asm	/^c0114c54:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c0114c5b	obj/kernel.asm	/^c0114c5b:	e8 d7 bf fe ff       	call   c0100c37 <__panic>$/;"	l
c0114c60	obj/kernel.asm	/^c0114c60:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0114c63	obj/kernel.asm	/^c0114c63:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0114c66	obj/kernel.asm	/^c0114c66:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114c69	obj/kernel.asm	/^c0114c69:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0114c6c	obj/kernel.asm	/^c0114c6c:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c0114c6f	obj/kernel.asm	/^c0114c6f:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0114c76	obj/kernel.asm	/^c0114c76:	c7 04 24 00 10 00 00 	movl   $0x1000,(%esp)$/;"	l
c0114c7d	obj/kernel.asm	/^c0114c7d:	e8 66 35 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0114c82	obj/kernel.asm	/^c0114c82:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0114c85	obj/kernel.asm	/^c0114c85:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114c88	obj/kernel.asm	/^c0114c88:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0114c8b	obj/kernel.asm	/^c0114c8b:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c0114c8e	obj/kernel.asm	/^c0114c8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114c91	obj/kernel.asm	/^c0114c91:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0114c94	obj/kernel.asm	/^c0114c94:	85 c0                	test   %eax,%eax$/;"	l
c0114c96	obj/kernel.asm	/^c0114c96:	75 05                	jne    c0114c9d <sfs_do_mount+0xb3>$/;"	l
c0114c98	obj/kernel.asm	/^c0114c98:	e9 5a 03 00 00       	jmp    c0114ff7 <sfs_do_mount+0x40d>$/;"	l
c0114c9d	obj/kernel.asm	/^c0114c9d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114ca0	obj/kernel.asm	/^c0114ca0:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0114ca4	obj/kernel.asm	/^c0114ca4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0114cab	obj/kernel.asm	/^c0114cab:	00 $/;"	l
c0114cac	obj/kernel.asm	/^c0114cac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114caf	obj/kernel.asm	/^c0114caf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114cb2	obj/kernel.asm	/^c0114cb2:	e8 4e fe ff ff       	call   c0114b05 <sfs_init_read>$/;"	l
c0114cb7	obj/kernel.asm	/^c0114cb7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114cba	obj/kernel.asm	/^c0114cba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114cbe	obj/kernel.asm	/^c0114cbe:	74 05                	je     c0114cc5 <sfs_do_mount+0xdb>$/;"	l
c0114cc0	obj/kernel.asm	/^c0114cc0:	e9 27 03 00 00       	jmp    c0114fec <sfs_do_mount+0x402>$/;"	l
c0114cc5	obj/kernel.asm	/^c0114cc5:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0114ccc	obj/kernel.asm	/^c0114ccc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114ccf	obj/kernel.asm	/^c0114ccf:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0114cd2	obj/kernel.asm	/^c0114cd2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114cd5	obj/kernel.asm	/^c0114cd5:	8b 00                	mov    (%eax),%eax$/;"	l
c0114cd7	obj/kernel.asm	/^c0114cd7:	3d 2a be 8d 2f       	cmp    $0x2f8dbe2a,%eax$/;"	l
c0114cdc	obj/kernel.asm	/^c0114cdc:	74 22                	je     c0114d00 <sfs_do_mount+0x116>$/;"	l
c0114cde	obj/kernel.asm	/^c0114cde:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114ce1	obj/kernel.asm	/^c0114ce1:	8b 00                	mov    (%eax),%eax$/;"	l
c0114ce3	obj/kernel.asm	/^c0114ce3:	c7 44 24 08 2a be 8d 	movl   $0x2f8dbe2a,0x8(%esp)$/;"	l
c0114cea	obj/kernel.asm	/^c0114cea:	2f $/;"	l
c0114ceb	obj/kernel.asm	/^c0114ceb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114cef	obj/kernel.asm	/^c0114cef:	c7 04 24 a8 b2 11 c0 	movl   $0xc011b2a8,(%esp)$/;"	l
c0114cf6	obj/kernel.asm	/^c0114cf6:	e8 e5 bd fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0114cfb	obj/kernel.asm	/^c0114cfb:	e9 ec 02 00 00       	jmp    c0114fec <sfs_do_mount+0x402>$/;"	l
c0114d00	obj/kernel.asm	/^c0114d00:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114d03	obj/kernel.asm	/^c0114d03:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114d06	obj/kernel.asm	/^c0114d06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d09	obj/kernel.asm	/^c0114d09:	8b 00                	mov    (%eax),%eax$/;"	l
c0114d0b	obj/kernel.asm	/^c0114d0b:	39 c2                	cmp    %eax,%edx$/;"	l
c0114d0d	obj/kernel.asm	/^c0114d0d:	76 24                	jbe    c0114d33 <sfs_do_mount+0x149>$/;"	l
c0114d0f	obj/kernel.asm	/^c0114d0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114d12	obj/kernel.asm	/^c0114d12:	8b 10                	mov    (%eax),%edx$/;"	l
c0114d14	obj/kernel.asm	/^c0114d14:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114d17	obj/kernel.asm	/^c0114d17:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114d1a	obj/kernel.asm	/^c0114d1a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0114d1e	obj/kernel.asm	/^c0114d1e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114d22	obj/kernel.asm	/^c0114d22:	c7 04 24 e0 b2 11 c0 	movl   $0xc011b2e0,(%esp)$/;"	l
c0114d29	obj/kernel.asm	/^c0114d29:	e8 b2 bd fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0114d2e	obj/kernel.asm	/^c0114d2e:	e9 b9 02 00 00       	jmp    c0114fec <sfs_do_mount+0x402>$/;"	l
c0114d33	obj/kernel.asm	/^c0114d33:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114d36	obj/kernel.asm	/^c0114d36:	c6 40 2b 00          	movb   $0x0,0x2b(%eax)$/;"	l
c0114d3a	obj/kernel.asm	/^c0114d3a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114d3d	obj/kernel.asm	/^c0114d3d:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0114d40	obj/kernel.asm	/^c0114d40:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0114d42	obj/kernel.asm	/^c0114d42:	89 08                	mov    %ecx,(%eax)$/;"	l
c0114d44	obj/kernel.asm	/^c0114d44:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c0114d47	obj/kernel.asm	/^c0114d47:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
c0114d4a	obj/kernel.asm	/^c0114d4a:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
c0114d4d	obj/kernel.asm	/^c0114d4d:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
c0114d50	obj/kernel.asm	/^c0114d50:	8b 4a 0c             	mov    0xc(%edx),%ecx$/;"	l
c0114d53	obj/kernel.asm	/^c0114d53:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0114d56	obj/kernel.asm	/^c0114d56:	8b 4a 10             	mov    0x10(%edx),%ecx$/;"	l
c0114d59	obj/kernel.asm	/^c0114d59:	89 48 10             	mov    %ecx,0x10(%eax)$/;"	l
c0114d5c	obj/kernel.asm	/^c0114d5c:	8b 4a 14             	mov    0x14(%edx),%ecx$/;"	l
c0114d5f	obj/kernel.asm	/^c0114d5f:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
c0114d62	obj/kernel.asm	/^c0114d62:	8b 4a 18             	mov    0x18(%edx),%ecx$/;"	l
c0114d65	obj/kernel.asm	/^c0114d65:	89 48 18             	mov    %ecx,0x18(%eax)$/;"	l
c0114d68	obj/kernel.asm	/^c0114d68:	8b 4a 1c             	mov    0x1c(%edx),%ecx$/;"	l
c0114d6b	obj/kernel.asm	/^c0114d6b:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
c0114d6e	obj/kernel.asm	/^c0114d6e:	8b 4a 20             	mov    0x20(%edx),%ecx$/;"	l
c0114d71	obj/kernel.asm	/^c0114d71:	89 48 20             	mov    %ecx,0x20(%eax)$/;"	l
c0114d74	obj/kernel.asm	/^c0114d74:	8b 4a 24             	mov    0x24(%edx),%ecx$/;"	l
c0114d77	obj/kernel.asm	/^c0114d77:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
c0114d7a	obj/kernel.asm	/^c0114d7a:	8b 52 28             	mov    0x28(%edx),%edx$/;"	l
c0114d7d	obj/kernel.asm	/^c0114d7d:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0114d80	obj/kernel.asm	/^c0114d80:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0114d87	obj/kernel.asm	/^c0114d87:	c7 04 24 00 20 00 00 	movl   $0x2000,(%esp)$/;"	l
c0114d8e	obj/kernel.asm	/^c0114d8e:	e8 55 34 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c0114d93	obj/kernel.asm	/^c0114d93:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0114d96	obj/kernel.asm	/^c0114d96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114d99	obj/kernel.asm	/^c0114d99:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0114d9c	obj/kernel.asm	/^c0114d9c:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0114d9f	obj/kernel.asm	/^c0114d9f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114da2	obj/kernel.asm	/^c0114da2:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0114da5	obj/kernel.asm	/^c0114da5:	85 c0                	test   %eax,%eax$/;"	l
c0114da7	obj/kernel.asm	/^c0114da7:	75 05                	jne    c0114dae <sfs_do_mount+0x1c4>$/;"	l
c0114da9	obj/kernel.asm	/^c0114da9:	e9 3e 02 00 00       	jmp    c0114fec <sfs_do_mount+0x402>$/;"	l
c0114dae	obj/kernel.asm	/^c0114dae:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0114db5	obj/kernel.asm	/^c0114db5:	eb 2a                	jmp    c0114de1 <sfs_do_mount+0x1f7>$/;"	l
c0114db7	obj/kernel.asm	/^c0114db7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114dba	obj/kernel.asm	/^c0114dba:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0114dc1	obj/kernel.asm	/^c0114dc1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0114dc4	obj/kernel.asm	/^c0114dc4:	01 d0                	add    %edx,%eax$/;"	l
c0114dc6	obj/kernel.asm	/^c0114dc6:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0114dc9	obj/kernel.asm	/^c0114dc9:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0114dcc	obj/kernel.asm	/^c0114dcc:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0114dcf	obj/kernel.asm	/^c0114dcf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0114dd2	obj/kernel.asm	/^c0114dd2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0114dd5	obj/kernel.asm	/^c0114dd5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114dd8	obj/kernel.asm	/^c0114dd8:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0114ddb	obj/kernel.asm	/^c0114ddb:	89 10                	mov    %edx,(%eax)$/;"	l
c0114ddd	obj/kernel.asm	/^c0114ddd:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0114de1	obj/kernel.asm	/^c0114de1:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c0114de8	obj/kernel.asm	/^c0114de8:	76 cd                	jbe    c0114db7 <sfs_do_mount+0x1cd>$/;"	l
c0114dea	obj/kernel.asm	/^c0114dea:	c7 45 d0 00 80 00 00 	movl   $0x8000,-0x30(%ebp)$/;"	l
c0114df1	obj/kernel.asm	/^c0114df1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114df4	obj/kernel.asm	/^c0114df4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114df7	obj/kernel.asm	/^c0114df7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0114dfa	obj/kernel.asm	/^c0114dfa:	01 d0                	add    %edx,%eax$/;"	l
c0114dfc	obj/kernel.asm	/^c0114dfc:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0114dff	obj/kernel.asm	/^c0114dff:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0114e02	obj/kernel.asm	/^c0114e02:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0114e05	obj/kernel.asm	/^c0114e05:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114e0a	obj/kernel.asm	/^c0114e0a:	f7 75 d0             	divl   -0x30(%ebp)$/;"	l
c0114e0d	obj/kernel.asm	/^c0114e0d:	89 d0                	mov    %edx,%eax$/;"	l
c0114e0f	obj/kernel.asm	/^c0114e0f:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0114e12	obj/kernel.asm	/^c0114e12:	29 c2                	sub    %eax,%edx$/;"	l
c0114e14	obj/kernel.asm	/^c0114e14:	89 d0                	mov    %edx,%eax$/;"	l
c0114e16	obj/kernel.asm	/^c0114e16:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0114e19	obj/kernel.asm	/^c0114e19:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0114e1c	obj/kernel.asm	/^c0114e1c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114e1f	obj/kernel.asm	/^c0114e1f:	e8 fe 01 00 00       	call   c0115022 <bitmap_create>$/;"	l
c0114e24	obj/kernel.asm	/^c0114e24:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0114e27	obj/kernel.asm	/^c0114e27:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114e2a	obj/kernel.asm	/^c0114e2a:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0114e2d	obj/kernel.asm	/^c0114e2d:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0114e30	obj/kernel.asm	/^c0114e30:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114e33	obj/kernel.asm	/^c0114e33:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0114e36	obj/kernel.asm	/^c0114e36:	85 c0                	test   %eax,%eax$/;"	l
c0114e38	obj/kernel.asm	/^c0114e38:	75 05                	jne    c0114e3f <sfs_do_mount+0x255>$/;"	l
c0114e3a	obj/kernel.asm	/^c0114e3a:	e9 a2 01 00 00       	jmp    c0114fe1 <sfs_do_mount+0x3f7>$/;"	l
c0114e3f	obj/kernel.asm	/^c0114e3f:	c7 45 c0 00 80 00 00 	movl   $0x8000,-0x40(%ebp)$/;"	l
c0114e46	obj/kernel.asm	/^c0114e46:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114e49	obj/kernel.asm	/^c0114e49:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114e4c	obj/kernel.asm	/^c0114e4c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0114e4f	obj/kernel.asm	/^c0114e4f:	01 d0                	add    %edx,%eax$/;"	l
c0114e51	obj/kernel.asm	/^c0114e51:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0114e54	obj/kernel.asm	/^c0114e54:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114e59	obj/kernel.asm	/^c0114e59:	f7 75 c0             	divl   -0x40(%ebp)$/;"	l
c0114e5c	obj/kernel.asm	/^c0114e5c:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0114e5f	obj/kernel.asm	/^c0114e5f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114e62	obj/kernel.asm	/^c0114e62:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114e66	obj/kernel.asm	/^c0114e66:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0114e69	obj/kernel.asm	/^c0114e69:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114e6d	obj/kernel.asm	/^c0114e6d:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c0114e74	obj/kernel.asm	/^c0114e74:	00 $/;"	l
c0114e75	obj/kernel.asm	/^c0114e75:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0114e78	obj/kernel.asm	/^c0114e78:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114e7c	obj/kernel.asm	/^c0114e7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0114e7f	obj/kernel.asm	/^c0114e7f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114e82	obj/kernel.asm	/^c0114e82:	e8 ca fc ff ff       	call   c0114b51 <sfs_init_freemap>$/;"	l
c0114e87	obj/kernel.asm	/^c0114e87:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0114e8a	obj/kernel.asm	/^c0114e8a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0114e8e	obj/kernel.asm	/^c0114e8e:	74 11                	je     c0114ea1 <sfs_do_mount+0x2b7>$/;"	l
c0114e90	obj/kernel.asm	/^c0114e90:	90                   	nop$/;"	l
c0114e91	obj/kernel.asm	/^c0114e91:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0114e94	obj/kernel.asm	/^c0114e94:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114e97	obj/kernel.asm	/^c0114e97:	e8 29 05 00 00       	call   c01153c5 <bitmap_destroy>$/;"	l
c0114e9c	obj/kernel.asm	/^c0114e9c:	e9 40 01 00 00       	jmp    c0114fe1 <sfs_do_mount+0x3f7>$/;"	l
c0114ea1	obj/kernel.asm	/^c0114ea1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114ea4	obj/kernel.asm	/^c0114ea4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0114ea7	obj/kernel.asm	/^c0114ea7:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0114eaa	obj/kernel.asm	/^c0114eaa:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0114eb1	obj/kernel.asm	/^c0114eb1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0114eb8	obj/kernel.asm	/^c0114eb8:	eb 1e                	jmp    c0114ed8 <sfs_do_mount+0x2ee>$/;"	l
c0114eba	obj/kernel.asm	/^c0114eba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114ebd	obj/kernel.asm	/^c0114ebd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0114ec1	obj/kernel.asm	/^c0114ec1:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0114ec4	obj/kernel.asm	/^c0114ec4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114ec7	obj/kernel.asm	/^c0114ec7:	e8 5e 04 00 00       	call   c011532a <bitmap_test>$/;"	l
c0114ecc	obj/kernel.asm	/^c0114ecc:	85 c0                	test   %eax,%eax$/;"	l
c0114ece	obj/kernel.asm	/^c0114ece:	74 04                	je     c0114ed4 <sfs_do_mount+0x2ea>$/;"	l
c0114ed0	obj/kernel.asm	/^c0114ed0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0114ed4	obj/kernel.asm	/^c0114ed4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0114ed8	obj/kernel.asm	/^c0114ed8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0114edb	obj/kernel.asm	/^c0114edb:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0114ede	obj/kernel.asm	/^c0114ede:	72 da                	jb     c0114eba <sfs_do_mount+0x2d0>$/;"	l
c0114ee0	obj/kernel.asm	/^c0114ee0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114ee3	obj/kernel.asm	/^c0114ee3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0114ee6	obj/kernel.asm	/^c0114ee6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0114ee9	obj/kernel.asm	/^c0114ee9:	74 24                	je     c0114f0f <sfs_do_mount+0x325>$/;"	l
c0114eeb	obj/kernel.asm	/^c0114eeb:	c7 44 24 0c 10 b3 11 	movl   $0xc011b310,0xc(%esp)$/;"	l
c0114ef2	obj/kernel.asm	/^c0114ef2:	c0 $/;"	l
c0114ef3	obj/kernel.asm	/^c0114ef3:	c7 44 24 08 95 b1 11 	movl   $0xc011b195,0x8(%esp)$/;"	l
c0114efa	obj/kernel.asm	/^c0114efa:	c0 $/;"	l
c0114efb	obj/kernel.asm	/^c0114efb:	c7 44 24 04 e0 00 00 	movl   $0xe0,0x4(%esp)$/;"	l
c0114f02	obj/kernel.asm	/^c0114f02:	00 $/;"	l
c0114f03	obj/kernel.asm	/^c0114f03:	c7 04 24 aa b1 11 c0 	movl   $0xc011b1aa,(%esp)$/;"	l
c0114f0a	obj/kernel.asm	/^c0114f0a:	e8 28 bd fe ff       	call   c0100c37 <__panic>$/;"	l
c0114f0f	obj/kernel.asm	/^c0114f0f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f12	obj/kernel.asm	/^c0114f12:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0114f19	obj/kernel.asm	/^c0114f19:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f1c	obj/kernel.asm	/^c0114f1c:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0114f1f	obj/kernel.asm	/^c0114f1f:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0114f26	obj/kernel.asm	/^c0114f26:	00 $/;"	l
c0114f27	obj/kernel.asm	/^c0114f27:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114f2a	obj/kernel.asm	/^c0114f2a:	e8 c7 5c ff ff       	call   c010abf6 <sem_init>$/;"	l
c0114f2f	obj/kernel.asm	/^c0114f2f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f32	obj/kernel.asm	/^c0114f32:	83 c0 48             	add    $0x48,%eax$/;"	l
c0114f35	obj/kernel.asm	/^c0114f35:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0114f3c	obj/kernel.asm	/^c0114f3c:	00 $/;"	l
c0114f3d	obj/kernel.asm	/^c0114f3d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114f40	obj/kernel.asm	/^c0114f40:	e8 b1 5c ff ff       	call   c010abf6 <sem_init>$/;"	l
c0114f45	obj/kernel.asm	/^c0114f45:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f48	obj/kernel.asm	/^c0114f48:	83 c0 54             	add    $0x54,%eax$/;"	l
c0114f4b	obj/kernel.asm	/^c0114f4b:	c7 44 24 04 01 00 00 	movl   $0x1,0x4(%esp)$/;"	l
c0114f52	obj/kernel.asm	/^c0114f52:	00 $/;"	l
c0114f53	obj/kernel.asm	/^c0114f53:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114f56	obj/kernel.asm	/^c0114f56:	e8 9b 5c ff ff       	call   c010abf6 <sem_init>$/;"	l
c0114f5b	obj/kernel.asm	/^c0114f5b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f5e	obj/kernel.asm	/^c0114f5e:	83 c0 60             	add    $0x60,%eax$/;"	l
c0114f61	obj/kernel.asm	/^c0114f61:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0114f64	obj/kernel.asm	/^c0114f64:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0114f67	obj/kernel.asm	/^c0114f67:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0114f6a	obj/kernel.asm	/^c0114f6a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0114f6d	obj/kernel.asm	/^c0114f6d:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0114f70	obj/kernel.asm	/^c0114f70:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0114f73	obj/kernel.asm	/^c0114f73:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0114f76	obj/kernel.asm	/^c0114f76:	89 10                	mov    %edx,(%eax)$/;"	l
c0114f78	obj/kernel.asm	/^c0114f78:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114f7b	obj/kernel.asm	/^c0114f7b:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0114f7e	obj/kernel.asm	/^c0114f7e:	89 d1                	mov    %edx,%ecx$/;"	l
c0114f80	obj/kernel.asm	/^c0114f80:	29 c1                	sub    %eax,%ecx$/;"	l
c0114f82	obj/kernel.asm	/^c0114f82:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0114f85	obj/kernel.asm	/^c0114f85:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0114f88	obj/kernel.asm	/^c0114f88:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0114f8b	obj/kernel.asm	/^c0114f8b:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0114f8f	obj/kernel.asm	/^c0114f8f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0114f92	obj/kernel.asm	/^c0114f92:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0114f96	obj/kernel.asm	/^c0114f96:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0114f9a	obj/kernel.asm	/^c0114f9a:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0114f9e	obj/kernel.asm	/^c0114f9e:	c7 04 24 3a b3 11 c0 	movl   $0xc011b33a,(%esp)$/;"	l
c0114fa5	obj/kernel.asm	/^c0114fa5:	e8 36 bb fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0114faa	obj/kernel.asm	/^c0114faa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114fad	obj/kernel.asm	/^c0114fad:	c7 40 70 5f 47 11 c0 	movl   $0xc011475f,0x70(%eax)$/;"	l
c0114fb4	obj/kernel.asm	/^c0114fb4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114fb7	obj/kernel.asm	/^c0114fb7:	c7 40 74 bc 48 11 c0 	movl   $0xc01148bc,0x74(%eax)$/;"	l
c0114fbe	obj/kernel.asm	/^c0114fbe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114fc1	obj/kernel.asm	/^c0114fc1:	c7 40 78 47 49 11 c0 	movl   $0xc0114947,0x78(%eax)$/;"	l
c0114fc8	obj/kernel.asm	/^c0114fc8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114fcb	obj/kernel.asm	/^c0114fcb:	c7 40 7c 1a 4a 11 c0 	movl   $0xc0114a1a,0x7c(%eax)$/;"	l
c0114fd2	obj/kernel.asm	/^c0114fd2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0114fd5	obj/kernel.asm	/^c0114fd5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0114fd8	obj/kernel.asm	/^c0114fd8:	89 10                	mov    %edx,(%eax)$/;"	l
c0114fda	obj/kernel.asm	/^c0114fda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0114fdf	obj/kernel.asm	/^c0114fdf:	eb 24                	jmp    c0115005 <sfs_do_mount+0x41b>$/;"	l
c0114fe1	obj/kernel.asm	/^c0114fe1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0114fe4	obj/kernel.asm	/^c0114fe4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114fe7	obj/kernel.asm	/^c0114fe7:	e8 17 32 ff ff       	call   c0108203 <kfree>$/;"	l
c0114fec	obj/kernel.asm	/^c0114fec:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0114fef	obj/kernel.asm	/^c0114fef:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114ff2	obj/kernel.asm	/^c0114ff2:	e8 0c 32 ff ff       	call   c0108203 <kfree>$/;"	l
c0114ff7	obj/kernel.asm	/^c0114ff7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114ffa	obj/kernel.asm	/^c0114ffa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0114ffd	obj/kernel.asm	/^c0114ffd:	e8 01 32 ff ff       	call   c0108203 <kfree>$/;"	l
c0115002	obj/kernel.asm	/^c0115002:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115005	obj/kernel.asm	/^c0115005:	c9                   	leave  $/;"	l
c0115006	obj/kernel.asm	/^c0115006:	c3                   	ret    $/;"	l
c0115007	obj/kernel.asm	/^c0115007 <sfs_mount>:$/;"	l
c0115007	obj/kernel.asm	/^c0115007:	55                   	push   %ebp$/;"	l
c0115008	obj/kernel.asm	/^c0115008:	89 e5                	mov    %esp,%ebp$/;"	l
c011500a	obj/kernel.asm	/^c011500a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011500d	obj/kernel.asm	/^c011500d:	c7 44 24 04 ea 4b 11 	movl   $0xc0114bea,0x4(%esp)$/;"	l
c0115014	obj/kernel.asm	/^c0115014:	c0 $/;"	l
c0115015	obj/kernel.asm	/^c0115015:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115018	obj/kernel.asm	/^c0115018:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011501b	obj/kernel.asm	/^c011501b:	e8 a0 b3 ff ff       	call   c01103c0 <vfs_mount>$/;"	l
c0115020	obj/kernel.asm	/^c0115020:	c9                   	leave  $/;"	l
c0115021	obj/kernel.asm	/^c0115021:	c3                   	ret    $/;"	l
c0115022	obj/kernel.asm	/^c0115022 <bitmap_create>:$/;"	l
c0115022	obj/kernel.asm	/^c0115022:	55                   	push   %ebp$/;"	l
c0115023	obj/kernel.asm	/^c0115023:	89 e5                	mov    %esp,%ebp$/;"	l
c0115025	obj/kernel.asm	/^c0115025:	56                   	push   %esi$/;"	l
c0115026	obj/kernel.asm	/^c0115026:	53                   	push   %ebx$/;"	l
c0115027	obj/kernel.asm	/^c0115027:	83 ec 30             	sub    $0x30,%esp$/;"	l
c011502a	obj/kernel.asm	/^c011502a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c011502e	obj/kernel.asm	/^c011502e:	74 0b                	je     c011503b <bitmap_create+0x19>$/;"	l
c0115030	obj/kernel.asm	/^c0115030:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115033	obj/kernel.asm	/^c0115033:	83 c0 20             	add    $0x20,%eax$/;"	l
c0115036	obj/kernel.asm	/^c0115036:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0115039	obj/kernel.asm	/^c0115039:	77 24                	ja     c011505f <bitmap_create+0x3d>$/;"	l
c011503b	obj/kernel.asm	/^c011503b:	c7 44 24 0c 58 b3 11 	movl   $0xc011b358,0xc(%esp)$/;"	l
c0115042	obj/kernel.asm	/^c0115042:	c0 $/;"	l
c0115043	obj/kernel.asm	/^c0115043:	c7 44 24 08 80 b3 11 	movl   $0xc011b380,0x8(%esp)$/;"	l
c011504a	obj/kernel.asm	/^c011504a:	c0 $/;"	l
c011504b	obj/kernel.asm	/^c011504b:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c0115052	obj/kernel.asm	/^c0115052:	00 $/;"	l
c0115053	obj/kernel.asm	/^c0115053:	c7 04 24 95 b3 11 c0 	movl   $0xc011b395,(%esp)$/;"	l
c011505a	obj/kernel.asm	/^c011505a:	e8 d8 bb fe ff       	call   c0100c37 <__panic>$/;"	l
c011505f	obj/kernel.asm	/^c011505f:	c7 04 24 0c 00 00 00 	movl   $0xc,(%esp)$/;"	l
c0115066	obj/kernel.asm	/^c0115066:	e8 7d 31 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c011506b	obj/kernel.asm	/^c011506b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011506e	obj/kernel.asm	/^c011506e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0115072	obj/kernel.asm	/^c0115072:	75 0a                	jne    c011507e <bitmap_create+0x5c>$/;"	l
c0115074	obj/kernel.asm	/^c0115074:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0115079	obj/kernel.asm	/^c0115079:	e9 43 01 00 00       	jmp    c01151c1 <bitmap_create+0x19f>$/;"	l
c011507e	obj/kernel.asm	/^c011507e:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%ebp)$/;"	l
c0115085	obj/kernel.asm	/^c0115085:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115088	obj/kernel.asm	/^c0115088:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011508b	obj/kernel.asm	/^c011508b:	01 d0                	add    %edx,%eax$/;"	l
c011508d	obj/kernel.asm	/^c011508d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0115090	obj/kernel.asm	/^c0115090:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0115095	obj/kernel.asm	/^c0115095:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
c0115098	obj/kernel.asm	/^c0115098:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011509b	obj/kernel.asm	/^c011509b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011509e	obj/kernel.asm	/^c011509e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01150a1	obj/kernel.asm	/^c01150a1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01150a4	obj/kernel.asm	/^c01150a4:	e8 3f 31 ff ff       	call   c01081e8 <kmalloc>$/;"	l
c01150a9	obj/kernel.asm	/^c01150a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01150ac	obj/kernel.asm	/^c01150ac:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01150b0	obj/kernel.asm	/^c01150b0:	75 15                	jne    c01150c7 <bitmap_create+0xa5>$/;"	l
c01150b2	obj/kernel.asm	/^c01150b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01150b5	obj/kernel.asm	/^c01150b5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01150b8	obj/kernel.asm	/^c01150b8:	e8 46 31 ff ff       	call   c0108203 <kfree>$/;"	l
c01150bd	obj/kernel.asm	/^c01150bd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01150c2	obj/kernel.asm	/^c01150c2:	e9 fa 00 00 00       	jmp    c01151c1 <bitmap_create+0x19f>$/;"	l
c01150c7	obj/kernel.asm	/^c01150c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01150ca	obj/kernel.asm	/^c01150ca:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01150cd	obj/kernel.asm	/^c01150cd:	89 10                	mov    %edx,(%eax)$/;"	l
c01150cf	obj/kernel.asm	/^c01150cf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01150d2	obj/kernel.asm	/^c01150d2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01150d5	obj/kernel.asm	/^c01150d5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01150d8	obj/kernel.asm	/^c01150d8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01150db	obj/kernel.asm	/^c01150db:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01150de	obj/kernel.asm	/^c01150de:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01150e2	obj/kernel.asm	/^c01150e2:	c7 44 24 04 ff ff ff 	movl   $0xffffffff,0x4(%esp)$/;"	l
c01150e9	obj/kernel.asm	/^c01150e9:	ff $/;"	l
c01150ea	obj/kernel.asm	/^c01150ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01150ed	obj/kernel.asm	/^c01150ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01150f0	obj/kernel.asm	/^c01150f0:	e8 9b 15 00 00       	call   c0116690 <memset>$/;"	l
c01150f5	obj/kernel.asm	/^c01150f5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01150f8	obj/kernel.asm	/^c01150f8:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c01150fb	obj/kernel.asm	/^c01150fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01150fe	obj/kernel.asm	/^c01150fe:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0115101	obj/kernel.asm	/^c0115101:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0115104	obj/kernel.asm	/^c0115104:	0f 84 b4 00 00 00    	je     c01151be <bitmap_create+0x19c>$/;"	l
c011510a	obj/kernel.asm	/^c011510a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011510d	obj/kernel.asm	/^c011510d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0115110	obj/kernel.asm	/^c0115110:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0115113	obj/kernel.asm	/^c0115113:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0115116	obj/kernel.asm	/^c0115116:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0115119	obj/kernel.asm	/^c0115119:	89 c2                	mov    %eax,%edx$/;"	l
c011511b	obj/kernel.asm	/^c011511b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011511e	obj/kernel.asm	/^c011511e:	29 d0                	sub    %edx,%eax$/;"	l
c0115120	obj/kernel.asm	/^c0115120:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115123	obj/kernel.asm	/^c0115123:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115126	obj/kernel.asm	/^c0115126:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0115129	obj/kernel.asm	/^c0115129:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c011512c	obj/kernel.asm	/^c011512c:	74 24                	je     c0115152 <bitmap_create+0x130>$/;"	l
c011512e	obj/kernel.asm	/^c011512e:	c7 44 24 0c aa b3 11 	movl   $0xc011b3aa,0xc(%esp)$/;"	l
c0115135	obj/kernel.asm	/^c0115135:	c0 $/;"	l
c0115136	obj/kernel.asm	/^c0115136:	c7 44 24 08 80 b3 11 	movl   $0xc011b380,0x8(%esp)$/;"	l
c011513d	obj/kernel.asm	/^c011513d:	c0 $/;"	l
c011513e	obj/kernel.asm	/^c011513e:	c7 44 24 04 2a 00 00 	movl   $0x2a,0x4(%esp)$/;"	l
c0115145	obj/kernel.asm	/^c0115145:	00 $/;"	l
c0115146	obj/kernel.asm	/^c0115146:	c7 04 24 95 b3 11 c0 	movl   $0xc011b395,(%esp)$/;"	l
c011514d	obj/kernel.asm	/^c011514d:	e8 e5 ba fe ff       	call   c0100c37 <__panic>$/;"	l
c0115152	obj/kernel.asm	/^c0115152:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0115156	obj/kernel.asm	/^c0115156:	74 06                	je     c011515e <bitmap_create+0x13c>$/;"	l
c0115158	obj/kernel.asm	/^c0115158:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c011515c	obj/kernel.asm	/^c011515c:	76 24                	jbe    c0115182 <bitmap_create+0x160>$/;"	l
c011515e	obj/kernel.asm	/^c011515e:	c7 44 24 0c c4 b3 11 	movl   $0xc011b3c4,0xc(%esp)$/;"	l
c0115165	obj/kernel.asm	/^c0115165:	c0 $/;"	l
c0115166	obj/kernel.asm	/^c0115166:	c7 44 24 08 80 b3 11 	movl   $0xc011b380,0x8(%esp)$/;"	l
c011516d	obj/kernel.asm	/^c011516d:	c0 $/;"	l
c011516e	obj/kernel.asm	/^c011516e:	c7 44 24 04 2b 00 00 	movl   $0x2b,0x4(%esp)$/;"	l
c0115175	obj/kernel.asm	/^c0115175:	00 $/;"	l
c0115176	obj/kernel.asm	/^c0115176:	c7 04 24 95 b3 11 c0 	movl   $0xc011b395,(%esp)$/;"	l
c011517d	obj/kernel.asm	/^c011517d:	e8 b5 ba fe ff       	call   c0100c37 <__panic>$/;"	l
c0115182	obj/kernel.asm	/^c0115182:	eb 34                	jmp    c01151b8 <bitmap_create+0x196>$/;"	l
c0115184	obj/kernel.asm	/^c0115184:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115187	obj/kernel.asm	/^c0115187:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011518a	obj/kernel.asm	/^c011518a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c011518d	obj/kernel.asm	/^c011518d:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0115190	obj/kernel.asm	/^c0115190:	01 c2                	add    %eax,%edx$/;"	l
c0115192	obj/kernel.asm	/^c0115192:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115195	obj/kernel.asm	/^c0115195:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0115198	obj/kernel.asm	/^c0115198:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c011519b	obj/kernel.asm	/^c011519b:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
c011519e	obj/kernel.asm	/^c011519e:	01 c8                	add    %ecx,%eax$/;"	l
c01151a0	obj/kernel.asm	/^c01151a0:	8b 18                	mov    (%eax),%ebx$/;"	l
c01151a2	obj/kernel.asm	/^c01151a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01151a5	obj/kernel.asm	/^c01151a5:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
c01151aa	obj/kernel.asm	/^c01151aa:	89 c1                	mov    %eax,%ecx$/;"	l
c01151ac	obj/kernel.asm	/^c01151ac:	d3 e6                	shl    %cl,%esi$/;"	d
c01151ae	obj/kernel.asm	/^c01151ae:	89 f0                	mov    %esi,%eax$/;"	l
c01151b0	obj/kernel.asm	/^c01151b0:	31 d8                	xor    %ebx,%eax$/;"	l
c01151b2	obj/kernel.asm	/^c01151b2:	89 02                	mov    %eax,(%edx)$/;"	l
c01151b4	obj/kernel.asm	/^c01151b4:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01151b8	obj/kernel.asm	/^c01151b8:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c01151bc	obj/kernel.asm	/^c01151bc:	76 c6                	jbe    c0115184 <bitmap_create+0x162>$/;"	l
c01151be	obj/kernel.asm	/^c01151be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01151c1	obj/kernel.asm	/^c01151c1:	83 c4 30             	add    $0x30,%esp$/;"	l
c01151c4	obj/kernel.asm	/^c01151c4:	5b                   	pop    %ebx$/;"	l
c01151c5	obj/kernel.asm	/^c01151c5:	5e                   	pop    %esi$/;"	l
c01151c6	obj/kernel.asm	/^c01151c6:	5d                   	pop    %ebp$/;"	l
c01151c7	obj/kernel.asm	/^c01151c7:	c3                   	ret    $/;"	l
c01151c8	obj/kernel.asm	/^c01151c8 <bitmap_alloc>:$/;"	l
c01151c8	obj/kernel.asm	/^c01151c8:	55                   	push   %ebp$/;"	l
c01151c9	obj/kernel.asm	/^c01151c9:	89 e5                	mov    %esp,%ebp$/;"	l
c01151cb	obj/kernel.asm	/^c01151cb:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01151ce	obj/kernel.asm	/^c01151ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01151d1	obj/kernel.asm	/^c01151d1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01151d4	obj/kernel.asm	/^c01151d4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01151d7	obj/kernel.asm	/^c01151d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01151da	obj/kernel.asm	/^c01151da:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01151dd	obj/kernel.asm	/^c01151dd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01151e0	obj/kernel.asm	/^c01151e0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01151e7	obj/kernel.asm	/^c01151e7:	e9 bb 00 00 00       	jmp    c01152a7 <bitmap_alloc+0xdf>$/;"	l
c01151ec	obj/kernel.asm	/^c01151ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01151ef	obj/kernel.asm	/^c01151ef:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01151f6	obj/kernel.asm	/^c01151f6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01151f9	obj/kernel.asm	/^c01151f9:	01 d0                	add    %edx,%eax$/;"	l
c01151fb	obj/kernel.asm	/^c01151fb:	8b 00                	mov    (%eax),%eax$/;"	l
c01151fd	obj/kernel.asm	/^c01151fd:	85 c0                	test   %eax,%eax$/;"	l
c01151ff	obj/kernel.asm	/^c01151ff:	0f 84 9e 00 00 00    	je     c01152a3 <bitmap_alloc+0xdb>$/;"	l
c0115205	obj/kernel.asm	/^c0115205:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c011520c	obj/kernel.asm	/^c011520c:	eb 6b                	jmp    c0115279 <bitmap_alloc+0xb1>$/;"	l
c011520e	obj/kernel.asm	/^c011520e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115211	obj/kernel.asm	/^c0115211:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0115216	obj/kernel.asm	/^c0115216:	89 c1                	mov    %eax,%ecx$/;"	l
c0115218	obj/kernel.asm	/^c0115218:	d3 e2                	shl    %cl,%edx$/;"	d
c011521a	obj/kernel.asm	/^c011521a:	89 d0                	mov    %edx,%eax$/;"	l
c011521c	obj/kernel.asm	/^c011521c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011521f	obj/kernel.asm	/^c011521f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115222	obj/kernel.asm	/^c0115222:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0115229	obj/kernel.asm	/^c0115229:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011522c	obj/kernel.asm	/^c011522c:	01 d0                	add    %edx,%eax$/;"	l
c011522e	obj/kernel.asm	/^c011522e:	8b 00                	mov    (%eax),%eax$/;"	l
c0115230	obj/kernel.asm	/^c0115230:	23 45 e4             	and    -0x1c(%ebp),%eax$/;"	l
c0115233	obj/kernel.asm	/^c0115233:	85 c0                	test   %eax,%eax$/;"	l
c0115235	obj/kernel.asm	/^c0115235:	74 3e                	je     c0115275 <bitmap_alloc+0xad>$/;"	l
c0115237	obj/kernel.asm	/^c0115237:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011523a	obj/kernel.asm	/^c011523a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0115241	obj/kernel.asm	/^c0115241:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115244	obj/kernel.asm	/^c0115244:	01 c2                	add    %eax,%edx$/;"	l
c0115246	obj/kernel.asm	/^c0115246:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115249	obj/kernel.asm	/^c0115249:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
c0115250	obj/kernel.asm	/^c0115250:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115253	obj/kernel.asm	/^c0115253:	01 c8                	add    %ecx,%eax$/;"	l
c0115255	obj/kernel.asm	/^c0115255:	8b 00                	mov    (%eax),%eax$/;"	l
c0115257	obj/kernel.asm	/^c0115257:	33 45 e4             	xor    -0x1c(%ebp),%eax$/;"	l
c011525a	obj/kernel.asm	/^c011525a:	89 02                	mov    %eax,(%edx)$/;"	l
c011525c	obj/kernel.asm	/^c011525c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011525f	obj/kernel.asm	/^c011525f:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0115262	obj/kernel.asm	/^c0115262:	89 c2                	mov    %eax,%edx$/;"	l
c0115264	obj/kernel.asm	/^c0115264:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115267	obj/kernel.asm	/^c0115267:	01 c2                	add    %eax,%edx$/;"	l
c0115269	obj/kernel.asm	/^c0115269:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011526c	obj/kernel.asm	/^c011526c:	89 10                	mov    %edx,(%eax)$/;"	l
c011526e	obj/kernel.asm	/^c011526e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0115273	obj/kernel.asm	/^c0115273:	eb 43                	jmp    c01152b8 <bitmap_alloc+0xf0>$/;"	l
c0115275	obj/kernel.asm	/^c0115275:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0115279	obj/kernel.asm	/^c0115279:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c011527d	obj/kernel.asm	/^c011527d:	76 8f                	jbe    c011520e <bitmap_alloc+0x46>$/;"	l
c011527f	obj/kernel.asm	/^c011527f:	c7 44 24 0c e9 b3 11 	movl   $0xc011b3e9,0xc(%esp)$/;"	l
c0115286	obj/kernel.asm	/^c0115286:	c0 $/;"	l
c0115287	obj/kernel.asm	/^c0115287:	c7 44 24 08 80 b3 11 	movl   $0xc011b380,0x8(%esp)$/;"	l
c011528e	obj/kernel.asm	/^c011528e:	c0 $/;"	l
c011528f	obj/kernel.asm	/^c011528f:	c7 44 24 04 43 00 00 	movl   $0x43,0x4(%esp)$/;"	l
c0115296	obj/kernel.asm	/^c0115296:	00 $/;"	l
c0115297	obj/kernel.asm	/^c0115297:	c7 04 24 95 b3 11 c0 	movl   $0xc011b395,(%esp)$/;"	l
c011529e	obj/kernel.asm	/^c011529e:	e8 94 b9 fe ff       	call   c0100c37 <__panic>$/;"	l
c01152a3	obj/kernel.asm	/^c01152a3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01152a7	obj/kernel.asm	/^c01152a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01152aa	obj/kernel.asm	/^c01152aa:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c01152ad	obj/kernel.asm	/^c01152ad:	0f 82 39 ff ff ff    	jb     c01151ec <bitmap_alloc+0x24>$/;"	l
c01152b3	obj/kernel.asm	/^c01152b3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01152b8	obj/kernel.asm	/^c01152b8:	c9                   	leave  $/;"	l
c01152b9	obj/kernel.asm	/^c01152b9:	c3                   	ret    $/;"	l
c01152ba	obj/kernel.asm	/^c01152ba <bitmap_translate>:$/;"	l
c01152ba	obj/kernel.asm	/^c01152ba:	55                   	push   %ebp$/;"	l
c01152bb	obj/kernel.asm	/^c01152bb:	89 e5                	mov    %esp,%ebp$/;"	l
c01152bd	obj/kernel.asm	/^c01152bd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01152c0	obj/kernel.asm	/^c01152c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01152c3	obj/kernel.asm	/^c01152c3:	8b 00                	mov    (%eax),%eax$/;"	l
c01152c5	obj/kernel.asm	/^c01152c5:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01152c8	obj/kernel.asm	/^c01152c8:	77 24                	ja     c01152ee <bitmap_translate+0x34>$/;"	l
c01152ca	obj/kernel.asm	/^c01152ca:	c7 44 24 0c eb b3 11 	movl   $0xc011b3eb,0xc(%esp)$/;"	l
c01152d1	obj/kernel.asm	/^c01152d1:	c0 $/;"	l
c01152d2	obj/kernel.asm	/^c01152d2:	c7 44 24 08 80 b3 11 	movl   $0xc011b380,0x8(%esp)$/;"	l
c01152d9	obj/kernel.asm	/^c01152d9:	c0 $/;"	l
c01152da	obj/kernel.asm	/^c01152da:	c7 44 24 04 4c 00 00 	movl   $0x4c,0x4(%esp)$/;"	l
c01152e1	obj/kernel.asm	/^c01152e1:	00 $/;"	l
c01152e2	obj/kernel.asm	/^c01152e2:	c7 04 24 95 b3 11 c0 	movl   $0xc011b395,(%esp)$/;"	l
c01152e9	obj/kernel.asm	/^c01152e9:	e8 49 b9 fe ff       	call   c0100c37 <__panic>$/;"	l
c01152ee	obj/kernel.asm	/^c01152ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01152f1	obj/kernel.asm	/^c01152f1:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c01152f4	obj/kernel.asm	/^c01152f4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01152f7	obj/kernel.asm	/^c01152f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01152fa	obj/kernel.asm	/^c01152fa:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c01152fd	obj/kernel.asm	/^c01152fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115300	obj/kernel.asm	/^c0115300:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115303	obj/kernel.asm	/^c0115303:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0115306	obj/kernel.asm	/^c0115306:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0115309	obj/kernel.asm	/^c0115309:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c011530c	obj/kernel.asm	/^c011530c:	01 c2                	add    %eax,%edx$/;"	l
c011530e	obj/kernel.asm	/^c011530e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115311	obj/kernel.asm	/^c0115311:	89 10                	mov    %edx,(%eax)$/;"	l
c0115313	obj/kernel.asm	/^c0115313:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115316	obj/kernel.asm	/^c0115316:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c011531b	obj/kernel.asm	/^c011531b:	89 c1                	mov    %eax,%ecx$/;"	l
c011531d	obj/kernel.asm	/^c011531d:	d3 e2                	shl    %cl,%edx$/;"	d
c011531f	obj/kernel.asm	/^c011531f:	89 d0                	mov    %edx,%eax$/;"	l
c0115321	obj/kernel.asm	/^c0115321:	89 c2                	mov    %eax,%edx$/;"	l
c0115323	obj/kernel.asm	/^c0115323:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0115326	obj/kernel.asm	/^c0115326:	89 10                	mov    %edx,(%eax)$/;"	l
c0115328	obj/kernel.asm	/^c0115328:	c9                   	leave  $/;"	l
c0115329	obj/kernel.asm	/^c0115329:	c3                   	ret    $/;"	l
c011532a	obj/kernel.asm	/^c011532a <bitmap_test>:$/;"	l
c011532a	obj/kernel.asm	/^c011532a:	55                   	push   %ebp$/;"	l
c011532b	obj/kernel.asm	/^c011532b:	89 e5                	mov    %esp,%ebp$/;"	l
c011532d	obj/kernel.asm	/^c011532d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0115330	obj/kernel.asm	/^c0115330:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0115333	obj/kernel.asm	/^c0115333:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0115337	obj/kernel.asm	/^c0115337:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c011533a	obj/kernel.asm	/^c011533a:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c011533e	obj/kernel.asm	/^c011533e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115341	obj/kernel.asm	/^c0115341:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115345	obj/kernel.asm	/^c0115345:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115348	obj/kernel.asm	/^c0115348:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011534b	obj/kernel.asm	/^c011534b:	e8 6a ff ff ff       	call   c01152ba <bitmap_translate>$/;"	l
c0115350	obj/kernel.asm	/^c0115350:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115353	obj/kernel.asm	/^c0115353:	8b 10                	mov    (%eax),%edx$/;"	l
c0115355	obj/kernel.asm	/^c0115355:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115358	obj/kernel.asm	/^c0115358:	21 d0                	and    %edx,%eax$/;"	l
c011535a	obj/kernel.asm	/^c011535a:	c9                   	leave  $/;"	l
c011535b	obj/kernel.asm	/^c011535b:	c3                   	ret    $/;"	l
c011535c	obj/kernel.asm	/^c011535c <bitmap_free>:$/;"	l
c011535c	obj/kernel.asm	/^c011535c:	55                   	push   %ebp$/;"	l
c011535d	obj/kernel.asm	/^c011535d:	89 e5                	mov    %esp,%ebp$/;"	l
c011535f	obj/kernel.asm	/^c011535f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0115362	obj/kernel.asm	/^c0115362:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0115365	obj/kernel.asm	/^c0115365:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0115369	obj/kernel.asm	/^c0115369:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c011536c	obj/kernel.asm	/^c011536c:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115370	obj/kernel.asm	/^c0115370:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115373	obj/kernel.asm	/^c0115373:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115377	obj/kernel.asm	/^c0115377:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011537a	obj/kernel.asm	/^c011537a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011537d	obj/kernel.asm	/^c011537d:	e8 38 ff ff ff       	call   c01152ba <bitmap_translate>$/;"	l
c0115382	obj/kernel.asm	/^c0115382:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115385	obj/kernel.asm	/^c0115385:	8b 10                	mov    (%eax),%edx$/;"	l
c0115387	obj/kernel.asm	/^c0115387:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011538a	obj/kernel.asm	/^c011538a:	21 d0                	and    %edx,%eax$/;"	l
c011538c	obj/kernel.asm	/^c011538c:	85 c0                	test   %eax,%eax$/;"	l
c011538e	obj/kernel.asm	/^c011538e:	74 24                	je     c01153b4 <bitmap_free+0x58>$/;"	l
c0115390	obj/kernel.asm	/^c0115390:	c7 44 24 0c 01 b4 11 	movl   $0xc011b401,0xc(%esp)$/;"	l
c0115397	obj/kernel.asm	/^c0115397:	c0 $/;"	l
c0115398	obj/kernel.asm	/^c0115398:	c7 44 24 08 80 b3 11 	movl   $0xc011b380,0x8(%esp)$/;"	l
c011539f	obj/kernel.asm	/^c011539f:	c0 $/;"	l
c01153a0	obj/kernel.asm	/^c01153a0:	c7 44 24 04 5f 00 00 	movl   $0x5f,0x4(%esp)$/;"	l
c01153a7	obj/kernel.asm	/^c01153a7:	00 $/;"	l
c01153a8	obj/kernel.asm	/^c01153a8:	c7 04 24 95 b3 11 c0 	movl   $0xc011b395,(%esp)$/;"	l
c01153af	obj/kernel.asm	/^c01153af:	e8 83 b8 fe ff       	call   c0100c37 <__panic>$/;"	l
c01153b4	obj/kernel.asm	/^c01153b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01153b7	obj/kernel.asm	/^c01153b7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01153ba	obj/kernel.asm	/^c01153ba:	8b 0a                	mov    (%edx),%ecx$/;"	l
c01153bc	obj/kernel.asm	/^c01153bc:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01153bf	obj/kernel.asm	/^c01153bf:	09 ca                	or     %ecx,%edx$/;"	l
c01153c1	obj/kernel.asm	/^c01153c1:	89 10                	mov    %edx,(%eax)$/;"	l
c01153c3	obj/kernel.asm	/^c01153c3:	c9                   	leave  $/;"	l
c01153c4	obj/kernel.asm	/^c01153c4:	c3                   	ret    $/;"	l
c01153c5	obj/kernel.asm	/^c01153c5 <bitmap_destroy>:$/;"	l
c01153c5	obj/kernel.asm	/^c01153c5:	55                   	push   %ebp$/;"	l
c01153c6	obj/kernel.asm	/^c01153c6:	89 e5                	mov    %esp,%ebp$/;"	l
c01153c8	obj/kernel.asm	/^c01153c8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01153cb	obj/kernel.asm	/^c01153cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153ce	obj/kernel.asm	/^c01153ce:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01153d1	obj/kernel.asm	/^c01153d1:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01153d4	obj/kernel.asm	/^c01153d4:	e8 2a 2e ff ff       	call   c0108203 <kfree>$/;"	l
c01153d9	obj/kernel.asm	/^c01153d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153dc	obj/kernel.asm	/^c01153dc:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01153df	obj/kernel.asm	/^c01153df:	e8 1f 2e ff ff       	call   c0108203 <kfree>$/;"	l
c01153e4	obj/kernel.asm	/^c01153e4:	c9                   	leave  $/;"	l
c01153e5	obj/kernel.asm	/^c01153e5:	c3                   	ret    $/;"	l
c01153e6	obj/kernel.asm	/^c01153e6 <bitmap_getdata>:$/;"	l
c01153e6	obj/kernel.asm	/^c01153e6:	55                   	push   %ebp$/;"	l
c01153e7	obj/kernel.asm	/^c01153e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01153e9	obj/kernel.asm	/^c01153e9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01153ed	obj/kernel.asm	/^c01153ed:	74 12                	je     c0115401 <bitmap_getdata+0x1b>$/;"	l
c01153ef	obj/kernel.asm	/^c01153ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01153f2	obj/kernel.asm	/^c01153f2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01153f5	obj/kernel.asm	/^c01153f5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01153fc	obj/kernel.asm	/^c01153fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01153ff	obj/kernel.asm	/^c01153ff:	89 10                	mov    %edx,(%eax)$/;"	l
c0115401	obj/kernel.asm	/^c0115401:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115404	obj/kernel.asm	/^c0115404:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0115407	obj/kernel.asm	/^c0115407:	5d                   	pop    %ebp$/;"	l
c0115408	obj/kernel.asm	/^c0115408:	c3                   	ret    $/;"	l
c0115409	obj/kernel.asm	/^c0115409 <sfs_rwblock_nolock>:$/;"	l
c0115409	obj/kernel.asm	/^c0115409:	55                   	push   %ebp$/;"	l
c011540a	obj/kernel.asm	/^c011540a:	89 e5                	mov    %esp,%ebp$/;"	l
c011540c	obj/kernel.asm	/^c011540c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011540f	obj/kernel.asm	/^c011540f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115413	obj/kernel.asm	/^c0115413:	75 06                	jne    c011541b <sfs_rwblock_nolock+0x12>$/;"	l
c0115415	obj/kernel.asm	/^c0115415:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0115419	obj/kernel.asm	/^c0115419:	75 0b                	jne    c0115426 <sfs_rwblock_nolock+0x1d>$/;"	l
c011541b	obj/kernel.asm	/^c011541b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011541e	obj/kernel.asm	/^c011541e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0115421	obj/kernel.asm	/^c0115421:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0115424	obj/kernel.asm	/^c0115424:	77 24                	ja     c011544a <sfs_rwblock_nolock+0x41>$/;"	l
c0115426	obj/kernel.asm	/^c0115426:	c7 44 24 0c 14 b4 11 	movl   $0xc011b414,0xc(%esp)$/;"	l
c011542d	obj/kernel.asm	/^c011542d:	c0 $/;"	l
c011542e	obj/kernel.asm	/^c011542e:	c7 44 24 08 48 b4 11 	movl   $0xc011b448,0x8(%esp)$/;"	l
c0115435	obj/kernel.asm	/^c0115435:	c0 $/;"	l
c0115436	obj/kernel.asm	/^c0115436:	c7 44 24 04 15 00 00 	movl   $0x15,0x4(%esp)$/;"	l
c011543d	obj/kernel.asm	/^c011543d:	00 $/;"	l
c011543e	obj/kernel.asm	/^c011543e:	c7 04 24 5d b4 11 c0 	movl   $0xc011b45d,(%esp)$/;"	l
c0115445	obj/kernel.asm	/^c0115445:	e8 ed b7 fe ff       	call   c0100c37 <__panic>$/;"	l
c011544a	obj/kernel.asm	/^c011544a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011544d	obj/kernel.asm	/^c011544d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0115450	obj/kernel.asm	/^c0115450:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0115454	obj/kernel.asm	/^c0115454:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c011545b	obj/kernel.asm	/^c011545b:	00 $/;"	l
c011545c	obj/kernel.asm	/^c011545c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011545f	obj/kernel.asm	/^c011545f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115463	obj/kernel.asm	/^c0115463:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0115466	obj/kernel.asm	/^c0115466:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115469	obj/kernel.asm	/^c0115469:	e8 72 72 ff ff       	call   c010c6e0 <iobuf_init>$/;"	l
c011546e	obj/kernel.asm	/^c011546e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115471	obj/kernel.asm	/^c0115471:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115474	obj/kernel.asm	/^c0115474:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0115477	obj/kernel.asm	/^c0115477:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011547a	obj/kernel.asm	/^c011547a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011547d	obj/kernel.asm	/^c011547d:	8b 52 2c             	mov    0x2c(%edx),%edx$/;"	l
c0115480	obj/kernel.asm	/^c0115480:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c0115483	obj/kernel.asm	/^c0115483:	89 4c 24 08          	mov    %ecx,0x8(%esp)$/;"	l
c0115487	obj/kernel.asm	/^c0115487:	8b 4d f4             	mov    -0xc(%ebp),%ecx$/;"	l
c011548a	obj/kernel.asm	/^c011548a:	89 4c 24 04          	mov    %ecx,0x4(%esp)$/;"	l
c011548e	obj/kernel.asm	/^c011548e:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0115491	obj/kernel.asm	/^c0115491:	ff d0                	call   *%eax$/;"	l
c0115493	obj/kernel.asm	/^c0115493:	c9                   	leave  $/;"	l
c0115494	obj/kernel.asm	/^c0115494:	c3                   	ret    $/;"	l
c0115495	obj/kernel.asm	/^c0115495 <sfs_rwblock>:$/;"	l
c0115495	obj/kernel.asm	/^c0115495:	55                   	push   %ebp$/;"	l
c0115496	obj/kernel.asm	/^c0115496:	89 e5                	mov    %esp,%ebp$/;"	l
c0115498	obj/kernel.asm	/^c0115498:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011549b	obj/kernel.asm	/^c011549b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01154a2	obj/kernel.asm	/^c01154a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154a5	obj/kernel.asm	/^c01154a5:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01154a8	obj/kernel.asm	/^c01154a8:	e8 5a cf ff ff       	call   c0112407 <lock_sfs_io>$/;"	l
c01154ad	obj/kernel.asm	/^c01154ad:	eb 42                	jmp    c01154f1 <sfs_rwblock+0x5c>$/;"	l
c01154af	obj/kernel.asm	/^c01154af:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01154b6	obj/kernel.asm	/^c01154b6:	00 $/;"	l
c01154b7	obj/kernel.asm	/^c01154b7:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01154ba	obj/kernel.asm	/^c01154ba:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01154be	obj/kernel.asm	/^c01154be:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01154c1	obj/kernel.asm	/^c01154c1:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01154c5	obj/kernel.asm	/^c01154c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01154c8	obj/kernel.asm	/^c01154c8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01154cc	obj/kernel.asm	/^c01154cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154cf	obj/kernel.asm	/^c01154cf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01154d2	obj/kernel.asm	/^c01154d2:	e8 32 ff ff ff       	call   c0115409 <sfs_rwblock_nolock>$/;"	l
c01154d7	obj/kernel.asm	/^c01154d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01154da	obj/kernel.asm	/^c01154da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01154de	obj/kernel.asm	/^c01154de:	74 02                	je     c01154e2 <sfs_rwblock+0x4d>$/;"	l
c01154e0	obj/kernel.asm	/^c01154e0:	eb 15                	jmp    c01154f7 <sfs_rwblock+0x62>$/;"	l
c01154e2	obj/kernel.asm	/^c01154e2:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01154e6	obj/kernel.asm	/^c01154e6:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c01154ea	obj/kernel.asm	/^c01154ea:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01154f1	obj/kernel.asm	/^c01154f1:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01154f5	obj/kernel.asm	/^c01154f5:	75 b8                	jne    c01154af <sfs_rwblock+0x1a>$/;"	l
c01154f7	obj/kernel.asm	/^c01154f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01154fa	obj/kernel.asm	/^c01154fa:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01154fd	obj/kernel.asm	/^c01154fd:	e8 31 cf ff ff       	call   c0112433 <unlock_sfs_io>$/;"	l
c0115502	obj/kernel.asm	/^c0115502:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115505	obj/kernel.asm	/^c0115505:	c9                   	leave  $/;"	l
c0115506	obj/kernel.asm	/^c0115506:	c3                   	ret    $/;"	l
c0115507	obj/kernel.asm	/^c0115507 <sfs_rblock>:$/;"	l
c0115507	obj/kernel.asm	/^c0115507:	55                   	push   %ebp$/;"	l
c0115508	obj/kernel.asm	/^c0115508:	89 e5                	mov    %esp,%ebp$/;"	l
c011550a	obj/kernel.asm	/^c011550a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011550d	obj/kernel.asm	/^c011550d:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0115514	obj/kernel.asm	/^c0115514:	00 $/;"	l
c0115515	obj/kernel.asm	/^c0115515:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0115518	obj/kernel.asm	/^c0115518:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011551c	obj/kernel.asm	/^c011551c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011551f	obj/kernel.asm	/^c011551f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115523	obj/kernel.asm	/^c0115523:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115526	obj/kernel.asm	/^c0115526:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011552a	obj/kernel.asm	/^c011552a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011552d	obj/kernel.asm	/^c011552d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115530	obj/kernel.asm	/^c0115530:	e8 60 ff ff ff       	call   c0115495 <sfs_rwblock>$/;"	l
c0115535	obj/kernel.asm	/^c0115535:	c9                   	leave  $/;"	l
c0115536	obj/kernel.asm	/^c0115536:	c3                   	ret    $/;"	l
c0115537	obj/kernel.asm	/^c0115537 <sfs_wblock>:$/;"	l
c0115537	obj/kernel.asm	/^c0115537:	55                   	push   %ebp$/;"	l
c0115538	obj/kernel.asm	/^c0115538:	89 e5                	mov    %esp,%ebp$/;"	l
c011553a	obj/kernel.asm	/^c011553a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011553d	obj/kernel.asm	/^c011553d:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c0115544	obj/kernel.asm	/^c0115544:	00 $/;"	l
c0115545	obj/kernel.asm	/^c0115545:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0115548	obj/kernel.asm	/^c0115548:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c011554c	obj/kernel.asm	/^c011554c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011554f	obj/kernel.asm	/^c011554f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115553	obj/kernel.asm	/^c0115553:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115556	obj/kernel.asm	/^c0115556:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011555a	obj/kernel.asm	/^c011555a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011555d	obj/kernel.asm	/^c011555d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115560	obj/kernel.asm	/^c0115560:	e8 30 ff ff ff       	call   c0115495 <sfs_rwblock>$/;"	l
c0115565	obj/kernel.asm	/^c0115565:	c9                   	leave  $/;"	l
c0115566	obj/kernel.asm	/^c0115566:	c3                   	ret    $/;"	l
c0115567	obj/kernel.asm	/^c0115567 <sfs_rbuf>:$/;"	l
c0115567	obj/kernel.asm	/^c0115567:	55                   	push   %ebp$/;"	l
c0115568	obj/kernel.asm	/^c0115568:	89 e5                	mov    %esp,%ebp$/;"	l
c011556a	obj/kernel.asm	/^c011556a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011556d	obj/kernel.asm	/^c011556d:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0115571	obj/kernel.asm	/^c0115571:	78 18                	js     c011558b <sfs_rbuf+0x24>$/;"	l
c0115573	obj/kernel.asm	/^c0115573:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c011557a	obj/kernel.asm	/^c011557a:	7f 0f                	jg     c011558b <sfs_rbuf+0x24>$/;"	l
c011557c	obj/kernel.asm	/^c011557c:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c011557f	obj/kernel.asm	/^c011557f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0115582	obj/kernel.asm	/^c0115582:	01 d0                	add    %edx,%eax$/;"	l
c0115584	obj/kernel.asm	/^c0115584:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0115589	obj/kernel.asm	/^c0115589:	76 24                	jbe    c01155af <sfs_rbuf+0x48>$/;"	l
c011558b	obj/kernel.asm	/^c011558b:	c7 44 24 0c 74 b4 11 	movl   $0xc011b474,0xc(%esp)$/;"	l
c0115592	obj/kernel.asm	/^c0115592:	c0 $/;"	l
c0115593	obj/kernel.asm	/^c0115593:	c7 44 24 08 48 b4 11 	movl   $0xc011b448,0x8(%esp)$/;"	l
c011559a	obj/kernel.asm	/^c011559a:	c0 $/;"	l
c011559b	obj/kernel.asm	/^c011559b:	c7 44 24 04 55 00 00 	movl   $0x55,0x4(%esp)$/;"	l
c01155a2	obj/kernel.asm	/^c01155a2:	00 $/;"	l
c01155a3	obj/kernel.asm	/^c01155a3:	c7 04 24 5d b4 11 c0 	movl   $0xc011b45d,(%esp)$/;"	l
c01155aa	obj/kernel.asm	/^c01155aa:	e8 88 b6 fe ff       	call   c0100c37 <__panic>$/;"	l
c01155af	obj/kernel.asm	/^c01155af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01155b2	obj/kernel.asm	/^c01155b2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01155b5	obj/kernel.asm	/^c01155b5:	e8 4d ce ff ff       	call   c0112407 <lock_sfs_io>$/;"	l
c01155ba	obj/kernel.asm	/^c01155ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01155bd	obj/kernel.asm	/^c01155bd:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01155c0	obj/kernel.asm	/^c01155c0:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01155c7	obj/kernel.asm	/^c01155c7:	00 $/;"	l
c01155c8	obj/kernel.asm	/^c01155c8:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c01155cf	obj/kernel.asm	/^c01155cf:	00 $/;"	l
c01155d0	obj/kernel.asm	/^c01155d0:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01155d3	obj/kernel.asm	/^c01155d3:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01155d7	obj/kernel.asm	/^c01155d7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01155db	obj/kernel.asm	/^c01155db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01155de	obj/kernel.asm	/^c01155de:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01155e1	obj/kernel.asm	/^c01155e1:	e8 23 fe ff ff       	call   c0115409 <sfs_rwblock_nolock>$/;"	l
c01155e6	obj/kernel.asm	/^c01155e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01155e9	obj/kernel.asm	/^c01155e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01155ed	obj/kernel.asm	/^c01155ed:	75 21                	jne    c0115610 <sfs_rbuf+0xa9>$/;"	l
c01155ef	obj/kernel.asm	/^c01155ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01155f2	obj/kernel.asm	/^c01155f2:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c01155f5	obj/kernel.asm	/^c01155f5:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01155f8	obj/kernel.asm	/^c01155f8:	01 c2                	add    %eax,%edx$/;"	l
c01155fa	obj/kernel.asm	/^c01155fa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01155fd	obj/kernel.asm	/^c01155fd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0115601	obj/kernel.asm	/^c0115601:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0115605	obj/kernel.asm	/^c0115605:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115608	obj/kernel.asm	/^c0115608:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011560b	obj/kernel.asm	/^c011560b:	e8 62 11 00 00       	call   c0116772 <memcpy>$/;"	l
c0115610	obj/kernel.asm	/^c0115610:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115613	obj/kernel.asm	/^c0115613:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115616	obj/kernel.asm	/^c0115616:	e8 18 ce ff ff       	call   c0112433 <unlock_sfs_io>$/;"	l
c011561b	obj/kernel.asm	/^c011561b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011561e	obj/kernel.asm	/^c011561e:	c9                   	leave  $/;"	l
c011561f	obj/kernel.asm	/^c011561f:	c3                   	ret    $/;"	l
c0115620	obj/kernel.asm	/^c0115620 <sfs_wbuf>:$/;"	l
c0115620	obj/kernel.asm	/^c0115620:	55                   	push   %ebp$/;"	l
c0115621	obj/kernel.asm	/^c0115621:	89 e5                	mov    %esp,%ebp$/;"	l
c0115623	obj/kernel.asm	/^c0115623:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0115626	obj/kernel.asm	/^c0115626:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c011562a	obj/kernel.asm	/^c011562a:	78 18                	js     c0115644 <sfs_wbuf+0x24>$/;"	l
c011562c	obj/kernel.asm	/^c011562c:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c0115633	obj/kernel.asm	/^c0115633:	7f 0f                	jg     c0115644 <sfs_wbuf+0x24>$/;"	l
c0115635	obj/kernel.asm	/^c0115635:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0115638	obj/kernel.asm	/^c0115638:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011563b	obj/kernel.asm	/^c011563b:	01 d0                	add    %edx,%eax$/;"	l
c011563d	obj/kernel.asm	/^c011563d:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0115642	obj/kernel.asm	/^c0115642:	76 24                	jbe    c0115668 <sfs_wbuf+0x48>$/;"	l
c0115644	obj/kernel.asm	/^c0115644:	c7 44 24 0c 74 b4 11 	movl   $0xc011b474,0xc(%esp)$/;"	l
c011564b	obj/kernel.asm	/^c011564b:	c0 $/;"	l
c011564c	obj/kernel.asm	/^c011564c:	c7 44 24 08 48 b4 11 	movl   $0xc011b448,0x8(%esp)$/;"	l
c0115653	obj/kernel.asm	/^c0115653:	c0 $/;"	l
c0115654	obj/kernel.asm	/^c0115654:	c7 44 24 04 6b 00 00 	movl   $0x6b,0x4(%esp)$/;"	l
c011565b	obj/kernel.asm	/^c011565b:	00 $/;"	l
c011565c	obj/kernel.asm	/^c011565c:	c7 04 24 5d b4 11 c0 	movl   $0xc011b45d,(%esp)$/;"	l
c0115663	obj/kernel.asm	/^c0115663:	e8 cf b5 fe ff       	call   c0100c37 <__panic>$/;"	l
c0115668	obj/kernel.asm	/^c0115668:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011566b	obj/kernel.asm	/^c011566b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011566e	obj/kernel.asm	/^c011566e:	e8 94 cd ff ff       	call   c0112407 <lock_sfs_io>$/;"	l
c0115673	obj/kernel.asm	/^c0115673:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115676	obj/kernel.asm	/^c0115676:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0115679	obj/kernel.asm	/^c0115679:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c0115680	obj/kernel.asm	/^c0115680:	00 $/;"	l
c0115681	obj/kernel.asm	/^c0115681:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%esp)$/;"	l
c0115688	obj/kernel.asm	/^c0115688:	00 $/;"	l
c0115689	obj/kernel.asm	/^c0115689:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c011568c	obj/kernel.asm	/^c011568c:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0115690	obj/kernel.asm	/^c0115690:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115694	obj/kernel.asm	/^c0115694:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115697	obj/kernel.asm	/^c0115697:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011569a	obj/kernel.asm	/^c011569a:	e8 6a fd ff ff       	call   c0115409 <sfs_rwblock_nolock>$/;"	l
c011569f	obj/kernel.asm	/^c011569f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01156a2	obj/kernel.asm	/^c01156a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01156a6	obj/kernel.asm	/^c01156a6:	75 50                	jne    c01156f8 <sfs_wbuf+0xd8>$/;"	l
c01156a8	obj/kernel.asm	/^c01156a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01156ab	obj/kernel.asm	/^c01156ab:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c01156ae	obj/kernel.asm	/^c01156ae:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01156b1	obj/kernel.asm	/^c01156b1:	01 c2                	add    %eax,%edx$/;"	l
c01156b3	obj/kernel.asm	/^c01156b3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01156b6	obj/kernel.asm	/^c01156b6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01156ba	obj/kernel.asm	/^c01156ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01156bd	obj/kernel.asm	/^c01156bd:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01156c1	obj/kernel.asm	/^c01156c1:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01156c4	obj/kernel.asm	/^c01156c4:	e8 a9 10 00 00       	call   c0116772 <memcpy>$/;"	l
c01156c9	obj/kernel.asm	/^c01156c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01156cc	obj/kernel.asm	/^c01156cc:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01156cf	obj/kernel.asm	/^c01156cf:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c01156d6	obj/kernel.asm	/^c01156d6:	00 $/;"	l
c01156d7	obj/kernel.asm	/^c01156d7:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c01156de	obj/kernel.asm	/^c01156de:	00 $/;"	l
c01156df	obj/kernel.asm	/^c01156df:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01156e2	obj/kernel.asm	/^c01156e2:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c01156e6	obj/kernel.asm	/^c01156e6:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01156ea	obj/kernel.asm	/^c01156ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01156ed	obj/kernel.asm	/^c01156ed:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01156f0	obj/kernel.asm	/^c01156f0:	e8 14 fd ff ff       	call   c0115409 <sfs_rwblock_nolock>$/;"	l
c01156f5	obj/kernel.asm	/^c01156f5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01156f8	obj/kernel.asm	/^c01156f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01156fb	obj/kernel.asm	/^c01156fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01156fe	obj/kernel.asm	/^c01156fe:	e8 30 cd ff ff       	call   c0112433 <unlock_sfs_io>$/;"	l
c0115703	obj/kernel.asm	/^c0115703:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115706	obj/kernel.asm	/^c0115706:	c9                   	leave  $/;"	l
c0115707	obj/kernel.asm	/^c0115707:	c3                   	ret    $/;"	l
c0115708	obj/kernel.asm	/^c0115708 <sfs_sync_super>:$/;"	l
c0115708	obj/kernel.asm	/^c0115708:	55                   	push   %ebp$/;"	l
c0115709	obj/kernel.asm	/^c0115709:	89 e5                	mov    %esp,%ebp$/;"	l
c011570b	obj/kernel.asm	/^c011570b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011570e	obj/kernel.asm	/^c011570e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115711	obj/kernel.asm	/^c0115711:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115714	obj/kernel.asm	/^c0115714:	e8 ee cc ff ff       	call   c0112407 <lock_sfs_io>$/;"	l
c0115719	obj/kernel.asm	/^c0115719:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011571c	obj/kernel.asm	/^c011571c:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011571f	obj/kernel.asm	/^c011571f:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c0115726	obj/kernel.asm	/^c0115726:	00 $/;"	l
c0115727	obj/kernel.asm	/^c0115727:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c011572e	obj/kernel.asm	/^c011572e:	00 $/;"	l
c011572f	obj/kernel.asm	/^c011572f:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115732	obj/kernel.asm	/^c0115732:	e8 59 0f 00 00       	call   c0116690 <memset>$/;"	l
c0115737	obj/kernel.asm	/^c0115737:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011573a	obj/kernel.asm	/^c011573a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011573d	obj/kernel.asm	/^c011573d:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0115740	obj/kernel.asm	/^c0115740:	c7 44 24 08 2c 00 00 	movl   $0x2c,0x8(%esp)$/;"	l
c0115747	obj/kernel.asm	/^c0115747:	00 $/;"	l
c0115748	obj/kernel.asm	/^c0115748:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c011574c	obj/kernel.asm	/^c011574c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011574f	obj/kernel.asm	/^c011574f:	e8 1e 10 00 00       	call   c0116772 <memcpy>$/;"	l
c0115754	obj/kernel.asm	/^c0115754:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115757	obj/kernel.asm	/^c0115757:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011575a	obj/kernel.asm	/^c011575a:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%esp)$/;"	l
c0115761	obj/kernel.asm	/^c0115761:	00 $/;"	l
c0115762	obj/kernel.asm	/^c0115762:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0115769	obj/kernel.asm	/^c0115769:	00 $/;"	l
c011576a	obj/kernel.asm	/^c011576a:	c7 44 24 08 00 00 00 	movl   $0x0,0x8(%esp)$/;"	l
c0115771	obj/kernel.asm	/^c0115771:	00 $/;"	l
c0115772	obj/kernel.asm	/^c0115772:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115776	obj/kernel.asm	/^c0115776:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115779	obj/kernel.asm	/^c0115779:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011577c	obj/kernel.asm	/^c011577c:	e8 88 fc ff ff       	call   c0115409 <sfs_rwblock_nolock>$/;"	l
c0115781	obj/kernel.asm	/^c0115781:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115784	obj/kernel.asm	/^c0115784:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115787	obj/kernel.asm	/^c0115787:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011578a	obj/kernel.asm	/^c011578a:	e8 a4 cc ff ff       	call   c0112433 <unlock_sfs_io>$/;"	l
c011578f	obj/kernel.asm	/^c011578f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115792	obj/kernel.asm	/^c0115792:	c9                   	leave  $/;"	l
c0115793	obj/kernel.asm	/^c0115793:	c3                   	ret    $/;"	l
c0115794	obj/kernel.asm	/^c0115794 <sfs_sync_freemap>:$/;"	l
c0115794	obj/kernel.asm	/^c0115794:	55                   	push   %ebp$/;"	l
c0115795	obj/kernel.asm	/^c0115795:	89 e5                	mov    %esp,%ebp$/;"	l
c0115797	obj/kernel.asm	/^c0115797:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011579a	obj/kernel.asm	/^c011579a:	c7 45 f4 00 80 00 00 	movl   $0x8000,-0xc(%ebp)$/;"	l
c01157a1	obj/kernel.asm	/^c01157a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01157a4	obj/kernel.asm	/^c01157a4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01157a7	obj/kernel.asm	/^c01157a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01157aa	obj/kernel.asm	/^c01157aa:	01 d0                	add    %edx,%eax$/;"	l
c01157ac	obj/kernel.asm	/^c01157ac:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01157af	obj/kernel.asm	/^c01157af:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01157b4	obj/kernel.asm	/^c01157b4:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
c01157b7	obj/kernel.asm	/^c01157b7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01157ba	obj/kernel.asm	/^c01157ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01157bd	obj/kernel.asm	/^c01157bd:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01157c0	obj/kernel.asm	/^c01157c0:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c01157c7	obj/kernel.asm	/^c01157c7:	00 $/;"	l
c01157c8	obj/kernel.asm	/^c01157c8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01157cb	obj/kernel.asm	/^c01157cb:	e8 16 fc ff ff       	call   c01153e6 <bitmap_getdata>$/;"	l
c01157d0	obj/kernel.asm	/^c01157d0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01157d3	obj/kernel.asm	/^c01157d3:	89 54 24 0c          	mov    %edx,0xc(%esp)$/;"	l
c01157d7	obj/kernel.asm	/^c01157d7:	c7 44 24 08 02 00 00 	movl   $0x2,0x8(%esp)$/;"	l
c01157de	obj/kernel.asm	/^c01157de:	00 $/;"	l
c01157df	obj/kernel.asm	/^c01157df:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01157e3	obj/kernel.asm	/^c01157e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01157e6	obj/kernel.asm	/^c01157e6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01157e9	obj/kernel.asm	/^c01157e9:	e8 49 fd ff ff       	call   c0115537 <sfs_wblock>$/;"	l
c01157ee	obj/kernel.asm	/^c01157ee:	c9                   	leave  $/;"	l
c01157ef	obj/kernel.asm	/^c01157ef:	c3                   	ret    $/;"	l
c01157f0	obj/kernel.asm	/^c01157f0 <sfs_clear_block>:$/;"	l
c01157f0	obj/kernel.asm	/^c01157f0:	55                   	push   %ebp$/;"	l
c01157f1	obj/kernel.asm	/^c01157f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01157f3	obj/kernel.asm	/^c01157f3:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01157f6	obj/kernel.asm	/^c01157f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01157f9	obj/kernel.asm	/^c01157f9:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01157fc	obj/kernel.asm	/^c01157fc:	e8 06 cc ff ff       	call   c0112407 <lock_sfs_io>$/;"	l
c0115801	obj/kernel.asm	/^c0115801:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115804	obj/kernel.asm	/^c0115804:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0115807	obj/kernel.asm	/^c0115807:	c7 44 24 08 00 10 00 	movl   $0x1000,0x8(%esp)$/;"	l
c011580e	obj/kernel.asm	/^c011580e:	00 $/;"	l
c011580f	obj/kernel.asm	/^c011580f:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115816	obj/kernel.asm	/^c0115816:	00 $/;"	l
c0115817	obj/kernel.asm	/^c0115817:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011581a	obj/kernel.asm	/^c011581a:	e8 71 0e 00 00       	call   c0116690 <memset>$/;"	l
c011581f	obj/kernel.asm	/^c011581f:	eb 3f                	jmp    c0115860 <sfs_clear_block+0x70>$/;"	l
c0115821	obj/kernel.asm	/^c0115821:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115824	obj/kernel.asm	/^c0115824:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0115827	obj/kernel.asm	/^c0115827:	c7 44 24 10 01 00 00 	movl   $0x1,0x10(%esp)$/;"	l
c011582e	obj/kernel.asm	/^c011582e:	00 $/;"	l
c011582f	obj/kernel.asm	/^c011582f:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%esp)$/;"	l
c0115836	obj/kernel.asm	/^c0115836:	00 $/;"	l
c0115837	obj/kernel.asm	/^c0115837:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011583a	obj/kernel.asm	/^c011583a:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011583e	obj/kernel.asm	/^c011583e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115842	obj/kernel.asm	/^c0115842:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115845	obj/kernel.asm	/^c0115845:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115848	obj/kernel.asm	/^c0115848:	e8 bc fb ff ff       	call   c0115409 <sfs_rwblock_nolock>$/;"	l
c011584d	obj/kernel.asm	/^c011584d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115850	obj/kernel.asm	/^c0115850:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0115854	obj/kernel.asm	/^c0115854:	74 02                	je     c0115858 <sfs_clear_block+0x68>$/;"	l
c0115856	obj/kernel.asm	/^c0115856:	eb 0e                	jmp    c0115866 <sfs_clear_block+0x76>$/;"	l
c0115858	obj/kernel.asm	/^c0115858:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011585c	obj/kernel.asm	/^c011585c:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0115860	obj/kernel.asm	/^c0115860:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0115864	obj/kernel.asm	/^c0115864:	75 bb                	jne    c0115821 <sfs_clear_block+0x31>$/;"	l
c0115866	obj/kernel.asm	/^c0115866:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115869	obj/kernel.asm	/^c0115869:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011586c	obj/kernel.asm	/^c011586c:	e8 c2 cb ff ff       	call   c0112433 <unlock_sfs_io>$/;"	l
c0115871	obj/kernel.asm	/^c0115871:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115874	obj/kernel.asm	/^c0115874:	c9                   	leave  $/;"	l
c0115875	obj/kernel.asm	/^c0115875:	c3                   	ret    $/;"	l
c0115876	obj/kernel.asm	/^c0115876 <ioapicread>:$/;"	l
c0115876	obj/kernel.asm	/^c0115876:	55                   	push   %ebp$/;"	l
c0115877	obj/kernel.asm	/^c0115877:	89 e5                	mov    %esp,%ebp$/;"	l
c0115879	obj/kernel.asm	/^c0115879:	a1 6c b6 15 c0       	mov    0xc015b66c,%eax$/;"	l
c011587e	obj/kernel.asm	/^c011587e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115881	obj/kernel.asm	/^c0115881:	89 10                	mov    %edx,(%eax)$/;"	l
c0115883	obj/kernel.asm	/^c0115883:	a1 6c b6 15 c0       	mov    0xc015b66c,%eax$/;"	l
c0115888	obj/kernel.asm	/^c0115888:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011588b	obj/kernel.asm	/^c011588b:	5d                   	pop    %ebp$/;"	l
c011588c	obj/kernel.asm	/^c011588c:	c3                   	ret    $/;"	l
c011588d	obj/kernel.asm	/^c011588d <ioapicwrite>:$/;"	l
c011588d	obj/kernel.asm	/^c011588d:	55                   	push   %ebp$/;"	l
c011588e	obj/kernel.asm	/^c011588e:	89 e5                	mov    %esp,%ebp$/;"	l
c0115890	obj/kernel.asm	/^c0115890:	a1 6c b6 15 c0       	mov    0xc015b66c,%eax$/;"	l
c0115895	obj/kernel.asm	/^c0115895:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115898	obj/kernel.asm	/^c0115898:	89 10                	mov    %edx,(%eax)$/;"	l
c011589a	obj/kernel.asm	/^c011589a:	a1 6c b6 15 c0       	mov    0xc015b66c,%eax$/;"	l
c011589f	obj/kernel.asm	/^c011589f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01158a2	obj/kernel.asm	/^c01158a2:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01158a5	obj/kernel.asm	/^c01158a5:	5d                   	pop    %ebp$/;"	l
c01158a6	obj/kernel.asm	/^c01158a6:	c3                   	ret    $/;"	l
c01158a7	obj/kernel.asm	/^c01158a7 <ioapicinit>:$/;"	l
c01158a7	obj/kernel.asm	/^c01158a7:	55                   	push   %ebp$/;"	l
c01158a8	obj/kernel.asm	/^c01158a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01158aa	obj/kernel.asm	/^c01158aa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01158ad	obj/kernel.asm	/^c01158ad:	a1 64 b0 15 c0       	mov    0xc015b064,%eax$/;"	l
c01158b2	obj/kernel.asm	/^c01158b2:	85 c0                	test   %eax,%eax$/;"	l
c01158b4	obj/kernel.asm	/^c01158b4:	75 05                	jne    c01158bb <ioapicinit+0x14>$/;"	l
c01158b6	obj/kernel.asm	/^c01158b6:	e9 9d 00 00 00       	jmp    c0115958 <ioapicinit+0xb1>$/;"	l
c01158bb	obj/kernel.asm	/^c01158bb:	c7 05 6c b6 15 c0 00 	movl   $0xfec00000,0xc015b66c$/;"	l
c01158c2	obj/kernel.asm	/^c01158c2:	00 c0 fe $/;"	l
c01158c5	obj/kernel.asm	/^c01158c5:	c7 04 24 01 00 00 00 	movl   $0x1,(%esp)$/;"	l
c01158cc	obj/kernel.asm	/^c01158cc:	e8 a5 ff ff ff       	call   c0115876 <ioapicread>$/;"	l
c01158d1	obj/kernel.asm	/^c01158d1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01158d4	obj/kernel.asm	/^c01158d4:	25 ff 00 00 00       	and    $0xff,%eax$/;"	l
c01158d9	obj/kernel.asm	/^c01158d9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01158dc	obj/kernel.asm	/^c01158dc:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c01158e3	obj/kernel.asm	/^c01158e3:	e8 8e ff ff ff       	call   c0115876 <ioapicread>$/;"	l
c01158e8	obj/kernel.asm	/^c01158e8:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01158eb	obj/kernel.asm	/^c01158eb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01158ee	obj/kernel.asm	/^c01158ee:	0f b6 05 60 b0 15 c0 	movzbl 0xc015b060,%eax$/;"	l
c01158f5	obj/kernel.asm	/^c01158f5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01158f8	obj/kernel.asm	/^c01158f8:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01158fb	obj/kernel.asm	/^c01158fb:	74 0c                	je     c0115909 <ioapicinit+0x62>$/;"	l
c01158fd	obj/kernel.asm	/^c01158fd:	c7 04 24 b8 b4 11 c0 	movl   $0xc011b4b8,(%esp)$/;"	l
c0115904	obj/kernel.asm	/^c0115904:	e8 d7 b1 fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0115909	obj/kernel.asm	/^c0115909:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0115910	obj/kernel.asm	/^c0115910:	eb 3e                	jmp    c0115950 <ioapicinit+0xa9>$/;"	l
c0115912	obj/kernel.asm	/^c0115912:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115915	obj/kernel.asm	/^c0115915:	83 c0 20             	add    $0x20,%eax$/;"	l
c0115918	obj/kernel.asm	/^c0115918:	0d 00 00 01 00       	or     $0x10000,%eax$/;"	l
c011591d	obj/kernel.asm	/^c011591d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0115920	obj/kernel.asm	/^c0115920:	83 c2 08             	add    $0x8,%edx$/;"	l
c0115923	obj/kernel.asm	/^c0115923:	01 d2                	add    %edx,%edx$/;"	l
c0115925	obj/kernel.asm	/^c0115925:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115929	obj/kernel.asm	/^c0115929:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011592c	obj/kernel.asm	/^c011592c:	e8 5c ff ff ff       	call   c011588d <ioapicwrite>$/;"	l
c0115931	obj/kernel.asm	/^c0115931:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115934	obj/kernel.asm	/^c0115934:	83 c0 08             	add    $0x8,%eax$/;"	l
c0115937	obj/kernel.asm	/^c0115937:	01 c0                	add    %eax,%eax$/;"	l
c0115939	obj/kernel.asm	/^c0115939:	83 c0 01             	add    $0x1,%eax$/;"	l
c011593c	obj/kernel.asm	/^c011593c:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115943	obj/kernel.asm	/^c0115943:	00 $/;"	l
c0115944	obj/kernel.asm	/^c0115944:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115947	obj/kernel.asm	/^c0115947:	e8 41 ff ff ff       	call   c011588d <ioapicwrite>$/;"	l
c011594c	obj/kernel.asm	/^c011594c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0115950	obj/kernel.asm	/^c0115950:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115953	obj/kernel.asm	/^c0115953:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0115956	obj/kernel.asm	/^c0115956:	7e ba                	jle    c0115912 <ioapicinit+0x6b>$/;"	l
c0115958	obj/kernel.asm	/^c0115958:	c9                   	leave  $/;"	l
c0115959	obj/kernel.asm	/^c0115959:	c3                   	ret    $/;"	l
c011595a	obj/kernel.asm	/^c011595a <ioapicenable>:$/;"	l
c011595a	obj/kernel.asm	/^c011595a:	55                   	push   %ebp$/;"	l
c011595b	obj/kernel.asm	/^c011595b:	89 e5                	mov    %esp,%ebp$/;"	l
c011595d	obj/kernel.asm	/^c011595d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0115960	obj/kernel.asm	/^c0115960:	a1 64 b0 15 c0       	mov    0xc015b064,%eax$/;"	l
c0115965	obj/kernel.asm	/^c0115965:	85 c0                	test   %eax,%eax$/;"	l
c0115967	obj/kernel.asm	/^c0115967:	75 02                	jne    c011596b <ioapicenable+0x11>$/;"	l
c0115969	obj/kernel.asm	/^c0115969:	eb 37                	jmp    c01159a2 <ioapicenable+0x48>$/;"	l
c011596b	obj/kernel.asm	/^c011596b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011596e	obj/kernel.asm	/^c011596e:	83 c0 20             	add    $0x20,%eax$/;"	l
c0115971	obj/kernel.asm	/^c0115971:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115974	obj/kernel.asm	/^c0115974:	83 c2 08             	add    $0x8,%edx$/;"	l
c0115977	obj/kernel.asm	/^c0115977:	01 d2                	add    %edx,%edx$/;"	l
c0115979	obj/kernel.asm	/^c0115979:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011597d	obj/kernel.asm	/^c011597d:	89 14 24             	mov    %edx,(%esp)$/;"	l
c0115980	obj/kernel.asm	/^c0115980:	e8 08 ff ff ff       	call   c011588d <ioapicwrite>$/;"	l
c0115985	obj/kernel.asm	/^c0115985:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115988	obj/kernel.asm	/^c0115988:	c1 e0 18             	shl    $0x18,%eax$/;"	l
c011598b	obj/kernel.asm	/^c011598b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011598e	obj/kernel.asm	/^c011598e:	83 c2 08             	add    $0x8,%edx$/;"	l
c0115991	obj/kernel.asm	/^c0115991:	01 d2                	add    %edx,%edx$/;"	l
c0115993	obj/kernel.asm	/^c0115993:	83 c2 01             	add    $0x1,%edx$/;"	l
c0115996	obj/kernel.asm	/^c0115996:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c011599a	obj/kernel.asm	/^c011599a:	89 14 24             	mov    %edx,(%esp)$/;"	l
c011599d	obj/kernel.asm	/^c011599d:	e8 eb fe ff ff       	call   c011588d <ioapicwrite>$/;"	l
c01159a2	obj/kernel.asm	/^c01159a2:	c9                   	leave  $/;"	l
c01159a3	obj/kernel.asm	/^c01159a3:	c3                   	ret    $/;"	l
c01159a4	obj/kernel.asm	/^c01159a4 <p2v>:$/;"	l
c01159a4	obj/kernel.asm	/^c01159a4:	55                   	push   %ebp$/;"	l
c01159a5	obj/kernel.asm	/^c01159a5:	89 e5                	mov    %esp,%ebp$/;"	l
c01159a7	obj/kernel.asm	/^c01159a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01159aa	obj/kernel.asm	/^c01159aa:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01159af	obj/kernel.asm	/^c01159af:	5d                   	pop    %ebp$/;"	l
c01159b0	obj/kernel.asm	/^c01159b0:	c3                   	ret    $/;"	l
c01159b1	obj/kernel.asm	/^c01159b1 <readeflags>:$/;"	l
c01159b1	obj/kernel.asm	/^c01159b1:	55                   	push   %ebp$/;"	l
c01159b2	obj/kernel.asm	/^c01159b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01159b4	obj/kernel.asm	/^c01159b4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01159b7	obj/kernel.asm	/^c01159b7:	9c                   	pushf  $/;"	l
c01159b8	obj/kernel.asm	/^c01159b8:	58                   	pop    %eax$/;"	l
c01159b9	obj/kernel.asm	/^c01159b9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01159bc	obj/kernel.asm	/^c01159bc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01159bf	obj/kernel.asm	/^c01159bf:	c9                   	leave  $/;"	l
c01159c0	obj/kernel.asm	/^c01159c0:	c3                   	ret    $/;"	l
c01159c1	obj/kernel.asm	/^c01159c1 <lapicw>:$/;"	l
c01159c1	obj/kernel.asm	/^c01159c1:	55                   	push   %ebp$/;"	l
c01159c2	obj/kernel.asm	/^c01159c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01159c4	obj/kernel.asm	/^c01159c4:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c01159c9	obj/kernel.asm	/^c01159c9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01159cc	obj/kernel.asm	/^c01159cc:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01159cf	obj/kernel.asm	/^c01159cf:	01 c2                	add    %eax,%edx$/;"	l
c01159d1	obj/kernel.asm	/^c01159d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01159d4	obj/kernel.asm	/^c01159d4:	89 02                	mov    %eax,(%edx)$/;"	l
c01159d6	obj/kernel.asm	/^c01159d6:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c01159db	obj/kernel.asm	/^c01159db:	83 c0 20             	add    $0x20,%eax$/;"	l
c01159de	obj/kernel.asm	/^c01159de:	8b 00                	mov    (%eax),%eax$/;"	l
c01159e0	obj/kernel.asm	/^c01159e0:	5d                   	pop    %ebp$/;"	l
c01159e1	obj/kernel.asm	/^c01159e1:	c3                   	ret    $/;"	l
c01159e2	obj/kernel.asm	/^c01159e2 <lapicinit>:$/;"	l
c01159e2	obj/kernel.asm	/^c01159e2:	55                   	push   %ebp$/;"	l
c01159e3	obj/kernel.asm	/^c01159e3:	89 e5                	mov    %esp,%ebp$/;"	l
c01159e5	obj/kernel.asm	/^c01159e5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01159e8	obj/kernel.asm	/^c01159e8:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c01159ed	obj/kernel.asm	/^c01159ed:	85 c0                	test   %eax,%eax$/;"	l
c01159ef	obj/kernel.asm	/^c01159ef:	75 05                	jne    c01159f6 <lapicinit+0x14>$/;"	l
c01159f1	obj/kernel.asm	/^c01159f1:	e9 2f 01 00 00       	jmp    c0115b25 <lapicinit+0x143>$/;"	l
c01159f6	obj/kernel.asm	/^c01159f6:	c7 44 24 04 3f 01 00 	movl   $0x13f,0x4(%esp)$/;"	l
c01159fd	obj/kernel.asm	/^c01159fd:	00 $/;"	l
c01159fe	obj/kernel.asm	/^c01159fe:	c7 04 24 3c 00 00 00 	movl   $0x3c,(%esp)$/;"	l
c0115a05	obj/kernel.asm	/^c0115a05:	e8 b7 ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a0a	obj/kernel.asm	/^c0115a0a:	c7 44 24 04 0b 00 00 	movl   $0xb,0x4(%esp)$/;"	l
c0115a11	obj/kernel.asm	/^c0115a11:	00 $/;"	l
c0115a12	obj/kernel.asm	/^c0115a12:	c7 04 24 f8 00 00 00 	movl   $0xf8,(%esp)$/;"	l
c0115a19	obj/kernel.asm	/^c0115a19:	e8 a3 ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a1e	obj/kernel.asm	/^c0115a1e:	c7 44 24 04 80 96 98 	movl   $0x989680,0x4(%esp)$/;"	l
c0115a25	obj/kernel.asm	/^c0115a25:	00 $/;"	l
c0115a26	obj/kernel.asm	/^c0115a26:	c7 04 24 e0 00 00 00 	movl   $0xe0,(%esp)$/;"	l
c0115a2d	obj/kernel.asm	/^c0115a2d:	e8 8f ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a32	obj/kernel.asm	/^c0115a32:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
c0115a39	obj/kernel.asm	/^c0115a39:	00 $/;"	l
c0115a3a	obj/kernel.asm	/^c0115a3a:	c7 04 24 d4 00 00 00 	movl   $0xd4,(%esp)$/;"	l
c0115a41	obj/kernel.asm	/^c0115a41:	e8 7b ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a46	obj/kernel.asm	/^c0115a46:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
c0115a4d	obj/kernel.asm	/^c0115a4d:	00 $/;"	l
c0115a4e	obj/kernel.asm	/^c0115a4e:	c7 04 24 d8 00 00 00 	movl   $0xd8,(%esp)$/;"	l
c0115a55	obj/kernel.asm	/^c0115a55:	e8 67 ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a5a	obj/kernel.asm	/^c0115a5a:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115a5f	obj/kernel.asm	/^c0115a5f:	83 c0 30             	add    $0x30,%eax$/;"	l
c0115a62	obj/kernel.asm	/^c0115a62:	8b 00                	mov    (%eax),%eax$/;"	l
c0115a64	obj/kernel.asm	/^c0115a64:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0115a67	obj/kernel.asm	/^c0115a67:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0115a6a	obj/kernel.asm	/^c0115a6a:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0115a6d	obj/kernel.asm	/^c0115a6d:	76 14                	jbe    c0115a83 <lapicinit+0xa1>$/;"	l
c0115a6f	obj/kernel.asm	/^c0115a6f:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
c0115a76	obj/kernel.asm	/^c0115a76:	00 $/;"	l
c0115a77	obj/kernel.asm	/^c0115a77:	c7 04 24 d0 00 00 00 	movl   $0xd0,(%esp)$/;"	l
c0115a7e	obj/kernel.asm	/^c0115a7e:	e8 3e ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a83	obj/kernel.asm	/^c0115a83:	c7 44 24 04 33 00 00 	movl   $0x33,0x4(%esp)$/;"	l
c0115a8a	obj/kernel.asm	/^c0115a8a:	00 $/;"	l
c0115a8b	obj/kernel.asm	/^c0115a8b:	c7 04 24 dc 00 00 00 	movl   $0xdc,(%esp)$/;"	l
c0115a92	obj/kernel.asm	/^c0115a92:	e8 2a ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115a97	obj/kernel.asm	/^c0115a97:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115a9e	obj/kernel.asm	/^c0115a9e:	00 $/;"	l
c0115a9f	obj/kernel.asm	/^c0115a9f:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)$/;"	l
c0115aa6	obj/kernel.asm	/^c0115aa6:	e8 16 ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115aab	obj/kernel.asm	/^c0115aab:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115ab2	obj/kernel.asm	/^c0115ab2:	00 $/;"	l
c0115ab3	obj/kernel.asm	/^c0115ab3:	c7 04 24 a0 00 00 00 	movl   $0xa0,(%esp)$/;"	l
c0115aba	obj/kernel.asm	/^c0115aba:	e8 02 ff ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115abf	obj/kernel.asm	/^c0115abf:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115ac6	obj/kernel.asm	/^c0115ac6:	00 $/;"	l
c0115ac7	obj/kernel.asm	/^c0115ac7:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
c0115ace	obj/kernel.asm	/^c0115ace:	e8 ee fe ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115ad3	obj/kernel.asm	/^c0115ad3:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115ada	obj/kernel.asm	/^c0115ada:	00 $/;"	l
c0115adb	obj/kernel.asm	/^c0115adb:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)$/;"	l
c0115ae2	obj/kernel.asm	/^c0115ae2:	e8 da fe ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115ae7	obj/kernel.asm	/^c0115ae7:	c7 44 24 04 00 85 08 	movl   $0x88500,0x4(%esp)$/;"	l
c0115aee	obj/kernel.asm	/^c0115aee:	00 $/;"	l
c0115aef	obj/kernel.asm	/^c0115aef:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
c0115af6	obj/kernel.asm	/^c0115af6:	e8 c6 fe ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115afb	obj/kernel.asm	/^c0115afb:	90                   	nop$/;"	l
c0115afc	obj/kernel.asm	/^c0115afc:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115b01	obj/kernel.asm	/^c0115b01:	05 00 03 00 00       	add    $0x300,%eax$/;"	l
c0115b06	obj/kernel.asm	/^c0115b06:	8b 00                	mov    (%eax),%eax$/;"	l
c0115b08	obj/kernel.asm	/^c0115b08:	25 00 10 00 00       	and    $0x1000,%eax$/;"	l
c0115b0d	obj/kernel.asm	/^c0115b0d:	85 c0                	test   %eax,%eax$/;"	l
c0115b0f	obj/kernel.asm	/^c0115b0f:	75 eb                	jne    c0115afc <lapicinit+0x11a>$/;"	l
c0115b11	obj/kernel.asm	/^c0115b11:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115b18	obj/kernel.asm	/^c0115b18:	00 $/;"	l
c0115b19	obj/kernel.asm	/^c0115b19:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0115b20	obj/kernel.asm	/^c0115b20:	e8 9c fe ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115b25	obj/kernel.asm	/^c0115b25:	c9                   	leave  $/;"	l
c0115b26	obj/kernel.asm	/^c0115b26:	c3                   	ret    $/;"	l
c0115b27	obj/kernel.asm	/^c0115b27 <cpunum>:$/;"	l
c0115b27	obj/kernel.asm	/^c0115b27:	55                   	push   %ebp$/;"	l
c0115b28	obj/kernel.asm	/^c0115b28:	89 e5                	mov    %esp,%ebp$/;"	l
c0115b2a	obj/kernel.asm	/^c0115b2a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0115b2d	obj/kernel.asm	/^c0115b2d:	e8 7f fe ff ff       	call   c01159b1 <readeflags>$/;"	l
c0115b32	obj/kernel.asm	/^c0115b32:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0115b37	obj/kernel.asm	/^c0115b37:	85 c0                	test   %eax,%eax$/;"	l
c0115b39	obj/kernel.asm	/^c0115b39:	74 25                	je     c0115b60 <cpunum+0x39>$/;"	l
c0115b3b	obj/kernel.asm	/^c0115b3b:	a1 40 b0 15 c0       	mov    0xc015b040,%eax$/;"	l
c0115b40	obj/kernel.asm	/^c0115b40:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0115b43	obj/kernel.asm	/^c0115b43:	89 15 40 b0 15 c0    	mov    %edx,0xc015b040$/;"	l
c0115b49	obj/kernel.asm	/^c0115b49:	85 c0                	test   %eax,%eax$/;"	l
c0115b4b	obj/kernel.asm	/^c0115b4b:	75 13                	jne    c0115b60 <cpunum+0x39>$/;"	l
c0115b4d	obj/kernel.asm	/^c0115b4d:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0115b50	obj/kernel.asm	/^c0115b50:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115b54	obj/kernel.asm	/^c0115b54:	c7 04 24 ec b4 11 c0 	movl   $0xc011b4ec,(%esp)$/;"	l
c0115b5b	obj/kernel.asm	/^c0115b5b:	e8 80 af fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0115b60	obj/kernel.asm	/^c0115b60:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115b65	obj/kernel.asm	/^c0115b65:	85 c0                	test   %eax,%eax$/;"	l
c0115b67	obj/kernel.asm	/^c0115b67:	74 0f                	je     c0115b78 <cpunum+0x51>$/;"	l
c0115b69	obj/kernel.asm	/^c0115b69:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115b6e	obj/kernel.asm	/^c0115b6e:	83 c0 20             	add    $0x20,%eax$/;"	l
c0115b71	obj/kernel.asm	/^c0115b71:	8b 00                	mov    (%eax),%eax$/;"	l
c0115b73	obj/kernel.asm	/^c0115b73:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0115b76	obj/kernel.asm	/^c0115b76:	eb 05                	jmp    c0115b7d <cpunum+0x56>$/;"	l
c0115b78	obj/kernel.asm	/^c0115b78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0115b7d	obj/kernel.asm	/^c0115b7d:	c9                   	leave  $/;"	l
c0115b7e	obj/kernel.asm	/^c0115b7e:	c3                   	ret    $/;"	l
c0115b7f	obj/kernel.asm	/^c0115b7f <cpunum_v>:$/;"	l
c0115b7f	obj/kernel.asm	/^c0115b7f:	55                   	push   %ebp$/;"	l
c0115b80	obj/kernel.asm	/^c0115b80:	89 e5                	mov    %esp,%ebp$/;"	l
c0115b82	obj/kernel.asm	/^c0115b82:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0115b85	obj/kernel.asm	/^c0115b85:	e8 27 fe ff ff       	call   c01159b1 <readeflags>$/;"	l
c0115b8a	obj/kernel.asm	/^c0115b8a:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0115b8f	obj/kernel.asm	/^c0115b8f:	85 c0                	test   %eax,%eax$/;"	l
c0115b91	obj/kernel.asm	/^c0115b91:	74 25                	je     c0115bb8 <cpunum_v+0x39>$/;"	l
c0115b93	obj/kernel.asm	/^c0115b93:	a1 44 b0 15 c0       	mov    0xc015b044,%eax$/;"	l
c0115b98	obj/kernel.asm	/^c0115b98:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0115b9b	obj/kernel.asm	/^c0115b9b:	89 15 44 b0 15 c0    	mov    %edx,0xc015b044$/;"	l
c0115ba1	obj/kernel.asm	/^c0115ba1:	85 c0                	test   %eax,%eax$/;"	l
c0115ba3	obj/kernel.asm	/^c0115ba3:	75 13                	jne    c0115bb8 <cpunum_v+0x39>$/;"	l
c0115ba5	obj/kernel.asm	/^c0115ba5:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0115ba8	obj/kernel.asm	/^c0115ba8:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115bac	obj/kernel.asm	/^c0115bac:	c7 04 24 ec b4 11 c0 	movl   $0xc011b4ec,(%esp)$/;"	l
c0115bb3	obj/kernel.asm	/^c0115bb3:	e8 28 af fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0115bb8	obj/kernel.asm	/^c0115bb8:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115bbd	obj/kernel.asm	/^c0115bbd:	85 c0                	test   %eax,%eax$/;"	l
c0115bbf	obj/kernel.asm	/^c0115bbf:	74 1d                	je     c0115bde <cpunum_v+0x5f>$/;"	l
c0115bc1	obj/kernel.asm	/^c0115bc1:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115bc6	obj/kernel.asm	/^c0115bc6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115bc9	obj/kernel.asm	/^c0115bc9:	e8 d6 fd ff ff       	call   c01159a4 <p2v>$/;"	l
c0115bce	obj/kernel.asm	/^c0115bce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115bd1	obj/kernel.asm	/^c0115bd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115bd4	obj/kernel.asm	/^c0115bd4:	83 c0 20             	add    $0x20,%eax$/;"	l
c0115bd7	obj/kernel.asm	/^c0115bd7:	8b 00                	mov    (%eax),%eax$/;"	l
c0115bd9	obj/kernel.asm	/^c0115bd9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0115bdc	obj/kernel.asm	/^c0115bdc:	eb 05                	jmp    c0115be3 <cpunum_v+0x64>$/;"	l
c0115bde	obj/kernel.asm	/^c0115bde:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0115be3	obj/kernel.asm	/^c0115be3:	c9                   	leave  $/;"	l
c0115be4	obj/kernel.asm	/^c0115be4:	c3                   	ret    $/;"	l
c0115be5	obj/kernel.asm	/^c0115be5 <lapiceoi>:$/;"	l
c0115be5	obj/kernel.asm	/^c0115be5:	55                   	push   %ebp$/;"	l
c0115be6	obj/kernel.asm	/^c0115be6:	89 e5                	mov    %esp,%ebp$/;"	l
c0115be8	obj/kernel.asm	/^c0115be8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0115beb	obj/kernel.asm	/^c0115beb:	a1 60 b6 15 c0       	mov    0xc015b660,%eax$/;"	l
c0115bf0	obj/kernel.asm	/^c0115bf0:	85 c0                	test   %eax,%eax$/;"	l
c0115bf2	obj/kernel.asm	/^c0115bf2:	74 14                	je     c0115c08 <lapiceoi+0x23>$/;"	l
c0115bf4	obj/kernel.asm	/^c0115bf4:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%esp)$/;"	l
c0115bfb	obj/kernel.asm	/^c0115bfb:	00 $/;"	l
c0115bfc	obj/kernel.asm	/^c0115bfc:	c7 04 24 2c 00 00 00 	movl   $0x2c,(%esp)$/;"	l
c0115c03	obj/kernel.asm	/^c0115c03:	e8 b9 fd ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115c08	obj/kernel.asm	/^c0115c08:	c9                   	leave  $/;"	l
c0115c09	obj/kernel.asm	/^c0115c09:	c3                   	ret    $/;"	l
c0115c0a	obj/kernel.asm	/^c0115c0a <microdelay>:$/;"	l
c0115c0a	obj/kernel.asm	/^c0115c0a:	55                   	push   %ebp$/;"	l
c0115c0b	obj/kernel.asm	/^c0115c0b:	89 e5                	mov    %esp,%ebp$/;"	l
c0115c0d	obj/kernel.asm	/^c0115c0d:	5d                   	pop    %ebp$/;"	l
c0115c0e	obj/kernel.asm	/^c0115c0e:	c3                   	ret    $/;"	l
c0115c0f	obj/kernel.asm	/^c0115c0f <lapicstartap>:$/;"	l
c0115c0f	obj/kernel.asm	/^c0115c0f:	55                   	push   %ebp$/;"	l
c0115c10	obj/kernel.asm	/^c0115c10:	89 e5                	mov    %esp,%ebp$/;"	l
c0115c12	obj/kernel.asm	/^c0115c12:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0115c15	obj/kernel.asm	/^c0115c15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115c18	obj/kernel.asm	/^c0115c18:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
c0115c1b	obj/kernel.asm	/^c0115c1b:	66 c7 45 ee 70 00    	movw   $0x70,-0x12(%ebp)$/;"	l
c0115c21	obj/kernel.asm	/^c0115c21:	c6 45 ed 0f          	movb   $0xf,-0x13(%ebp)$/;"	l
c0115c25	obj/kernel.asm	/^c0115c25:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0115c29	obj/kernel.asm	/^c0115c29:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0115c2d	obj/kernel.asm	/^c0115c2d:	ee                   	out    %al,(%dx)$/;"	l
c0115c2e	obj/kernel.asm	/^c0115c2e:	66 c7 45 ea 71 00    	movw   $0x71,-0x16(%ebp)$/;"	l
c0115c34	obj/kernel.asm	/^c0115c34:	c6 45 e9 0a          	movb   $0xa,-0x17(%ebp)$/;"	l
c0115c38	obj/kernel.asm	/^c0115c38:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0115c3c	obj/kernel.asm	/^c0115c3c:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0115c40	obj/kernel.asm	/^c0115c40:	ee                   	out    %al,(%dx)$/;"	l
c0115c41	obj/kernel.asm	/^c0115c41:	c7 45 f0 67 04 00 c0 	movl   $0xc0000467,-0x10(%ebp)$/;"	l
c0115c48	obj/kernel.asm	/^c0115c48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115c4b	obj/kernel.asm	/^c0115c4b:	66 c7 00 00 00       	movw   $0x0,(%eax)$/;"	l
c0115c50	obj/kernel.asm	/^c0115c50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115c53	obj/kernel.asm	/^c0115c53:	8d 50 02             	lea    0x2(%eax),%edx$/;"	l
c0115c56	obj/kernel.asm	/^c0115c56:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115c59	obj/kernel.asm	/^c0115c59:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115c5c	obj/kernel.asm	/^c0115c5c:	66 89 02             	mov    %ax,(%edx)$/;"	l
c0115c5f	obj/kernel.asm	/^c0115c5f:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
c0115c63	obj/kernel.asm	/^c0115c63:	c1 e0 18             	shl    $0x18,%eax$/;"	l
c0115c66	obj/kernel.asm	/^c0115c66:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115c6a	obj/kernel.asm	/^c0115c6a:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)$/;"	l
c0115c71	obj/kernel.asm	/^c0115c71:	e8 4b fd ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115c76	obj/kernel.asm	/^c0115c76:	c7 44 24 04 00 c5 00 	movl   $0xc500,0x4(%esp)$/;"	l
c0115c7d	obj/kernel.asm	/^c0115c7d:	00 $/;"	l
c0115c7e	obj/kernel.asm	/^c0115c7e:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
c0115c85	obj/kernel.asm	/^c0115c85:	e8 37 fd ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115c8a	obj/kernel.asm	/^c0115c8a:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
c0115c91	obj/kernel.asm	/^c0115c91:	e8 74 ff ff ff       	call   c0115c0a <microdelay>$/;"	l
c0115c96	obj/kernel.asm	/^c0115c96:	c7 44 24 04 00 85 00 	movl   $0x8500,0x4(%esp)$/;"	l
c0115c9d	obj/kernel.asm	/^c0115c9d:	00 $/;"	l
c0115c9e	obj/kernel.asm	/^c0115c9e:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
c0115ca5	obj/kernel.asm	/^c0115ca5:	e8 17 fd ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115caa	obj/kernel.asm	/^c0115caa:	c7 04 24 64 00 00 00 	movl   $0x64,(%esp)$/;"	l
c0115cb1	obj/kernel.asm	/^c0115cb1:	e8 54 ff ff ff       	call   c0115c0a <microdelay>$/;"	l
c0115cb6	obj/kernel.asm	/^c0115cb6:	c7 04 24 18 b5 11 c0 	movl   $0xc011b518,(%esp)$/;"	l
c0115cbd	obj/kernel.asm	/^c0115cbd:	e8 1e ae fe ff       	call   c0100ae0 <cprintf>$/;"	l
c0115cc2	obj/kernel.asm	/^c0115cc2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0115cc9	obj/kernel.asm	/^c0115cc9:	eb 40                	jmp    c0115d0b <lapicstartap+0xfc>$/;"	l
c0115ccb	obj/kernel.asm	/^c0115ccb:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
c0115ccf	obj/kernel.asm	/^c0115ccf:	c1 e0 18             	shl    $0x18,%eax$/;"	l
c0115cd2	obj/kernel.asm	/^c0115cd2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115cd6	obj/kernel.asm	/^c0115cd6:	c7 04 24 c4 00 00 00 	movl   $0xc4,(%esp)$/;"	l
c0115cdd	obj/kernel.asm	/^c0115cdd:	e8 df fc ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115ce2	obj/kernel.asm	/^c0115ce2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0115ce5	obj/kernel.asm	/^c0115ce5:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0115ce8	obj/kernel.asm	/^c0115ce8:	80 cc 06             	or     $0x6,%ah$/;"	l
c0115ceb	obj/kernel.asm	/^c0115ceb:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115cef	obj/kernel.asm	/^c0115cef:	c7 04 24 c0 00 00 00 	movl   $0xc0,(%esp)$/;"	l
c0115cf6	obj/kernel.asm	/^c0115cf6:	e8 c6 fc ff ff       	call   c01159c1 <lapicw>$/;"	l
c0115cfb	obj/kernel.asm	/^c0115cfb:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
c0115d02	obj/kernel.asm	/^c0115d02:	e8 03 ff ff ff       	call   c0115c0a <microdelay>$/;"	l
c0115d07	obj/kernel.asm	/^c0115d07:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0115d0b	obj/kernel.asm	/^c0115d0b:	83 7d f4 01          	cmpl   $0x1,-0xc(%ebp)$/;"	l
c0115d0f	obj/kernel.asm	/^c0115d0f:	7e ba                	jle    c0115ccb <lapicstartap+0xbc>$/;"	l
c0115d11	obj/kernel.asm	/^c0115d11:	c9                   	leave  $/;"	l
c0115d12	obj/kernel.asm	/^c0115d12:	c3                   	ret    $/;"	l
c0115d13	obj/kernel.asm	/^c0115d13 <cmos_read>:$/;"	l
c0115d13	obj/kernel.asm	/^c0115d13:	55                   	push   %ebp$/;"	l
c0115d14	obj/kernel.asm	/^c0115d14:	89 e5                	mov    %esp,%ebp$/;"	l
c0115d16	obj/kernel.asm	/^c0115d16:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0115d19	obj/kernel.asm	/^c0115d19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115d1c	obj/kernel.asm	/^c0115d1c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0115d1f	obj/kernel.asm	/^c0115d1f:	66 c7 45 fe 70 00    	movw   $0x70,-0x2(%ebp)$/;"	l
c0115d25	obj/kernel.asm	/^c0115d25:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0115d28	obj/kernel.asm	/^c0115d28:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0115d2c	obj/kernel.asm	/^c0115d2c:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0115d30	obj/kernel.asm	/^c0115d30:	ee                   	out    %al,(%dx)$/;"	l
c0115d31	obj/kernel.asm	/^c0115d31:	c7 04 24 c8 00 00 00 	movl   $0xc8,(%esp)$/;"	l
c0115d38	obj/kernel.asm	/^c0115d38:	e8 cd fe ff ff       	call   c0115c0a <microdelay>$/;"	l
c0115d3d	obj/kernel.asm	/^c0115d3d:	66 c7 45 fa 71 00    	movw   $0x71,-0x6(%ebp)$/;"	l
c0115d43	obj/kernel.asm	/^c0115d43:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0115d47	obj/kernel.asm	/^c0115d47:	89 c2                	mov    %eax,%edx$/;"	l
c0115d49	obj/kernel.asm	/^c0115d49:	ec                   	in     (%dx),%al$/;"	l
c0115d4a	obj/kernel.asm	/^c0115d4a:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0115d4d	obj/kernel.asm	/^c0115d4d:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0115d51	obj/kernel.asm	/^c0115d51:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0115d54	obj/kernel.asm	/^c0115d54:	c9                   	leave  $/;"	l
c0115d55	obj/kernel.asm	/^c0115d55:	c3                   	ret    $/;"	l
c0115d56	obj/kernel.asm	/^c0115d56 <fill_rtcdate>:$/;"	l
c0115d56	obj/kernel.asm	/^c0115d56:	55                   	push   %ebp$/;"	l
c0115d57	obj/kernel.asm	/^c0115d57:	89 e5                	mov    %esp,%ebp$/;"	l
c0115d59	obj/kernel.asm	/^c0115d59:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0115d5c	obj/kernel.asm	/^c0115d5c:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)$/;"	l
c0115d63	obj/kernel.asm	/^c0115d63:	e8 ab ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115d68	obj/kernel.asm	/^c0115d68:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115d6b	obj/kernel.asm	/^c0115d6b:	89 02                	mov    %eax,(%edx)$/;"	l
c0115d6d	obj/kernel.asm	/^c0115d6d:	c7 04 24 02 00 00 00 	movl   $0x2,(%esp)$/;"	l
c0115d74	obj/kernel.asm	/^c0115d74:	e8 9a ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115d79	obj/kernel.asm	/^c0115d79:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115d7c	obj/kernel.asm	/^c0115d7c:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0115d7f	obj/kernel.asm	/^c0115d7f:	c7 04 24 04 00 00 00 	movl   $0x4,(%esp)$/;"	l
c0115d86	obj/kernel.asm	/^c0115d86:	e8 88 ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115d8b	obj/kernel.asm	/^c0115d8b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115d8e	obj/kernel.asm	/^c0115d8e:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0115d91	obj/kernel.asm	/^c0115d91:	c7 04 24 07 00 00 00 	movl   $0x7,(%esp)$/;"	l
c0115d98	obj/kernel.asm	/^c0115d98:	e8 76 ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115d9d	obj/kernel.asm	/^c0115d9d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115da0	obj/kernel.asm	/^c0115da0:	89 42 0c             	mov    %eax,0xc(%edx)$/;"	l
c0115da3	obj/kernel.asm	/^c0115da3:	c7 04 24 08 00 00 00 	movl   $0x8,(%esp)$/;"	l
c0115daa	obj/kernel.asm	/^c0115daa:	e8 64 ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115daf	obj/kernel.asm	/^c0115daf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115db2	obj/kernel.asm	/^c0115db2:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c0115db5	obj/kernel.asm	/^c0115db5:	c7 04 24 09 00 00 00 	movl   $0x9,(%esp)$/;"	l
c0115dbc	obj/kernel.asm	/^c0115dbc:	e8 52 ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115dc1	obj/kernel.asm	/^c0115dc1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0115dc4	obj/kernel.asm	/^c0115dc4:	89 42 14             	mov    %eax,0x14(%edx)$/;"	l
c0115dc7	obj/kernel.asm	/^c0115dc7:	c9                   	leave  $/;"	l
c0115dc8	obj/kernel.asm	/^c0115dc8:	c3                   	ret    $/;"	l
c0115dc9	obj/kernel.asm	/^c0115dc9 <cmostime>:$/;"	l
c0115dc9	obj/kernel.asm	/^c0115dc9:	55                   	push   %ebp$/;"	l
c0115dca	obj/kernel.asm	/^c0115dca:	89 e5                	mov    %esp,%ebp$/;"	l
c0115dcc	obj/kernel.asm	/^c0115dcc:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0115dcf	obj/kernel.asm	/^c0115dcf:	c7 04 24 0b 00 00 00 	movl   $0xb,(%esp)$/;"	l
c0115dd6	obj/kernel.asm	/^c0115dd6:	e8 38 ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115ddb	obj/kernel.asm	/^c0115ddb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115dde	obj/kernel.asm	/^c0115dde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115de1	obj/kernel.asm	/^c0115de1:	83 e0 04             	and    $0x4,%eax$/;"	l
c0115de4	obj/kernel.asm	/^c0115de4:	85 c0                	test   %eax,%eax$/;"	l
c0115de6	obj/kernel.asm	/^c0115de6:	0f 94 c0             	sete   %al$/;"	l
c0115de9	obj/kernel.asm	/^c0115de9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0115dec	obj/kernel.asm	/^c0115dec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115def	obj/kernel.asm	/^c0115def:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0115df2	obj/kernel.asm	/^c0115df2:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115df5	obj/kernel.asm	/^c0115df5:	e8 5c ff ff ff       	call   c0115d56 <fill_rtcdate>$/;"	l
c0115dfa	obj/kernel.asm	/^c0115dfa:	c7 04 24 0a 00 00 00 	movl   $0xa,(%esp)$/;"	l
c0115e01	obj/kernel.asm	/^c0115e01:	e8 0d ff ff ff       	call   c0115d13 <cmos_read>$/;"	l
c0115e06	obj/kernel.asm	/^c0115e06:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c0115e0b	obj/kernel.asm	/^c0115e0b:	85 c0                	test   %eax,%eax$/;"	l
c0115e0d	obj/kernel.asm	/^c0115e0d:	74 02                	je     c0115e11 <cmostime+0x48>$/;"	l
c0115e0f	obj/kernel.asm	/^c0115e0f:	eb 36                	jmp    c0115e47 <cmostime+0x7e>$/;"	l
c0115e11	obj/kernel.asm	/^c0115e11:	8d 45 c0             	lea    -0x40(%ebp),%eax$/;"	l
c0115e14	obj/kernel.asm	/^c0115e14:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115e17	obj/kernel.asm	/^c0115e17:	e8 3a ff ff ff       	call   c0115d56 <fill_rtcdate>$/;"	l
c0115e1c	obj/kernel.asm	/^c0115e1c:	c7 44 24 08 18 00 00 	movl   $0x18,0x8(%esp)$/;"	l
c0115e23	obj/kernel.asm	/^c0115e23:	00 $/;"	l
c0115e24	obj/kernel.asm	/^c0115e24:	8d 45 c0             	lea    -0x40(%ebp),%eax$/;"	l
c0115e27	obj/kernel.asm	/^c0115e27:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0115e2b	obj/kernel.asm	/^c0115e2b:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0115e2e	obj/kernel.asm	/^c0115e2e:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115e31	obj/kernel.asm	/^c0115e31:	e8 8b 09 00 00       	call   c01167c1 <memcmp>$/;"	l
c0115e36	obj/kernel.asm	/^c0115e36:	85 c0                	test   %eax,%eax$/;"	l
c0115e38	obj/kernel.asm	/^c0115e38:	75 0d                	jne    c0115e47 <cmostime+0x7e>$/;"	l
c0115e3a	obj/kernel.asm	/^c0115e3a:	90                   	nop$/;"	l
c0115e3b	obj/kernel.asm	/^c0115e3b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0115e3f	obj/kernel.asm	/^c0115e3f:	0f 84 ac 00 00 00    	je     c0115ef1 <cmostime+0x128>$/;"	l
c0115e45	obj/kernel.asm	/^c0115e45:	eb 02                	jmp    c0115e49 <cmostime+0x80>$/;"	l
c0115e47	obj/kernel.asm	/^c0115e47:	eb a6                	jmp    c0115def <cmostime+0x26>$/;"	l
c0115e49	obj/kernel.asm	/^c0115e49:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0115e4c	obj/kernel.asm	/^c0115e4c:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115e4f	obj/kernel.asm	/^c0115e4f:	89 c2                	mov    %eax,%edx$/;"	l
c0115e51	obj/kernel.asm	/^c0115e51:	89 d0                	mov    %edx,%eax$/;"	l
c0115e53	obj/kernel.asm	/^c0115e53:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0115e56	obj/kernel.asm	/^c0115e56:	01 d0                	add    %edx,%eax$/;"	l
c0115e58	obj/kernel.asm	/^c0115e58:	01 c0                	add    %eax,%eax$/;"	l
c0115e5a	obj/kernel.asm	/^c0115e5a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0115e5d	obj/kernel.asm	/^c0115e5d:	83 e2 0f             	and    $0xf,%edx$/;"	l
c0115e60	obj/kernel.asm	/^c0115e60:	01 d0                	add    %edx,%eax$/;"	l
c0115e62	obj/kernel.asm	/^c0115e62:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0115e65	obj/kernel.asm	/^c0115e65:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0115e68	obj/kernel.asm	/^c0115e68:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115e6b	obj/kernel.asm	/^c0115e6b:	89 c2                	mov    %eax,%edx$/;"	l
c0115e6d	obj/kernel.asm	/^c0115e6d:	89 d0                	mov    %edx,%eax$/;"	l
c0115e6f	obj/kernel.asm	/^c0115e6f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0115e72	obj/kernel.asm	/^c0115e72:	01 d0                	add    %edx,%eax$/;"	l
c0115e74	obj/kernel.asm	/^c0115e74:	01 c0                	add    %eax,%eax$/;"	l
c0115e76	obj/kernel.asm	/^c0115e76:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0115e79	obj/kernel.asm	/^c0115e79:	83 e2 0f             	and    $0xf,%edx$/;"	l
c0115e7c	obj/kernel.asm	/^c0115e7c:	01 d0                	add    %edx,%eax$/;"	l
c0115e7e	obj/kernel.asm	/^c0115e7e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0115e81	obj/kernel.asm	/^c0115e81:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0115e84	obj/kernel.asm	/^c0115e84:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115e87	obj/kernel.asm	/^c0115e87:	89 c2                	mov    %eax,%edx$/;"	l
c0115e89	obj/kernel.asm	/^c0115e89:	89 d0                	mov    %edx,%eax$/;"	l
c0115e8b	obj/kernel.asm	/^c0115e8b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0115e8e	obj/kernel.asm	/^c0115e8e:	01 d0                	add    %edx,%eax$/;"	l
c0115e90	obj/kernel.asm	/^c0115e90:	01 c0                	add    %eax,%eax$/;"	l
c0115e92	obj/kernel.asm	/^c0115e92:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0115e95	obj/kernel.asm	/^c0115e95:	83 e2 0f             	and    $0xf,%edx$/;"	l
c0115e98	obj/kernel.asm	/^c0115e98:	01 d0                	add    %edx,%eax$/;"	l
c0115e9a	obj/kernel.asm	/^c0115e9a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0115e9d	obj/kernel.asm	/^c0115e9d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0115ea0	obj/kernel.asm	/^c0115ea0:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115ea3	obj/kernel.asm	/^c0115ea3:	89 c2                	mov    %eax,%edx$/;"	l
c0115ea5	obj/kernel.asm	/^c0115ea5:	89 d0                	mov    %edx,%eax$/;"	l
c0115ea7	obj/kernel.asm	/^c0115ea7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0115eaa	obj/kernel.asm	/^c0115eaa:	01 d0                	add    %edx,%eax$/;"	l
c0115eac	obj/kernel.asm	/^c0115eac:	01 c0                	add    %eax,%eax$/;"	l
c0115eae	obj/kernel.asm	/^c0115eae:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0115eb1	obj/kernel.asm	/^c0115eb1:	83 e2 0f             	and    $0xf,%edx$/;"	l
c0115eb4	obj/kernel.asm	/^c0115eb4:	01 d0                	add    %edx,%eax$/;"	l
c0115eb6	obj/kernel.asm	/^c0115eb6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0115eb9	obj/kernel.asm	/^c0115eb9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0115ebc	obj/kernel.asm	/^c0115ebc:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115ebf	obj/kernel.asm	/^c0115ebf:	89 c2                	mov    %eax,%edx$/;"	l
c0115ec1	obj/kernel.asm	/^c0115ec1:	89 d0                	mov    %edx,%eax$/;"	l
c0115ec3	obj/kernel.asm	/^c0115ec3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0115ec6	obj/kernel.asm	/^c0115ec6:	01 d0                	add    %edx,%eax$/;"	l
c0115ec8	obj/kernel.asm	/^c0115ec8:	01 c0                	add    %eax,%eax$/;"	l
c0115eca	obj/kernel.asm	/^c0115eca:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0115ecd	obj/kernel.asm	/^c0115ecd:	83 e2 0f             	and    $0xf,%edx$/;"	l
c0115ed0	obj/kernel.asm	/^c0115ed0:	01 d0                	add    %edx,%eax$/;"	l
c0115ed2	obj/kernel.asm	/^c0115ed2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0115ed5	obj/kernel.asm	/^c0115ed5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0115ed8	obj/kernel.asm	/^c0115ed8:	c1 e8 04             	shr    $0x4,%eax$/;"	l
c0115edb	obj/kernel.asm	/^c0115edb:	89 c2                	mov    %eax,%edx$/;"	l
c0115edd	obj/kernel.asm	/^c0115edd:	89 d0                	mov    %edx,%eax$/;"	l
c0115edf	obj/kernel.asm	/^c0115edf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0115ee2	obj/kernel.asm	/^c0115ee2:	01 d0                	add    %edx,%eax$/;"	l
c0115ee4	obj/kernel.asm	/^c0115ee4:	01 c0                	add    %eax,%eax$/;"	l
c0115ee6	obj/kernel.asm	/^c0115ee6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0115ee9	obj/kernel.asm	/^c0115ee9:	83 e2 0f             	and    $0xf,%edx$/;"	l
c0115eec	obj/kernel.asm	/^c0115eec:	01 d0                	add    %edx,%eax$/;"	l
c0115eee	obj/kernel.asm	/^c0115eee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0115ef1	obj/kernel.asm	/^c0115ef1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115ef4	obj/kernel.asm	/^c0115ef4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0115ef7	obj/kernel.asm	/^c0115ef7:	89 10                	mov    %edx,(%eax)$/;"	l
c0115ef9	obj/kernel.asm	/^c0115ef9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0115efc	obj/kernel.asm	/^c0115efc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0115eff	obj/kernel.asm	/^c0115eff:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0115f02	obj/kernel.asm	/^c0115f02:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0115f05	obj/kernel.asm	/^c0115f05:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0115f08	obj/kernel.asm	/^c0115f08:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0115f0b	obj/kernel.asm	/^c0115f0b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0115f0e	obj/kernel.asm	/^c0115f0e:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0115f11	obj/kernel.asm	/^c0115f11:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0115f14	obj/kernel.asm	/^c0115f14:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0115f17	obj/kernel.asm	/^c0115f17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115f1a	obj/kernel.asm	/^c0115f1a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0115f1d	obj/kernel.asm	/^c0115f1d:	8d 90 d0 07 00 00    	lea    0x7d0(%eax),%edx$/;"	l
c0115f23	obj/kernel.asm	/^c0115f23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115f26	obj/kernel.asm	/^c0115f26:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0115f29	obj/kernel.asm	/^c0115f29:	c9                   	leave  $/;"	l
c0115f2a	obj/kernel.asm	/^c0115f2a:	c3                   	ret    $/;"	l
c0115f2b	obj/kernel.asm	/^c0115f2b <p2v>:$/;"	l
c0115f2b	obj/kernel.asm	/^c0115f2b:	55                   	push   %ebp$/;"	l
c0115f2c	obj/kernel.asm	/^c0115f2c:	89 e5                	mov    %esp,%ebp$/;"	l
c0115f2e	obj/kernel.asm	/^c0115f2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115f31	obj/kernel.asm	/^c0115f31:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0115f36	obj/kernel.asm	/^c0115f36:	5d                   	pop    %ebp$/;"	l
c0115f37	obj/kernel.asm	/^c0115f37:	c3                   	ret    $/;"	l
c0115f38	obj/kernel.asm	/^c0115f38 <mpbcpu>:$/;"	l
c0115f38	obj/kernel.asm	/^c0115f38:	55                   	push   %ebp$/;"	l
c0115f39	obj/kernel.asm	/^c0115f39:	89 e5                	mov    %esp,%ebp$/;"	l
c0115f3b	obj/kernel.asm	/^c0115f3b:	a1 48 b0 15 c0       	mov    0xc015b048,%eax$/;"	l
c0115f40	obj/kernel.asm	/^c0115f40:	89 c2                	mov    %eax,%edx$/;"	l
c0115f42	obj/kernel.asm	/^c0115f42:	b8 80 b0 15 c0       	mov    $0xc015b080,%eax$/;"	l
c0115f47	obj/kernel.asm	/^c0115f47:	29 c2                	sub    %eax,%edx$/;"	l
c0115f49	obj/kernel.asm	/^c0115f49:	89 d0                	mov    %edx,%eax$/;"	l
c0115f4b	obj/kernel.asm	/^c0115f4b:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0115f4e	obj/kernel.asm	/^c0115f4e:	69 c0 cf 46 7d 67    	imul   $0x677d46cf,%eax,%eax$/;"	l
c0115f54	obj/kernel.asm	/^c0115f54:	5d                   	pop    %ebp$/;"	l
c0115f55	obj/kernel.asm	/^c0115f55:	c3                   	ret    $/;"	l
c0115f56	obj/kernel.asm	/^c0115f56 <sum>:$/;"	l
c0115f56	obj/kernel.asm	/^c0115f56:	55                   	push   %ebp$/;"	l
c0115f57	obj/kernel.asm	/^c0115f57:	89 e5                	mov    %esp,%ebp$/;"	l
c0115f59	obj/kernel.asm	/^c0115f59:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0115f5c	obj/kernel.asm	/^c0115f5c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0115f63	obj/kernel.asm	/^c0115f63:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0115f6a	obj/kernel.asm	/^c0115f6a:	eb 15                	jmp    c0115f81 <sum+0x2b>$/;"	l
c0115f6c	obj/kernel.asm	/^c0115f6c:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0115f6f	obj/kernel.asm	/^c0115f6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115f72	obj/kernel.asm	/^c0115f72:	01 d0                	add    %edx,%eax$/;"	l
c0115f74	obj/kernel.asm	/^c0115f74:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0115f77	obj/kernel.asm	/^c0115f77:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0115f7a	obj/kernel.asm	/^c0115f7a:	01 45 f8             	add    %eax,-0x8(%ebp)$/;"	l
c0115f7d	obj/kernel.asm	/^c0115f7d:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0115f81	obj/kernel.asm	/^c0115f81:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0115f84	obj/kernel.asm	/^c0115f84:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0115f87	obj/kernel.asm	/^c0115f87:	7c e3                	jl     c0115f6c <sum+0x16>$/;"	l
c0115f89	obj/kernel.asm	/^c0115f89:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0115f8c	obj/kernel.asm	/^c0115f8c:	c9                   	leave  $/;"	l
c0115f8d	obj/kernel.asm	/^c0115f8d:	c3                   	ret    $/;"	l
c0115f8e	obj/kernel.asm	/^c0115f8e <mpsearch1>:$/;"	l
c0115f8e	obj/kernel.asm	/^c0115f8e:	55                   	push   %ebp$/;"	l
c0115f8f	obj/kernel.asm	/^c0115f8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0115f91	obj/kernel.asm	/^c0115f91:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0115f94	obj/kernel.asm	/^c0115f94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0115f97	obj/kernel.asm	/^c0115f97:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115f9a	obj/kernel.asm	/^c0115f9a:	e8 8c ff ff ff       	call   c0115f2b <p2v>$/;"	l
c0115f9f	obj/kernel.asm	/^c0115f9f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0115fa2	obj/kernel.asm	/^c0115fa2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0115fa5	obj/kernel.asm	/^c0115fa5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115fa8	obj/kernel.asm	/^c0115fa8:	01 d0                	add    %edx,%eax$/;"	l
c0115faa	obj/kernel.asm	/^c0115faa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0115fad	obj/kernel.asm	/^c0115fad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0115fb0	obj/kernel.asm	/^c0115fb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0115fb3	obj/kernel.asm	/^c0115fb3:	eb 3f                	jmp    c0115ff4 <mpsearch1+0x66>$/;"	l
c0115fb5	obj/kernel.asm	/^c0115fb5:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c0115fbc	obj/kernel.asm	/^c0115fbc:	00 $/;"	l
c0115fbd	obj/kernel.asm	/^c0115fbd:	c7 44 24 04 20 b5 11 	movl   $0xc011b520,0x4(%esp)$/;"	l
c0115fc4	obj/kernel.asm	/^c0115fc4:	c0 $/;"	l
c0115fc5	obj/kernel.asm	/^c0115fc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115fc8	obj/kernel.asm	/^c0115fc8:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115fcb	obj/kernel.asm	/^c0115fcb:	e8 f1 07 00 00       	call   c01167c1 <memcmp>$/;"	l
c0115fd0	obj/kernel.asm	/^c0115fd0:	85 c0                	test   %eax,%eax$/;"	l
c0115fd2	obj/kernel.asm	/^c0115fd2:	75 1c                	jne    c0115ff0 <mpsearch1+0x62>$/;"	l
c0115fd4	obj/kernel.asm	/^c0115fd4:	c7 44 24 04 10 00 00 	movl   $0x10,0x4(%esp)$/;"	l
c0115fdb	obj/kernel.asm	/^c0115fdb:	00 $/;"	l
c0115fdc	obj/kernel.asm	/^c0115fdc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115fdf	obj/kernel.asm	/^c0115fdf:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0115fe2	obj/kernel.asm	/^c0115fe2:	e8 6f ff ff ff       	call   c0115f56 <sum>$/;"	l
c0115fe7	obj/kernel.asm	/^c0115fe7:	84 c0                	test   %al,%al$/;"	l
c0115fe9	obj/kernel.asm	/^c0115fe9:	75 05                	jne    c0115ff0 <mpsearch1+0x62>$/;"	l
c0115feb	obj/kernel.asm	/^c0115feb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115fee	obj/kernel.asm	/^c0115fee:	eb 11                	jmp    c0116001 <mpsearch1+0x73>$/;"	l
c0115ff0	obj/kernel.asm	/^c0115ff0:	83 45 f4 10          	addl   $0x10,-0xc(%ebp)$/;"	l
c0115ff4	obj/kernel.asm	/^c0115ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0115ff7	obj/kernel.asm	/^c0115ff7:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0115ffa	obj/kernel.asm	/^c0115ffa:	72 b9                	jb     c0115fb5 <mpsearch1+0x27>$/;"	l
c0115ffc	obj/kernel.asm	/^c0115ffc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0116001	obj/kernel.asm	/^c0116001:	c9                   	leave  $/;"	l
c0116002	obj/kernel.asm	/^c0116002:	c3                   	ret    $/;"	l
c0116003	obj/kernel.asm	/^c0116003 <mpsearch>:$/;"	l
c0116003	obj/kernel.asm	/^c0116003:	55                   	push   %ebp$/;"	l
c0116004	obj/kernel.asm	/^c0116004:	89 e5                	mov    %esp,%ebp$/;"	l
c0116006	obj/kernel.asm	/^c0116006:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0116009	obj/kernel.asm	/^c0116009:	c7 45 f4 00 04 00 c0 	movl   $0xc0000400,-0xc(%ebp)$/;"	l
c0116010	obj/kernel.asm	/^c0116010:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0116013	obj/kernel.asm	/^c0116013:	83 c0 0f             	add    $0xf,%eax$/;"	l
c0116016	obj/kernel.asm	/^c0116016:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116019	obj/kernel.asm	/^c0116019:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011601c	obj/kernel.asm	/^c011601c:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c011601f	obj/kernel.asm	/^c011601f:	89 c2                	mov    %eax,%edx$/;"	l
c0116021	obj/kernel.asm	/^c0116021:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0116024	obj/kernel.asm	/^c0116024:	83 c0 0e             	add    $0xe,%eax$/;"	l
c0116027	obj/kernel.asm	/^c0116027:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011602a	obj/kernel.asm	/^c011602a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011602d	obj/kernel.asm	/^c011602d:	09 d0                	or     %edx,%eax$/;"	l
c011602f	obj/kernel.asm	/^c011602f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0116032	obj/kernel.asm	/^c0116032:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116035	obj/kernel.asm	/^c0116035:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0116039	obj/kernel.asm	/^c0116039:	74 21                	je     c011605c <mpsearch+0x59>$/;"	l
c011603b	obj/kernel.asm	/^c011603b:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0116042	obj/kernel.asm	/^c0116042:	00 $/;"	l
c0116043	obj/kernel.asm	/^c0116043:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116046	obj/kernel.asm	/^c0116046:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116049	obj/kernel.asm	/^c0116049:	e8 40 ff ff ff       	call   c0115f8e <mpsearch1>$/;"	l
c011604e	obj/kernel.asm	/^c011604e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0116051	obj/kernel.asm	/^c0116051:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0116055	obj/kernel.asm	/^c0116055:	74 50                	je     c01160a7 <mpsearch+0xa4>$/;"	l
c0116057	obj/kernel.asm	/^c0116057:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011605a	obj/kernel.asm	/^c011605a:	eb 5f                	jmp    c01160bb <mpsearch+0xb8>$/;"	l
c011605c	obj/kernel.asm	/^c011605c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011605f	obj/kernel.asm	/^c011605f:	83 c0 14             	add    $0x14,%eax$/;"	l
c0116062	obj/kernel.asm	/^c0116062:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116065	obj/kernel.asm	/^c0116065:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0116068	obj/kernel.asm	/^c0116068:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c011606b	obj/kernel.asm	/^c011606b:	89 c2                	mov    %eax,%edx$/;"	l
c011606d	obj/kernel.asm	/^c011606d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0116070	obj/kernel.asm	/^c0116070:	83 c0 13             	add    $0x13,%eax$/;"	l
c0116073	obj/kernel.asm	/^c0116073:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116076	obj/kernel.asm	/^c0116076:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0116079	obj/kernel.asm	/^c0116079:	09 d0                	or     %edx,%eax$/;"	l
c011607b	obj/kernel.asm	/^c011607b:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c011607e	obj/kernel.asm	/^c011607e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116081	obj/kernel.asm	/^c0116081:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116084	obj/kernel.asm	/^c0116084:	2d 00 04 00 00       	sub    $0x400,%eax$/;"	l
c0116089	obj/kernel.asm	/^c0116089:	c7 44 24 04 00 04 00 	movl   $0x400,0x4(%esp)$/;"	l
c0116090	obj/kernel.asm	/^c0116090:	00 $/;"	l
c0116091	obj/kernel.asm	/^c0116091:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116094	obj/kernel.asm	/^c0116094:	e8 f5 fe ff ff       	call   c0115f8e <mpsearch1>$/;"	l
c0116099	obj/kernel.asm	/^c0116099:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011609c	obj/kernel.asm	/^c011609c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01160a0	obj/kernel.asm	/^c01160a0:	74 05                	je     c01160a7 <mpsearch+0xa4>$/;"	l
c01160a2	obj/kernel.asm	/^c01160a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01160a5	obj/kernel.asm	/^c01160a5:	eb 14                	jmp    c01160bb <mpsearch+0xb8>$/;"	l
c01160a7	obj/kernel.asm	/^c01160a7:	c7 44 24 04 00 00 01 	movl   $0x10000,0x4(%esp)$/;"	l
c01160ae	obj/kernel.asm	/^c01160ae:	00 $/;"	l
c01160af	obj/kernel.asm	/^c01160af:	c7 04 24 00 00 0f 00 	movl   $0xf0000,(%esp)$/;"	l
c01160b6	obj/kernel.asm	/^c01160b6:	e8 d3 fe ff ff       	call   c0115f8e <mpsearch1>$/;"	l
c01160bb	obj/kernel.asm	/^c01160bb:	c9                   	leave  $/;"	l
c01160bc	obj/kernel.asm	/^c01160bc:	c3                   	ret    $/;"	l
c01160bd	obj/kernel.asm	/^c01160bd <mpconfig>:$/;"	l
c01160bd	obj/kernel.asm	/^c01160bd:	55                   	push   %ebp$/;"	l
c01160be	obj/kernel.asm	/^c01160be:	89 e5                	mov    %esp,%ebp$/;"	l
c01160c0	obj/kernel.asm	/^c01160c0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01160c3	obj/kernel.asm	/^c01160c3:	e8 3b ff ff ff       	call   c0116003 <mpsearch>$/;"	l
c01160c8	obj/kernel.asm	/^c01160c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01160cb	obj/kernel.asm	/^c01160cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01160cf	obj/kernel.asm	/^c01160cf:	74 0a                	je     c01160db <mpconfig+0x1e>$/;"	l
c01160d1	obj/kernel.asm	/^c01160d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01160d4	obj/kernel.asm	/^c01160d4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01160d7	obj/kernel.asm	/^c01160d7:	85 c0                	test   %eax,%eax$/;"	l
c01160d9	obj/kernel.asm	/^c01160d9:	75 0a                	jne    c01160e5 <mpconfig+0x28>$/;"	l
c01160db	obj/kernel.asm	/^c01160db:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01160e0	obj/kernel.asm	/^c01160e0:	e9 83 00 00 00       	jmp    c0116168 <mpconfig+0xab>$/;"	l
c01160e5	obj/kernel.asm	/^c01160e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01160e8	obj/kernel.asm	/^c01160e8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01160eb	obj/kernel.asm	/^c01160eb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01160ee	obj/kernel.asm	/^c01160ee:	e8 38 fe ff ff       	call   c0115f2b <p2v>$/;"	l
c01160f3	obj/kernel.asm	/^c01160f3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01160f6	obj/kernel.asm	/^c01160f6:	c7 44 24 08 04 00 00 	movl   $0x4,0x8(%esp)$/;"	l
c01160fd	obj/kernel.asm	/^c01160fd:	00 $/;"	l
c01160fe	obj/kernel.asm	/^c01160fe:	c7 44 24 04 25 b5 11 	movl   $0xc011b525,0x4(%esp)$/;"	l
c0116105	obj/kernel.asm	/^c0116105:	c0 $/;"	l
c0116106	obj/kernel.asm	/^c0116106:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116109	obj/kernel.asm	/^c0116109:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011610c	obj/kernel.asm	/^c011610c:	e8 b0 06 00 00       	call   c01167c1 <memcmp>$/;"	l
c0116111	obj/kernel.asm	/^c0116111:	85 c0                	test   %eax,%eax$/;"	l
c0116113	obj/kernel.asm	/^c0116113:	74 07                	je     c011611c <mpconfig+0x5f>$/;"	l
c0116115	obj/kernel.asm	/^c0116115:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011611a	obj/kernel.asm	/^c011611a:	eb 4c                	jmp    c0116168 <mpconfig+0xab>$/;"	l
c011611c	obj/kernel.asm	/^c011611c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011611f	obj/kernel.asm	/^c011611f:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
c0116123	obj/kernel.asm	/^c0116123:	3c 01                	cmp    $0x1,%al$/;"	l
c0116125	obj/kernel.asm	/^c0116125:	74 12                	je     c0116139 <mpconfig+0x7c>$/;"	l
c0116127	obj/kernel.asm	/^c0116127:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011612a	obj/kernel.asm	/^c011612a:	0f b6 40 06          	movzbl 0x6(%eax),%eax$/;"	l
c011612e	obj/kernel.asm	/^c011612e:	3c 04                	cmp    $0x4,%al$/;"	l
c0116130	obj/kernel.asm	/^c0116130:	74 07                	je     c0116139 <mpconfig+0x7c>$/;"	l
c0116132	obj/kernel.asm	/^c0116132:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0116137	obj/kernel.asm	/^c0116137:	eb 2f                	jmp    c0116168 <mpconfig+0xab>$/;"	l
c0116139	obj/kernel.asm	/^c0116139:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011613c	obj/kernel.asm	/^c011613c:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0116140	obj/kernel.asm	/^c0116140:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0116143	obj/kernel.asm	/^c0116143:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116147	obj/kernel.asm	/^c0116147:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011614a	obj/kernel.asm	/^c011614a:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011614d	obj/kernel.asm	/^c011614d:	e8 04 fe ff ff       	call   c0115f56 <sum>$/;"	l
c0116152	obj/kernel.asm	/^c0116152:	84 c0                	test   %al,%al$/;"	l
c0116154	obj/kernel.asm	/^c0116154:	74 07                	je     c011615d <mpconfig+0xa0>$/;"	l
c0116156	obj/kernel.asm	/^c0116156:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011615b	obj/kernel.asm	/^c011615b:	eb 0b                	jmp    c0116168 <mpconfig+0xab>$/;"	l
c011615d	obj/kernel.asm	/^c011615d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116160	obj/kernel.asm	/^c0116160:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116163	obj/kernel.asm	/^c0116163:	89 10                	mov    %edx,(%eax)$/;"	l
c0116165	obj/kernel.asm	/^c0116165:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116168	obj/kernel.asm	/^c0116168:	c9                   	leave  $/;"	l
c0116169	obj/kernel.asm	/^c0116169:	c3                   	ret    $/;"	l
c011616a	obj/kernel.asm	/^c011616a <mpinit>:$/;"	l
c011616a	obj/kernel.asm	/^c011616a:	55                   	push   %ebp$/;"	l
c011616b	obj/kernel.asm	/^c011616b:	89 e5                	mov    %esp,%ebp$/;"	l
c011616d	obj/kernel.asm	/^c011616d:	83 ec 48             	sub    $0x48,%esp$/;"	l
c0116170	obj/kernel.asm	/^c0116170:	c7 05 48 b0 15 c0 80 	movl   $0xc015b080,0xc015b048$/;"	l
c0116177	obj/kernel.asm	/^c0116177:	b0 15 c0 $/;"	l
c011617a	obj/kernel.asm	/^c011617a:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c011617d	obj/kernel.asm	/^c011617d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116180	obj/kernel.asm	/^c0116180:	e8 38 ff ff ff       	call   c01160bd <mpconfig>$/;"	l
c0116185	obj/kernel.asm	/^c0116185:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116188	obj/kernel.asm	/^c0116188:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011618c	obj/kernel.asm	/^c011618c:	75 05                	jne    c0116193 <mpinit+0x29>$/;"	l
c011618e	obj/kernel.asm	/^c011618e:	e9 a5 01 00 00       	jmp    c0116338 <mpinit+0x1ce>$/;"	l
c0116193	obj/kernel.asm	/^c0116193:	c7 05 64 b0 15 c0 01 	movl   $0x1,0xc015b064$/;"	l
c011619a	obj/kernel.asm	/^c011619a:	00 00 00 $/;"	l
c011619d	obj/kernel.asm	/^c011619d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01161a0	obj/kernel.asm	/^c01161a0:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c01161a3	obj/kernel.asm	/^c01161a3:	a3 60 b6 15 c0       	mov    %eax,0xc015b660$/;"	l
c01161a8	obj/kernel.asm	/^c01161a8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01161ab	obj/kernel.asm	/^c01161ab:	83 c0 2c             	add    $0x2c,%eax$/;"	l
c01161ae	obj/kernel.asm	/^c01161ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01161b1	obj/kernel.asm	/^c01161b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01161b4	obj/kernel.asm	/^c01161b4:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01161b8	obj/kernel.asm	/^c01161b8:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01161bb	obj/kernel.asm	/^c01161bb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01161be	obj/kernel.asm	/^c01161be:	01 d0                	add    %edx,%eax$/;"	l
c01161c0	obj/kernel.asm	/^c01161c0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01161c3	obj/kernel.asm	/^c01161c3:	e9 f4 00 00 00       	jmp    c01162bc <mpinit+0x152>$/;"	l
c01161c8	obj/kernel.asm	/^c01161c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01161cb	obj/kernel.asm	/^c01161cb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01161ce	obj/kernel.asm	/^c01161ce:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01161d1	obj/kernel.asm	/^c01161d1:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01161d4	obj/kernel.asm	/^c01161d4:	0f 87 bf 00 00 00    	ja     c0116299 <mpinit+0x12f>$/;"	l
c01161da	obj/kernel.asm	/^c01161da:	8b 04 85 68 b5 11 c0 	mov    -0x3fee4a98(,%eax,4),%eax$/;"	l
c01161e1	obj/kernel.asm	/^c01161e1:	ff e0                	jmp    *%eax$/;"	l
c01161e3	obj/kernel.asm	/^c01161e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01161e6	obj/kernel.asm	/^c01161e6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01161e9	obj/kernel.asm	/^c01161e9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01161ec	obj/kernel.asm	/^c01161ec:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
c01161f0	obj/kernel.asm	/^c01161f0:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01161f3	obj/kernel.asm	/^c01161f3:	a1 64 b6 15 c0       	mov    0xc015b664,%eax$/;"	l
c01161f8	obj/kernel.asm	/^c01161f8:	39 c2                	cmp    %eax,%edx$/;"	l
c01161fa	obj/kernel.asm	/^c01161fa:	74 2d                	je     c0116229 <mpinit+0xbf>$/;"	l
c01161fc	obj/kernel.asm	/^c01161fc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01161ff	obj/kernel.asm	/^c01161ff:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
c0116203	obj/kernel.asm	/^c0116203:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0116206	obj/kernel.asm	/^c0116206:	a1 64 b6 15 c0       	mov    0xc015b664,%eax$/;"	l
c011620b	obj/kernel.asm	/^c011620b:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c011620f	obj/kernel.asm	/^c011620f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116213	obj/kernel.asm	/^c0116213:	c7 04 24 2a b5 11 c0 	movl   $0xc011b52a,(%esp)$/;"	l
c011621a	obj/kernel.asm	/^c011621a:	e8 c1 a8 fe ff       	call   c0100ae0 <cprintf>$/;"	l
c011621f	obj/kernel.asm	/^c011621f:	c7 05 64 b0 15 c0 00 	movl   $0x0,0xc015b064$/;"	l
c0116226	obj/kernel.asm	/^c0116226:	00 00 00 $/;"	l
c0116229	obj/kernel.asm	/^c0116229:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011622c	obj/kernel.asm	/^c011622c:	0f b6 40 03          	movzbl 0x3(%eax),%eax$/;"	l
c0116230	obj/kernel.asm	/^c0116230:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0116233	obj/kernel.asm	/^c0116233:	83 e0 02             	and    $0x2,%eax$/;"	l
c0116236	obj/kernel.asm	/^c0116236:	85 c0                	test   %eax,%eax$/;"	l
c0116238	obj/kernel.asm	/^c0116238:	74 15                	je     c011624f <mpinit+0xe5>$/;"	l
c011623a	obj/kernel.asm	/^c011623a:	a1 64 b6 15 c0       	mov    0xc015b664,%eax$/;"	l
c011623f	obj/kernel.asm	/^c011623f:	69 c0 bc 00 00 00    	imul   $0xbc,%eax,%eax$/;"	l
c0116245	obj/kernel.asm	/^c0116245:	05 80 b0 15 c0       	add    $0xc015b080,%eax$/;"	l
c011624a	obj/kernel.asm	/^c011624a:	a3 48 b0 15 c0       	mov    %eax,0xc015b048$/;"	l
c011624f	obj/kernel.asm	/^c011624f:	8b 15 64 b6 15 c0    	mov    0xc015b664,%edx$/;"	l
c0116255	obj/kernel.asm	/^c0116255:	a1 64 b6 15 c0       	mov    0xc015b664,%eax$/;"	l
c011625a	obj/kernel.asm	/^c011625a:	69 d2 bc 00 00 00    	imul   $0xbc,%edx,%edx$/;"	l
c0116260	obj/kernel.asm	/^c0116260:	81 c2 80 b0 15 c0    	add    $0xc015b080,%edx$/;"	l
c0116266	obj/kernel.asm	/^c0116266:	88 02                	mov    %al,(%edx)$/;"	l
c0116268	obj/kernel.asm	/^c0116268:	a1 64 b6 15 c0       	mov    0xc015b664,%eax$/;"	l
c011626d	obj/kernel.asm	/^c011626d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0116270	obj/kernel.asm	/^c0116270:	a3 64 b6 15 c0       	mov    %eax,0xc015b664$/;"	l
c0116275	obj/kernel.asm	/^c0116275:	83 45 f4 14          	addl   $0x14,-0xc(%ebp)$/;"	l
c0116279	obj/kernel.asm	/^c0116279:	eb 41                	jmp    c01162bc <mpinit+0x152>$/;"	l
c011627b	obj/kernel.asm	/^c011627b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011627e	obj/kernel.asm	/^c011627e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0116281	obj/kernel.asm	/^c0116281:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0116284	obj/kernel.asm	/^c0116284:	0f b6 40 01          	movzbl 0x1(%eax),%eax$/;"	l
c0116288	obj/kernel.asm	/^c0116288:	a2 60 b0 15 c0       	mov    %al,0xc015b060$/;"	l
c011628d	obj/kernel.asm	/^c011628d:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)$/;"	l
c0116291	obj/kernel.asm	/^c0116291:	eb 29                	jmp    c01162bc <mpinit+0x152>$/;"	l
c0116293	obj/kernel.asm	/^c0116293:	83 45 f4 08          	addl   $0x8,-0xc(%ebp)$/;"	l
c0116297	obj/kernel.asm	/^c0116297:	eb 23                	jmp    c01162bc <mpinit+0x152>$/;"	l
c0116299	obj/kernel.asm	/^c0116299:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011629c	obj/kernel.asm	/^c011629c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011629f	obj/kernel.asm	/^c011629f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01162a2	obj/kernel.asm	/^c01162a2:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01162a6	obj/kernel.asm	/^c01162a6:	c7 04 24 48 b5 11 c0 	movl   $0xc011b548,(%esp)$/;"	l
c01162ad	obj/kernel.asm	/^c01162ad:	e8 2e a8 fe ff       	call   c0100ae0 <cprintf>$/;"	l
c01162b2	obj/kernel.asm	/^c01162b2:	c7 05 64 b0 15 c0 00 	movl   $0x0,0xc015b064$/;"	l
c01162b9	obj/kernel.asm	/^c01162b9:	00 00 00 $/;"	l
c01162bc	obj/kernel.asm	/^c01162bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01162bf	obj/kernel.asm	/^c01162bf:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01162c2	obj/kernel.asm	/^c01162c2:	0f 82 00 ff ff ff    	jb     c01161c8 <mpinit+0x5e>$/;"	l
c01162c8	obj/kernel.asm	/^c01162c8:	a1 64 b0 15 c0       	mov    0xc015b064,%eax$/;"	l
c01162cd	obj/kernel.asm	/^c01162cd:	85 c0                	test   %eax,%eax$/;"	l
c01162cf	obj/kernel.asm	/^c01162cf:	75 1d                	jne    c01162ee <mpinit+0x184>$/;"	l
c01162d1	obj/kernel.asm	/^c01162d1:	c7 05 64 b6 15 c0 01 	movl   $0x1,0xc015b664$/;"	l
c01162d8	obj/kernel.asm	/^c01162d8:	00 00 00 $/;"	l
c01162db	obj/kernel.asm	/^c01162db:	c7 05 60 b6 15 c0 00 	movl   $0x0,0xc015b660$/;"	l
c01162e2	obj/kernel.asm	/^c01162e2:	00 00 00 $/;"	l
c01162e5	obj/kernel.asm	/^c01162e5:	c6 05 60 b0 15 c0 00 	movb   $0x0,0xc015b060$/;"	l
c01162ec	obj/kernel.asm	/^c01162ec:	eb 4a                	jmp    c0116338 <mpinit+0x1ce>$/;"	l
c01162ee	obj/kernel.asm	/^c01162ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01162f1	obj/kernel.asm	/^c01162f1:	0f b6 40 0c          	movzbl 0xc(%eax),%eax$/;"	l
c01162f5	obj/kernel.asm	/^c01162f5:	84 c0                	test   %al,%al$/;"	l
c01162f7	obj/kernel.asm	/^c01162f7:	74 3f                	je     c0116338 <mpinit+0x1ce>$/;"	l
c01162f9	obj/kernel.asm	/^c01162f9:	66 c7 45 e2 22 00    	movw   $0x22,-0x1e(%ebp)$/;"	l
c01162ff	obj/kernel.asm	/^c01162ff:	c6 45 e1 70          	movb   $0x70,-0x1f(%ebp)$/;"	l
c0116303	obj/kernel.asm	/^c0116303:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0116307	obj/kernel.asm	/^c0116307:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c011630b	obj/kernel.asm	/^c011630b:	ee                   	out    %al,(%dx)$/;"	l
c011630c	obj/kernel.asm	/^c011630c:	66 c7 45 de 23 00    	movw   $0x23,-0x22(%ebp)$/;"	l
c0116312	obj/kernel.asm	/^c0116312:	0f b7 45 de          	movzwl -0x22(%ebp),%eax$/;"	l
c0116316	obj/kernel.asm	/^c0116316:	89 c2                	mov    %eax,%edx$/;"	l
c0116318	obj/kernel.asm	/^c0116318:	ec                   	in     (%dx),%al$/;"	l
c0116319	obj/kernel.asm	/^c0116319:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c011631c	obj/kernel.asm	/^c011631c:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0116320	obj/kernel.asm	/^c0116320:	83 c8 01             	or     $0x1,%eax$/;"	l
c0116323	obj/kernel.asm	/^c0116323:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0116326	obj/kernel.asm	/^c0116326:	66 c7 45 da 23 00    	movw   $0x23,-0x26(%ebp)$/;"	l
c011632c	obj/kernel.asm	/^c011632c:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c011632f	obj/kernel.asm	/^c011632f:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0116333	obj/kernel.asm	/^c0116333:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0116337	obj/kernel.asm	/^c0116337:	ee                   	out    %al,(%dx)$/;"	l
c0116338	obj/kernel.asm	/^c0116338:	c9                   	leave  $/;"	l
c0116339	obj/kernel.asm	/^c0116339:	c3                   	ret    $/;"	l
c011633a	obj/kernel.asm	/^c011633a <strlen>:$/;"	l
c011633a	obj/kernel.asm	/^c011633a:	55                   	push   %ebp$/;"	l
c011633b	obj/kernel.asm	/^c011633b:	89 e5                	mov    %esp,%ebp$/;"	l
c011633d	obj/kernel.asm	/^c011633d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0116340	obj/kernel.asm	/^c0116340:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0116347	obj/kernel.asm	/^c0116347:	eb 04                	jmp    c011634d <strlen+0x13>$/;"	l
c0116349	obj/kernel.asm	/^c0116349:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c011634d	obj/kernel.asm	/^c011634d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116350	obj/kernel.asm	/^c0116350:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0116353	obj/kernel.asm	/^c0116353:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0116356	obj/kernel.asm	/^c0116356:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116359	obj/kernel.asm	/^c0116359:	84 c0                	test   %al,%al$/;"	l
c011635b	obj/kernel.asm	/^c011635b:	75 ec                	jne    c0116349 <strlen+0xf>$/;"	l
c011635d	obj/kernel.asm	/^c011635d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0116360	obj/kernel.asm	/^c0116360:	c9                   	leave  $/;"	l
c0116361	obj/kernel.asm	/^c0116361:	c3                   	ret    $/;"	l
c0116362	obj/kernel.asm	/^c0116362 <strnlen>:$/;"	l
c0116362	obj/kernel.asm	/^c0116362:	55                   	push   %ebp$/;"	l
c0116363	obj/kernel.asm	/^c0116363:	89 e5                	mov    %esp,%ebp$/;"	l
c0116365	obj/kernel.asm	/^c0116365:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0116368	obj/kernel.asm	/^c0116368:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c011636f	obj/kernel.asm	/^c011636f:	eb 04                	jmp    c0116375 <strnlen+0x13>$/;"	l
c0116371	obj/kernel.asm	/^c0116371:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0116375	obj/kernel.asm	/^c0116375:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0116378	obj/kernel.asm	/^c0116378:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c011637b	obj/kernel.asm	/^c011637b:	73 10                	jae    c011638d <strnlen+0x2b>$/;"	l
c011637d	obj/kernel.asm	/^c011637d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116380	obj/kernel.asm	/^c0116380:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0116383	obj/kernel.asm	/^c0116383:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0116386	obj/kernel.asm	/^c0116386:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116389	obj/kernel.asm	/^c0116389:	84 c0                	test   %al,%al$/;"	l
c011638b	obj/kernel.asm	/^c011638b:	75 e4                	jne    c0116371 <strnlen+0xf>$/;"	l
c011638d	obj/kernel.asm	/^c011638d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0116390	obj/kernel.asm	/^c0116390:	c9                   	leave  $/;"	l
c0116391	obj/kernel.asm	/^c0116391:	c3                   	ret    $/;"	l
c0116392	obj/kernel.asm	/^c0116392 <strcat>:$/;"	l
c0116392	obj/kernel.asm	/^c0116392:	55                   	push   %ebp$/;"	l
c0116393	obj/kernel.asm	/^c0116393:	89 e5                	mov    %esp,%ebp$/;"	l
c0116395	obj/kernel.asm	/^c0116395:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0116398	obj/kernel.asm	/^c0116398:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011639b	obj/kernel.asm	/^c011639b:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011639e	obj/kernel.asm	/^c011639e:	e8 97 ff ff ff       	call   c011633a <strlen>$/;"	l
c01163a3	obj/kernel.asm	/^c01163a3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01163a6	obj/kernel.asm	/^c01163a6:	01 c2                	add    %eax,%edx$/;"	l
c01163a8	obj/kernel.asm	/^c01163a8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01163ab	obj/kernel.asm	/^c01163ab:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01163af	obj/kernel.asm	/^c01163af:	89 14 24             	mov    %edx,(%esp)$/;"	l
c01163b2	obj/kernel.asm	/^c01163b2:	e8 02 00 00 00       	call   c01163b9 <strcpy>$/;"	l
c01163b7	obj/kernel.asm	/^c01163b7:	c9                   	leave  $/;"	l
c01163b8	obj/kernel.asm	/^c01163b8:	c3                   	ret    $/;"	l
c01163b9	obj/kernel.asm	/^c01163b9 <strcpy>:$/;"	l
c01163b9	obj/kernel.asm	/^c01163b9:	55                   	push   %ebp$/;"	l
c01163ba	obj/kernel.asm	/^c01163ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01163bc	obj/kernel.asm	/^c01163bc:	57                   	push   %edi$/;"	l
c01163bd	obj/kernel.asm	/^c01163bd:	56                   	push   %esi$/;"	l
c01163be	obj/kernel.asm	/^c01163be:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01163c1	obj/kernel.asm	/^c01163c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01163c4	obj/kernel.asm	/^c01163c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01163c7	obj/kernel.asm	/^c01163c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01163ca	obj/kernel.asm	/^c01163ca:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01163cd	obj/kernel.asm	/^c01163cd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01163d0	obj/kernel.asm	/^c01163d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01163d3	obj/kernel.asm	/^c01163d3:	89 d1                	mov    %edx,%ecx$/;"	l
c01163d5	obj/kernel.asm	/^c01163d5:	89 c2                	mov    %eax,%edx$/;"	l
c01163d7	obj/kernel.asm	/^c01163d7:	89 ce                	mov    %ecx,%esi$/;"	l
c01163d9	obj/kernel.asm	/^c01163d9:	89 d7                	mov    %edx,%edi$/;"	l
c01163db	obj/kernel.asm	/^c01163db:	ac                   	lods   %ds:(%esi),%al$/;"	l
c01163dc	obj/kernel.asm	/^c01163dc:	aa                   	stos   %al,%es:(%edi)$/;"	l
c01163dd	obj/kernel.asm	/^c01163dd:	84 c0                	test   %al,%al$/;"	l
c01163df	obj/kernel.asm	/^c01163df:	75 fa                	jne    c01163db <strcpy+0x22>$/;"	l
c01163e1	obj/kernel.asm	/^c01163e1:	89 fa                	mov    %edi,%edx$/;"	l
c01163e3	obj/kernel.asm	/^c01163e3:	89 f1                	mov    %esi,%ecx$/;"	l
c01163e5	obj/kernel.asm	/^c01163e5:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c01163e8	obj/kernel.asm	/^c01163e8:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01163eb	obj/kernel.asm	/^c01163eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01163ee	obj/kernel.asm	/^c01163ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01163f1	obj/kernel.asm	/^c01163f1:	83 c4 20             	add    $0x20,%esp$/;"	l
c01163f4	obj/kernel.asm	/^c01163f4:	5e                   	pop    %esi$/;"	l
c01163f5	obj/kernel.asm	/^c01163f5:	5f                   	pop    %edi$/;"	l
c01163f6	obj/kernel.asm	/^c01163f6:	5d                   	pop    %ebp$/;"	l
c01163f7	obj/kernel.asm	/^c01163f7:	c3                   	ret    $/;"	l
c01163f8	obj/kernel.asm	/^c01163f8 <strncpy>:$/;"	l
c01163f8	obj/kernel.asm	/^c01163f8:	55                   	push   %ebp$/;"	l
c01163f9	obj/kernel.asm	/^c01163f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01163fb	obj/kernel.asm	/^c01163fb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01163fe	obj/kernel.asm	/^c01163fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116401	obj/kernel.asm	/^c0116401:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0116404	obj/kernel.asm	/^c0116404:	eb 21                	jmp    c0116427 <strncpy+0x2f>$/;"	l
c0116406	obj/kernel.asm	/^c0116406:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116409	obj/kernel.asm	/^c0116409:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c011640c	obj/kernel.asm	/^c011640c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c011640f	obj/kernel.asm	/^c011640f:	88 10                	mov    %dl,(%eax)$/;"	l
c0116411	obj/kernel.asm	/^c0116411:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0116414	obj/kernel.asm	/^c0116414:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116417	obj/kernel.asm	/^c0116417:	84 c0                	test   %al,%al$/;"	l
c0116419	obj/kernel.asm	/^c0116419:	74 04                	je     c011641f <strncpy+0x27>$/;"	l
c011641b	obj/kernel.asm	/^c011641b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011641f	obj/kernel.asm	/^c011641f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0116423	obj/kernel.asm	/^c0116423:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0116427	obj/kernel.asm	/^c0116427:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011642b	obj/kernel.asm	/^c011642b:	75 d9                	jne    c0116406 <strncpy+0xe>$/;"	l
c011642d	obj/kernel.asm	/^c011642d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116430	obj/kernel.asm	/^c0116430:	c9                   	leave  $/;"	l
c0116431	obj/kernel.asm	/^c0116431:	c3                   	ret    $/;"	l
c0116432	obj/kernel.asm	/^c0116432 <strcmp>:$/;"	l
c0116432	obj/kernel.asm	/^c0116432:	55                   	push   %ebp$/;"	l
c0116433	obj/kernel.asm	/^c0116433:	89 e5                	mov    %esp,%ebp$/;"	l
c0116435	obj/kernel.asm	/^c0116435:	57                   	push   %edi$/;"	l
c0116436	obj/kernel.asm	/^c0116436:	56                   	push   %esi$/;"	l
c0116437	obj/kernel.asm	/^c0116437:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011643a	obj/kernel.asm	/^c011643a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011643d	obj/kernel.asm	/^c011643d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0116440	obj/kernel.asm	/^c0116440:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116443	obj/kernel.asm	/^c0116443:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116446	obj/kernel.asm	/^c0116446:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116449	obj/kernel.asm	/^c0116449:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011644c	obj/kernel.asm	/^c011644c:	89 d1                	mov    %edx,%ecx$/;"	l
c011644e	obj/kernel.asm	/^c011644e:	89 c2                	mov    %eax,%edx$/;"	l
c0116450	obj/kernel.asm	/^c0116450:	89 ce                	mov    %ecx,%esi$/;"	l
c0116452	obj/kernel.asm	/^c0116452:	89 d7                	mov    %edx,%edi$/;"	l
c0116454	obj/kernel.asm	/^c0116454:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0116455	obj/kernel.asm	/^c0116455:	ae                   	scas   %es:(%edi),%al$/;"	l
c0116456	obj/kernel.asm	/^c0116456:	75 08                	jne    c0116460 <strcmp+0x2e>$/;"	l
c0116458	obj/kernel.asm	/^c0116458:	84 c0                	test   %al,%al$/;"	l
c011645a	obj/kernel.asm	/^c011645a:	75 f8                	jne    c0116454 <strcmp+0x22>$/;"	l
c011645c	obj/kernel.asm	/^c011645c:	31 c0                	xor    %eax,%eax$/;"	l
c011645e	obj/kernel.asm	/^c011645e:	eb 04                	jmp    c0116464 <strcmp+0x32>$/;"	l
c0116460	obj/kernel.asm	/^c0116460:	19 c0                	sbb    %eax,%eax$/;"	l
c0116462	obj/kernel.asm	/^c0116462:	0c 01                	or     $0x1,%al$/;"	l
c0116464	obj/kernel.asm	/^c0116464:	89 fa                	mov    %edi,%edx$/;"	l
c0116466	obj/kernel.asm	/^c0116466:	89 f1                	mov    %esi,%ecx$/;"	l
c0116468	obj/kernel.asm	/^c0116468:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011646b	obj/kernel.asm	/^c011646b:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c011646e	obj/kernel.asm	/^c011646e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0116471	obj/kernel.asm	/^c0116471:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0116474	obj/kernel.asm	/^c0116474:	83 c4 20             	add    $0x20,%esp$/;"	l
c0116477	obj/kernel.asm	/^c0116477:	5e                   	pop    %esi$/;"	l
c0116478	obj/kernel.asm	/^c0116478:	5f                   	pop    %edi$/;"	l
c0116479	obj/kernel.asm	/^c0116479:	5d                   	pop    %ebp$/;"	l
c011647a	obj/kernel.asm	/^c011647a:	c3                   	ret    $/;"	l
c011647b	obj/kernel.asm	/^c011647b <strncmp>:$/;"	l
c011647b	obj/kernel.asm	/^c011647b:	55                   	push   %ebp$/;"	l
c011647c	obj/kernel.asm	/^c011647c:	89 e5                	mov    %esp,%ebp$/;"	l
c011647e	obj/kernel.asm	/^c011647e:	eb 0c                	jmp    c011648c <strncmp+0x11>$/;"	l
c0116480	obj/kernel.asm	/^c0116480:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0116484	obj/kernel.asm	/^c0116484:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0116488	obj/kernel.asm	/^c0116488:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011648c	obj/kernel.asm	/^c011648c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0116490	obj/kernel.asm	/^c0116490:	74 1a                	je     c01164ac <strncmp+0x31>$/;"	l
c0116492	obj/kernel.asm	/^c0116492:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116495	obj/kernel.asm	/^c0116495:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116498	obj/kernel.asm	/^c0116498:	84 c0                	test   %al,%al$/;"	l
c011649a	obj/kernel.asm	/^c011649a:	74 10                	je     c01164ac <strncmp+0x31>$/;"	l
c011649c	obj/kernel.asm	/^c011649c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011649f	obj/kernel.asm	/^c011649f:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01164a2	obj/kernel.asm	/^c01164a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01164a5	obj/kernel.asm	/^c01164a5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01164a8	obj/kernel.asm	/^c01164a8:	38 c2                	cmp    %al,%dl$/;"	l
c01164aa	obj/kernel.asm	/^c01164aa:	74 d4                	je     c0116480 <strncmp+0x5>$/;"	l
c01164ac	obj/kernel.asm	/^c01164ac:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01164b0	obj/kernel.asm	/^c01164b0:	74 18                	je     c01164ca <strncmp+0x4f>$/;"	l
c01164b2	obj/kernel.asm	/^c01164b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01164b5	obj/kernel.asm	/^c01164b5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01164b8	obj/kernel.asm	/^c01164b8:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01164bb	obj/kernel.asm	/^c01164bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01164be	obj/kernel.asm	/^c01164be:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01164c1	obj/kernel.asm	/^c01164c1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01164c4	obj/kernel.asm	/^c01164c4:	29 c2                	sub    %eax,%edx$/;"	l
c01164c6	obj/kernel.asm	/^c01164c6:	89 d0                	mov    %edx,%eax$/;"	l
c01164c8	obj/kernel.asm	/^c01164c8:	eb 05                	jmp    c01164cf <strncmp+0x54>$/;"	l
c01164ca	obj/kernel.asm	/^c01164ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01164cf	obj/kernel.asm	/^c01164cf:	5d                   	pop    %ebp$/;"	l
c01164d0	obj/kernel.asm	/^c01164d0:	c3                   	ret    $/;"	l
c01164d1	obj/kernel.asm	/^c01164d1 <strchr>:$/;"	l
c01164d1	obj/kernel.asm	/^c01164d1:	55                   	push   %ebp$/;"	l
c01164d2	obj/kernel.asm	/^c01164d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01164d4	obj/kernel.asm	/^c01164d4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01164d7	obj/kernel.asm	/^c01164d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01164da	obj/kernel.asm	/^c01164da:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c01164dd	obj/kernel.asm	/^c01164dd:	eb 14                	jmp    c01164f3 <strchr+0x22>$/;"	l
c01164df	obj/kernel.asm	/^c01164df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01164e2	obj/kernel.asm	/^c01164e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01164e5	obj/kernel.asm	/^c01164e5:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c01164e8	obj/kernel.asm	/^c01164e8:	75 05                	jne    c01164ef <strchr+0x1e>$/;"	l
c01164ea	obj/kernel.asm	/^c01164ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01164ed	obj/kernel.asm	/^c01164ed:	eb 13                	jmp    c0116502 <strchr+0x31>$/;"	l
c01164ef	obj/kernel.asm	/^c01164ef:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01164f3	obj/kernel.asm	/^c01164f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01164f6	obj/kernel.asm	/^c01164f6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01164f9	obj/kernel.asm	/^c01164f9:	84 c0                	test   %al,%al$/;"	l
c01164fb	obj/kernel.asm	/^c01164fb:	75 e2                	jne    c01164df <strchr+0xe>$/;"	l
c01164fd	obj/kernel.asm	/^c01164fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0116502	obj/kernel.asm	/^c0116502:	c9                   	leave  $/;"	l
c0116503	obj/kernel.asm	/^c0116503:	c3                   	ret    $/;"	l
c0116504	obj/kernel.asm	/^c0116504 <strfind>:$/;"	l
c0116504	obj/kernel.asm	/^c0116504:	55                   	push   %ebp$/;"	l
c0116505	obj/kernel.asm	/^c0116505:	89 e5                	mov    %esp,%ebp$/;"	l
c0116507	obj/kernel.asm	/^c0116507:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011650a	obj/kernel.asm	/^c011650a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011650d	obj/kernel.asm	/^c011650d:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0116510	obj/kernel.asm	/^c0116510:	eb 11                	jmp    c0116523 <strfind+0x1f>$/;"	l
c0116512	obj/kernel.asm	/^c0116512:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116515	obj/kernel.asm	/^c0116515:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116518	obj/kernel.asm	/^c0116518:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c011651b	obj/kernel.asm	/^c011651b:	75 02                	jne    c011651f <strfind+0x1b>$/;"	l
c011651d	obj/kernel.asm	/^c011651d:	eb 0e                	jmp    c011652d <strfind+0x29>$/;"	l
c011651f	obj/kernel.asm	/^c011651f:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0116523	obj/kernel.asm	/^c0116523:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116526	obj/kernel.asm	/^c0116526:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116529	obj/kernel.asm	/^c0116529:	84 c0                	test   %al,%al$/;"	l
c011652b	obj/kernel.asm	/^c011652b:	75 e5                	jne    c0116512 <strfind+0xe>$/;"	l
c011652d	obj/kernel.asm	/^c011652d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116530	obj/kernel.asm	/^c0116530:	c9                   	leave  $/;"	l
c0116531	obj/kernel.asm	/^c0116531:	c3                   	ret    $/;"	l
c0116532	obj/kernel.asm	/^c0116532 <strtol>:$/;"	l
c0116532	obj/kernel.asm	/^c0116532:	55                   	push   %ebp$/;"	l
c0116533	obj/kernel.asm	/^c0116533:	89 e5                	mov    %esp,%ebp$/;"	l
c0116535	obj/kernel.asm	/^c0116535:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0116538	obj/kernel.asm	/^c0116538:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c011653f	obj/kernel.asm	/^c011653f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0116546	obj/kernel.asm	/^c0116546:	eb 04                	jmp    c011654c <strtol+0x1a>$/;"	l
c0116548	obj/kernel.asm	/^c0116548:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011654c	obj/kernel.asm	/^c011654c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011654f	obj/kernel.asm	/^c011654f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116552	obj/kernel.asm	/^c0116552:	3c 20                	cmp    $0x20,%al$/;"	l
c0116554	obj/kernel.asm	/^c0116554:	74 f2                	je     c0116548 <strtol+0x16>$/;"	l
c0116556	obj/kernel.asm	/^c0116556:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116559	obj/kernel.asm	/^c0116559:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011655c	obj/kernel.asm	/^c011655c:	3c 09                	cmp    $0x9,%al$/;"	l
c011655e	obj/kernel.asm	/^c011655e:	74 e8                	je     c0116548 <strtol+0x16>$/;"	l
c0116560	obj/kernel.asm	/^c0116560:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116563	obj/kernel.asm	/^c0116563:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116566	obj/kernel.asm	/^c0116566:	3c 2b                	cmp    $0x2b,%al$/;"	l
c0116568	obj/kernel.asm	/^c0116568:	75 06                	jne    c0116570 <strtol+0x3e>$/;"	l
c011656a	obj/kernel.asm	/^c011656a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011656e	obj/kernel.asm	/^c011656e:	eb 15                	jmp    c0116585 <strtol+0x53>$/;"	l
c0116570	obj/kernel.asm	/^c0116570:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116573	obj/kernel.asm	/^c0116573:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116576	obj/kernel.asm	/^c0116576:	3c 2d                	cmp    $0x2d,%al$/;"	l
c0116578	obj/kernel.asm	/^c0116578:	75 0b                	jne    c0116585 <strtol+0x53>$/;"	l
c011657a	obj/kernel.asm	/^c011657a:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011657e	obj/kernel.asm	/^c011657e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c0116585	obj/kernel.asm	/^c0116585:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0116589	obj/kernel.asm	/^c0116589:	74 06                	je     c0116591 <strtol+0x5f>$/;"	l
c011658b	obj/kernel.asm	/^c011658b:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c011658f	obj/kernel.asm	/^c011658f:	75 24                	jne    c01165b5 <strtol+0x83>$/;"	l
c0116591	obj/kernel.asm	/^c0116591:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116594	obj/kernel.asm	/^c0116594:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116597	obj/kernel.asm	/^c0116597:	3c 30                	cmp    $0x30,%al$/;"	l
c0116599	obj/kernel.asm	/^c0116599:	75 1a                	jne    c01165b5 <strtol+0x83>$/;"	l
c011659b	obj/kernel.asm	/^c011659b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011659e	obj/kernel.asm	/^c011659e:	83 c0 01             	add    $0x1,%eax$/;"	l
c01165a1	obj/kernel.asm	/^c01165a1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01165a4	obj/kernel.asm	/^c01165a4:	3c 78                	cmp    $0x78,%al$/;"	l
c01165a6	obj/kernel.asm	/^c01165a6:	75 0d                	jne    c01165b5 <strtol+0x83>$/;"	l
c01165a8	obj/kernel.asm	/^c01165a8:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c01165ac	obj/kernel.asm	/^c01165ac:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c01165b3	obj/kernel.asm	/^c01165b3:	eb 2a                	jmp    c01165df <strtol+0xad>$/;"	l
c01165b5	obj/kernel.asm	/^c01165b5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01165b9	obj/kernel.asm	/^c01165b9:	75 17                	jne    c01165d2 <strtol+0xa0>$/;"	l
c01165bb	obj/kernel.asm	/^c01165bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01165be	obj/kernel.asm	/^c01165be:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01165c1	obj/kernel.asm	/^c01165c1:	3c 30                	cmp    $0x30,%al$/;"	l
c01165c3	obj/kernel.asm	/^c01165c3:	75 0d                	jne    c01165d2 <strtol+0xa0>$/;"	l
c01165c5	obj/kernel.asm	/^c01165c5:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01165c9	obj/kernel.asm	/^c01165c9:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c01165d0	obj/kernel.asm	/^c01165d0:	eb 0d                	jmp    c01165df <strtol+0xad>$/;"	l
c01165d2	obj/kernel.asm	/^c01165d2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01165d6	obj/kernel.asm	/^c01165d6:	75 07                	jne    c01165df <strtol+0xad>$/;"	l
c01165d8	obj/kernel.asm	/^c01165d8:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c01165df	obj/kernel.asm	/^c01165df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01165e2	obj/kernel.asm	/^c01165e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01165e5	obj/kernel.asm	/^c01165e5:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01165e7	obj/kernel.asm	/^c01165e7:	7e 1b                	jle    c0116604 <strtol+0xd2>$/;"	l
c01165e9	obj/kernel.asm	/^c01165e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01165ec	obj/kernel.asm	/^c01165ec:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01165ef	obj/kernel.asm	/^c01165ef:	3c 39                	cmp    $0x39,%al$/;"	l
c01165f1	obj/kernel.asm	/^c01165f1:	7f 11                	jg     c0116604 <strtol+0xd2>$/;"	l
c01165f3	obj/kernel.asm	/^c01165f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01165f6	obj/kernel.asm	/^c01165f6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01165f9	obj/kernel.asm	/^c01165f9:	0f be c0             	movsbl %al,%eax$/;"	l
c01165fc	obj/kernel.asm	/^c01165fc:	83 e8 30             	sub    $0x30,%eax$/;"	l
c01165ff	obj/kernel.asm	/^c01165ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0116602	obj/kernel.asm	/^c0116602:	eb 48                	jmp    c011664c <strtol+0x11a>$/;"	l
c0116604	obj/kernel.asm	/^c0116604:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116607	obj/kernel.asm	/^c0116607:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011660a	obj/kernel.asm	/^c011660a:	3c 60                	cmp    $0x60,%al$/;"	l
c011660c	obj/kernel.asm	/^c011660c:	7e 1b                	jle    c0116629 <strtol+0xf7>$/;"	l
c011660e	obj/kernel.asm	/^c011660e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116611	obj/kernel.asm	/^c0116611:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116614	obj/kernel.asm	/^c0116614:	3c 7a                	cmp    $0x7a,%al$/;"	l
c0116616	obj/kernel.asm	/^c0116616:	7f 11                	jg     c0116629 <strtol+0xf7>$/;"	l
c0116618	obj/kernel.asm	/^c0116618:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011661b	obj/kernel.asm	/^c011661b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011661e	obj/kernel.asm	/^c011661e:	0f be c0             	movsbl %al,%eax$/;"	l
c0116621	obj/kernel.asm	/^c0116621:	83 e8 57             	sub    $0x57,%eax$/;"	l
c0116624	obj/kernel.asm	/^c0116624:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0116627	obj/kernel.asm	/^c0116627:	eb 23                	jmp    c011664c <strtol+0x11a>$/;"	l
c0116629	obj/kernel.asm	/^c0116629:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011662c	obj/kernel.asm	/^c011662c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011662f	obj/kernel.asm	/^c011662f:	3c 40                	cmp    $0x40,%al$/;"	l
c0116631	obj/kernel.asm	/^c0116631:	7e 3d                	jle    c0116670 <strtol+0x13e>$/;"	l
c0116633	obj/kernel.asm	/^c0116633:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116636	obj/kernel.asm	/^c0116636:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116639	obj/kernel.asm	/^c0116639:	3c 5a                	cmp    $0x5a,%al$/;"	l
c011663b	obj/kernel.asm	/^c011663b:	7f 33                	jg     c0116670 <strtol+0x13e>$/;"	l
c011663d	obj/kernel.asm	/^c011663d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116640	obj/kernel.asm	/^c0116640:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116643	obj/kernel.asm	/^c0116643:	0f be c0             	movsbl %al,%eax$/;"	l
c0116646	obj/kernel.asm	/^c0116646:	83 e8 37             	sub    $0x37,%eax$/;"	l
c0116649	obj/kernel.asm	/^c0116649:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011664c	obj/kernel.asm	/^c011664c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011664f	obj/kernel.asm	/^c011664f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0116652	obj/kernel.asm	/^c0116652:	7c 02                	jl     c0116656 <strtol+0x124>$/;"	l
c0116654	obj/kernel.asm	/^c0116654:	eb 1a                	jmp    c0116670 <strtol+0x13e>$/;"	l
c0116656	obj/kernel.asm	/^c0116656:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011665a	obj/kernel.asm	/^c011665a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011665d	obj/kernel.asm	/^c011665d:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c0116661	obj/kernel.asm	/^c0116661:	89 c2                	mov    %eax,%edx$/;"	l
c0116663	obj/kernel.asm	/^c0116663:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0116666	obj/kernel.asm	/^c0116666:	01 d0                	add    %edx,%eax$/;"	l
c0116668	obj/kernel.asm	/^c0116668:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c011666b	obj/kernel.asm	/^c011666b:	e9 6f ff ff ff       	jmp    c01165df <strtol+0xad>$/;"	l
c0116670	obj/kernel.asm	/^c0116670:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0116674	obj/kernel.asm	/^c0116674:	74 08                	je     c011667e <strtol+0x14c>$/;"	l
c0116676	obj/kernel.asm	/^c0116676:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116679	obj/kernel.asm	/^c0116679:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011667c	obj/kernel.asm	/^c011667c:	89 10                	mov    %edx,(%eax)$/;"	l
c011667e	obj/kernel.asm	/^c011667e:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0116682	obj/kernel.asm	/^c0116682:	74 07                	je     c011668b <strtol+0x159>$/;"	l
c0116684	obj/kernel.asm	/^c0116684:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0116687	obj/kernel.asm	/^c0116687:	f7 d8                	neg    %eax$/;"	l
c0116689	obj/kernel.asm	/^c0116689:	eb 03                	jmp    c011668e <strtol+0x15c>$/;"	l
c011668b	obj/kernel.asm	/^c011668b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011668e	obj/kernel.asm	/^c011668e:	c9                   	leave  $/;"	l
c011668f	obj/kernel.asm	/^c011668f:	c3                   	ret    $/;"	l
c0116690	obj/kernel.asm	/^c0116690 <memset>:$/;"	l
c0116690	obj/kernel.asm	/^c0116690:	55                   	push   %ebp$/;"	l
c0116691	obj/kernel.asm	/^c0116691:	89 e5                	mov    %esp,%ebp$/;"	l
c0116693	obj/kernel.asm	/^c0116693:	57                   	push   %edi$/;"	l
c0116694	obj/kernel.asm	/^c0116694:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0116697	obj/kernel.asm	/^c0116697:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011669a	obj/kernel.asm	/^c011669a:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c011669d	obj/kernel.asm	/^c011669d:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c01166a1	obj/kernel.asm	/^c01166a1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01166a4	obj/kernel.asm	/^c01166a4:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01166a7	obj/kernel.asm	/^c01166a7:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01166aa	obj/kernel.asm	/^c01166aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01166ad	obj/kernel.asm	/^c01166ad:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01166b0	obj/kernel.asm	/^c01166b0:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c01166b3	obj/kernel.asm	/^c01166b3:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c01166b7	obj/kernel.asm	/^c01166b7:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01166ba	obj/kernel.asm	/^c01166ba:	89 d7                	mov    %edx,%edi$/;"	l
c01166bc	obj/kernel.asm	/^c01166bc:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c01166be	obj/kernel.asm	/^c01166be:	89 fa                	mov    %edi,%edx$/;"	l
c01166c0	obj/kernel.asm	/^c01166c0:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c01166c3	obj/kernel.asm	/^c01166c3:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01166c6	obj/kernel.asm	/^c01166c6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01166c9	obj/kernel.asm	/^c01166c9:	83 c4 24             	add    $0x24,%esp$/;"	l
c01166cc	obj/kernel.asm	/^c01166cc:	5f                   	pop    %edi$/;"	l
c01166cd	obj/kernel.asm	/^c01166cd:	5d                   	pop    %ebp$/;"	l
c01166ce	obj/kernel.asm	/^c01166ce:	c3                   	ret    $/;"	l
c01166cf	obj/kernel.asm	/^c01166cf <memmove>:$/;"	l
c01166cf	obj/kernel.asm	/^c01166cf:	55                   	push   %ebp$/;"	l
c01166d0	obj/kernel.asm	/^c01166d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01166d2	obj/kernel.asm	/^c01166d2:	57                   	push   %edi$/;"	l
c01166d3	obj/kernel.asm	/^c01166d3:	56                   	push   %esi$/;"	l
c01166d4	obj/kernel.asm	/^c01166d4:	53                   	push   %ebx$/;"	l
c01166d5	obj/kernel.asm	/^c01166d5:	83 ec 30             	sub    $0x30,%esp$/;"	l
c01166d8	obj/kernel.asm	/^c01166d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01166db	obj/kernel.asm	/^c01166db:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01166de	obj/kernel.asm	/^c01166de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01166e1	obj/kernel.asm	/^c01166e1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01166e4	obj/kernel.asm	/^c01166e4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01166e7	obj/kernel.asm	/^c01166e7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01166ea	obj/kernel.asm	/^c01166ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01166ed	obj/kernel.asm	/^c01166ed:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01166f0	obj/kernel.asm	/^c01166f0:	73 42                	jae    c0116734 <memmove+0x65>$/;"	l
c01166f2	obj/kernel.asm	/^c01166f2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01166f5	obj/kernel.asm	/^c01166f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01166f8	obj/kernel.asm	/^c01166f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01166fb	obj/kernel.asm	/^c01166fb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01166fe	obj/kernel.asm	/^c01166fe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116701	obj/kernel.asm	/^c0116701:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0116704	obj/kernel.asm	/^c0116704:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0116707	obj/kernel.asm	/^c0116707:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c011670a	obj/kernel.asm	/^c011670a:	89 c1                	mov    %eax,%ecx$/;"	l
c011670c	obj/kernel.asm	/^c011670c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011670f	obj/kernel.asm	/^c011670f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116712	obj/kernel.asm	/^c0116712:	89 d7                	mov    %edx,%edi$/;"	l
c0116714	obj/kernel.asm	/^c0116714:	89 c6                	mov    %eax,%esi$/;"	l
c0116716	obj/kernel.asm	/^c0116716:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0116718	obj/kernel.asm	/^c0116718:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c011671b	obj/kernel.asm	/^c011671b:	83 e1 03             	and    $0x3,%ecx$/;"	l
c011671e	obj/kernel.asm	/^c011671e:	74 02                	je     c0116722 <memmove+0x53>$/;"	l
c0116720	obj/kernel.asm	/^c0116720:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0116722	obj/kernel.asm	/^c0116722:	89 f0                	mov    %esi,%eax$/;"	l
c0116724	obj/kernel.asm	/^c0116724:	89 fa                	mov    %edi,%edx$/;"	l
c0116726	obj/kernel.asm	/^c0116726:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c0116729	obj/kernel.asm	/^c0116729:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c011672c	obj/kernel.asm	/^c011672c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011672f	obj/kernel.asm	/^c011672f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0116732	obj/kernel.asm	/^c0116732:	eb 36                	jmp    c011676a <memmove+0x9b>$/;"	l
c0116734	obj/kernel.asm	/^c0116734:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116737	obj/kernel.asm	/^c0116737:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011673a	obj/kernel.asm	/^c011673a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011673d	obj/kernel.asm	/^c011673d:	01 c2                	add    %eax,%edx$/;"	l
c011673f	obj/kernel.asm	/^c011673f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116742	obj/kernel.asm	/^c0116742:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c0116745	obj/kernel.asm	/^c0116745:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116748	obj/kernel.asm	/^c0116748:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c011674b	obj/kernel.asm	/^c011674b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011674e	obj/kernel.asm	/^c011674e:	89 c1                	mov    %eax,%ecx$/;"	l
c0116750	obj/kernel.asm	/^c0116750:	89 d8                	mov    %ebx,%eax$/;"	l
c0116752	obj/kernel.asm	/^c0116752:	89 d6                	mov    %edx,%esi$/;"	l
c0116754	obj/kernel.asm	/^c0116754:	89 c7                	mov    %eax,%edi$/;"	l
c0116756	obj/kernel.asm	/^c0116756:	fd                   	std    $/;"	l
c0116757	obj/kernel.asm	/^c0116757:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0116759	obj/kernel.asm	/^c0116759:	fc                   	cld    $/;"	l
c011675a	obj/kernel.asm	/^c011675a:	89 f8                	mov    %edi,%eax$/;"	l
c011675c	obj/kernel.asm	/^c011675c:	89 f2                	mov    %esi,%edx$/;"	l
c011675e	obj/kernel.asm	/^c011675e:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c0116761	obj/kernel.asm	/^c0116761:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0116764	obj/kernel.asm	/^c0116764:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0116767	obj/kernel.asm	/^c0116767:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011676a	obj/kernel.asm	/^c011676a:	83 c4 30             	add    $0x30,%esp$/;"	l
c011676d	obj/kernel.asm	/^c011676d:	5b                   	pop    %ebx$/;"	l
c011676e	obj/kernel.asm	/^c011676e:	5e                   	pop    %esi$/;"	l
c011676f	obj/kernel.asm	/^c011676f:	5f                   	pop    %edi$/;"	l
c0116770	obj/kernel.asm	/^c0116770:	5d                   	pop    %ebp$/;"	l
c0116771	obj/kernel.asm	/^c0116771:	c3                   	ret    $/;"	l
c0116772	obj/kernel.asm	/^c0116772 <memcpy>:$/;"	l
c0116772	obj/kernel.asm	/^c0116772:	55                   	push   %ebp$/;"	l
c0116773	obj/kernel.asm	/^c0116773:	89 e5                	mov    %esp,%ebp$/;"	l
c0116775	obj/kernel.asm	/^c0116775:	57                   	push   %edi$/;"	l
c0116776	obj/kernel.asm	/^c0116776:	56                   	push   %esi$/;"	l
c0116777	obj/kernel.asm	/^c0116777:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011677a	obj/kernel.asm	/^c011677a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011677d	obj/kernel.asm	/^c011677d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0116780	obj/kernel.asm	/^c0116780:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116783	obj/kernel.asm	/^c0116783:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116786	obj/kernel.asm	/^c0116786:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116789	obj/kernel.asm	/^c0116789:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011678c	obj/kernel.asm	/^c011678c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011678f	obj/kernel.asm	/^c011678f:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c0116792	obj/kernel.asm	/^c0116792:	89 c1                	mov    %eax,%ecx$/;"	l
c0116794	obj/kernel.asm	/^c0116794:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116797	obj/kernel.asm	/^c0116797:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011679a	obj/kernel.asm	/^c011679a:	89 d7                	mov    %edx,%edi$/;"	l
c011679c	obj/kernel.asm	/^c011679c:	89 c6                	mov    %eax,%esi$/;"	l
c011679e	obj/kernel.asm	/^c011679e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01167a0	obj/kernel.asm	/^c01167a0:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c01167a3	obj/kernel.asm	/^c01167a3:	83 e1 03             	and    $0x3,%ecx$/;"	l
c01167a6	obj/kernel.asm	/^c01167a6:	74 02                	je     c01167aa <memcpy+0x38>$/;"	l
c01167a8	obj/kernel.asm	/^c01167a8:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c01167aa	obj/kernel.asm	/^c01167aa:	89 f0                	mov    %esi,%eax$/;"	l
c01167ac	obj/kernel.asm	/^c01167ac:	89 fa                	mov    %edi,%edx$/;"	l
c01167ae	obj/kernel.asm	/^c01167ae:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c01167b1	obj/kernel.asm	/^c01167b1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01167b4	obj/kernel.asm	/^c01167b4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01167b7	obj/kernel.asm	/^c01167b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01167ba	obj/kernel.asm	/^c01167ba:	83 c4 20             	add    $0x20,%esp$/;"	l
c01167bd	obj/kernel.asm	/^c01167bd:	5e                   	pop    %esi$/;"	l
c01167be	obj/kernel.asm	/^c01167be:	5f                   	pop    %edi$/;"	l
c01167bf	obj/kernel.asm	/^c01167bf:	5d                   	pop    %ebp$/;"	l
c01167c0	obj/kernel.asm	/^c01167c0:	c3                   	ret    $/;"	l
c01167c1	obj/kernel.asm	/^c01167c1 <memcmp>:$/;"	l
c01167c1	obj/kernel.asm	/^c01167c1:	55                   	push   %ebp$/;"	l
c01167c2	obj/kernel.asm	/^c01167c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01167c4	obj/kernel.asm	/^c01167c4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01167c7	obj/kernel.asm	/^c01167c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01167ca	obj/kernel.asm	/^c01167ca:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01167cd	obj/kernel.asm	/^c01167cd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01167d0	obj/kernel.asm	/^c01167d0:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01167d3	obj/kernel.asm	/^c01167d3:	eb 30                	jmp    c0116805 <memcmp+0x44>$/;"	l
c01167d5	obj/kernel.asm	/^c01167d5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01167d8	obj/kernel.asm	/^c01167d8:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01167db	obj/kernel.asm	/^c01167db:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01167de	obj/kernel.asm	/^c01167de:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01167e1	obj/kernel.asm	/^c01167e1:	38 c2                	cmp    %al,%dl$/;"	l
c01167e3	obj/kernel.asm	/^c01167e3:	74 18                	je     c01167fd <memcmp+0x3c>$/;"	l
c01167e5	obj/kernel.asm	/^c01167e5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01167e8	obj/kernel.asm	/^c01167e8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01167eb	obj/kernel.asm	/^c01167eb:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01167ee	obj/kernel.asm	/^c01167ee:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01167f1	obj/kernel.asm	/^c01167f1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01167f4	obj/kernel.asm	/^c01167f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01167f7	obj/kernel.asm	/^c01167f7:	29 c2                	sub    %eax,%edx$/;"	l
c01167f9	obj/kernel.asm	/^c01167f9:	89 d0                	mov    %edx,%eax$/;"	l
c01167fb	obj/kernel.asm	/^c01167fb:	eb 1a                	jmp    c0116817 <memcmp+0x56>$/;"	l
c01167fd	obj/kernel.asm	/^c01167fd:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0116801	obj/kernel.asm	/^c0116801:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c0116805	obj/kernel.asm	/^c0116805:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116808	obj/kernel.asm	/^c0116808:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011680b	obj/kernel.asm	/^c011680b:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c011680e	obj/kernel.asm	/^c011680e:	85 c0                	test   %eax,%eax$/;"	l
c0116810	obj/kernel.asm	/^c0116810:	75 c3                	jne    c01167d5 <memcmp+0x14>$/;"	l
c0116812	obj/kernel.asm	/^c0116812:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0116817	obj/kernel.asm	/^c0116817:	c9                   	leave  $/;"	l
c0116818	obj/kernel.asm	/^c0116818:	c3                   	ret    $/;"	l
c0116819	obj/kernel.asm	/^c0116819 <printnum>:$/;"	l
c0116819	obj/kernel.asm	/^c0116819:	55                   	push   %ebp$/;"	l
c011681a	obj/kernel.asm	/^c011681a:	89 e5                	mov    %esp,%ebp$/;"	l
c011681c	obj/kernel.asm	/^c011681c:	83 ec 58             	sub    $0x58,%esp$/;"	l
c011681f	obj/kernel.asm	/^c011681f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0116822	obj/kernel.asm	/^c0116822:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0116825	obj/kernel.asm	/^c0116825:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0116828	obj/kernel.asm	/^c0116828:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c011682b	obj/kernel.asm	/^c011682b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011682e	obj/kernel.asm	/^c011682e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0116831	obj/kernel.asm	/^c0116831:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0116834	obj/kernel.asm	/^c0116834:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0116837	obj/kernel.asm	/^c0116837:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c011683a	obj/kernel.asm	/^c011683a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011683d	obj/kernel.asm	/^c011683d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116840	obj/kernel.asm	/^c0116840:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0116843	obj/kernel.asm	/^c0116843:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0116846	obj/kernel.asm	/^c0116846:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c0116849	obj/kernel.asm	/^c0116849:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011684c	obj/kernel.asm	/^c011684c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011684f	obj/kernel.asm	/^c011684f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0116853	obj/kernel.asm	/^c0116853:	74 1c                	je     c0116871 <printnum+0x58>$/;"	l
c0116855	obj/kernel.asm	/^c0116855:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116858	obj/kernel.asm	/^c0116858:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011685d	obj/kernel.asm	/^c011685d:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0116860	obj/kernel.asm	/^c0116860:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0116863	obj/kernel.asm	/^c0116863:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116866	obj/kernel.asm	/^c0116866:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011686b	obj/kernel.asm	/^c011686b:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c011686e	obj/kernel.asm	/^c011686e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116871	obj/kernel.asm	/^c0116871:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116874	obj/kernel.asm	/^c0116874:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116877	obj/kernel.asm	/^c0116877:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c011687a	obj/kernel.asm	/^c011687a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011687d	obj/kernel.asm	/^c011687d:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c0116880	obj/kernel.asm	/^c0116880:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116883	obj/kernel.asm	/^c0116883:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0116886	obj/kernel.asm	/^c0116886:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0116889	obj/kernel.asm	/^c0116889:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c011688c	obj/kernel.asm	/^c011688c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011688f	obj/kernel.asm	/^c011688f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0116892	obj/kernel.asm	/^c0116892:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0116895	obj/kernel.asm	/^c0116895:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011689a	obj/kernel.asm	/^c011689a:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c011689d	obj/kernel.asm	/^c011689d:	77 64                	ja     c0116903 <printnum+0xea>$/;"	l
c011689f	obj/kernel.asm	/^c011689f:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c01168a2	obj/kernel.asm	/^c01168a2:	72 05                	jb     c01168a9 <printnum+0x90>$/;"	l
c01168a4	obj/kernel.asm	/^c01168a4:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c01168a7	obj/kernel.asm	/^c01168a7:	77 5a                	ja     c0116903 <printnum+0xea>$/;"	l
c01168a9	obj/kernel.asm	/^c01168a9:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c01168ac	obj/kernel.asm	/^c01168ac:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01168af	obj/kernel.asm	/^c01168af:	8b 45 24             	mov    0x24(%ebp),%eax$/;"	l
c01168b2	obj/kernel.asm	/^c01168b2:	89 44 24 1c          	mov    %eax,0x1c(%esp)$/;"	l
c01168b6	obj/kernel.asm	/^c01168b6:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c01168ba	obj/kernel.asm	/^c01168ba:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01168bd	obj/kernel.asm	/^c01168bd:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c01168c1	obj/kernel.asm	/^c01168c1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01168c4	obj/kernel.asm	/^c01168c4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01168c7	obj/kernel.asm	/^c01168c7:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01168cb	obj/kernel.asm	/^c01168cb:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c01168cf	obj/kernel.asm	/^c01168cf:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01168d2	obj/kernel.asm	/^c01168d2:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01168d6	obj/kernel.asm	/^c01168d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01168d9	obj/kernel.asm	/^c01168d9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01168dd	obj/kernel.asm	/^c01168dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01168e0	obj/kernel.asm	/^c01168e0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01168e3	obj/kernel.asm	/^c01168e3:	e8 31 ff ff ff       	call   c0116819 <printnum>$/;"	l
c01168e8	obj/kernel.asm	/^c01168e8:	eb 23                	jmp    c011690d <printnum+0xf4>$/;"	l
c01168ea	obj/kernel.asm	/^c01168ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01168ed	obj/kernel.asm	/^c01168ed:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01168f1	obj/kernel.asm	/^c01168f1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01168f4	obj/kernel.asm	/^c01168f4:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01168f8	obj/kernel.asm	/^c01168f8:	8b 45 24             	mov    0x24(%ebp),%eax$/;"	l
c01168fb	obj/kernel.asm	/^c01168fb:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01168fe	obj/kernel.asm	/^c01168fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116901	obj/kernel.asm	/^c0116901:	ff d0                	call   *%eax$/;"	l
c0116903	obj/kernel.asm	/^c0116903:	83 6d 20 01          	subl   $0x1,0x20(%ebp)$/;"	l
c0116907	obj/kernel.asm	/^c0116907:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)$/;"	l
c011690b	obj/kernel.asm	/^c011690b:	7f dd                	jg     c01168ea <printnum+0xd1>$/;"	l
c011690d	obj/kernel.asm	/^c011690d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0116910	obj/kernel.asm	/^c0116910:	05 84 b7 11 c0       	add    $0xc011b784,%eax$/;"	l
c0116915	obj/kernel.asm	/^c0116915:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116918	obj/kernel.asm	/^c0116918:	0f be c0             	movsbl %al,%eax$/;"	l
c011691b	obj/kernel.asm	/^c011691b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011691e	obj/kernel.asm	/^c011691e:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0116922	obj/kernel.asm	/^c0116922:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0116925	obj/kernel.asm	/^c0116925:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0116929	obj/kernel.asm	/^c0116929:	89 04 24             	mov    %eax,(%esp)$/;"	l
c011692c	obj/kernel.asm	/^c011692c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011692f	obj/kernel.asm	/^c011692f:	ff d0                	call   *%eax$/;"	l
c0116931	obj/kernel.asm	/^c0116931:	c9                   	leave  $/;"	l
c0116932	obj/kernel.asm	/^c0116932:	c3                   	ret    $/;"	l
c0116933	obj/kernel.asm	/^c0116933 <getuint>:$/;"	l
c0116933	obj/kernel.asm	/^c0116933:	55                   	push   %ebp$/;"	l
c0116934	obj/kernel.asm	/^c0116934:	89 e5                	mov    %esp,%ebp$/;"	l
c0116936	obj/kernel.asm	/^c0116936:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c011693a	obj/kernel.asm	/^c011693a:	7e 14                	jle    c0116950 <getuint+0x1d>$/;"	l
c011693c	obj/kernel.asm	/^c011693c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011693f	obj/kernel.asm	/^c011693f:	8b 00                	mov    (%eax),%eax$/;"	l
c0116941	obj/kernel.asm	/^c0116941:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0116944	obj/kernel.asm	/^c0116944:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0116947	obj/kernel.asm	/^c0116947:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0116949	obj/kernel.asm	/^c0116949:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011694c	obj/kernel.asm	/^c011694c:	8b 00                	mov    (%eax),%eax$/;"	l
c011694e	obj/kernel.asm	/^c011694e:	eb 30                	jmp    c0116980 <getuint+0x4d>$/;"	l
c0116950	obj/kernel.asm	/^c0116950:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0116954	obj/kernel.asm	/^c0116954:	74 16                	je     c011696c <getuint+0x39>$/;"	l
c0116956	obj/kernel.asm	/^c0116956:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116959	obj/kernel.asm	/^c0116959:	8b 00                	mov    (%eax),%eax$/;"	l
c011695b	obj/kernel.asm	/^c011695b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c011695e	obj/kernel.asm	/^c011695e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0116961	obj/kernel.asm	/^c0116961:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0116963	obj/kernel.asm	/^c0116963:	8b 00                	mov    (%eax),%eax$/;"	l
c0116965	obj/kernel.asm	/^c0116965:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011696a	obj/kernel.asm	/^c011696a:	eb 14                	jmp    c0116980 <getuint+0x4d>$/;"	l
c011696c	obj/kernel.asm	/^c011696c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011696f	obj/kernel.asm	/^c011696f:	8b 00                	mov    (%eax),%eax$/;"	l
c0116971	obj/kernel.asm	/^c0116971:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0116974	obj/kernel.asm	/^c0116974:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0116977	obj/kernel.asm	/^c0116977:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0116979	obj/kernel.asm	/^c0116979:	8b 00                	mov    (%eax),%eax$/;"	l
c011697b	obj/kernel.asm	/^c011697b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0116980	obj/kernel.asm	/^c0116980:	5d                   	pop    %ebp$/;"	l
c0116981	obj/kernel.asm	/^c0116981:	c3                   	ret    $/;"	l
c0116982	obj/kernel.asm	/^c0116982 <getint>:$/;"	l
c0116982	obj/kernel.asm	/^c0116982:	55                   	push   %ebp$/;"	l
c0116983	obj/kernel.asm	/^c0116983:	89 e5                	mov    %esp,%ebp$/;"	l
c0116985	obj/kernel.asm	/^c0116985:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0116989	obj/kernel.asm	/^c0116989:	7e 14                	jle    c011699f <getint+0x1d>$/;"	l
c011698b	obj/kernel.asm	/^c011698b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011698e	obj/kernel.asm	/^c011698e:	8b 00                	mov    (%eax),%eax$/;"	l
c0116990	obj/kernel.asm	/^c0116990:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0116993	obj/kernel.asm	/^c0116993:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0116996	obj/kernel.asm	/^c0116996:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0116998	obj/kernel.asm	/^c0116998:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011699b	obj/kernel.asm	/^c011699b:	8b 00                	mov    (%eax),%eax$/;"	l
c011699d	obj/kernel.asm	/^c011699d:	eb 28                	jmp    c01169c7 <getint+0x45>$/;"	l
c011699f	obj/kernel.asm	/^c011699f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01169a3	obj/kernel.asm	/^c01169a3:	74 12                	je     c01169b7 <getint+0x35>$/;"	l
c01169a5	obj/kernel.asm	/^c01169a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01169a8	obj/kernel.asm	/^c01169a8:	8b 00                	mov    (%eax),%eax$/;"	l
c01169aa	obj/kernel.asm	/^c01169aa:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01169ad	obj/kernel.asm	/^c01169ad:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01169b0	obj/kernel.asm	/^c01169b0:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01169b2	obj/kernel.asm	/^c01169b2:	8b 00                	mov    (%eax),%eax$/;"	l
c01169b4	obj/kernel.asm	/^c01169b4:	99                   	cltd   $/;"	l
c01169b5	obj/kernel.asm	/^c01169b5:	eb 10                	jmp    c01169c7 <getint+0x45>$/;"	l
c01169b7	obj/kernel.asm	/^c01169b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01169ba	obj/kernel.asm	/^c01169ba:	8b 00                	mov    (%eax),%eax$/;"	l
c01169bc	obj/kernel.asm	/^c01169bc:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01169bf	obj/kernel.asm	/^c01169bf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01169c2	obj/kernel.asm	/^c01169c2:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01169c4	obj/kernel.asm	/^c01169c4:	8b 00                	mov    (%eax),%eax$/;"	l
c01169c6	obj/kernel.asm	/^c01169c6:	99                   	cltd   $/;"	l
c01169c7	obj/kernel.asm	/^c01169c7:	5d                   	pop    %ebp$/;"	l
c01169c8	obj/kernel.asm	/^c01169c8:	c3                   	ret    $/;"	l
c01169c9	obj/kernel.asm	/^c01169c9 <printfmt>:$/;"	l
c01169c9	obj/kernel.asm	/^c01169c9:	55                   	push   %ebp$/;"	l
c01169ca	obj/kernel.asm	/^c01169ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01169cc	obj/kernel.asm	/^c01169cc:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01169cf	obj/kernel.asm	/^c01169cf:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c01169d2	obj/kernel.asm	/^c01169d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01169d5	obj/kernel.asm	/^c01169d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01169d8	obj/kernel.asm	/^c01169d8:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c01169dc	obj/kernel.asm	/^c01169dc:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01169df	obj/kernel.asm	/^c01169df:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c01169e3	obj/kernel.asm	/^c01169e3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01169e6	obj/kernel.asm	/^c01169e6:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c01169ea	obj/kernel.asm	/^c01169ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01169ed	obj/kernel.asm	/^c01169ed:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c01169f1	obj/kernel.asm	/^c01169f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01169f4	obj/kernel.asm	/^c01169f4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c01169f7	obj/kernel.asm	/^c01169f7:	e8 02 00 00 00       	call   c01169fe <vprintfmt>$/;"	l
c01169fc	obj/kernel.asm	/^c01169fc:	c9                   	leave  $/;"	l
c01169fd	obj/kernel.asm	/^c01169fd:	c3                   	ret    $/;"	l
c01169fe	obj/kernel.asm	/^c01169fe <vprintfmt>:$/;"	l
c01169fe	obj/kernel.asm	/^c01169fe:	55                   	push   %ebp$/;"	l
c01169ff	obj/kernel.asm	/^c01169ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0116a01	obj/kernel.asm	/^c0116a01:	56                   	push   %esi$/;"	l
c0116a02	obj/kernel.asm	/^c0116a02:	53                   	push   %ebx$/;"	l
c0116a03	obj/kernel.asm	/^c0116a03:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0116a06	obj/kernel.asm	/^c0116a06:	eb 1f                	jmp    c0116a27 <vprintfmt+0x29>$/;"	l
c0116a08	obj/kernel.asm	/^c0116a08:	85 db                	test   %ebx,%ebx$/;"	l
c0116a0a	obj/kernel.asm	/^c0116a0a:	75 05                	jne    c0116a11 <vprintfmt+0x13>$/;"	l
c0116a0c	obj/kernel.asm	/^c0116a0c:	e9 33 04 00 00       	jmp    c0116e44 <vprintfmt+0x446>$/;"	l
c0116a11	obj/kernel.asm	/^c0116a11:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116a14	obj/kernel.asm	/^c0116a14:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116a18	obj/kernel.asm	/^c0116a18:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116a1b	obj/kernel.asm	/^c0116a1b:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116a1f	obj/kernel.asm	/^c0116a1f:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0116a22	obj/kernel.asm	/^c0116a22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116a25	obj/kernel.asm	/^c0116a25:	ff d0                	call   *%eax$/;"	l
c0116a27	obj/kernel.asm	/^c0116a27:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0116a2a	obj/kernel.asm	/^c0116a2a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0116a2d	obj/kernel.asm	/^c0116a2d:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0116a30	obj/kernel.asm	/^c0116a30:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116a33	obj/kernel.asm	/^c0116a33:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0116a36	obj/kernel.asm	/^c0116a36:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c0116a39	obj/kernel.asm	/^c0116a39:	75 cd                	jne    c0116a08 <vprintfmt+0xa>$/;"	l
c0116a3b	obj/kernel.asm	/^c0116a3b:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c0116a3f	obj/kernel.asm	/^c0116a3f:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0116a46	obj/kernel.asm	/^c0116a46:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0116a49	obj/kernel.asm	/^c0116a49:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0116a4c	obj/kernel.asm	/^c0116a4c:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0116a53	obj/kernel.asm	/^c0116a53:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0116a56	obj/kernel.asm	/^c0116a56:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0116a59	obj/kernel.asm	/^c0116a59:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0116a5c	obj/kernel.asm	/^c0116a5c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0116a5f	obj/kernel.asm	/^c0116a5f:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0116a62	obj/kernel.asm	/^c0116a62:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116a65	obj/kernel.asm	/^c0116a65:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0116a68	obj/kernel.asm	/^c0116a68:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c0116a6b	obj/kernel.asm	/^c0116a6b:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c0116a6e	obj/kernel.asm	/^c0116a6e:	0f 87 98 03 00 00    	ja     c0116e0c <vprintfmt+0x40e>$/;"	l
c0116a74	obj/kernel.asm	/^c0116a74:	8b 04 85 a8 b7 11 c0 	mov    -0x3fee4858(,%eax,4),%eax$/;"	l
c0116a7b	obj/kernel.asm	/^c0116a7b:	ff e0                	jmp    *%eax$/;"	l
c0116a7d	obj/kernel.asm	/^c0116a7d:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c0116a81	obj/kernel.asm	/^c0116a81:	eb d6                	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116a83	obj/kernel.asm	/^c0116a83:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c0116a87	obj/kernel.asm	/^c0116a87:	eb d0                	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116a89	obj/kernel.asm	/^c0116a89:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0116a90	obj/kernel.asm	/^c0116a90:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0116a93	obj/kernel.asm	/^c0116a93:	89 d0                	mov    %edx,%eax$/;"	l
c0116a95	obj/kernel.asm	/^c0116a95:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0116a98	obj/kernel.asm	/^c0116a98:	01 d0                	add    %edx,%eax$/;"	l
c0116a9a	obj/kernel.asm	/^c0116a9a:	01 c0                	add    %eax,%eax$/;"	l
c0116a9c	obj/kernel.asm	/^c0116a9c:	01 d8                	add    %ebx,%eax$/;"	l
c0116a9e	obj/kernel.asm	/^c0116a9e:	83 e8 30             	sub    $0x30,%eax$/;"	l
c0116aa1	obj/kernel.asm	/^c0116aa1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0116aa4	obj/kernel.asm	/^c0116aa4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0116aa7	obj/kernel.asm	/^c0116aa7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116aaa	obj/kernel.asm	/^c0116aaa:	0f be d8             	movsbl %al,%ebx$/;"	l
c0116aad	obj/kernel.asm	/^c0116aad:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c0116ab0	obj/kernel.asm	/^c0116ab0:	7e 0b                	jle    c0116abd <vprintfmt+0xbf>$/;"	l
c0116ab2	obj/kernel.asm	/^c0116ab2:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c0116ab5	obj/kernel.asm	/^c0116ab5:	7f 06                	jg     c0116abd <vprintfmt+0xbf>$/;"	l
c0116ab7	obj/kernel.asm	/^c0116ab7:	83 45 14 01          	addl   $0x1,0x14(%ebp)$/;"	l
c0116abb	obj/kernel.asm	/^c0116abb:	eb d3                	jmp    c0116a90 <vprintfmt+0x92>$/;"	l
c0116abd	obj/kernel.asm	/^c0116abd:	eb 33                	jmp    c0116af2 <vprintfmt+0xf4>$/;"	l
c0116abf	obj/kernel.asm	/^c0116abf:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0116ac2	obj/kernel.asm	/^c0116ac2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0116ac5	obj/kernel.asm	/^c0116ac5:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0116ac8	obj/kernel.asm	/^c0116ac8:	8b 00                	mov    (%eax),%eax$/;"	l
c0116aca	obj/kernel.asm	/^c0116aca:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0116acd	obj/kernel.asm	/^c0116acd:	eb 23                	jmp    c0116af2 <vprintfmt+0xf4>$/;"	l
c0116acf	obj/kernel.asm	/^c0116acf:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0116ad3	obj/kernel.asm	/^c0116ad3:	79 0c                	jns    c0116ae1 <vprintfmt+0xe3>$/;"	l
c0116ad5	obj/kernel.asm	/^c0116ad5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0116adc	obj/kernel.asm	/^c0116adc:	e9 78 ff ff ff       	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116ae1	obj/kernel.asm	/^c0116ae1:	e9 73 ff ff ff       	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116ae6	obj/kernel.asm	/^c0116ae6:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c0116aed	obj/kernel.asm	/^c0116aed:	e9 67 ff ff ff       	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116af2	obj/kernel.asm	/^c0116af2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0116af6	obj/kernel.asm	/^c0116af6:	79 12                	jns    c0116b0a <vprintfmt+0x10c>$/;"	l
c0116af8	obj/kernel.asm	/^c0116af8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0116afb	obj/kernel.asm	/^c0116afb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0116afe	obj/kernel.asm	/^c0116afe:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0116b05	obj/kernel.asm	/^c0116b05:	e9 4f ff ff ff       	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116b0a	obj/kernel.asm	/^c0116b0a:	e9 4a ff ff ff       	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116b0f	obj/kernel.asm	/^c0116b0f:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0116b13	obj/kernel.asm	/^c0116b13:	e9 41 ff ff ff       	jmp    c0116a59 <vprintfmt+0x5b>$/;"	l
c0116b18	obj/kernel.asm	/^c0116b18:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0116b1b	obj/kernel.asm	/^c0116b1b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0116b1e	obj/kernel.asm	/^c0116b1e:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0116b21	obj/kernel.asm	/^c0116b21:	8b 00                	mov    (%eax),%eax$/;"	l
c0116b23	obj/kernel.asm	/^c0116b23:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0116b26	obj/kernel.asm	/^c0116b26:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0116b2a	obj/kernel.asm	/^c0116b2a:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0116b2d	obj/kernel.asm	/^c0116b2d:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0116b31	obj/kernel.asm	/^c0116b31:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116b34	obj/kernel.asm	/^c0116b34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116b37	obj/kernel.asm	/^c0116b37:	ff d0                	call   *%eax$/;"	l
c0116b39	obj/kernel.asm	/^c0116b39:	e9 00 03 00 00       	jmp    c0116e3e <vprintfmt+0x440>$/;"	l
c0116b3e	obj/kernel.asm	/^c0116b3e:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0116b41	obj/kernel.asm	/^c0116b41:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0116b44	obj/kernel.asm	/^c0116b44:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0116b47	obj/kernel.asm	/^c0116b47:	8b 18                	mov    (%eax),%ebx$/;"	l
c0116b49	obj/kernel.asm	/^c0116b49:	85 db                	test   %ebx,%ebx$/;"	l
c0116b4b	obj/kernel.asm	/^c0116b4b:	79 02                	jns    c0116b4f <vprintfmt+0x151>$/;"	l
c0116b4d	obj/kernel.asm	/^c0116b4d:	f7 db                	neg    %ebx$/;"	l
c0116b4f	obj/kernel.asm	/^c0116b4f:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c0116b52	obj/kernel.asm	/^c0116b52:	7f 0b                	jg     c0116b5f <vprintfmt+0x161>$/;"	l
c0116b54	obj/kernel.asm	/^c0116b54:	8b 34 9d 20 b7 11 c0 	mov    -0x3fee48e0(,%ebx,4),%esi$/;"	l
c0116b5b	obj/kernel.asm	/^c0116b5b:	85 f6                	test   %esi,%esi$/;"	l
c0116b5d	obj/kernel.asm	/^c0116b5d:	75 2a                	jne    c0116b89 <vprintfmt+0x18b>$/;"	l
c0116b5f	obj/kernel.asm	/^c0116b5f:	89 5c 24 10          	mov    %ebx,0x10(%esp)$/;"	l
c0116b63	obj/kernel.asm	/^c0116b63:	c7 44 24 0c 95 b7 11 	movl   $0xc011b795,0xc(%esp)$/;"	l
c0116b6a	obj/kernel.asm	/^c0116b6a:	c0 $/;"	l
c0116b6b	obj/kernel.asm	/^c0116b6b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116b6e	obj/kernel.asm	/^c0116b6e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116b72	obj/kernel.asm	/^c0116b72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116b75	obj/kernel.asm	/^c0116b75:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116b79	obj/kernel.asm	/^c0116b79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116b7c	obj/kernel.asm	/^c0116b7c:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116b7f	obj/kernel.asm	/^c0116b7f:	e8 45 fe ff ff       	call   c01169c9 <printfmt>$/;"	l
c0116b84	obj/kernel.asm	/^c0116b84:	e9 b5 02 00 00       	jmp    c0116e3e <vprintfmt+0x440>$/;"	l
c0116b89	obj/kernel.asm	/^c0116b89:	89 74 24 10          	mov    %esi,0x10(%esp)$/;"	l
c0116b8d	obj/kernel.asm	/^c0116b8d:	c7 44 24 0c 9e b7 11 	movl   $0xc011b79e,0xc(%esp)$/;"	l
c0116b94	obj/kernel.asm	/^c0116b94:	c0 $/;"	l
c0116b95	obj/kernel.asm	/^c0116b95:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116b98	obj/kernel.asm	/^c0116b98:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116b9c	obj/kernel.asm	/^c0116b9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116b9f	obj/kernel.asm	/^c0116b9f:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116ba3	obj/kernel.asm	/^c0116ba3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116ba6	obj/kernel.asm	/^c0116ba6:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116ba9	obj/kernel.asm	/^c0116ba9:	e8 1b fe ff ff       	call   c01169c9 <printfmt>$/;"	l
c0116bae	obj/kernel.asm	/^c0116bae:	e9 8b 02 00 00       	jmp    c0116e3e <vprintfmt+0x440>$/;"	l
c0116bb3	obj/kernel.asm	/^c0116bb3:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0116bb6	obj/kernel.asm	/^c0116bb6:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0116bb9	obj/kernel.asm	/^c0116bb9:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0116bbc	obj/kernel.asm	/^c0116bbc:	8b 30                	mov    (%eax),%esi$/;"	l
c0116bbe	obj/kernel.asm	/^c0116bbe:	85 f6                	test   %esi,%esi$/;"	l
c0116bc0	obj/kernel.asm	/^c0116bc0:	75 05                	jne    c0116bc7 <vprintfmt+0x1c9>$/;"	l
c0116bc2	obj/kernel.asm	/^c0116bc2:	be a1 b7 11 c0       	mov    $0xc011b7a1,%esi$/;"	l
c0116bc7	obj/kernel.asm	/^c0116bc7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0116bcb	obj/kernel.asm	/^c0116bcb:	7e 45                	jle    c0116c12 <vprintfmt+0x214>$/;"	l
c0116bcd	obj/kernel.asm	/^c0116bcd:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c0116bd1	obj/kernel.asm	/^c0116bd1:	74 3f                	je     c0116c12 <vprintfmt+0x214>$/;"	l
c0116bd3	obj/kernel.asm	/^c0116bd3:	8b 5d e8             	mov    -0x18(%ebp),%ebx$/;"	l
c0116bd6	obj/kernel.asm	/^c0116bd6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0116bd9	obj/kernel.asm	/^c0116bd9:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116bdd	obj/kernel.asm	/^c0116bdd:	89 34 24             	mov    %esi,(%esp)$/;"	l
c0116be0	obj/kernel.asm	/^c0116be0:	e8 7d f7 ff ff       	call   c0116362 <strnlen>$/;"	l
c0116be5	obj/kernel.asm	/^c0116be5:	29 c3                	sub    %eax,%ebx$/;"	l
c0116be7	obj/kernel.asm	/^c0116be7:	89 d8                	mov    %ebx,%eax$/;"	l
c0116be9	obj/kernel.asm	/^c0116be9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0116bec	obj/kernel.asm	/^c0116bec:	eb 1e                	jmp    c0116c0c <vprintfmt+0x20e>$/;"	l
c0116bee	obj/kernel.asm	/^c0116bee:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c0116bf2	obj/kernel.asm	/^c0116bf2:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0116bf5	obj/kernel.asm	/^c0116bf5:	89 54 24 08          	mov    %edx,0x8(%esp)$/;"	l
c0116bf9	obj/kernel.asm	/^c0116bf9:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0116bfc	obj/kernel.asm	/^c0116bfc:	89 54 24 04          	mov    %edx,0x4(%esp)$/;"	l
c0116c00	obj/kernel.asm	/^c0116c00:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116c03	obj/kernel.asm	/^c0116c03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116c06	obj/kernel.asm	/^c0116c06:	ff d0                	call   *%eax$/;"	l
c0116c08	obj/kernel.asm	/^c0116c08:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0116c0c	obj/kernel.asm	/^c0116c0c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0116c10	obj/kernel.asm	/^c0116c10:	7f dc                	jg     c0116bee <vprintfmt+0x1f0>$/;"	l
c0116c12	obj/kernel.asm	/^c0116c12:	eb 46                	jmp    c0116c5a <vprintfmt+0x25c>$/;"	l
c0116c14	obj/kernel.asm	/^c0116c14:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0116c18	obj/kernel.asm	/^c0116c18:	74 26                	je     c0116c40 <vprintfmt+0x242>$/;"	l
c0116c1a	obj/kernel.asm	/^c0116c1a:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c0116c1d	obj/kernel.asm	/^c0116c1d:	7e 05                	jle    c0116c24 <vprintfmt+0x226>$/;"	l
c0116c1f	obj/kernel.asm	/^c0116c1f:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c0116c22	obj/kernel.asm	/^c0116c22:	7e 1c                	jle    c0116c40 <vprintfmt+0x242>$/;"	l
c0116c24	obj/kernel.asm	/^c0116c24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116c27	obj/kernel.asm	/^c0116c27:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116c2b	obj/kernel.asm	/^c0116c2b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116c2e	obj/kernel.asm	/^c0116c2e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116c32	obj/kernel.asm	/^c0116c32:	c7 04 24 3f 00 00 00 	movl   $0x3f,(%esp)$/;"	l
c0116c39	obj/kernel.asm	/^c0116c39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116c3c	obj/kernel.asm	/^c0116c3c:	ff d0                	call   *%eax$/;"	l
c0116c3e	obj/kernel.asm	/^c0116c3e:	eb 16                	jmp    c0116c56 <vprintfmt+0x258>$/;"	l
c0116c40	obj/kernel.asm	/^c0116c40:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116c43	obj/kernel.asm	/^c0116c43:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116c47	obj/kernel.asm	/^c0116c47:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116c4a	obj/kernel.asm	/^c0116c4a:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116c4e	obj/kernel.asm	/^c0116c4e:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0116c51	obj/kernel.asm	/^c0116c51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116c54	obj/kernel.asm	/^c0116c54:	ff d0                	call   *%eax$/;"	l
c0116c56	obj/kernel.asm	/^c0116c56:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0116c5a	obj/kernel.asm	/^c0116c5a:	89 f0                	mov    %esi,%eax$/;"	l
c0116c5c	obj/kernel.asm	/^c0116c5c:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c0116c5f	obj/kernel.asm	/^c0116c5f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116c62	obj/kernel.asm	/^c0116c62:	0f be d8             	movsbl %al,%ebx$/;"	l
c0116c65	obj/kernel.asm	/^c0116c65:	85 db                	test   %ebx,%ebx$/;"	l
c0116c67	obj/kernel.asm	/^c0116c67:	74 10                	je     c0116c79 <vprintfmt+0x27b>$/;"	l
c0116c69	obj/kernel.asm	/^c0116c69:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0116c6d	obj/kernel.asm	/^c0116c6d:	78 a5                	js     c0116c14 <vprintfmt+0x216>$/;"	l
c0116c6f	obj/kernel.asm	/^c0116c6f:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c0116c73	obj/kernel.asm	/^c0116c73:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0116c77	obj/kernel.asm	/^c0116c77:	79 9b                	jns    c0116c14 <vprintfmt+0x216>$/;"	l
c0116c79	obj/kernel.asm	/^c0116c79:	eb 1e                	jmp    c0116c99 <vprintfmt+0x29b>$/;"	l
c0116c7b	obj/kernel.asm	/^c0116c7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116c7e	obj/kernel.asm	/^c0116c7e:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116c82	obj/kernel.asm	/^c0116c82:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116c85	obj/kernel.asm	/^c0116c85:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116c89	obj/kernel.asm	/^c0116c89:	c7 04 24 20 00 00 00 	movl   $0x20,(%esp)$/;"	l
c0116c90	obj/kernel.asm	/^c0116c90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116c93	obj/kernel.asm	/^c0116c93:	ff d0                	call   *%eax$/;"	l
c0116c95	obj/kernel.asm	/^c0116c95:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0116c99	obj/kernel.asm	/^c0116c99:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0116c9d	obj/kernel.asm	/^c0116c9d:	7f dc                	jg     c0116c7b <vprintfmt+0x27d>$/;"	l
c0116c9f	obj/kernel.asm	/^c0116c9f:	e9 9a 01 00 00       	jmp    c0116e3e <vprintfmt+0x440>$/;"	l
c0116ca4	obj/kernel.asm	/^c0116ca4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116ca7	obj/kernel.asm	/^c0116ca7:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116cab	obj/kernel.asm	/^c0116cab:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0116cae	obj/kernel.asm	/^c0116cae:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116cb1	obj/kernel.asm	/^c0116cb1:	e8 cc fc ff ff       	call   c0116982 <getint>$/;"	l
c0116cb6	obj/kernel.asm	/^c0116cb6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116cb9	obj/kernel.asm	/^c0116cb9:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0116cbc	obj/kernel.asm	/^c0116cbc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116cbf	obj/kernel.asm	/^c0116cbf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116cc2	obj/kernel.asm	/^c0116cc2:	85 d2                	test   %edx,%edx$/;"	l
c0116cc4	obj/kernel.asm	/^c0116cc4:	79 2d                	jns    c0116cf3 <vprintfmt+0x2f5>$/;"	l
c0116cc6	obj/kernel.asm	/^c0116cc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116cc9	obj/kernel.asm	/^c0116cc9:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116ccd	obj/kernel.asm	/^c0116ccd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116cd0	obj/kernel.asm	/^c0116cd0:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116cd4	obj/kernel.asm	/^c0116cd4:	c7 04 24 2d 00 00 00 	movl   $0x2d,(%esp)$/;"	l
c0116cdb	obj/kernel.asm	/^c0116cdb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116cde	obj/kernel.asm	/^c0116cde:	ff d0                	call   *%eax$/;"	l
c0116ce0	obj/kernel.asm	/^c0116ce0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116ce3	obj/kernel.asm	/^c0116ce3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116ce6	obj/kernel.asm	/^c0116ce6:	f7 d8                	neg    %eax$/;"	l
c0116ce8	obj/kernel.asm	/^c0116ce8:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0116ceb	obj/kernel.asm	/^c0116ceb:	f7 da                	neg    %edx$/;"	l
c0116ced	obj/kernel.asm	/^c0116ced:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116cf0	obj/kernel.asm	/^c0116cf0:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0116cf3	obj/kernel.asm	/^c0116cf3:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0116cfa	obj/kernel.asm	/^c0116cfa:	e9 b6 00 00 00       	jmp    c0116db5 <vprintfmt+0x3b7>$/;"	l
c0116cff	obj/kernel.asm	/^c0116cff:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116d02	obj/kernel.asm	/^c0116d02:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116d06	obj/kernel.asm	/^c0116d06:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0116d09	obj/kernel.asm	/^c0116d09:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116d0c	obj/kernel.asm	/^c0116d0c:	e8 22 fc ff ff       	call   c0116933 <getuint>$/;"	l
c0116d11	obj/kernel.asm	/^c0116d11:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116d14	obj/kernel.asm	/^c0116d14:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0116d17	obj/kernel.asm	/^c0116d17:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0116d1e	obj/kernel.asm	/^c0116d1e:	e9 92 00 00 00       	jmp    c0116db5 <vprintfmt+0x3b7>$/;"	l
c0116d23	obj/kernel.asm	/^c0116d23:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116d26	obj/kernel.asm	/^c0116d26:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116d2a	obj/kernel.asm	/^c0116d2a:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0116d2d	obj/kernel.asm	/^c0116d2d:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116d30	obj/kernel.asm	/^c0116d30:	e8 fe fb ff ff       	call   c0116933 <getuint>$/;"	l
c0116d35	obj/kernel.asm	/^c0116d35:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116d38	obj/kernel.asm	/^c0116d38:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0116d3b	obj/kernel.asm	/^c0116d3b:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c0116d42	obj/kernel.asm	/^c0116d42:	eb 71                	jmp    c0116db5 <vprintfmt+0x3b7>$/;"	l
c0116d44	obj/kernel.asm	/^c0116d44:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116d47	obj/kernel.asm	/^c0116d47:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116d4b	obj/kernel.asm	/^c0116d4b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116d4e	obj/kernel.asm	/^c0116d4e:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116d52	obj/kernel.asm	/^c0116d52:	c7 04 24 30 00 00 00 	movl   $0x30,(%esp)$/;"	l
c0116d59	obj/kernel.asm	/^c0116d59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116d5c	obj/kernel.asm	/^c0116d5c:	ff d0                	call   *%eax$/;"	l
c0116d5e	obj/kernel.asm	/^c0116d5e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116d61	obj/kernel.asm	/^c0116d61:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116d65	obj/kernel.asm	/^c0116d65:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116d68	obj/kernel.asm	/^c0116d68:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116d6c	obj/kernel.asm	/^c0116d6c:	c7 04 24 78 00 00 00 	movl   $0x78,(%esp)$/;"	l
c0116d73	obj/kernel.asm	/^c0116d73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116d76	obj/kernel.asm	/^c0116d76:	ff d0                	call   *%eax$/;"	l
c0116d78	obj/kernel.asm	/^c0116d78:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0116d7b	obj/kernel.asm	/^c0116d7b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0116d7e	obj/kernel.asm	/^c0116d7e:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0116d81	obj/kernel.asm	/^c0116d81:	8b 00                	mov    (%eax),%eax$/;"	l
c0116d83	obj/kernel.asm	/^c0116d83:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116d86	obj/kernel.asm	/^c0116d86:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0116d8d	obj/kernel.asm	/^c0116d8d:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0116d94	obj/kernel.asm	/^c0116d94:	eb 1f                	jmp    c0116db5 <vprintfmt+0x3b7>$/;"	l
c0116d96	obj/kernel.asm	/^c0116d96:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116d99	obj/kernel.asm	/^c0116d99:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116d9d	obj/kernel.asm	/^c0116d9d:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0116da0	obj/kernel.asm	/^c0116da0:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116da3	obj/kernel.asm	/^c0116da3:	e8 8b fb ff ff       	call   c0116933 <getuint>$/;"	l
c0116da8	obj/kernel.asm	/^c0116da8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116dab	obj/kernel.asm	/^c0116dab:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0116dae	obj/kernel.asm	/^c0116dae:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0116db5	obj/kernel.asm	/^c0116db5:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c0116db9	obj/kernel.asm	/^c0116db9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0116dbc	obj/kernel.asm	/^c0116dbc:	89 54 24 1c          	mov    %edx,0x1c(%esp)$/;"	l
c0116dc0	obj/kernel.asm	/^c0116dc0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0116dc3	obj/kernel.asm	/^c0116dc3:	89 54 24 18          	mov    %edx,0x18(%esp)$/;"	l
c0116dc7	obj/kernel.asm	/^c0116dc7:	89 44 24 14          	mov    %eax,0x14(%esp)$/;"	l
c0116dcb	obj/kernel.asm	/^c0116dcb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116dce	obj/kernel.asm	/^c0116dce:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0116dd1	obj/kernel.asm	/^c0116dd1:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0116dd5	obj/kernel.asm	/^c0116dd5:	89 54 24 10          	mov    %edx,0x10(%esp)$/;"	l
c0116dd9	obj/kernel.asm	/^c0116dd9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116ddc	obj/kernel.asm	/^c0116ddc:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116de0	obj/kernel.asm	/^c0116de0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116de3	obj/kernel.asm	/^c0116de3:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116de7	obj/kernel.asm	/^c0116de7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116dea	obj/kernel.asm	/^c0116dea:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116ded	obj/kernel.asm	/^c0116ded:	e8 27 fa ff ff       	call   c0116819 <printnum>$/;"	l
c0116df2	obj/kernel.asm	/^c0116df2:	eb 4a                	jmp    c0116e3e <vprintfmt+0x440>$/;"	l
c0116df4	obj/kernel.asm	/^c0116df4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116df7	obj/kernel.asm	/^c0116df7:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116dfb	obj/kernel.asm	/^c0116dfb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116dfe	obj/kernel.asm	/^c0116dfe:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116e02	obj/kernel.asm	/^c0116e02:	89 1c 24             	mov    %ebx,(%esp)$/;"	l
c0116e05	obj/kernel.asm	/^c0116e05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116e08	obj/kernel.asm	/^c0116e08:	ff d0                	call   *%eax$/;"	l
c0116e0a	obj/kernel.asm	/^c0116e0a:	eb 32                	jmp    c0116e3e <vprintfmt+0x440>$/;"	l
c0116e0c	obj/kernel.asm	/^c0116e0c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e0f	obj/kernel.asm	/^c0116e0f:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116e13	obj/kernel.asm	/^c0116e13:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116e16	obj/kernel.asm	/^c0116e16:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116e1a	obj/kernel.asm	/^c0116e1a:	c7 04 24 25 00 00 00 	movl   $0x25,(%esp)$/;"	l
c0116e21	obj/kernel.asm	/^c0116e21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116e24	obj/kernel.asm	/^c0116e24:	ff d0                	call   *%eax$/;"	l
c0116e26	obj/kernel.asm	/^c0116e26:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0116e2a	obj/kernel.asm	/^c0116e2a:	eb 04                	jmp    c0116e30 <vprintfmt+0x432>$/;"	l
c0116e2c	obj/kernel.asm	/^c0116e2c:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0116e30	obj/kernel.asm	/^c0116e30:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0116e33	obj/kernel.asm	/^c0116e33:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0116e36	obj/kernel.asm	/^c0116e36:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0116e39	obj/kernel.asm	/^c0116e39:	3c 25                	cmp    $0x25,%al$/;"	l
c0116e3b	obj/kernel.asm	/^c0116e3b:	75 ef                	jne    c0116e2c <vprintfmt+0x42e>$/;"	l
c0116e3d	obj/kernel.asm	/^c0116e3d:	90                   	nop$/;"	l
c0116e3e	obj/kernel.asm	/^c0116e3e:	90                   	nop$/;"	l
c0116e3f	obj/kernel.asm	/^c0116e3f:	e9 e3 fb ff ff       	jmp    c0116a27 <vprintfmt+0x29>$/;"	l
c0116e44	obj/kernel.asm	/^c0116e44:	83 c4 40             	add    $0x40,%esp$/;"	l
c0116e47	obj/kernel.asm	/^c0116e47:	5b                   	pop    %ebx$/;"	l
c0116e48	obj/kernel.asm	/^c0116e48:	5e                   	pop    %esi$/;"	l
c0116e49	obj/kernel.asm	/^c0116e49:	5d                   	pop    %ebp$/;"	l
c0116e4a	obj/kernel.asm	/^c0116e4a:	c3                   	ret    $/;"	l
c0116e4b	obj/kernel.asm	/^c0116e4b <sprintputch>:$/;"	l
c0116e4b	obj/kernel.asm	/^c0116e4b:	55                   	push   %ebp$/;"	l
c0116e4c	obj/kernel.asm	/^c0116e4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0116e4e	obj/kernel.asm	/^c0116e4e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e51	obj/kernel.asm	/^c0116e51:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0116e54	obj/kernel.asm	/^c0116e54:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0116e57	obj/kernel.asm	/^c0116e57:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e5a	obj/kernel.asm	/^c0116e5a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0116e5d	obj/kernel.asm	/^c0116e5d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e60	obj/kernel.asm	/^c0116e60:	8b 10                	mov    (%eax),%edx$/;"	l
c0116e62	obj/kernel.asm	/^c0116e62:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e65	obj/kernel.asm	/^c0116e65:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0116e68	obj/kernel.asm	/^c0116e68:	39 c2                	cmp    %eax,%edx$/;"	l
c0116e6a	obj/kernel.asm	/^c0116e6a:	73 12                	jae    c0116e7e <sprintputch+0x33>$/;"	l
c0116e6c	obj/kernel.asm	/^c0116e6c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e6f	obj/kernel.asm	/^c0116e6f:	8b 00                	mov    (%eax),%eax$/;"	l
c0116e71	obj/kernel.asm	/^c0116e71:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0116e74	obj/kernel.asm	/^c0116e74:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0116e77	obj/kernel.asm	/^c0116e77:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0116e79	obj/kernel.asm	/^c0116e79:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0116e7c	obj/kernel.asm	/^c0116e7c:	88 10                	mov    %dl,(%eax)$/;"	l
c0116e7e	obj/kernel.asm	/^c0116e7e:	5d                   	pop    %ebp$/;"	l
c0116e7f	obj/kernel.asm	/^c0116e7f:	c3                   	ret    $/;"	l
c0116e80	obj/kernel.asm	/^c0116e80 <snprintf>:$/;"	l
c0116e80	obj/kernel.asm	/^c0116e80:	55                   	push   %ebp$/;"	l
c0116e81	obj/kernel.asm	/^c0116e81:	89 e5                	mov    %esp,%ebp$/;"	l
c0116e83	obj/kernel.asm	/^c0116e83:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0116e86	obj/kernel.asm	/^c0116e86:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0116e89	obj/kernel.asm	/^c0116e89:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116e8c	obj/kernel.asm	/^c0116e8c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116e8f	obj/kernel.asm	/^c0116e8f:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0116e93	obj/kernel.asm	/^c0116e93:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116e96	obj/kernel.asm	/^c0116e96:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116e9a	obj/kernel.asm	/^c0116e9a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116e9d	obj/kernel.asm	/^c0116e9d:	89 44 24 04          	mov    %eax,0x4(%esp)$/;"	l
c0116ea1	obj/kernel.asm	/^c0116ea1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116ea4	obj/kernel.asm	/^c0116ea4:	89 04 24             	mov    %eax,(%esp)$/;"	l
c0116ea7	obj/kernel.asm	/^c0116ea7:	e8 08 00 00 00       	call   c0116eb4 <vsnprintf>$/;"	l
c0116eac	obj/kernel.asm	/^c0116eac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0116eaf	obj/kernel.asm	/^c0116eaf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0116eb2	obj/kernel.asm	/^c0116eb2:	c9                   	leave  $/;"	l
c0116eb3	obj/kernel.asm	/^c0116eb3:	c3                   	ret    $/;"	l
c0116eb4	obj/kernel.asm	/^c0116eb4 <vsnprintf>:$/;"	l
c0116eb4	obj/kernel.asm	/^c0116eb4:	55                   	push   %ebp$/;"	l
c0116eb5	obj/kernel.asm	/^c0116eb5:	89 e5                	mov    %esp,%ebp$/;"	l
c0116eb7	obj/kernel.asm	/^c0116eb7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0116eba	obj/kernel.asm	/^c0116eba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116ebd	obj/kernel.asm	/^c0116ebd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0116ec0	obj/kernel.asm	/^c0116ec0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0116ec3	obj/kernel.asm	/^c0116ec3:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0116ec6	obj/kernel.asm	/^c0116ec6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116ec9	obj/kernel.asm	/^c0116ec9:	01 d0                	add    %edx,%eax$/;"	l
c0116ecb	obj/kernel.asm	/^c0116ecb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0116ece	obj/kernel.asm	/^c0116ece:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0116ed5	obj/kernel.asm	/^c0116ed5:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0116ed9	obj/kernel.asm	/^c0116ed9:	74 0a                	je     c0116ee5 <vsnprintf+0x31>$/;"	l
c0116edb	obj/kernel.asm	/^c0116edb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0116ede	obj/kernel.asm	/^c0116ede:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0116ee1	obj/kernel.asm	/^c0116ee1:	39 c2                	cmp    %eax,%edx$/;"	l
c0116ee3	obj/kernel.asm	/^c0116ee3:	76 07                	jbe    c0116eec <vsnprintf+0x38>$/;"	l
c0116ee5	obj/kernel.asm	/^c0116ee5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0116eea	obj/kernel.asm	/^c0116eea:	eb 32                	jmp    c0116f1e <vsnprintf+0x6a>$/;"	l
c0116eec	obj/kernel.asm	/^c0116eec:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0116eef	obj/kernel.asm	/^c0116eef:	89 44 24 10          	mov    %eax,0x10(%esp)$/;"	l
c0116ef3	obj/kernel.asm	/^c0116ef3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0116ef6	obj/kernel.asm	/^c0116ef6:	89 44 24 0c          	mov    %eax,0xc(%esp)$/;"	l
c0116efa	obj/kernel.asm	/^c0116efa:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0116efd	obj/kernel.asm	/^c0116efd:	89 44 24 08          	mov    %eax,0x8(%esp)$/;"	l
c0116f01	obj/kernel.asm	/^c0116f01:	c7 44 24 04 d9 6a ff 	movl   $0xffff6ad9,0x4(%esp)$/;"	l
c0116f08	obj/kernel.asm	/^c0116f08:	ff $/;"	l
c0116f09	obj/kernel.asm	/^c0116f09:	c7 04 24 4b 6e 11 c0 	movl   $0xc0116e4b,(%esp)$/;"	l
c0116f10	obj/kernel.asm	/^c0116f10:	e8 e9 fa ff ff       	call   c01169fe <vprintfmt>$/;"	l
c0116f15	obj/kernel.asm	/^c0116f15:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0116f18	obj/kernel.asm	/^c0116f18:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0116f1b	obj/kernel.asm	/^c0116f1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0116f1e	obj/kernel.asm	/^c0116f1e:	c9                   	leave  $/;"	l
c0116f1f	obj/kernel.asm	/^c0116f1f:	c3                   	ret    $/;"	l
c0116f20	obj/kernel.asm	/^c0116f20 <hash32>:$/;"	l
c0116f20	obj/kernel.asm	/^c0116f20:	55                   	push   %ebp$/;"	l
c0116f21	obj/kernel.asm	/^c0116f21:	89 e5                	mov    %esp,%ebp$/;"	l
c0116f23	obj/kernel.asm	/^c0116f23:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0116f26	obj/kernel.asm	/^c0116f26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0116f29	obj/kernel.asm	/^c0116f29:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c0116f2f	obj/kernel.asm	/^c0116f2f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0116f32	obj/kernel.asm	/^c0116f32:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c0116f37	obj/kernel.asm	/^c0116f37:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c0116f3a	obj/kernel.asm	/^c0116f3a:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0116f3d	obj/kernel.asm	/^c0116f3d:	89 c1                	mov    %eax,%ecx$/;"	l
c0116f3f	obj/kernel.asm	/^c0116f3f:	d3 ea                	shr    %cl,%edx$/;"	d
c0116f41	obj/kernel.asm	/^c0116f41:	89 d0                	mov    %edx,%eax$/;"	l
c0116f43	obj/kernel.asm	/^c0116f43:	c9                   	leave  $/;"	l
c0116f44	obj/kernel.asm	/^c0116f44:	c3                   	ret    $/;"	l
c0116f45	obj/kernel.asm	/^c0116f45 <rand>:$/;"	l
c0116f45	obj/kernel.asm	/^c0116f45:	55                   	push   %ebp$/;"	l
c0116f46	obj/kernel.asm	/^c0116f46:	89 e5                	mov    %esp,%ebp$/;"	l
c0116f48	obj/kernel.asm	/^c0116f48:	57                   	push   %edi$/;"	l
c0116f49	obj/kernel.asm	/^c0116f49:	56                   	push   %esi$/;"	l
c0116f4a	obj/kernel.asm	/^c0116f4a:	53                   	push   %ebx$/;"	l
c0116f4b	obj/kernel.asm	/^c0116f4b:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0116f4e	obj/kernel.asm	/^c0116f4e:	a1 a8 6e 15 c0       	mov    0xc0156ea8,%eax$/;"	l
c0116f53	obj/kernel.asm	/^c0116f53:	8b 15 ac 6e 15 c0    	mov    0xc0156eac,%edx$/;"	l
c0116f59	obj/kernel.asm	/^c0116f59:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c0116f5f	obj/kernel.asm	/^c0116f5f:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c0116f62	obj/kernel.asm	/^c0116f62:	01 f7                	add    %esi,%edi$/;"	l
c0116f64	obj/kernel.asm	/^c0116f64:	be 6d e6 ec de       	mov    $0xdeece66d,%esi$/;"	l
c0116f69	obj/kernel.asm	/^c0116f69:	f7 e6                	mul    %esi$/;"	l
c0116f6b	obj/kernel.asm	/^c0116f6b:	8d 34 17             	lea    (%edi,%edx,1),%esi$/;"	l
c0116f6e	obj/kernel.asm	/^c0116f6e:	89 f2                	mov    %esi,%edx$/;"	l
c0116f70	obj/kernel.asm	/^c0116f70:	83 c0 0b             	add    $0xb,%eax$/;"	l
c0116f73	obj/kernel.asm	/^c0116f73:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0116f76	obj/kernel.asm	/^c0116f76:	89 c7                	mov    %eax,%edi$/;"	l
c0116f78	obj/kernel.asm	/^c0116f78:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c0116f7b	obj/kernel.asm	/^c0116f7b:	89 f9                	mov    %edi,%ecx$/;"	l
c0116f7d	obj/kernel.asm	/^c0116f7d:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c0116f80	obj/kernel.asm	/^c0116f80:	89 0d a8 6e 15 c0    	mov    %ecx,0xc0156ea8$/;"	l
c0116f86	obj/kernel.asm	/^c0116f86:	89 1d ac 6e 15 c0    	mov    %ebx,0xc0156eac$/;"	l
c0116f8c	obj/kernel.asm	/^c0116f8c:	a1 a8 6e 15 c0       	mov    0xc0156ea8,%eax$/;"	l
c0116f91	obj/kernel.asm	/^c0116f91:	8b 15 ac 6e 15 c0    	mov    0xc0156eac,%edx$/;"	l
c0116f97	obj/kernel.asm	/^c0116f97:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0116f9b	obj/kernel.asm	/^c0116f9b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0116f9e	obj/kernel.asm	/^c0116f9e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0116fa1	obj/kernel.asm	/^c0116fa1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0116fa4	obj/kernel.asm	/^c0116fa4:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c0116fab	obj/kernel.asm	/^c0116fab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0116fae	obj/kernel.asm	/^c0116fae:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0116fb1	obj/kernel.asm	/^c0116fb1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0116fb4	obj/kernel.asm	/^c0116fb4:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0116fb7	obj/kernel.asm	/^c0116fb7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116fba	obj/kernel.asm	/^c0116fba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0116fbd	obj/kernel.asm	/^c0116fbd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0116fc1	obj/kernel.asm	/^c0116fc1:	74 1c                	je     c0116fdf <rand+0x9a>$/;"	l
c0116fc3	obj/kernel.asm	/^c0116fc3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116fc6	obj/kernel.asm	/^c0116fc6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0116fcb	obj/kernel.asm	/^c0116fcb:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0116fce	obj/kernel.asm	/^c0116fce:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0116fd1	obj/kernel.asm	/^c0116fd1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0116fd4	obj/kernel.asm	/^c0116fd4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0116fd9	obj/kernel.asm	/^c0116fd9:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0116fdc	obj/kernel.asm	/^c0116fdc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0116fdf	obj/kernel.asm	/^c0116fdf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0116fe2	obj/kernel.asm	/^c0116fe2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0116fe5	obj/kernel.asm	/^c0116fe5:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0116fe8	obj/kernel.asm	/^c0116fe8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0116feb	obj/kernel.asm	/^c0116feb:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0116fee	obj/kernel.asm	/^c0116fee:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0116ff1	obj/kernel.asm	/^c0116ff1:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0116ff4	obj/kernel.asm	/^c0116ff4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0116ff7	obj/kernel.asm	/^c0116ff7:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0116ffa	obj/kernel.asm	/^c0116ffa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0116ffd	obj/kernel.asm	/^c0116ffd:	83 c4 24             	add    $0x24,%esp$/;"	l
c0117000	obj/kernel.asm	/^c0117000:	5b                   	pop    %ebx$/;"	l
c0117001	obj/kernel.asm	/^c0117001:	5e                   	pop    %esi$/;"	l
c0117002	obj/kernel.asm	/^c0117002:	5f                   	pop    %edi$/;"	l
c0117003	obj/kernel.asm	/^c0117003:	5d                   	pop    %ebp$/;"	l
c0117004	obj/kernel.asm	/^c0117004:	c3                   	ret    $/;"	l
c0117005	obj/kernel.asm	/^c0117005 <srand>:$/;"	l
c0117005	obj/kernel.asm	/^c0117005:	55                   	push   %ebp$/;"	l
c0117006	obj/kernel.asm	/^c0117006:	89 e5                	mov    %esp,%ebp$/;"	l
c0117008	obj/kernel.asm	/^c0117008:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011700b	obj/kernel.asm	/^c011700b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0117010	obj/kernel.asm	/^c0117010:	a3 a8 6e 15 c0       	mov    %eax,0xc0156ea8$/;"	l
c0117015	obj/kernel.asm	/^c0117015:	89 15 ac 6e 15 c0    	mov    %edx,0xc0156eac$/;"	l
c011701b	obj/kernel.asm	/^c011701b:	5d                   	pop    %ebp$/;"	l
c011701c	obj/kernel.asm	/^c011701c:	c3                   	ret    $/;"	l
cache	tools/mksfs.c	/^    void *cache;$/;"	m	struct:cache_block	file:
cache_block	tools/mksfs.c	/^struct cache_block {$/;"	s	file:
cache_inode	tools/mksfs.c	/^struct cache_inode {$/;"	s	file:
can_write	obj/kernel.asm	/^        can_write = 1;$/;"	d
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/ls.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sh.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sleep.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sleepkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
change_bootfs	kern/fs/vfs/vfs.c	/^change_bootfs(struct inode *node) {$/;"	f	file:
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon14	file:
char	obj/kernel.asm	/^char *$/;"	l
char	obj/user/badarg.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/exit.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/forktest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/ls.asm	/^char *$/;"	l
char	obj/user/matrix.asm	/^char *$/;"	l
char	obj/user/pgdir.asm	/^char *$/;"	l
char	obj/user/priority.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char shcwd[BUFSIZE];$/;"	l
char	obj/user/sleep.asm	/^char *$/;"	l
char	obj/user/sleepkill.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/waitkill.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_devname_conflict	kern/fs/vfs/vfsdev.c	/^check_devname_conflict(const char *devname) {$/;"	f	file:
check_fs_type	kern/fs/vfs/vfs.h	50;"	d
check_inode_type	kern/fs/vfs/inode.h	46;"	d
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_slab	kern/mm/kmalloc.c	/^void check_slab(void) {$/;"	f
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
check_sync	kern/sync/check_sync.c	/^void check_sync(void){$/;"	f
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
checksum	kern/smp/mp.h	/^	uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mp
checksum	kern/smp/mp.h	/^	uchar checksum;               \/\/ all bytes must add up to 0$/;"	m	struct:mpconf
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
close	user/libs/file.c	/^close(int fd) {$/;"	f
close_sfs	tools/mksfs.c	/^close_sfs(struct sfs_fs *sfs) {$/;"	f
closedir	user/libs/dir.c	/^closedir(DIR *dirp) {$/;"	f
cmos_read	kern/smp/lapic.c	/^static uint cmos_read(uint reg)$/;"	f	file:
cmostime	kern/smp/lapic.c	/^void cmostime(struct rtcdate *r)$/;"	f
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/ls.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sh.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sleep.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sleepkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
code	obj/kernel.asm	/^	code = p2v(0x7000);$/;"	d
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
cond_signal	kern/sync/monitor.c	/^cond_signal (condvar_t *cvp) {$/;"	f
cond_signal	obj/kernel.asm	/^cond_signal (condvar_t *cvp) {$/;"	l
cond_wait	kern/sync/monitor.c	/^cond_wait (condvar_t *cvp) {$/;"	f
cond_wait	obj/kernel.asm	/^cond_wait (condvar_t *cvp) {$/;"	l
condvar	kern/sync/monitor.h	/^typedef struct condvar{$/;"	s
condvar_t	kern/sync/monitor.h	/^} condvar_t;$/;"	t	typeref:struct:condvar
conf	obj/kernel.asm	/^	conf = (struct mpconf*) p2v((uint) mp->physaddr);$/;"	d
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon13	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
consoleinit	kern/init/init.c	/^consoleinit(void)$/;"	f
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/kernel.asm	/^const char *$/;"	l
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
cont	boot/bootasm.S	/^cont:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_fs	kern/process/proc.c	/^copy_fs(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_kargv	kern/process/proc.c	/^copy_kargv(struct mm_struct *mm, int argc, char **kargv, const char **argv) {$/;"	f	file:
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_path	kern/fs/sysfile.c	/^copy_path(char **to, const char *from) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
copy_string	kern/mm/vmm.c	/^copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn) {$/;"	f
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
count	kern/sync/monitor.h	/^    int count;              \/\/ the number of waiters on condvar$/;"	m	struct:condvar
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cpu	kern/process/proc.h	/^	struct cpu *cpu;$/;"	m	struct:cpu	typeref:struct:cpu::cpu
cpu	kern/process/proc.h	/^struct cpu {$/;"	s
cpu	obj/kernel.asm	/^	cpu = c;$/;"	d
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
cpunum	kern/smp/lapic.c	/^cpunum(void)$/;"	f
cpunum_v	kern/smp/lapic.c	/^cpunum_v(void)$/;"	f
cpus	kern/smp/mp.h	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
create_img	tools/mksfs.c	/^create_img(struct sfs_fs *sfs, const char *home) {$/;"	f
create_sfs	tools/mksfs.c	/^create_sfs(int imgfd) {$/;"	f
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon14	file:
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
cv	kern/sync/monitor.h	/^    condvar_t *cv;          \/\/ the condvars in monitor$/;"	m	struct:monitor
d_blocks	kern/fs/devs/dev.h	/^    size_t d_blocks;$/;"	m	struct:device
d_blocksize	kern/fs/devs/dev.h	/^    size_t d_blocksize;$/;"	m	struct:device
d_close	kern/fs/devs/dev.h	/^    int (*d_close)(struct device *dev);$/;"	m	struct:device
d_io	kern/fs/devs/dev.h	/^    int (*d_io)(struct device *dev, struct iobuf *iob, bool write);$/;"	m	struct:device
d_ioctl	kern/fs/devs/dev.h	/^    int (*d_ioctl)(struct device *dev, int op, void *data);$/;"	m	struct:device
d_open	kern/fs/devs/dev.h	/^    int (*d_open)(struct device *dev, uint32_t open_flags);$/;"	m	struct:device
data	kern/smp/ioapic.h	/^	uint data;$/;"	m	struct:ioapic
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
day	libs/defs.h	/^	uint day;$/;"	m	struct:rtcdate
db_indirect	tools/mksfs.c	/^        uint32_t db_indirect;$/;"	m	struct:cache_inode::inode	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
default	obj/kernel.asm	/^			default:$/;"	l
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default: ret = -E_INVAL;$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
default	obj/user/badarg.asm	/^        default:$/;"	l
default	obj/user/badsegment.asm	/^        default:$/;"	l
default	obj/user/divzero.asm	/^        default:$/;"	l
default	obj/user/exit.asm	/^        default:$/;"	l
default	obj/user/faultread.asm	/^        default:$/;"	l
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
default	obj/user/forktree.asm	/^        default:$/;"	l
default	obj/user/hello.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^    default:  type = 5; break;$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
default	obj/user/pgdir.asm	/^        default:$/;"	l
default	obj/user/priority.asm	/^        default:$/;"	l
default	obj/user/sh.asm	/^        default:$/;"	l
default	obj/user/sleep.asm	/^        default:$/;"	l
default	obj/user/sleepkill.asm	/^        default:$/;"	l
default	obj/user/softint.asm	/^        default:$/;"	l
default	obj/user/spin.asm	/^        default:$/;"	l
default	obj/user/testbss.asm	/^        default:$/;"	l
default	obj/user/waitkill.asm	/^        default:$/;"	l
default	obj/user/yield.asm	/^        default:$/;"	l
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_check	tools/grade.sh	/^default_check() {$/;"	f
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
default_sched_class	kern/schedule/default_sched.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
dev	kern/fs/sfs/sfs.h	/^    struct device *dev;                             \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device
dev_close	kern/fs/devs/dev.c	/^dev_close(struct inode *node) {$/;"	f	file:
dev_create_inode	kern/fs/devs/dev.c	/^dev_create_inode(void) {$/;"	f
dev_fstat	kern/fs/devs/dev.c	/^dev_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
dev_gettype	kern/fs/devs/dev.c	/^dev_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
dev_init	kern/fs/devs/dev.c	/^dev_init(void) {$/;"	f
dev_init_disk0	kern/fs/devs/dev_disk0.c	/^dev_init_disk0(void) {$/;"	f
dev_init_stdin	kern/fs/devs/dev_stdin.c	/^dev_init_stdin(void) {$/;"	f
dev_init_stdout	kern/fs/devs/dev_stdout.c	/^dev_init_stdout(void) {$/;"	f
dev_ioctl	kern/fs/devs/dev.c	/^dev_ioctl(struct inode *node, int op, void *data) {$/;"	f	file:
dev_lookup	kern/fs/devs/dev.c	/^dev_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
dev_node_ops	kern/fs/devs/dev.c	/^static const struct inode_ops dev_node_ops = {$/;"	v	typeref:struct:inode_ops	file:
dev_open	kern/fs/devs/dev.c	/^dev_open(struct inode *node, uint32_t open_flags) {$/;"	f	file:
dev_read	kern/fs/devs/dev.c	/^dev_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
dev_stdin_read	kern/fs/devs/dev_stdin.c	/^dev_stdin_read(char *buf, size_t len) {$/;"	f	file:
dev_stdin_write	kern/fs/devs/dev_stdin.c	/^dev_stdin_write(char c) {$/;"	f
dev_tryseek	kern/fs/devs/dev.c	/^dev_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
dev_write	kern/fs/devs/dev.c	/^dev_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
device	kern/fs/devs/dev.h	/^struct device {$/;"	s
devname	kern/fs/vfs/vfsdev.c	/^    const char *devname;$/;"	m	struct:__anon7	file:
devnode	kern/fs/vfs/vfsdev.c	/^    struct inode *devnode;$/;"	m	struct:__anon7	typeref:struct:__anon7::inode	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
din	kern/fs/sfs/sfs.h	/^    struct sfs_disk_inode *din;                     \/* on-disk inode *\/$/;"	m	struct:sfs_inode	typeref:struct:sfs_inode::sfs_disk_inode
dir	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
direct	kern/fs/sfs/sfs.h	/^    uint32_t direct[SFS_NDIRECT];                   \/* direct blocks *\/$/;"	m	struct:sfs_disk_inode
direct	tools/mksfs.c	/^        uint32_t direct[SFS_NDIRECT];$/;"	m	struct:cache_inode::inode	file:
dirent	libs/dirent.h	/^struct dirent {$/;"	s
dirent	user/libs/dir.h	/^    struct dirent dirent;$/;"	m	struct:__anon16	typeref:struct:__anon16::dirent
dirp	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
dirty	kern/fs/sfs/sfs.h	/^    bool dirty;                                     \/* true if inode modified *\/$/;"	m	struct:sfs_inode
disk0_buffer	kern/fs/devs/dev_disk0.c	/^static char *disk0_buffer;$/;"	v	file:
disk0_close	kern/fs/devs/dev_disk0.c	/^disk0_close(struct device *dev) {$/;"	f	file:
disk0_device_init	kern/fs/devs/dev_disk0.c	/^disk0_device_init(struct device *dev) {$/;"	f	file:
disk0_io	kern/fs/devs/dev_disk0.c	/^disk0_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
disk0_ioctl	kern/fs/devs/dev_disk0.c	/^disk0_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
disk0_open	kern/fs/devs/dev_disk0.c	/^disk0_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
disk0_read_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
disk0_sem	kern/fs/devs/dev_disk0.c	/^static semaphore_t disk0_sem;$/;"	v	file:
disk0_write_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_div	libs/x86.h	6;"	d
do_execve	kern/process/proc.c	/^do_execve(const char *name, int argc, const char **argv) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
do_sleep	kern/process/proc.c	/^do_sleep(unsigned int time) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
dop_close	kern/fs/devs/dev.h	23;"	d
dop_io	kern/fs/devs/dev.h	24;"	d
dop_ioctl	kern/fs/devs/dev.h	25;"	d
dop_open	kern/fs/devs/dev.h	22;"	d
down	kern/sync/sem.c	/^down(semaphore_t *sem) {$/;"	f
dup2	user/libs/file.c	/^dup2(int fd1, int fd2) {$/;"	f
dup_fs	kern/fs/fs.c	/^dup_fs(struct files_struct *to, struct files_struct *from) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
e	obj/kernel.asm	/^	e = addr+len;$/;"	d
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebp	obj/kernel.asm	/^        ebp = ((uint32_t *)ebp)[0];$/;"	d
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
eip	obj/kernel.asm	/^        eip = ((uint32_t *)ebp)[1];$/;"	d
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
endpos	obj/kernel.asm	/^            endpos = din->size;$/;"	d
endpos	obj/kernel.asm	/^        endpos = SFS_MAX_FILE_SIZE;$/;"	d
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
ent	obj/kernel.asm	/^        ent = din->indirect;$/;"	d
entry	kern/smp/mp.h	/^	ushort entry;                 \/\/ entry count$/;"	m	struct:mpconf
entrypgdir	kern/init/init.c	/^pde_t entrypgdir[1024] = {$/;"	v
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/ls.asm	/^                err = -err;$/;"	d
err	obj/user/ls.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sh.asm	/^                err = -err;$/;"	d
err	obj/user/sh.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sleep.asm	/^                err = -err;$/;"	d
err	obj/user/sleep.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sleepkill.asm	/^                err = -err;$/;"	d
err	obj/user/sleepkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
exec	user/libs/ulib.h	43;"	d
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
expires	kern/schedule/sched.h	/^    unsigned int expires;$/;"	m	struct:__anon12
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern void vfs_devlist_init(void);$/;"	l
fail	tools/grade.sh	/^fail() {$/;"	f
failed	obj/kernel.asm	/^failed:$/;"	l
failed	obj/user/badarg.asm	/^failed:$/;"	l
failed	obj/user/badsegment.asm	/^failed:$/;"	l
failed	obj/user/divzero.asm	/^failed:$/;"	l
failed	obj/user/exit.asm	/^failed:$/;"	l
failed	obj/user/faultread.asm	/^failed:$/;"	l
failed	obj/user/faultreadkernel.asm	/^failed:$/;"	l
failed	obj/user/forktest.asm	/^failed:$/;"	l
failed	obj/user/forktree.asm	/^failed:$/;"	l
failed	obj/user/hello.asm	/^failed:$/;"	l
failed	obj/user/ls.asm	/^failed:$/;"	l
failed	obj/user/matrix.asm	/^failed:$/;"	l
failed	obj/user/pgdir.asm	/^failed:$/;"	l
failed	obj/user/priority.asm	/^failed:$/;"	l
failed	obj/user/sh.asm	/^failed:$/;"	l
failed	obj/user/sleep.asm	/^failed:$/;"	l
failed	obj/user/sleepkill.asm	/^failed:$/;"	l
failed	obj/user/softint.asm	/^failed:$/;"	l
failed	obj/user/spin.asm	/^failed:$/;"	l
failed	obj/user/testbss.asm	/^failed:$/;"	l
failed	obj/user/waitkill.asm	/^failed:$/;"	l
failed	obj/user/yield.asm	/^failed:$/;"	l
failed_cleanup	obj/kernel.asm	/^failed_cleanup:$/;"	l
failed_cleanup_din	obj/kernel.asm	/^failed_cleanup_din:$/;"	l
failed_cleanup_freemap	obj/kernel.asm	/^failed_cleanup_freemap:$/;"	l
failed_cleanup_fs	obj/kernel.asm	/^failed_cleanup_fs:$/;"	l
failed_cleanup_hash_list	obj/kernel.asm	/^failed_cleanup_hash_list:$/;"	l
failed_cleanup_name	obj/kernel.asm	/^failed_cleanup_name:$/;"	l
failed_cleanup_sfs_buffer	obj/kernel.asm	/^failed_cleanup_sfs_buffer:$/;"	l
failed_cleanup_vdev	obj/kernel.asm	/^failed_cleanup_vdev:$/;"	l
failed_nomem	obj/kernel.asm	/^failed_nomem:$/;"	l
failed_unlock	obj/kernel.asm	/^failed_unlock:$/;"	l
fd	kern/fs/file.h	/^    int fd;$/;"	m	struct:file
fd	user/libs/dir.h	/^    int fd;$/;"	m	struct:__anon16
fd1	obj/user/sh.asm	/^        fd1 = ret, ret = dup2(fd1, fd2);$/;"	d
fd2file	kern/fs/file.c	/^fd2file(int fd, struct file **file_store) {$/;"	f	file:
fd_array	kern/fs/fs.h	/^    struct file *fd_array;  \/\/ opened files array$/;"	m	struct:files_struct	typeref:struct:files_struct::file
fd_array_acquire	kern/fs/file.c	/^fd_array_acquire(struct file *file) {$/;"	f	file:
fd_array_alloc	kern/fs/file.c	/^fd_array_alloc(int fd, struct file **file_store) {$/;"	f	file:
fd_array_close	kern/fs/file.c	/^fd_array_close(struct file *file) {$/;"	f
fd_array_dup	kern/fs/file.c	/^fd_array_dup(struct file *to, struct file *from) {$/;"	f
fd_array_free	kern/fs/file.c	/^fd_array_free(struct file *file) {$/;"	f	file:
fd_array_init	kern/fs/file.c	/^fd_array_init(struct file *fd_array) {$/;"	f
fd_array_open	kern/fs/file.c	/^fd_array_open(struct file *file) {$/;"	f
fd_array_release	kern/fs/file.c	/^fd_array_release(struct file *file) {$/;"	f	file:
feature	kern/smp/mp.h	/^	uint feature;                 \/\/ feature flags from CPUID instruction$/;"	m	struct:mpproc
file	kern/fs/file.h	/^struct file {$/;"	s
file_close	kern/fs/file.c	/^file_close(int fd) {$/;"	f
file_dup	kern/fs/file.c	/^file_dup(int fd1, int fd2) {$/;"	f
file_fstat	kern/fs/file.c	/^file_fstat(int fd, struct stat *stat) {$/;"	f
file_fsync	kern/fs/file.c	/^file_fsync(int fd) {$/;"	f
file_getdirentry	kern/fs/file.c	/^file_getdirentry(int fd, struct dirent *direntp) {$/;"	f
file_open	kern/fs/file.c	/^file_open(char *path, uint32_t open_flags) {$/;"	f
file_read	kern/fs/file.c	/^file_read(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
file_seek	kern/fs/file.c	/^file_seek(int fd, off_t pos, int whence) {$/;"	f
file_testfd	kern/fs/file.c	/^file_testfd(int fd, bool readable, bool writable) {$/;"	f
file_write	kern/fs/file.c	/^file_write(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
files_closeall	kern/fs/fs.c	/^files_closeall(struct files_struct *filesp) {$/;"	f
files_count	kern/fs/fs.h	/^    int files_count;        \/\/ the number of opened files$/;"	m	struct:files_struct
files_count	kern/fs/fs.h	/^files_count(struct files_struct *filesp) {$/;"	f
files_count_dec	kern/fs/fs.h	/^files_count_dec(struct files_struct *filesp) {$/;"	f
files_count_inc	kern/fs/fs.h	/^files_count_inc(struct files_struct *filesp) {$/;"	f
files_create	kern/fs/fs.c	/^files_create(void) {$/;"	f
files_destroy	kern/fs/fs.c	/^files_destroy(struct files_struct *filesp) {$/;"	f
files_sem	kern/fs/fs.h	/^    semaphore_t files_sem;  \/\/ lock protect sem$/;"	m	struct:files_struct
files_struct	kern/fs/fs.h	/^struct files_struct {$/;"	s
filesp	kern/process/proc.h	/^    struct files_struct *filesp;                \/\/ the file related info(pwd, files_count, files_array, fs_semaphore) of process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::files_struct
filesp	obj/kernel.asm	/^        filesp = old_filesp;$/;"	d
fill_rtcdate	kern/smp/lapic.c	/^static void fill_rtcdate(struct rtcdate *r)$/;"	f	file:
find_mount	kern/fs/vfs/vfsdev.c	/^find_mount(const char *devname, vfs_dev_t **vdev_store) {$/;"	f	file:
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
flags	kern/smp/mp.h	/^	uchar flags;                  \/\/ CPU flags$/;"	m	struct:mpproc
flags	kern/smp/mp.h	/^	uchar flags;                  \/\/ I\/O APIC flags$/;"	m	struct:mpioapic
flush_cache_block	tools/mksfs.c	/^flush_cache_block(struct sfs_fs *sfs, struct cache_block *cb) {$/;"	f	file:
flush_cache_inode	tools/mksfs.c	/^flush_cache_inode(struct sfs_fs *sfs, struct cache_inode *ci) {$/;"	f	file:
fopen_count	kern/fs/file.h	/^fopen_count(struct file *file) {$/;"	f
fopen_count_dec	kern/fs/file.h	/^fopen_count_dec(struct file *file) {$/;"	f
fopen_count_inc	kern/fs/file.h	/^fopen_count_inc(struct file *file) {$/;"	f
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_lock	user/libs/ulib.c	/^static lock_t fork_lock = INIT_LOCK;$/;"	v	file:
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^                        found = fsop_get_root(vdev->fs);$/;"	d
found	obj/kernel.asm	/^                        found = vdev->devnode;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
fprintf	user/libs/stdio.c	/^fprintf(int fd, const char *fmt, ...) {$/;"	f
fputch	user/libs/stdio.c	/^fputch(char c, int *cnt, int fd) {$/;"	f	file:
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon11
free_list	kern/mm/default_pmm.c	59;"	d	file:
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon11
free_list	kern/mm/swap.c	176;"	d	file:
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
freemap	kern/fs/sfs/sfs.h	/^    struct bitmap *freemap;                         \/* blocks in use are mared 0 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap
fs	kern/fs/vfs/vfs.h	/^struct fs {$/;"	s
fs	kern/fs/vfs/vfsdev.c	/^    struct fs *fs;$/;"	m	struct:__anon7	typeref:struct:__anon7::fs	file:
fs_cleanup	kern/fs/fs.c	/^fs_cleanup(void) {$/;"	f
fs_cleanup	kern/fs/vfs/vfs.h	/^    void (*fs_cleanup)(struct fs *fs);             \/\/ Cleanup of filesystem.???$/;"	m	struct:fs
fs_get_root	kern/fs/vfs/vfs.h	/^    struct inode *(*fs_get_root)(struct fs *fs);   \/\/ Return root inode of filesystem.$/;"	m	struct:fs	typeref:struct:fs::fs_get_root
fs_info	kern/fs/vfs/vfs.h	/^    } fs_info;                                     \/\/ filesystem-specific data $/;"	m	struct:fs	typeref:union:fs::__anon5
fs_init	kern/fs/fs.c	/^fs_init(void) {$/;"	f
fs_sem	kern/fs/sfs/sfs.h	/^    semaphore_t fs_sem;                             \/* semaphore for fs *\/$/;"	m	struct:sfs_fs
fs_sync	kern/fs/vfs/vfs.h	/^    int (*fs_sync)(struct fs *fs);                 \/\/ Flush all dirty buffers to disk $/;"	m	struct:fs
fs_type	kern/fs/vfs/vfs.h	/^    } fs_type;                                     \/\/ filesystem type $/;"	m	struct:fs	typeref:enum:fs::__anon6
fs_type_sfs_info	kern/fs/vfs/vfs.h	/^        fs_type_sfs_info,$/;"	e	enum:fs::__anon6
fs_unmount	kern/fs/vfs/vfs.h	/^    int (*fs_unmount)(struct fs *fs);              \/\/ Attempt unmount of filesystem.$/;"	m	struct:fs
fscopy	Makefile	/^define fscopy$/;"	m
fsop_cleanup	kern/fs/vfs/vfs.h	71;"	d
fsop_get_root	kern/fs/vfs/vfs.h	69;"	d
fsop_info	kern/fs/vfs/vfs.h	58;"	d
fsop_sync	kern/fs/vfs/vfs.h	68;"	d
fsop_unmount	kern/fs/vfs/vfs.h	70;"	d
fstat	user/libs/file.c	/^fstat(int fd, struct stat *stat) {$/;"	f
fsync	user/libs/file.c	/^fsync(int fd) {$/;"	f
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdt	entryother.S	/^gdt:$/;"	l
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt	kern/process/proc.h	/^	struct segdesc gdt[NSEGS];   \/\/ x86 global descriptor table$/;"	m	struct:cpu	typeref:struct:cpu::segdesc
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
gdtdesc	entryother.S	/^gdtdesc:$/;"	l
get_cwd_nolock	kern/fs/vfs/vfspath.c	/^get_cwd_nolock(void) {$/;"	f	file:
get_device	kern/fs/vfs/vfslookup.c	/^get_device(char *path, char **subpath, struct inode **node_store) {$/;"	f	file:
get_fd_array	kern/fs/file.c	/^get_fd_array(void) {$/;"	f	file:
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
getcwd	user/libs/dir.c	/^getcwd(char *buffer, size_t len) {$/;"	f
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getmode	user/ls.c	/^getmode(uint32_t st_mode) {$/;"	f	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
getstat	user/ls.c	/^getstat(const char *name, struct stat *stat) {$/;"	f	file:
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
gettoken	user/sh.c	/^gettoken(char **p1, char **p2) {$/;"	f
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
good_files_struct	obj/kernel.asm	/^good_files_struct:$/;"	l
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
hash32	tools/mksfs.c	/^hash32(uint32_t val) {$/;"	f	file:
hash64	tools/mksfs.c	/^hash64(uint64_t val) {$/;"	f	file:
hash_link	kern/fs/sfs/sfs.h	/^    list_entry_t hash_link;                         \/* entry for hash linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
hash_list	kern/fs/sfs/sfs.h	/^    list_entry_t *hash_list;                        \/* inode hash linked-list *\/$/;"	m	struct:sfs_fs
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_next	tools/mksfs.c	/^    struct cache_block *hash_next;$/;"	m	struct:cache_block	typeref:struct:cache_block::cache_block	file:
hash_next	tools/mksfs.c	/^    struct cache_inode *hash_next;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_inode	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
hour	libs/defs.h	/^	uint hour;$/;"	m	struct:rtcdate
id	kern/process/proc.h	/^	uchar id;                    \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:cpu
id	obj/kernel.asm	/^  id = ioapicread(REG_ID) >> 24;$/;"	d
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
imcrp	kern/smp/mp.h	/^	uchar imcrp;$/;"	m	struct:mp
imgfd	tools/mksfs.c	/^    int imgfd;$/;"	m	struct:sfs_fs	file:
in_fs	kern/fs/vfs/inode.h	/^    struct fs *in_fs;$/;"	m	struct:inode	typeref:struct:inode::fs
in_info	kern/fs/vfs/inode.h	/^    } in_info;$/;"	m	struct:inode	typeref:union:inode::__anon8
in_ops	kern/fs/vfs/inode.h	/^    const struct inode_ops *in_ops;$/;"	m	struct:inode	typeref:struct:inode::inode_ops
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
in_type	kern/fs/vfs/inode.h	/^    } in_type;$/;"	m	struct:inode	typeref:enum:inode::__anon9
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
indirect	kern/fs/sfs/sfs.h	/^    uint32_t indirect;                              \/* indirect blocks *\/$/;"	m	struct:sfs_disk_inode
indirect	tools/mksfs.c	/^        uint32_t indirect;$/;"	m	struct:cache_inode::inode	file:
info	kern/fs/sfs/sfs.h	/^    char info[SFS_MAX_INFO_LEN + 1];                \/* infomation for sfs  *\/$/;"	m	struct:sfs_super
info	tools/mksfs.c	/^        char info[SFS_MAX_INFO_LEN + 1];$/;"	m	struct:sfs_fs::__anon15	file:
info2fs	kern/fs/vfs/vfs.h	60;"	d
info2node	kern/fs/vfs/inode.h	57;"	d
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
init_device	kern/fs/devs/dev.c	144;"	d	file:
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
initfd	user/libs/umain.c	/^initfd(int fd2, const char *path, uint32_t open_flags) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_disk_entry
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_inode
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_block	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_inode	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:sfs_entry	file:
inode	kern/fs/vfs/inode.h	/^struct inode {$/;"	s
inode	tools/mksfs.c	/^    struct inode {$/;"	s	struct:cache_inode	file:
inode	tools/mksfs.c	/^    } inode;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::inode	file:
inode_check	kern/fs/vfs/inode.c	/^inode_check(struct inode *node, const char *opstr) {$/;"	f
inode_init	kern/fs/vfs/inode.c	/^inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs) {$/;"	f
inode_kill	kern/fs/vfs/inode.c	/^inode_kill(struct inode *node) {$/;"	f
inode_link	kern/fs/sfs/sfs.h	/^    list_entry_t inode_link;                        \/* entry for linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
inode_list	kern/fs/sfs/sfs.h	/^    list_entry_t inode_list;                        \/* inode linked-list *\/$/;"	m	struct:sfs_fs
inode_open_count	kern/fs/vfs/inode.h	/^inode_open_count(struct inode *node) {$/;"	f
inode_open_dec	kern/fs/vfs/inode.c	/^inode_open_dec(struct inode *node) {$/;"	f
inode_open_inc	kern/fs/vfs/inode.c	/^inode_open_inc(struct inode *node) {$/;"	f
inode_ops	kern/fs/vfs/inode.h	/^struct inode_ops {$/;"	s
inode_ref_count	kern/fs/vfs/inode.h	/^inode_ref_count(struct inode *node) {$/;"	f
inode_ref_dec	kern/fs/vfs/inode.c	/^inode_ref_dec(struct inode *node) {$/;"	f
inode_ref_inc	kern/fs/vfs/inode.c	/^inode_ref_inc(struct inode *node) {$/;"	f
inode_type_device_info	kern/fs/vfs/inode.h	/^        inode_type_device_info = 0x1234,$/;"	e	enum:inode::__anon9
inode_type_sfs_inode_info	kern/fs/vfs/inode.h	/^        inode_type_sfs_inode_info,$/;"	e	enum:inode::__anon9
inodes	tools/mksfs.c	/^    struct cache_inode *inodes[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
inside	obj/kernel.asm	/^    inside:$/;"	l
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	obj/kernel.asm	/^int dup_files(struct files_struct *to, struct files_struct *from);$/;"	l
int	obj/kernel.asm	/^int file_dup(int fd1, int fd2);$/;"	l
int	obj/kernel.asm	/^int file_mkfifo(const char *name, uint32_t open_flags);$/;"	l
int	obj/kernel.asm	/^int file_pipe(int fd[]);$/;"	l
int	obj/kernel.asm	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	l
int	obj/kernel.asm	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	l
int	obj/kernel.asm	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	l
int	obj/kernel.asm	/^int$/;"	l
int	obj/user/badarg.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/forktest.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/ls.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
int	obj/user/matrix.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
int	obj/user/pgdir.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
int	obj/user/priority.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
int	obj/user/sh.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
int	obj/user/sleep.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleep.asm	/^int$/;"	l
int	obj/user/sleepkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleepkill.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/waitkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intena	kern/process/proc.h	/^	int intena;                  \/\/ Were interrupts enabled before pushcli?$/;"	m	struct:cpu
interactive	obj/user/sh.asm	/^        interactive = 0;$/;"	d
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
inw	libs/x86.h	/^inw(uint16_t port) {$/;"	f
io_base	kern/fs/iobuf.h	/^    void *io_base;     \/\/ the base addr of buffer (used for Rd\/Wr)$/;"	m	struct:iobuf
io_len	kern/fs/iobuf.h	/^    size_t io_len;     \/\/ the length of buffer  (used for Rd\/Wr)$/;"	m	struct:iobuf
io_offset	kern/fs/iobuf.h	/^    off_t io_offset;   \/\/ current Rd\/Wr position in buffer, will have been incremented by the amount transferred$/;"	m	struct:iobuf
io_resid	kern/fs/iobuf.h	/^    size_t io_resid;   \/\/ current resident length need to Rd\/Wr, will have been decremented by the amount transferred.$/;"	m	struct:iobuf
io_sem	kern/fs/sfs/sfs.h	/^    semaphore_t io_sem;                             \/* semaphore for io *\/$/;"	m	struct:sfs_fs
ioapic	kern/smp/ioapic.h	/^struct ioapic {$/;"	s
ioapic	kern/smp/ioapic.h	/^volatile struct ioapic *ioapic;$/;"	v	typeref:struct:ioapic
ioapic	obj/kernel.asm	/^				ioapic = (struct mpioapic*)p;$/;"	d
ioapic	obj/kernel.asm	/^  ioapic = (volatile struct ioapic*)IOAPIC;$/;"	d
ioapicenable	kern/smp/ioapic.c	/^ioapicenable(int irq, int cpunum)$/;"	f
ioapicid	kern/smp/mp.h	/^uchar ioapicid;$/;"	v
ioapicid	obj/kernel.asm	/^				ioapicid = ioapic->apicno;$/;"	d
ioapicid	obj/kernel.asm	/^		ioapicid = 0;$/;"	d
ioapicinit	kern/smp/ioapic.c	/^ioapicinit(void)$/;"	f
ioapicread	kern/smp/ioapic.c	/^ioapicread(int reg)$/;"	f	file:
ioapicwrite	kern/smp/ioapic.c	/^ioapicwrite(int reg, uint data)$/;"	f	file:
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
iobuf	kern/fs/iobuf.h	/^struct iobuf {$/;"	s
iobuf_init	kern/fs/iobuf.c	/^iobuf_init(struct iobuf *iob, void *base, size_t len, off_t offset) {$/;"	f
iobuf_move	kern/fs/iobuf.c	/^iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b, size_t *copiedp) {$/;"	f
iobuf_move_zeros	kern/fs/iobuf.c	/^iobuf_move_zeros(struct iobuf *iob, size_t len, size_t *copiedp) {$/;"	f
iobuf_skip	kern/fs/iobuf.c	/^iobuf_skip(struct iobuf *iob, size_t n) {$/;"	f
iobuf_used	kern/fs/iobuf.h	16;"	d
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
ismp	kern/smp/mp.h	/^int ismp;$/;"	v
ismp	obj/kernel.asm	/^					ismp = 0;$/;"	d
ismp	obj/kernel.asm	/^				ismp = 0;$/;"	d
ismp	obj/kernel.asm	/^	ismp = 1;$/;"	d
j	obj/user/priority.asm	/^          j = !j;$/;"	d
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, const char **argv) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
kmap	kern/mm/pmm.c	/^static struct kmap {$/;"	s	file:
kmap	kern/mm/pmm.c	/^} kmap[] = {$/;"	v	typeref:struct:kmap	file:
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a, b->right, comp);$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a->right, b, comp);$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
l1	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_block	file:
l2	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::	file:
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process $/;"	m	struct:proc_struct
lapic	kern/smp/lapic.h	/^volatile uint *lapic;  \/\/ Initialized in mp.c$/;"	v
lapic	obj/kernel.asm	/^		lapic = 0;$/;"	d
lapic	obj/kernel.asm	/^	lapic = (uint*)conf->lapicaddr;$/;"	d
lapicaddr	kern/smp/mp.h	/^	uint *lapicaddr;              \/\/ address of local APIC$/;"	m	struct:mpconf
lapiceoi	kern/smp/lapic.c	/^lapiceoi(void)$/;"	f
lapicinit	kern/smp/lapic.c	/^lapicinit(void)$/;"	f
lapicstartap	kern/smp/lapic.c	/^lapicstartap(uchar apicid, uint addr)$/;"	f
lapicw	kern/smp/lapic.c	/^lapicw(int index, int value)$/;"	f	file:
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^          le = len;$/;"	d
le	obj/kernel.asm	/^          le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list_prev(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = list_prev(&(base->page_link));$/;"	d
le2page	kern/mm/memlayout.h	178;"	d
le2proc	kern/process/proc.h	119;"	d
le2sin	kern/fs/sfs/sfs.h	79;"	d
le2timer	kern/schedule/sched.h	16;"	d
le2timer	obj/kernel.asm	/^#define le2timer(le, member)            \\$/;"	d
le2vdev	kern/fs/vfs/vfsdev.c	23;"	d	file:
le2vma	kern/mm/vmm.h	23;"	d
le2wait	kern/sync/wait.h	19;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
len	obj/kernel.asm	/^          len = list_next(le);$/;"	d
length	kern/smp/mp.h	/^	uchar length;                 \/\/ 1$/;"	m	struct:mp
length	kern/smp/mp.h	/^	ushort length;                \/\/ total table length$/;"	m	struct:mpconf
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/ls.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sh.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sleep.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sleepkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
lgdt_xv6	kern/init/init.c	/^lgdt_xv6(struct segdesc *p, int size)$/;"	f	file:
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(int fd, int argc, char **kargv) {$/;"	f	file:
load_icode_read	kern/process/proc.c	/^load_icode_read(int fd, void *buf, size_t len, off_t offset) {$/;"	f	file:
loadgs	libs/x86.h	/^loadgs(ushort v)$/;"	f
loadgs_xv6	kern/init/init.c	/^loadgs_xv6(ushort v)$/;"	f	file:
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_save	kern/sync/sync.h	27;"	d
lock	user/libs/lock.h	/^lock(lock_t *l) {$/;"	f
lock_bootfs	kern/fs/vfs/vfs.c	/^lock_bootfs(void) {$/;"	f	file:
lock_cfs	kern/fs/vfs/vfspath.c	/^lock_cfs(void) {$/;"	f	file:
lock_disk0	kern/fs/devs/dev_disk0.c	/^lock_disk0(void) {$/;"	f	file:
lock_files	kern/fs/fs.c	/^lock_files(struct files_struct *filesp) {$/;"	f
lock_fork	user/libs/ulib.c	/^lock_fork(void) {$/;"	f
lock_init	user/libs/lock.h	/^lock_init(lock_t *l) {$/;"	f
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
lock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^lock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
lock_sfs_io	kern/fs/sfs/sfs_lock.c	/^lock_sfs_io(struct sfs_fs *sfs) {$/;"	f
lock_sin	kern/fs/sfs/sfs_inode.c	/^lock_sin(struct sfs_inode *sin) {$/;"	f	file:
lock_t	user/libs/lock.h	/^typedef volatile bool lock_t;$/;"	t
lock_vdev_list	kern/fs/vfs/vfsdev.c	/^lock_vdev_list(void) {$/;"	f	file:
locked_by	kern/mm/vmm.h	/^    int locked_by;                 \/\/ the lock owner process's pid$/;"	m	struct:mm_struct
long	obj/kernel.asm	/^long SYSTEM_READ_TIMER( void ){$/;"	l
long	obj/kernel.asm	/^long$/;"	l
long	obj/user/badarg.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/exit.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/forktest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/ls.asm	/^long$/;"	l
long	obj/user/matrix.asm	/^long$/;"	l
long	obj/user/pgdir.asm	/^long$/;"	l
long	obj/user/priority.asm	/^long$/;"	l
long	obj/user/sh.asm	/^long$/;"	l
long	obj/user/sleep.asm	/^long$/;"	l
long	obj/user/sleepkill.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/waitkill.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
lookup_sfs_nolock	kern/fs/sfs/sfs_inode.c	/^lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
loop	user/waitkill.c	/^loop(void) {$/;"	f
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
ls	user/ls.c	/^ls(const char *path) {$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path) {$/;"	f
lsstat	user/ls.c	/^lsstat(struct stat *stat, const char *filename) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
magic	kern/fs/sfs/sfs.h	/^    uint32_t magic;                                 \/* magic number, should be SFS_MAGIC *\/$/;"	m	struct:sfs_super
magic	tools/mksfs.c	/^        uint32_t magic;$/;"	m	struct:sfs_fs::__anon15	file:
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	tools/mksfs.c	/^main(int argc, char **argv) {$/;"	f
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
main	user/ls.c	/^main(int argc, char **argv) {$/;"	f
main	user/matrix.c	/^main(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/priority.c	/^main(void) {$/;"	f
main	user/sh.c	/^main(int argc, char **argv) {$/;"	f
main	user/sleep.c	/^main(void) {$/;"	f
main	user/sleepkill.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
main	user/testbss.c	/^main(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
map	kern/fs/sfs/bitmap.c	/^    WORD_TYPE *map;$/;"	m	struct:bitmap	file:
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon10
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
maxintr	obj/kernel.asm	/^  maxintr = (ioapicread(REG_VER) >> 16) & 0xFF;$/;"	d
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
microdelay	kern/smp/lapic.c	/^microdelay(int us)$/;"	f
minute	libs/defs.h	/^	uint minute;$/;"	m	struct:rtcdate
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
mm_sem	kern/mm/vmm.h	/^    semaphore_t mm_sem;            \/\/ mutex for using dup_mmap fun to duplicat the mm $/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
monitor	kern/sync/monitor.h	/^typedef struct monitor{$/;"	s
monitor_init	kern/sync/monitor.c	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	f
monitor_init	obj/kernel.asm	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	l
monitor_t	kern/sync/monitor.h	/^typedef struct monitor monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	kern/sync/monitor.h	/^} monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	obj/kernel.asm	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	l
month	libs/defs.h	/^	uint month;$/;"	m	struct:rtcdate
mountable	kern/fs/vfs/vfsdev.c	/^    bool mountable;$/;"	m	struct:__anon7	file:
mp	kern/smp/mp.h	/^struct mp {             \/\/ floating pointer$/;"	s
mpbcpu	kern/smp/mp.c	/^mpbcpu(void)$/;"	f
mpconf	kern/smp/mp.h	/^struct mpconf {         \/\/ configuration table header$/;"	s
mpconfig	kern/smp/mp.c	/^mpconfig(struct mp **pmp)$/;"	f	file:
mpenter	kern/init/init.c	/^mpenter(void)$/;"	f	file:
mpinit	kern/smp/mp.c	/^mpinit(void)$/;"	f
mpioapic	kern/smp/mp.h	/^struct mpioapic {       \/\/ I\/O APIC table entry$/;"	s
mpmain	kern/init/init.c	/^mpmain(void)$/;"	f	file:
mpproc	kern/smp/mp.h	/^struct mpproc {         \/\/ processor table entry$/;"	s
mpsearch	kern/smp/mp.c	/^mpsearch(void)$/;"	f	file:
mpsearch1	kern/smp/mp.c	/^mpsearch1(uint a, int len)$/;"	f	file:
mt	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	v
mtp	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	v
mutex	kern/sync/check_sync.c	/^semaphore_t mutex; \/* 临界区互斥 *\/$/;"	v
mutex	kern/sync/monitor.h	/^    semaphore_t mutex;      \/\/ the mutex lock for going into the routines in monitor, should be initialized to 1$/;"	m	struct:monitor
mutex_sem	kern/fs/sfs/sfs.h	/^    semaphore_t mutex_sem;                          \/* semaphore for link\/unlink and rename *\/$/;"	m	struct:sfs_fs
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
name	kern/fs/sfs/sfs.h	/^    char name[SFS_MAX_FNAME_LEN + 1];               \/* file name *\/$/;"	m	struct:sfs_disk_entry
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
name	libs/dirent.h	/^    char name[FS_MAX_FNAME_LEN + 1];$/;"	m	struct:dirent
name	tools/mksfs.c	/^    char name[SFS_MAX_FNAME_LEN + 1];$/;"	m	struct:sfs_entry	file:
nbits	kern/fs/sfs/bitmap.c	/^    uint32_t nbits;$/;"	m	struct:bitmap	file:
nblks	obj/kernel.asm	/^            nblks = alen \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^            nblks = copied \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^    nblks = din->blocks;$/;"	d
nblks	tools/mksfs.c	/^    uint32_t nblks;$/;"	m	struct:cache_inode	file:
ncli	kern/process/proc.h	/^	int ncli;                    \/\/ Depth of pushcli nesting.$/;"	m	struct:cpu
ncpu	kern/smp/mp.h	/^int ncpu;$/;"	v
ncpu	obj/kernel.asm	/^		ncpu = 1;$/;"	d
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
nexec	user/libs/ulib.h	44;"	d
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
next	kern/sync/monitor.h	/^    semaphore_t next;       \/\/ the next semaphore is used to down the signaling proc itself, and the other OR wakeuped waiting proc should wake up the sleeped signaling proc.$/;"	m	struct:monitor
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
next	obj/user/ls.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/ls.asm	/^    next = seed;$/;"	d
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
next	obj/user/sh.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sh.asm	/^    next = seed;$/;"	d
next	obj/user/sleep.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleep.asm	/^    next = seed;$/;"	d
next	obj/user/sleepkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleepkill.asm	/^    next = seed;$/;"	d
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
next	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::subpath	file:
next_count	kern/sync/monitor.h	/^    int next_count;         \/\/ the number of of sleeped signaling proc$/;"	m	struct:monitor
next_ino	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
ninos	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
nlinks	kern/fs/sfs/sfs.h	/^    uint16_t nlinks;                                \/* # of hard links to this file *\/$/;"	m	struct:sfs_disk_inode
nlinks	tools/mksfs.c	/^        uint16_t nlinks;$/;"	m	struct:cache_inode::inode	file:
node	kern/fs/file.h	/^    struct inode *node;$/;"	m	struct:file	typeref:struct:file::inode
node	obj/kernel.asm	/^            node = info2node(sin, sfs_inode);$/;"	d
node	obj/kernel.asm	/^        node = parent, sin = vop_info(node, sfs_inode);$/;"	d
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	kern/mm/default_pmm.c	60;"	d	file:
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon11
nr_free	kern/mm/swap.c	177;"	d	file:
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/ls.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/ls.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sh.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sh.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleep.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleep.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleepkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
number	obj/user/badarg.asm	/^        number:$/;"	l
number	obj/user/badsegment.asm	/^        number:$/;"	l
number	obj/user/divzero.asm	/^        number:$/;"	l
number	obj/user/exit.asm	/^        number:$/;"	l
number	obj/user/faultread.asm	/^        number:$/;"	l
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
number	obj/user/forktest.asm	/^        number:$/;"	l
number	obj/user/forktree.asm	/^        number:$/;"	l
number	obj/user/hello.asm	/^        number:$/;"	l
number	obj/user/ls.asm	/^        number:$/;"	l
number	obj/user/matrix.asm	/^        number:$/;"	l
number	obj/user/pgdir.asm	/^        number:$/;"	l
number	obj/user/priority.asm	/^        number:$/;"	l
number	obj/user/sh.asm	/^        number:$/;"	l
number	obj/user/sleep.asm	/^        number:$/;"	l
number	obj/user/sleepkill.asm	/^        number:$/;"	l
number	obj/user/softint.asm	/^        number:$/;"	l
number	obj/user/spin.asm	/^        number:$/;"	l
number	obj/user/testbss.asm	/^        number:$/;"	l
number	obj/user/waitkill.asm	/^        number:$/;"	l
number	obj/user/yield.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
nwords	kern/fs/sfs/bitmap.c	/^    uint32_t nwords;$/;"	m	struct:bitmap	file:
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
oemlength	kern/smp/mp.h	/^	ushort oemlength;             \/\/ OEM table length$/;"	m	struct:mpconf
oemtable	kern/smp/mp.h	/^	uint *oemtable;               \/\/ OEM table pointer$/;"	m	struct:mpconf
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
off_t	libs/defs.h	/^typedef intptr_t off_t;$/;"	t
offset	libs/dirent.h	/^    off_t offset;$/;"	m	struct:dirent
offsetof	libs/defs.h	85;"	d
old	obj/kernel.asm	/^        old = bootfs_node, bootfs_node = node;$/;"	d
open	user/libs/file.c	/^open(const char *path, uint32_t open_flags) {$/;"	f
open_bug	tools/mksfs.c	364;"	d	file:
open_count	kern/fs/file.h	/^    int open_count;$/;"	m	struct:file
open_count	kern/fs/vfs/inode.h	/^    int open_count;$/;"	m	struct:inode
open_count	obj/kernel.asm	/^    open_count = node->open_count;$/;"	d
open_dir	tools/mksfs.c	/^open_dir(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *parent) {$/;"	f
open_file	tools/mksfs.c	/^open_file(struct sfs_fs *sfs, struct cache_inode *file, const char *filename, int fd) {$/;"	f
open_img	tools/mksfs.c	/^open_img(const char *imgname) {$/;"	f
open_link	tools/mksfs.c	/^open_link(struct sfs_fs *sfs, struct cache_inode *file, const char *filename) {$/;"	f
opendir	user/libs/dir.c	/^opendir(const char *path) {$/;"	f
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
out	obj/kernel.asm	/^out:$/;"	l
out_unlock	obj/kernel.asm	/^out_unlock:$/;"	l
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
owner	kern/sync/monitor.h	/^    monitor_t * owner;      \/\/ the owner(monitor) of this condvar$/;"	m	struct:condvar
p	obj/kernel.asm	/^		p = ((bda[0x14]<<8)|bda[0x13])*1024;$/;"	d
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^               p = q;$/;"	d
p	obj/kernel.asm	/^        p = le2page(le,page_link);$/;"	d
p	obj/kernel.asm	/^      p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/kernel.asm	/^    p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = le2page(le,page_link) ;$/;"	d
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
p	obj/user/ls.asm	/^                p = "(null)";$/;"	d
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
p	obj/user/sh.asm	/^                p = "(null)";$/;"	d
p	obj/user/sleep.asm	/^                p = "(null)";$/;"	d
p	obj/user/sleepkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p2v	kern/mm/memlayout.h	/^static inline void *p2v(uint a) { return (void *) ((a) + KERNBASE); }$/;"	f
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_rpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
p_rpos	obj/kernel.asm	/^    p_rpos = p_wpos = 0;$/;"	d
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
p_wpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
pad	kern/smp/ioapic.h	/^	uint pad[3];$/;"	m	struct:ioapic
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
padc	obj/user/ls.asm	/^            padc = '-';$/;"	d
padc	obj/user/ls.asm	/^            padc = '0';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
padc	obj/user/sh.asm	/^            padc = '-';$/;"	d
padc	obj/user/sh.asm	/^            padc = '0';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '0';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic	kern/debug/assert.h	12;"	d
panic	user/libs/ulib.h	12;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
part	obj/kernel.asm	/^            part = maxn;$/;"	d
part	obj/kernel.asm	/^        part = PGSIZE;$/;"	d
pass	tools/grade.sh	/^pass() {$/;"	f
path	obj/kernel.asm	/^    path = argv[0];$/;"	d
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
pde_t	libs/defs.h	/^typedef uint pde_t;$/;"	t
perm	kern/mm/pmm.c	/^	int perm;$/;"	m	struct:kmap	file:
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
phi_put_forks_condvar	kern/sync/check_sync.c	/^void phi_put_forks_condvar(int i) {$/;"	f
phi_put_forks_sema	kern/sync/check_sync.c	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_take_forks_condvar	kern/sync/check_sync.c	/^void phi_take_forks_condvar(int i) {$/;"	f
phi_take_forks_sema	kern/sync/check_sync.c	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_test_condvar	kern/sync/check_sync.c	/^void phi_test_condvar (i) { $/;"	f
phi_test_sema	kern/sync/check_sync.c	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
philosopher_proc_condvar	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_condvar[N]; \/\/ N philosopher$/;"	v	typeref:struct:proc_struct
philosopher_proc_sema	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_sema[N];$/;"	v	typeref:struct:proc_struct
philosopher_using_condvar	kern/sync/check_sync.c	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	f
philosopher_using_semaphore	kern/sync/check_sync.c	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	f
phys_end	kern/mm/pmm.c	/^	uint phys_end;$/;"	m	struct:kmap	file:
phys_start	kern/mm/pmm.c	/^	uint phys_start;$/;"	m	struct:kmap	file:
physaddr	kern/smp/mp.h	/^	void *physaddr;               \/\/ phys addr of MP config table$/;"	m	struct:mp
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
pid	obj/user/spin.asm	/^    pid = fork();$/;"	d
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid_hashfn	kern/process/proc.c	70;"	d	file:
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_init2	kern/mm/pmm.c	/^pmm_init2(void)$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	kern/fs/file.h	/^    off_t pos;$/;"	m	struct:file
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/ls.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sh.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sleep.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleep.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sleepkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleepkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
prev	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
print_stat	user/libs/file.c	/^print_stat(const char *name, int fd, struct stat *stat) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
printf	obj/user/ls.asm	/^#define printf(...)                     fprintf(1, __VA_ARGS__)$/;"	d
printf	user/ls.c	10;"	d	file:
printf	user/sh.c	9;"	d	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*, int), int fd, void *putdat,$/;"	f	file:
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
proc	kern/process/proc.h	/^	struct proc *proc;           \/\/ The currently-running process.$/;"	m	struct:cpu	typeref:struct:cpu::proc
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon12	typeref:struct:__anon12::proc_struct
proc	kern/sync/wait.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon3	typeref:struct:__anon3::proc_struct
proc	obj/kernel.asm	/^				proc = (struct mpproc*)p;$/;"	d
proc	obj/kernel.asm	/^	proc = 0;$/;"	d
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_stride_comp_f	kern/schedule/default_sched.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
process_precision	obj/user/ls.asm	/^        process_precision:$/;"	l
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sh.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sleep.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sleepkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
product	kern/smp/mp.h	/^	uchar product[20];            \/\/ product id$/;"	m	struct:mpconf
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ used in buddy system, stores the order (the X in 2^X) of the continuous memory block$/;"	m	struct:Page
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptr	obj/kernel.asm	/^    ptr = memmove(iob->io_base + 1, ptr, alen);$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
put_fs	kern/process/proc.c	/^put_fs(struct proc_struct *proc) {$/;"	f	file:
put_kargv	kern/process/proc.c	/^put_kargv(int argc, char **kargv) {$/;"	f	file:
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
putc	user/sh.c	10;"	d	file:
pwd	kern/fs/fs.h	/^    struct inode *pwd;      \/\/ inode of present working directory$/;"	m	struct:files_struct	typeref:struct:files_struct::inode
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
r	obj/kernel.asm	/^          r = a->left;$/;"	d
r	obj/kernel.asm	/^          r = b->left;$/;"	d
rand	libs/rand.c	/^rand(void) {$/;"	f
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read	user/libs/file.c	/^read(int fd, void *base, size_t len) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
readable	kern/fs/file.h	/^    bool readable;$/;"	m	struct:file
readable	obj/kernel.asm	/^        readable = writable = 1;$/;"	d
readdir	user/libs/dir.c	/^readdir(DIR *dirp) {$/;"	f
readeflags	libs/x86.h	/^readeflags(void)$/;"	f
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
readline	user/sh.c	/^readline(const char *prompt) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
real	tools/mksfs.c	/^    ino_t real;$/;"	m	struct:cache_inode	file:
reclaim_count	kern/fs/sfs/sfs.h	/^    int reclaim_count;                              \/* kill inode if it hits zero *\/$/;"	m	struct:sfs_inode
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
ref_count	kern/fs/vfs/inode.h	/^    int ref_count;$/;"	m	struct:inode
ref_count	obj/kernel.asm	/^    ref_count = node->ref_count;$/;"	d
reg	kern/smp/ioapic.h	/^	uint reg;$/;"	m	struct:ioapic
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
relocated	kern/init/entry.S	/^relocated:$/;"	l
relocated	obj/kernel.asm	/^relocated:$/;"	l
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
reopen	user/sh.c	/^reopen(int fd2, const char *filename, uint32_t open_flags) {$/;"	f
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reserved	kern/smp/mp.h	/^	uchar reserved;$/;"	m	struct:mpconf
reserved	kern/smp/mp.h	/^	uchar reserved[3];$/;"	m	struct:mp
reserved	kern/smp/mp.h	/^	uchar reserved[8];$/;"	m	struct:mpproc
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
reswitch	obj/user/ls.asm	/^    reswitch:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sh.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sleep.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sleepkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^                        ret = -E_NA_DEV;$/;"	d
ret	obj/kernel.asm	/^                        ret = 0, *node_store = found;$/;"	d
ret	obj/kernel.asm	/^                    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NOTDIR;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^            ret = file_write(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_dirent_findino_nolock(sfs, sin, ino, entry);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1, 1);$/;"	d
ret	obj/kernel.asm	/^            ret = vfs_getcwd(iob);$/;"	d
ret	obj/kernel.asm	/^            ret = vop_create(dir, name, excl, &node);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_BUSY;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = file_read(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^        ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_load_inode(sfs, node_store, ino);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1, 0);$/;"	d
ret	obj/kernel.asm	/^        ret = vfs_set_curdir(node);$/;"	d
ret	obj/kernel.asm	/^        ret = vop_lookup(node, path, node_store);$/;"	d
ret	obj/kernel.asm	/^    ret = -E_EXISTS;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NOENT;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = file_open(path, open_flags);$/;"	d
ret	obj/kernel.asm	/^    ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_chdir(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_link(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_lookup(path, &node);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_rename(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_unlink(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fstat(file->node, stat);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fsync(file->node);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_namefile(node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_read(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_write(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
ret	obj/user/badarg.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/badsegment.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/divzero.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/exit.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/faultread.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/faultreadkernel.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/forktest.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/forktree.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/hello.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^    ret = fstat(fd, stat);$/;"	d
ret	obj/user/matrix.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/pgdir.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/priority.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/sh.asm	/^                ret = 0;$/;"	d
ret	obj/user/sh.asm	/^            ret = runcmd(buffer);$/;"	d
ret	obj/user/sh.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/sleep.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/sleepkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/softint.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/spin.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/testbss.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/waitkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/yield.asm	/^        ret = dup2(fd1, fd2);$/;"	d
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
root	tools/mksfs.c	/^    struct cache_inode *root;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon13	file:
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
rtcdate	libs/defs.h	/^struct rtcdate {$/;"	s
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
run_test	tools/grade.sh	/^run_test() {$/;"	f
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
runcmd	user/sh.c	/^runcmd(char *cmd) {$/;"	f
runit	obj/user/sh.asm	/^runit:$/;"	l
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
s	kern/sync/check_sync.c	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	v
safe_fchdir	tools/mksfs.c	/^safe_fchdir(int fd) {$/;"	f
safe_fstat	tools/mksfs.c	/^safe_fstat(int fd) {$/;"	f
safe_lstat	tools/mksfs.c	/^safe_lstat(const char *name) {$/;"	f
safe_malloc	tools/mksfs.c	/^safe_malloc(size_t size) {$/;"	f
safe_stat	tools/mksfs.c	/^safe_stat(const char *filename) {$/;"	f
safe_strdup	tools/mksfs.c	/^safe_strdup(const char *str) {$/;"	f
sb	obj/kernel.asm	/^  sb = cmos_read(CMOS_STATB);$/;"	d
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
scheduler	kern/process/proc.h	/^	struct context *scheduler;   \/\/ swtch() here to enter scheduler$/;"	m	struct:cpu	typeref:struct:cpu::context
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
search_cache_block	tools/mksfs.c	/^search_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f
search_cache_inode	tools/mksfs.c	/^search_cache_inode(struct sfs_fs *sfs, ino_t real) {$/;"	f
second	libs/defs.h	/^	uint second;$/;"	m	struct:rtcdate
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
seek	user/libs/file.c	/^seek(int fd, off_t pos, int whence) {$/;"	f
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
seginit	kern/init/init.c	/^seginit(void)$/;"	f
sem	kern/fs/sfs/sfs.h	/^    semaphore_t sem;                                \/* semaphore for din *\/$/;"	m	struct:sfs_inode
sem	kern/sync/monitor.h	/^    semaphore_t sem;        \/\/ the sem semaphore  is used to down the waiting proc, and the signaling proc should up the waiting proc$/;"	m	struct:condvar
sem_init	kern/sync/sem.c	/^sem_init(semaphore_t *sem, int value) {$/;"	f
semaphore_t	kern/sync/sem.h	/^} semaphore_t;$/;"	t	typeref:struct:__anon1
semaphore_t	obj/kernel.asm	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	l
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
set_cwd_nolock	kern/fs/vfs/vfspath.c	/^set_cwd_nolock(struct inode *pwd) {$/;"	f	file:
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
set_pvalue	kern/fs/sfs/sfs_inode.c	448;"	d	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	465;"	d	file:
set_pvalue	obj/kernel.asm	/^#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)$/;"	d
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
sfs_alloc_ino	tools/mksfs.c	/^sfs_alloc_ino(struct sfs_fs *sfs) {$/;"	f	file:
sfs_block_alloc	kern/fs/sfs/sfs_inode.c	/^sfs_block_alloc(struct sfs_fs *sfs, uint32_t *ino_store) {$/;"	f	file:
sfs_block_free	kern/fs/sfs/sfs_inode.c	/^sfs_block_free(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_block_inuse	kern/fs/sfs/sfs_inode.c	/^sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_bmap_free_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index) {$/;"	f	file:
sfs_bmap_free_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index) {$/;"	f	file:
sfs_bmap_get_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_get_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t *entp, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_load_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_truncate_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;$/;"	d
sfs_buffer	kern/fs/sfs/sfs.h	/^    void *sfs_buffer;                               \/* buffer for non-block aligned io *\/$/;"	m	struct:sfs_fs
sfs_cleanup	kern/fs/sfs/sfs_fs.c	/^sfs_cleanup(struct fs *fs) {$/;"	f	file:
sfs_clear_block	kern/fs/sfs/sfs_io.c	/^sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_close	kern/fs/sfs/sfs_inode.c	/^sfs_close(struct inode *node) {$/;"	f	file:
sfs_create_inode	kern/fs/sfs/sfs_inode.c	/^sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino, struct inode **node_store) {$/;"	f	file:
sfs_dentry_size	kern/fs/sfs/sfs.h	65;"	d
sfs_dirent_findino_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t ino, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_link_nolock_check	kern/fs/sfs/sfs_inode.c	414;"	d	file:
sfs_dirent_read_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_search_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, uint32_t *ino_store, int *slot, int *empty_slot) {$/;"	f	file:
sfs_dirent_unlink_nolock_check	kern/fs/sfs/sfs_inode.c	422;"	d	file:
sfs_disk_entry	kern/fs/sfs/sfs.h	/^struct sfs_disk_entry {$/;"	s
sfs_disk_inode	kern/fs/sfs/sfs.h	/^struct sfs_disk_inode {$/;"	s
sfs_do_mount	kern/fs/sfs/sfs_fs.c	/^sfs_do_mount(struct device *dev, struct fs **fs_store) {$/;"	f	file:
sfs_entry	tools/mksfs.c	/^struct sfs_entry {$/;"	s	file:
sfs_freemap_bits	kern/fs/sfs/sfs.h	102;"	d
sfs_freemap_blocks	kern/fs/sfs/sfs.h	105;"	d
sfs_fs	kern/fs/sfs/sfs.h	/^struct sfs_fs {$/;"	s
sfs_fs	tools/mksfs.c	/^struct sfs_fs {$/;"	s	file:
sfs_fstat	kern/fs/sfs/sfs_inode.c	/^sfs_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
sfs_fsync	kern/fs/sfs/sfs_inode.c	/^sfs_fsync(struct inode *node) {$/;"	f	file:
sfs_get_ops	kern/fs/sfs/sfs_inode.c	/^sfs_get_ops(uint16_t type) {$/;"	f	file:
sfs_get_root	kern/fs/sfs/sfs_fs.c	/^sfs_get_root(struct fs *fs) {$/;"	f	file:
sfs_getdirentry	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_getdirentry_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_gettype	kern/fs/sfs/sfs_inode.c	/^sfs_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
sfs_hash_list	kern/fs/sfs/sfs_inode.c	/^sfs_hash_list(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_init	kern/fs/sfs/sfs.c	/^sfs_init(void) {$/;"	f
sfs_init_freemap	kern/fs/sfs/sfs_fs.c	/^sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno, uint32_t nblks, void *blk_buffer) {$/;"	f	file:
sfs_init_read	kern/fs/sfs/sfs_fs.c	/^sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer) {$/;"	f	file:
sfs_inode	kern/fs/sfs/sfs.h	/^struct sfs_inode {$/;"	s
sfs_io	kern/fs/sfs/sfs_inode.c	/^sfs_io(struct inode *node, struct iobuf *iob, bool write) {$/;"	f	file:
sfs_io_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf, off_t offset, size_t *alenp, bool write) {$/;"	f	file:
sfs_load_inode	kern/fs/sfs/sfs_inode.c	/^sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino) {$/;"	f
sfs_lookup	kern/fs/sfs/sfs_inode.c	/^sfs_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
sfs_lookup_once	kern/fs/sfs/sfs_inode.c	/^sfs_lookup_once(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, struct inode **node_store, int *slot) {$/;"	f	file:
sfs_mount	kern/fs/sfs/sfs_fs.c	/^sfs_mount(const char *devname) {$/;"	f
sfs_namefile	kern/fs/sfs/sfs_inode.c	/^sfs_namefile(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops;  \/\/ dir operations$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops; \/\/ file operations$/;"	v	typeref:struct:inode_ops	file:
sfs_opendir	kern/fs/sfs/sfs_inode.c	/^sfs_opendir(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_openfile	kern/fs/sfs/sfs_inode.c	/^sfs_openfile(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_rblock	kern/fs/sfs/sfs_io.c	/^sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rbuf	kern/fs/sfs/sfs_io.c	/^sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_read	kern/fs/sfs/sfs_inode.c	/^sfs_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_reclaim	kern/fs/sfs/sfs_inode.c	/^sfs_reclaim(struct inode *node) {$/;"	f	file:
sfs_remove_links	kern/fs/sfs/sfs_inode.c	/^sfs_remove_links(struct sfs_inode *sin) {$/;"	f	file:
sfs_rwblock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks, bool write) {$/;"	f	file:
sfs_rwblock_nolock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write, bool check) {$/;"	f	file:
sfs_set_links	kern/fs/sfs/sfs_inode.c	/^sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_super	kern/fs/sfs/sfs.h	/^struct sfs_super {$/;"	s
sfs_sync	kern/fs/sfs/sfs_fs.c	/^sfs_sync(struct fs *fs) {$/;"	f	file:
sfs_sync_freemap	kern/fs/sfs/sfs_io.c	/^sfs_sync_freemap(struct sfs_fs *sfs) {$/;"	f
sfs_sync_super	kern/fs/sfs/sfs_io.c	/^sfs_sync_super(struct sfs_fs *sfs) {$/;"	f
sfs_truncfile	kern/fs/sfs/sfs_inode.c	/^sfs_truncfile(struct inode *node, off_t len) {$/;"	f	file:
sfs_tryseek	kern/fs/sfs/sfs_inode.c	/^sfs_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
sfs_unmount	kern/fs/sfs/sfs_fs.c	/^sfs_unmount(struct fs *fs) {$/;"	f	file:
sfs_wblock	kern/fs/sfs/sfs_io.c	/^sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_wbuf	kern/fs/sfs/sfs_io.c	/^sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_write	kern/fs/sfs/sfs_inode.c	/^sfs_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
shcwd	user/sh.c	/^char shcwd[BUFSIZE];$/;"	v
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_fullpath	tools/mksfs.c	370;"	d	file:
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
signature	kern/smp/mp.h	/^	uchar signature[4];           \/\/ "PCMP"$/;"	m	struct:mpconf
signature	kern/smp/mp.h	/^	uchar signature[4];           \/\/ "_MP_"$/;"	m	struct:mp
signature	kern/smp/mp.h	/^	uchar signature[4];           \/\/ CPU signature$/;"	m	struct:mpproc
sin_hashfn	kern/fs/sfs/sfs.h	99;"	d
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
size	kern/fs/sfs/sfs.h	/^    uint32_t size;                                  \/* size of the file (in bytes) *\/$/;"	m	struct:sfs_disk_inode
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon10
size	obj/kernel.asm	/^        size = (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);$/;"	d
size	obj/kernel.asm	/^    size = SFS_BLKSIZE;$/;"	d
size	tools/mksfs.c	/^        uint32_t size;$/;"	m	struct:cache_inode::inode	file:
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
size_t	obj/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/ls.asm	/^size_t$/;"	l
size_t	obj/user/matrix.asm	/^size_t$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
size_t	obj/user/priority.asm	/^size_t$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
size_t	obj/user/sleep.asm	/^size_t$/;"	l
size_t	obj/user/sleepkill.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
slab_allocated	kern/mm/kmalloc.c	/^slab_allocated(void) {$/;"	f
slab_init	kern/mm/kmalloc.c	/^slab_init(void) {$/;"	f
sleep	user/libs/ulib.c	/^sleep(unsigned int time) {$/;"	f
sleepy	user/sleep.c	/^sleepy(int pid) {$/;"	f
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sp_end	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
sp_root	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
specrev	kern/smp/mp.h	/^	uchar specrev;                \/\/ [14]$/;"	m	struct:mp
spin	boot/bootasm.S	/^spin:$/;"	l
spin	entryother.S	/^spin:$/;"	l
spin	entryother.asm	/^spin:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
spin	obj/kernel.asm	/^spin:$/;"	l
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
src	obj/kernel.asm	/^            src = dst, dst = tmp;$/;"	d
st_blocks	libs/stat.h	/^    size_t st_blocks;                   \/\/ number of blocks file is using$/;"	m	struct:stat
st_mode	libs/stat.h	/^    uint32_t st_mode;                   \/\/ protection mode and file type$/;"	m	struct:stat
st_nlinks	libs/stat.h	/^    size_t st_nlinks;                   \/\/ number of hard links$/;"	m	struct:stat
st_size	libs/stat.h	/^    size_t st_size;                     \/\/ file size (bytes)$/;"	m	struct:stat
stab	kern/debug/stab.h	/^struct stab {$/;"	s
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
stack	obj/kernel.asm	/^		stack = alloc_page();$/;"	d
stacktop	obj/kernel.asm	/^    stacktop = (uintptr_t)uargv - sizeof(int);$/;"	d
start	boot/bootasm.S	/^start:$/;"	l
start	entryother.S	/^start:$/;"	l
start	entryother.asm	/^start:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
start32	entryother.S	/^start32:$/;"	l
start32	entryother.asm	/^start32:$/;"	l
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
started	kern/process/proc.h	/^	volatile uint started;       \/\/ Has the CPU started?$/;"	m	struct:cpu
startothers	kern/init/init.c	/^startothers(void)$/;"	f	file:
stat	libs/stat.h	/^struct stat {$/;"	s
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
state_condvar	kern/sync/check_sync.c	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	v
state_sema	kern/sync/check_sync.c	/^int state_sema[N]; \/* 记录每个人状态的数组 *\/$/;"	v
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static bool$/;"	l
static	obj/kernel.asm	/^static char *disk0_buffer;$/;"	l
static	obj/kernel.asm	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static const struct inode_ops *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline skew_heap_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline timer_t *$/;"	l
static	obj/kernel.asm	/^static inline uint v2p(void *a) { return ((uint) (a))  - KERNBASE; }$/;"	l
static	obj/kernel.asm	/^static inline uint$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void *p2v(uint a) { return (void *) ((a) + KERNBASE); }$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static list_entry_t *$/;"	l
static	obj/kernel.asm	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static off_t p_rpos, p_wpos;$/;"	l
static	obj/kernel.asm	/^static semaphore_t disk0_sem;$/;"	l
static	obj/kernel.asm	/^static semaphore_t vdev_list_sem;$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct cpu *bcpu;$/;"	t
static	obj/kernel.asm	/^static struct file *$/;"	t
static	obj/kernel.asm	/^static struct inode *$/;"	t
static	obj/kernel.asm	/^static struct mp* $/;"	t
static	obj/kernel.asm	/^static struct mp*$/;"	t
static	obj/kernel.asm	/^static struct mpconf*$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uchar$/;"	l
static	obj/kernel.asm	/^static uint cmos_read(uint reg)$/;"	l
static	obj/kernel.asm	/^static uint$/;"	l
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static uint32_t$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void fill_rtcdate(struct rtcdate *r)$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/kernel.asm	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	l
static	obj/user/badarg.asm	/^static char$/;"	l
static	obj/user/badarg.asm	/^static inline bool$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static inline void$/;"	l
static	obj/user/badarg.asm	/^static int$/;"	l
static	obj/user/badarg.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static char$/;"	l
static	obj/user/badsegment.asm	/^static inline bool$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static inline void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static char$/;"	l
static	obj/user/divzero.asm	/^static inline bool$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static inline void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/exit.asm	/^static char$/;"	l
static	obj/user/exit.asm	/^static inline bool$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static inline void$/;"	l
static	obj/user/exit.asm	/^static int$/;"	l
static	obj/user/exit.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static char$/;"	l
static	obj/user/faultread.asm	/^static inline bool$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static inline void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static char$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline bool$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/forktest.asm	/^static char$/;"	l
static	obj/user/forktest.asm	/^static inline bool$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static inline void$/;"	l
static	obj/user/forktest.asm	/^static int$/;"	l
static	obj/user/forktest.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static char$/;"	l
static	obj/user/forktree.asm	/^static inline bool$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static inline void$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static char$/;"	l
static	obj/user/hello.asm	/^static inline bool$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static inline void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/ls.asm	/^static char$/;"	l
static	obj/user/ls.asm	/^static inline bool$/;"	l
static	obj/user/ls.asm	/^static inline char *$/;"	l
static	obj/user/ls.asm	/^static inline int$/;"	l
static	obj/user/ls.asm	/^static inline void *$/;"	l
static	obj/user/ls.asm	/^static inline void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
static	obj/user/matrix.asm	/^static char$/;"	l
static	obj/user/matrix.asm	/^static inline bool$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static inline void$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int$/;"	l
static	obj/user/matrix.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
static	obj/user/pgdir.asm	/^static char$/;"	l
static	obj/user/pgdir.asm	/^static inline bool$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static inline void$/;"	l
static	obj/user/pgdir.asm	/^static int$/;"	l
static	obj/user/pgdir.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
static	obj/user/priority.asm	/^static char$/;"	l
static	obj/user/priority.asm	/^static inline bool$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static inline void$/;"	l
static	obj/user/priority.asm	/^static int$/;"	l
static	obj/user/priority.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
static	obj/user/sh.asm	/^static char$/;"	l
static	obj/user/sh.asm	/^static inline bool$/;"	l
static	obj/user/sh.asm	/^static inline char *$/;"	l
static	obj/user/sh.asm	/^static inline int$/;"	l
static	obj/user/sh.asm	/^static inline void *$/;"	l
static	obj/user/sh.asm	/^static inline void$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
static	obj/user/sleep.asm	/^static char$/;"	l
static	obj/user/sleep.asm	/^static inline bool$/;"	l
static	obj/user/sleep.asm	/^static inline char *$/;"	l
static	obj/user/sleep.asm	/^static inline int$/;"	l
static	obj/user/sleep.asm	/^static inline void *$/;"	l
static	obj/user/sleep.asm	/^static inline void$/;"	l
static	obj/user/sleep.asm	/^static int$/;"	l
static	obj/user/sleep.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleep.asm	/^static long long$/;"	l
static	obj/user/sleep.asm	/^static unsigned long long$/;"	l
static	obj/user/sleep.asm	/^static void$/;"	l
static	obj/user/sleepkill.asm	/^static char$/;"	l
static	obj/user/sleepkill.asm	/^static inline bool$/;"	l
static	obj/user/sleepkill.asm	/^static inline char *$/;"	l
static	obj/user/sleepkill.asm	/^static inline int$/;"	l
static	obj/user/sleepkill.asm	/^static inline void *$/;"	l
static	obj/user/sleepkill.asm	/^static inline void$/;"	l
static	obj/user/sleepkill.asm	/^static int$/;"	l
static	obj/user/sleepkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleepkill.asm	/^static long long$/;"	l
static	obj/user/sleepkill.asm	/^static unsigned long long$/;"	l
static	obj/user/sleepkill.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static char$/;"	l
static	obj/user/softint.asm	/^static inline bool$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static inline void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static char$/;"	l
static	obj/user/spin.asm	/^static inline bool$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static inline void$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static char$/;"	l
static	obj/user/testbss.asm	/^static inline bool$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static inline void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/waitkill.asm	/^static char$/;"	l
static	obj/user/waitkill.asm	/^static inline bool$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static inline void$/;"	l
static	obj/user/waitkill.asm	/^static int$/;"	l
static	obj/user/waitkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static char$/;"	l
static	obj/user/yield.asm	/^static inline bool$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static inline void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	kern/debug/assert.h	23;"	d
static_assert	tools/mksfs.c	33;"	d	file:
static_assert	user/libs/ulib.h	23;"	d
static_check	tools/mksfs.c	/^static_check(void) {$/;"	f	file:
status	kern/fs/file.h	/^    } status;$/;"	m	struct:file	typeref:enum:file::__anon4
status	user/priority.c	/^int status[TOTAL];$/;"	v
stdin_buffer	kern/fs/devs/dev_stdin.c	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	v	file:
stdin_close	kern/fs/devs/dev_stdin.c	/^stdin_close(struct device *dev) {$/;"	f	file:
stdin_device_init	kern/fs/devs/dev_stdin.c	/^stdin_device_init(struct device *dev) {$/;"	f	file:
stdin_io	kern/fs/devs/dev_stdin.c	/^stdin_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdin_ioctl	kern/fs/devs/dev_stdin.c	/^stdin_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdin_open	kern/fs/devs/dev_stdin.c	/^stdin_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
stdout_close	kern/fs/devs/dev_stdout.c	/^stdout_close(struct device *dev) {$/;"	f	file:
stdout_device_init	kern/fs/devs/dev_stdout.c	/^stdout_device_init(struct device *dev) {$/;"	f	file:
stdout_io	kern/fs/devs/dev_stdout.c	/^stdout_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdout_ioctl	kern/fs/devs/dev_stdout.c	/^stdout_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdout_open	kern/fs/devs/dev_stdout.c	/^stdout_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
step	obj/user/badarg.asm	/^                step = 0;$/;"	d
step	obj/user/badsegment.asm	/^                step = 0;$/;"	d
step	obj/user/divzero.asm	/^                step = 0;$/;"	d
step	obj/user/exit.asm	/^                step = 0;$/;"	d
step	obj/user/faultread.asm	/^                step = 0;$/;"	d
step	obj/user/faultreadkernel.asm	/^                step = 0;$/;"	d
step	obj/user/forktest.asm	/^                step = 0;$/;"	d
step	obj/user/forktree.asm	/^                step = 0;$/;"	d
step	obj/user/hello.asm	/^                step = 0;$/;"	d
step	obj/user/ls.asm	/^                step = 0;$/;"	d
step	obj/user/matrix.asm	/^                step = 0;$/;"	d
step	obj/user/pgdir.asm	/^                step = 0;$/;"	d
step	obj/user/priority.asm	/^                step = 0;$/;"	d
step	obj/user/sh.asm	/^                step = 0;$/;"	d
step	obj/user/sleep.asm	/^                step = 0;$/;"	d
step	obj/user/sleepkill.asm	/^                step = 0;$/;"	d
step	obj/user/softint.asm	/^                step = 0;$/;"	d
step	obj/user/spin.asm	/^                step = 0;$/;"	d
step	obj/user/testbss.asm	/^                step = 0;$/;"	d
step	obj/user/waitkill.asm	/^                step = 0;$/;"	d
step	obj/user/yield.asm	/^                step = 0;$/;"	d
sti	libs/x86.h	/^sti(void) {$/;"	f
stradd	kern/libs/string.c	/^stradd(const char *src1, const char *src2) {$/;"	f
strcat	libs/string.c	/^strcat(char *dst, const char *src) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strdup	kern/libs/string.c	/^strdup(const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
stride_dequeue	kern/schedule/default_sched.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
subname	tools/mksfs.c	/^        char *subname;$/;"	m	struct:sfs_fs::subpath	file:
subpath	tools/mksfs.c	/^    struct subpath {$/;"	s	struct:sfs_fs	file:
subpath_pop	tools/mksfs.c	/^subpath_pop(struct sfs_fs *sfs) {$/;"	f	file:
subpath_push	tools/mksfs.c	/^subpath_push(struct sfs_fs *sfs, const char *subname) {$/;"	f	file:
subpath_show	tools/mksfs.c	/^subpath_show(FILE *fout, struct sfs_fs *sfs, const char *name) {$/;"	f	file:
sum	kern/smp/mp.c	/^sum(uchar *addr, int len)$/;"	f	file:
sum	obj/kernel.asm	/^	sum = 0;$/;"	d
super	kern/fs/sfs/sfs.h	/^    struct sfs_super super;                         \/* on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_super
super	tools/mksfs.c	/^    } super;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::__anon15	file:
super_dirty	kern/fs/sfs/sfs.h	/^    bool super_dirty;                               \/* true if super\/freemap modified *\/$/;"	m	struct:sfs_fs
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_offset	kern/mm/swap.h	25;"	d
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
swapfs_init	kern/fs/swap/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swap/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swap/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
switchkvm	kern/init/init.c	/^switchkvm(void)$/;"	f
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
sys_close	kern/syscall/syscall.c	/^sys_close(uint32_t arg[]) {$/;"	f	file:
sys_close	user/libs/syscall.c	/^sys_close(int fd) {$/;"	f
sys_dup	kern/syscall/syscall.c	/^sys_dup(uint32_t arg[]) {$/;"	f	file:
sys_dup	user/libs/syscall.c	/^sys_dup(int fd1, int fd2) {$/;"	f
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exec	user/libs/syscall.c	/^sys_exec(const char *name, int argc, const char **argv) {$/;"	f
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_fstat	kern/syscall/syscall.c	/^sys_fstat(uint32_t arg[]) {$/;"	f	file:
sys_fstat	user/libs/syscall.c	/^sys_fstat(int fd, struct stat *stat) {$/;"	f
sys_fsync	kern/syscall/syscall.c	/^sys_fsync(uint32_t arg[]) {$/;"	f	file:
sys_fsync	user/libs/syscall.c	/^sys_fsync(int fd) {$/;"	f
sys_getcwd	kern/syscall/syscall.c	/^sys_getcwd(uint32_t arg[]) {$/;"	f	file:
sys_getcwd	user/libs/syscall.c	/^sys_getcwd(char *buffer, size_t len) {$/;"	f
sys_getdirentry	kern/syscall/syscall.c	/^sys_getdirentry(uint32_t arg[]) {$/;"	f	file:
sys_getdirentry	user/libs/syscall.c	/^sys_getdirentry(int fd, struct dirent *dirent) {$/;"	f
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_open	kern/syscall/syscall.c	/^sys_open(uint32_t arg[]) {$/;"	f	file:
sys_open	user/libs/syscall.c	/^sys_open(const char *path, uint32_t open_flags) {$/;"	f
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_read	kern/syscall/syscall.c	/^sys_read(uint32_t arg[]) {$/;"	f	file:
sys_read	user/libs/syscall.c	/^sys_read(int fd, void *base, size_t len) {$/;"	f
sys_seek	kern/syscall/syscall.c	/^sys_seek(uint32_t arg[]) {$/;"	f	file:
sys_seek	user/libs/syscall.c	/^sys_seek(int fd, off_t pos, int whence) {$/;"	f
sys_sleep	kern/syscall/syscall.c	/^sys_sleep(uint32_t arg[]) {$/;"	f	file:
sys_sleep	user/libs/syscall.c	/^sys_sleep(unsigned int time) {$/;"	f
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_write	kern/syscall/syscall.c	/^sys_write(uint32_t arg[]) {$/;"	f	file:
sys_write	user/libs/syscall.c	/^sys_write(int fd, void *base, size_t len) {$/;"	f
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
sysfile_chdir	kern/fs/sysfile.c	/^sysfile_chdir(const char *__path) {$/;"	f
sysfile_close	kern/fs/sysfile.c	/^sysfile_close(int fd) {$/;"	f
sysfile_dup	kern/fs/sysfile.c	/^sysfile_dup(int fd1, int fd2) {$/;"	f
sysfile_fstat	kern/fs/sysfile.c	/^sysfile_fstat(int fd, struct stat *__stat) {$/;"	f
sysfile_fsync	kern/fs/sysfile.c	/^sysfile_fsync(int fd) {$/;"	f
sysfile_getcwd	kern/fs/sysfile.c	/^sysfile_getcwd(char *buf, size_t len) {$/;"	f
sysfile_getdirentry	kern/fs/sysfile.c	/^sysfile_getdirentry(int fd, struct dirent *__direntp) {$/;"	f
sysfile_link	kern/fs/sysfile.c	/^sysfile_link(const char *__path1, const char *__path2) {$/;"	f
sysfile_mkfifo	kern/fs/sysfile.c	/^sysfile_mkfifo(const char *__name, uint32_t open_flags) {$/;"	f
sysfile_open	kern/fs/sysfile.c	/^sysfile_open(const char *__path, uint32_t open_flags) {$/;"	f
sysfile_pipe	kern/fs/sysfile.c	/^sysfile_pipe(int *fd_store) {$/;"	f
sysfile_read	kern/fs/sysfile.c	/^sysfile_read(int fd, void *base, size_t len) {$/;"	f
sysfile_rename	kern/fs/sysfile.c	/^sysfile_rename(const char *__path1, const char *__path2) {$/;"	f
sysfile_seek	kern/fs/sysfile.c	/^sysfile_seek(int fd, off_t pos, int whence) {$/;"	f
sysfile_unlink	kern/fs/sysfile.c	/^sysfile_unlink(const char *__path) {$/;"	f
sysfile_write	kern/fs/sysfile.c	/^sysfile_write(int fd, void *base, size_t len) {$/;"	f
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
testfd	kern/fs/file.c	14;"	d	file:
testfd	obj/kernel.asm	/^#define testfd(fd)                          ((fd) >= 0 && (fd) < FILES_STRUCT_NENTRY)$/;"	d
testfile	user/sh.c	/^testfile(const char *name) {$/;"	f
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;$/;"	m	struct:__anon12
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon12
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
to_struct	libs/defs.h	94;"	d
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
token	obj/user/sh.asm	/^        token = *s, *s ++ = '\\0';$/;"	d
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
total	user/matrix.c	/^const int total = 21;$/;"	v
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
transmode	user/libs/file.c	/^transmode(struct stat *stat) {$/;"	f	file:
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
try_again	obj/kernel.asm	/^        try_again:$/;"	l
try_down	kern/sync/sem.c	/^try_down(semaphore_t *sem) {$/;"	f
try_lock	user/libs/lock.h	/^try_lock(lock_t *l) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
ts	kern/process/proc.h	/^	struct taskstate ts;         \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:cpu	typeref:struct:cpu::taskstate
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
type	kern/fs/sfs/sfs.h	/^    uint16_t type;                                  \/* one of SYS_TYPE_* above *\/$/;"	m	struct:sfs_disk_inode
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon10
type	kern/smp/mp.h	/^	uchar type;                   \/\/ MP system config type$/;"	m	struct:mp
type	kern/smp/mp.h	/^	uchar type;                   \/\/ entry type (0)$/;"	m	struct:mpproc
type	kern/smp/mp.h	/^	uchar type;                   \/\/ entry type (2)$/;"	m	struct:mpioapic
type	tools/mksfs.c	/^        uint16_t type;$/;"	m	struct:cache_inode::inode	file:
uartinit	kern/driver/console.c	/^uartinit(void) {$/;"	f
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uchar	libs/defs.h	/^typedef unsigned char  uchar;$/;"	t
uint	libs/defs.h	/^typedef unsigned int   uint;$/;"	t
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
uint32_t	obj/user/ls.asm	/^uint32_t$/;"	l
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sh.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sleep.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sleepkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/libs/umain.c	/^umain(int argc, char *argv[]) {$/;"	f
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
unlock	user/libs/lock.h	/^unlock(lock_t *l) {$/;"	f
unlock_bootfs	kern/fs/vfs/vfs.c	/^unlock_bootfs(void) {$/;"	f	file:
unlock_cfs	kern/fs/vfs/vfspath.c	/^unlock_cfs(void) {$/;"	f	file:
unlock_disk0	kern/fs/devs/dev_disk0.c	/^unlock_disk0(void) {$/;"	f	file:
unlock_files	kern/fs/fs.c	/^unlock_files(struct files_struct *filesp) {$/;"	f
unlock_fork	user/libs/ulib.c	/^unlock_fork(void) {$/;"	f
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
unlock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_io	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_io(struct sfs_fs *sfs) {$/;"	f
unlock_sin	kern/fs/sfs/sfs_inode.c	/^unlock_sin(struct sfs_inode *sin) {$/;"	f	file:
unlock_vdev_list	kern/fs/vfs/vfsdev.c	/^unlock_vdev_list(void) {$/;"	f	file:
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
unsigned	obj/user/sleep.asm	/^unsigned int$/;"	l
unsigned	obj/user/sleepkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
unused_blocks	kern/fs/sfs/sfs.h	/^    uint32_t unused_blocks;                         \/* # of unused blocks in fs *\/$/;"	m	struct:sfs_super
unused_blocks	tools/mksfs.c	/^        uint32_t unused_blocks;$/;"	m	struct:sfs_fs::__anon15	file:
up	kern/sync/sem.c	/^up(semaphore_t *sem) {$/;"	f
update_cache	tools/mksfs.c	/^update_cache(struct sfs_fs *sfs, struct cache_block **cbp, uint32_t *inop) {$/;"	f	file:
update_score	tools/grade.sh	/^update_score() {$/;"	f
uprog_ld	Makefile	/^define uprog_ld$/;"	m
usage	user/sh.c	/^usage(void) {$/;"	f
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
ushort	libs/defs.h	/^typedef unsigned short ushort;$/;"	t
v2p	kern/mm/memlayout.h	/^static inline uint v2p(void *a) { return ((uint) (a))  - KERNBASE; }$/;"	f
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
value	kern/sync/sem.h	/^    int value;$/;"	m	struct:__anon1
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vdev_link	kern/fs/vfs/vfsdev.c	/^    list_entry_t vdev_link;$/;"	m	struct:__anon7	file:
vdev_list	kern/fs/vfs/vfsdev.c	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	v	file:
vdev_list_sem	kern/fs/vfs/vfsdev.c	/^static semaphore_t vdev_list_sem;$/;"	v	file:
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
version	kern/smp/mp.h	/^	uchar version;                \/\/ I\/O APIC version$/;"	m	struct:mpioapic
version	kern/smp/mp.h	/^	uchar version;                \/\/ [14]$/;"	m	struct:mpconf
version	kern/smp/mp.h	/^	uchar version;                \/\/ local APIC verison$/;"	m	struct:mpproc
vfprintf	user/libs/stdio.c	/^vfprintf(int fd, const char *fmt, va_list ap) {$/;"	f
vfs_add_dev	kern/fs/vfs/vfsdev.c	/^vfs_add_dev(const char *devname, struct inode *devnode, bool mountable) {$/;"	f
vfs_add_fs	kern/fs/vfs/vfsdev.c	/^vfs_add_fs(const char *devname, struct fs *fs) {$/;"	f
vfs_chdir	kern/fs/vfs/vfspath.c	/^vfs_chdir(char *path) {$/;"	f
vfs_cleanup	kern/fs/vfs/vfsdev.c	/^vfs_cleanup(void) {$/;"	f
vfs_close	kern/fs/vfs/vfsfile.c	/^vfs_close(struct inode *node) {$/;"	f
vfs_dev_t	kern/fs/vfs/vfsdev.c	/^} vfs_dev_t;$/;"	t	typeref:struct:__anon7	file:
vfs_devlist_init	kern/fs/vfs/vfsdev.c	/^vfs_devlist_init(void) {$/;"	f
vfs_do_add	kern/fs/vfs/vfsdev.c	/^vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs, bool mountable) {$/;"	f	file:
vfs_get_bootfs	kern/fs/vfs/vfs.c	/^vfs_get_bootfs(struct inode **node_store) {$/;"	f
vfs_get_curdir	kern/fs/vfs/vfspath.c	/^vfs_get_curdir(struct inode **dir_store) {$/;"	f
vfs_get_devname	kern/fs/vfs/vfsdev.c	/^vfs_get_devname(struct fs *fs) {$/;"	f
vfs_get_root	kern/fs/vfs/vfsdev.c	/^vfs_get_root(const char *devname, struct inode **node_store) {$/;"	f
vfs_getcwd	kern/fs/vfs/vfspath.c	/^vfs_getcwd(struct iobuf *iob) {$/;"	f
vfs_init	kern/fs/vfs/vfs.c	/^vfs_init(void) {$/;"	f
vfs_link	kern/fs/vfs/vfsfile.c	/^vfs_link(char *old_path, char *new_path) {$/;"	f
vfs_lookup	kern/fs/vfs/vfslookup.c	/^vfs_lookup(char *path, struct inode **node_store) {$/;"	f
vfs_lookup_parent	kern/fs/vfs/vfslookup.c	/^vfs_lookup_parent(char *path, struct inode **node_store, char **endp){$/;"	f
vfs_mkdir	kern/fs/vfs/vfsfile.c	/^vfs_mkdir(char *path){$/;"	f
vfs_mount	kern/fs/vfs/vfsdev.c	/^vfs_mount(const char *devname, int (*mountfunc)(struct device *dev, struct fs **fs_store)) {$/;"	f
vfs_open	kern/fs/vfs/vfsfile.c	/^vfs_open(char *path, uint32_t open_flags, struct inode **node_store) {$/;"	f
vfs_readlink	kern/fs/vfs/vfsfile.c	/^vfs_readlink(char *path, struct iobuf *iob) {$/;"	f
vfs_rename	kern/fs/vfs/vfsfile.c	/^vfs_rename(char *old_path, char *new_path) {$/;"	f
vfs_set_bootfs	kern/fs/vfs/vfs.c	/^vfs_set_bootfs(char *fsname) {$/;"	f
vfs_set_curdir	kern/fs/vfs/vfspath.c	/^vfs_set_curdir(struct inode *dir) {$/;"	f
vfs_symlink	kern/fs/vfs/vfsfile.c	/^vfs_symlink(char *old_path, char *new_path) {$/;"	f
vfs_unlink	kern/fs/vfs/vfsfile.c	/^vfs_unlink(char *path) {$/;"	f
vfs_unmount	kern/fs/vfs/vfsdev.c	/^vfs_unmount(const char *devname) {$/;"	f
vfs_unmount_all	kern/fs/vfs/vfsdev.c	/^vfs_unmount_all(void) {$/;"	f
virt	kern/mm/pmm.c	/^	void *virt;$/;"	m	struct:kmap	file:
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/    start addr of vma    $/;"	m	struct:vma_struct
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
void	obj/bootblock.asm	/^void$/;"	l
void	obj/kernel.asm	/^void     $/;"	l
void	obj/kernel.asm	/^void $/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void check_slab(void) {$/;"	l
void	obj/kernel.asm	/^void check_sync(void){$/;"	l
void	obj/kernel.asm	/^void cmostime(struct rtcdate *r)$/;"	l
void	obj/kernel.asm	/^void consoleinit(void);$/;"	l
void	obj/kernel.asm	/^void files_closeall(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void files_destroy(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_test_condvar (i) { $/;"	l
void	obj/kernel.asm	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
void	obj/user/sleep.asm	/^void *$/;"	l
void	obj/user/sleep.asm	/^void$/;"	l
void	obj/user/sleepkill.asm	/^void *$/;"	l
void	obj/user/sleepkill.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile size_t ticks;$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vop_close	kern/fs/vfs/inode.h	/^    int (*vop_close)(struct inode *node);$/;"	m	struct:inode_ops
vop_close	kern/fs/vfs/inode.h	202;"	d
vop_create	kern/fs/vfs/inode.h	/^    int (*vop_create)(struct inode *node, const char *name, bool excl, struct inode **node_store);$/;"	m	struct:inode_ops
vop_create	kern/fs/vfs/inode.h	214;"	d
vop_fs	kern/fs/vfs/inode.h	218;"	d
vop_fstat	kern/fs/vfs/inode.h	/^    int (*vop_fstat)(struct inode *node, struct stat *stat);$/;"	m	struct:inode_ops
vop_fstat	kern/fs/vfs/inode.h	205;"	d
vop_fsync	kern/fs/vfs/inode.h	/^    int (*vop_fsync)(struct inode *node);$/;"	m	struct:inode_ops
vop_fsync	kern/fs/vfs/inode.h	206;"	d
vop_getdirentry	kern/fs/vfs/inode.h	/^    int (*vop_getdirentry)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_getdirentry	kern/fs/vfs/inode.h	208;"	d
vop_gettype	kern/fs/vfs/inode.h	/^    int (*vop_gettype)(struct inode *node, uint32_t *type_store);$/;"	m	struct:inode_ops
vop_gettype	kern/fs/vfs/inode.h	211;"	d
vop_info	kern/fs/vfs/inode.h	55;"	d
vop_init	kern/fs/vfs/inode.h	219;"	d
vop_ioctl	kern/fs/vfs/inode.h	/^    int (*vop_ioctl)(struct inode *node, int op, void *data);$/;"	m	struct:inode_ops
vop_ioctl	kern/fs/vfs/inode.h	210;"	d
vop_kill	kern/fs/vfs/inode.h	220;"	d
vop_lookup	kern/fs/vfs/inode.h	/^    int (*vop_lookup)(struct inode *node, char *path, struct inode **node_store);$/;"	m	struct:inode_ops
vop_lookup	kern/fs/vfs/inode.h	215;"	d
vop_magic	kern/fs/vfs/inode.h	/^    unsigned long vop_magic;$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	/^    int (*vop_namefile)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	207;"	d
vop_open	kern/fs/vfs/inode.h	/^    int (*vop_open)(struct inode *node, uint32_t open_flags);$/;"	m	struct:inode_ops
vop_open	kern/fs/vfs/inode.h	201;"	d
vop_open_dec	kern/fs/vfs/inode.h	234;"	d
vop_open_dec	obj/kernel.asm	/^#define vop_open_dec(node)                                          inode_open_dec(node)$/;"	d
vop_open_inc	kern/fs/vfs/inode.h	233;"	d
vop_open_inc	obj/kernel.asm	/^#define vop_open_inc(node)                                          inode_open_inc(node)$/;"	d
vop_read	kern/fs/vfs/inode.h	/^    int (*vop_read)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_read	kern/fs/vfs/inode.h	203;"	d
vop_reclaim	kern/fs/vfs/inode.h	/^    int (*vop_reclaim)(struct inode *node);$/;"	m	struct:inode_ops
vop_reclaim	kern/fs/vfs/inode.h	209;"	d
vop_ref_dec	kern/fs/vfs/inode.h	226;"	d
vop_ref_inc	kern/fs/vfs/inode.h	225;"	d
vop_truncate	kern/fs/vfs/inode.h	/^    int (*vop_truncate)(struct inode *node, off_t len);$/;"	m	struct:inode_ops
vop_truncate	kern/fs/vfs/inode.h	213;"	d
vop_tryseek	kern/fs/vfs/inode.h	/^    int (*vop_tryseek)(struct inode *node, off_t pos);$/;"	m	struct:inode_ops
vop_tryseek	kern/fs/vfs/inode.h	212;"	d
vop_write	kern/fs/vfs/inode.h	/^    int (*vop_write)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_write	kern/fs/vfs/inode.h	204;"	d
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, va_list ap) {$/;"	f
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
wait_current_del	kern/sync/wait.h	40;"	d
wait_current_set	kern/sync/wait.c	/^wait_current_set(wait_queue_t *queue, wait_t *wait, uint32_t wait_state) {$/;"	f
wait_head	kern/sync/wait.h	/^    list_entry_t wait_head;$/;"	m	struct:__anon2
wait_in_queue	kern/sync/wait.c	/^wait_in_queue(wait_t *wait) {$/;"	f
wait_init	kern/sync/wait.c	/^wait_init(wait_t *wait, struct proc_struct *proc) {$/;"	f
wait_link	kern/sync/wait.h	/^    list_entry_t wait_link;$/;"	m	struct:__anon3
wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
wait_queue	kern/sync/sem.h	/^    wait_queue_t wait_queue;$/;"	m	struct:__anon1
wait_queue	kern/sync/wait.h	/^    wait_queue_t *wait_queue;$/;"	m	struct:__anon3
wait_queue_add	kern/sync/wait.c	/^wait_queue_add(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_del	kern/sync/wait.c	/^wait_queue_del(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_empty	kern/sync/wait.c	/^wait_queue_empty(wait_queue_t *queue) {$/;"	f
wait_queue_first	kern/sync/wait.c	/^wait_queue_first(wait_queue_t *queue) {$/;"	f
wait_queue_init	kern/sync/wait.c	/^wait_queue_init(wait_queue_t *queue) {$/;"	f
wait_queue_last	kern/sync/wait.c	/^wait_queue_last(wait_queue_t *queue) {$/;"	f
wait_queue_next	kern/sync/wait.c	/^wait_queue_next(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_prev	kern/sync/wait.c	/^wait_queue_prev(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_t	kern/sync/wait.h	/^} wait_queue_t;$/;"	t	typeref:struct:__anon2
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
wait_t	kern/sync/wait.h	/^} wait_t;$/;"	t	typeref:struct:__anon3
wait_t	obj/kernel.asm	/^wait_t *$/;"	l
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
wakeup_first	kern/sync/wait.c	/^wakeup_first(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_flags	kern/sync/wait.h	/^    uint32_t wakeup_flags;$/;"	m	struct:__anon3
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
wakeup_queue	kern/sync/wait.c	/^wakeup_queue(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_wait	kern/sync/wait.c	/^wakeup_wait(wait_queue_t *queue, wait_t *wait, uint32_t wakeup_flags, bool del) {$/;"	f
warn	kern/debug/assert.h	9;"	d
warn	tools/mksfs.c	30;"	d	file:
warn	user/libs/ulib.h	9;"	d
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
width	obj/user/ls.asm	/^                width = 0;$/;"	d
width	obj/user/ls.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^        width = precision = -1;$/;"	d
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sh.asm	/^                width = 0;$/;"	d
width	obj/user/sh.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sleep.asm	/^                width = 0;$/;"	d
width	obj/user/sleep.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleep.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^                width = 0;$/;"	d
width	obj/user/sleepkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
work	user/waitkill.c	/^work(void) {$/;"	f
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon13	file:
writable	kern/fs/file.h	/^    bool writable;$/;"	m	struct:file
write	user/libs/file.c	/^write(int fd, void *base, size_t len) {$/;"	f
write_block	tools/mksfs.c	/^write_block(struct sfs_fs *sfs, void *data, size_t len, uint32_t ino) {$/;"	f	file:
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
wrv	obj/kernel.asm	/^  wrv = (ushort*)P2V((0x40<<4 | 0x67));  \/\/ Warm reset vector$/;"	d
xchecksum	kern/smp/mp.h	/^	uchar xchecksum;              \/\/ extended table checksum$/;"	m	struct:mpconf
xchg	libs/x86.h	/^xchg(volatile uint *addr, uint newval)$/;"	f
xlength	kern/smp/mp.h	/^	ushort xlength;               \/\/ extended table length$/;"	m	struct:mpconf
year	libs/defs.h	/^	uint year;$/;"	m	struct:rtcdate
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
zero	user/divzero.c	/^int zero;$/;"	v
zone_num	kern/mm/memlayout.h	/^    int zone_num;                   \/\/ used in buddy system, the No. of zone which the page belongs to$/;"	m	struct:Page
